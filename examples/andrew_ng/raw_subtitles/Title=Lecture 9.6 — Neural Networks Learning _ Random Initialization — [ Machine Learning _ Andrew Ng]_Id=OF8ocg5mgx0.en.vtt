WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.180 align:start position:0%
 
in<00:00:00.089><c> the</c><00:00:00.780><c> previous</c><00:00:01.170><c> videos</c><00:00:01.620><c> we</c><00:00:01.650><c> put</c><00:00:02.010><c> together</c>

00:00:02.180 --> 00:00:02.190 align:start position:0%
in the previous videos we put together
 

00:00:02.190 --> 00:00:04.640 align:start position:0%
in the previous videos we put together
almost<00:00:02.879><c> all</c><00:00:03.090><c> the</c><00:00:03.360><c> pieces</c><00:00:03.600><c> you</c><00:00:03.929><c> need</c><00:00:04.140><c> in</c><00:00:04.440><c> order</c>

00:00:04.640 --> 00:00:04.650 align:start position:0%
almost all the pieces you need in order
 

00:00:04.650 --> 00:00:07.610 align:start position:0%
almost all the pieces you need in order
to<00:00:04.859><c> implement</c><00:00:05.100><c> and</c><00:00:05.910><c> trade</c><00:00:06.779><c> in</c><00:00:07.049><c> your</c><00:00:07.170><c> network</c>

00:00:07.610 --> 00:00:07.620 align:start position:0%
to implement and trade in your network
 

00:00:07.620 --> 00:00:09.350 align:start position:0%
to implement and trade in your network
there's<00:00:08.130><c> just</c><00:00:08.280><c> one</c><00:00:08.490><c> loss</c><00:00:08.670><c> idea</c><00:00:09.030><c> I</c><00:00:09.059><c> need</c><00:00:09.240><c> to</c>

00:00:09.350 --> 00:00:09.360 align:start position:0%
there's just one loss idea I need to
 

00:00:09.360 --> 00:00:11.360 align:start position:0%
there's just one loss idea I need to
share<00:00:09.719><c> of</c><00:00:09.840><c> you</c><00:00:09.960><c> which</c><00:00:10.170><c> is</c><00:00:10.290><c> the</c><00:00:10.440><c> idea</c><00:00:10.469><c> of</c><00:00:10.769><c> random</c>

00:00:11.360 --> 00:00:11.370 align:start position:0%
share of you which is the idea of random
 

00:00:11.370 --> 00:00:13.999 align:start position:0%
share of you which is the idea of random
initialization<00:00:12.380><c> when</c><00:00:13.380><c> you're</c><00:00:13.559><c> running</c><00:00:13.740><c> an</c>

00:00:13.999 --> 00:00:14.009 align:start position:0%
initialization when you're running an
 

00:00:14.009 --> 00:00:15.650 align:start position:0%
initialization when you're running an
algorithm<00:00:14.370><c> like</c><00:00:14.400><c> gradient</c><00:00:14.549><c> descent</c><00:00:15.179><c> or</c><00:00:15.420><c> also</c>

00:00:15.650 --> 00:00:15.660 align:start position:0%
algorithm like gradient descent or also
 

00:00:15.660 --> 00:00:17.930 align:start position:0%
algorithm like gradient descent or also
the<00:00:16.139><c> advanced</c><00:00:16.470><c> optimization</c><00:00:16.699><c> algorithms</c><00:00:17.699><c> we</c>

00:00:17.930 --> 00:00:17.940 align:start position:0%
the advanced optimization algorithms we
 

00:00:17.940 --> 00:00:19.970 align:start position:0%
the advanced optimization algorithms we
need<00:00:18.119><c> to</c><00:00:18.270><c> pick</c><00:00:18.539><c> some</c><00:00:18.840><c> initial</c><00:00:19.320><c> value</c><00:00:19.710><c> for</c><00:00:19.740><c> the</c>

00:00:19.970 --> 00:00:19.980 align:start position:0%
need to pick some initial value for the
 

00:00:19.980 --> 00:00:22.370 align:start position:0%
need to pick some initial value for the
parameters<00:00:20.189><c> theta</c><00:00:20.810><c> so</c><00:00:21.810><c> for</c><00:00:22.080><c> the</c><00:00:22.140><c> advanced</c>

00:00:22.370 --> 00:00:22.380 align:start position:0%
parameters theta so for the advanced
 

00:00:22.380 --> 00:00:23.960 align:start position:0%
parameters theta so for the advanced
optimization<00:00:23.010><c> algorithm</c><00:00:23.460><c> you</c><00:00:23.670><c> know</c><00:00:23.789><c> it</c>

00:00:23.960 --> 00:00:23.970 align:start position:0%
optimization algorithm you know it
 

00:00:23.970 --> 00:00:25.640 align:start position:0%
optimization algorithm you know it
assumes<00:00:24.300><c> that</c><00:00:24.420><c> you</c><00:00:24.660><c> will</c><00:00:24.689><c> pass</c><00:00:24.869><c> it</c><00:00:25.350><c> some</c>

00:00:25.640 --> 00:00:25.650 align:start position:0%
assumes that you will pass it some
 

00:00:25.650 --> 00:00:28.150 align:start position:0%
assumes that you will pass it some
initial<00:00:26.130><c> value</c><00:00:26.519><c> for</c><00:00:26.580><c> the</c><00:00:26.880><c> parameters</c><00:00:27.119><c> theta</c>

00:00:28.150 --> 00:00:28.160 align:start position:0%
initial value for the parameters theta
 

00:00:28.160 --> 00:00:31.490 align:start position:0%
initial value for the parameters theta
now<00:00:29.160><c> let's</c><00:00:29.640><c> consider</c><00:00:30.029><c> gradient</c><00:00:30.750><c> descent</c><00:00:31.080><c> for</c>

00:00:31.490 --> 00:00:31.500 align:start position:0%
now let's consider gradient descent for
 

00:00:31.500 --> 00:00:33.110 align:start position:0%
now let's consider gradient descent for
that<00:00:31.679><c> you</c><00:00:31.980><c> know</c><00:00:32.040><c> we</c><00:00:32.160><c> also</c><00:00:32.309><c> need</c><00:00:32.610><c> to</c><00:00:32.700><c> initialize</c>

00:00:33.110 --> 00:00:33.120 align:start position:0%
that you know we also need to initialize
 

00:00:33.120 --> 00:00:35.030 align:start position:0%
that you know we also need to initialize
theta<00:00:33.390><c> plus</c><00:00:33.690><c> to</c><00:00:34.140><c> something</c><00:00:34.559><c> and</c><00:00:34.739><c> then</c><00:00:34.829><c> we</c><00:00:34.890><c> can</c>

00:00:35.030 --> 00:00:35.040 align:start position:0%
theta plus to something and then we can
 

00:00:35.040 --> 00:00:37.459 align:start position:0%
theta plus to something and then we can
slowly<00:00:35.309><c> take</c><00:00:36.000><c> steps</c><00:00:36.360><c> that</c><00:00:36.719><c> go</c><00:00:36.870><c> down</c><00:00:37.110><c> the</c><00:00:37.290><c> hill</c>

00:00:37.459 --> 00:00:37.469 align:start position:0%
slowly take steps that go down the hill
 

00:00:37.469 --> 00:00:39.680 align:start position:0%
slowly take steps that go down the hill
using<00:00:37.890><c> gradient</c><00:00:38.250><c> descent</c><00:00:38.550><c> to</c><00:00:38.670><c> go</c><00:00:39.180><c> down</c><00:00:39.420><c> hill</c>

00:00:39.680 --> 00:00:39.690 align:start position:0%
using gradient descent to go down hill
 

00:00:39.690 --> 00:00:42.170 align:start position:0%
using gradient descent to go down hill
to<00:00:39.870><c> minimize</c><00:00:40.230><c> the</c><00:00:40.379><c> function</c><00:00:40.530><c> J</c><00:00:40.890><c> of</c><00:00:40.920><c> theta</c><00:00:41.180><c> so</c>

00:00:42.170 --> 00:00:42.180 align:start position:0%
to minimize the function J of theta so
 

00:00:42.180 --> 00:00:43.880 align:start position:0%
to minimize the function J of theta so
what<00:00:42.629><c> can</c><00:00:42.750><c> we</c><00:00:42.809><c> set</c><00:00:43.050><c> the</c><00:00:43.200><c> initial</c><00:00:43.350><c> value</c><00:00:43.829><c> of</c>

00:00:43.880 --> 00:00:43.890 align:start position:0%
what can we set the initial value of
 

00:00:43.890 --> 00:00:47.360 align:start position:0%
what can we set the initial value of
theta<00:00:43.950><c> to</c><00:00:44.600><c> is</c><00:00:45.600><c> it</c><00:00:45.809><c> possible</c><00:00:46.260><c> to</c><00:00:46.860><c> set</c><00:00:47.100><c> the</c>

00:00:47.360 --> 00:00:47.370 align:start position:0%
theta to is it possible to set the
 

00:00:47.370 --> 00:00:50.060 align:start position:0%
theta to is it possible to set the
initial<00:00:47.640><c> value</c><00:00:48.390><c> of</c><00:00:48.629><c> theta</c><00:00:48.930><c> to</c><00:00:49.500><c> the</c><00:00:49.530><c> vector</c><00:00:50.039><c> of</c>

00:00:50.060 --> 00:00:50.070 align:start position:0%
initial value of theta to the vector of
 

00:00:50.070 --> 00:00:53.720 align:start position:0%
initial value of theta to the vector of
all<00:00:50.309><c> zeros</c><00:00:51.050><c> where</c><00:00:52.050><c> is</c><00:00:52.199><c> this</c><00:00:52.440><c> worked</c><00:00:52.710><c> okay</c><00:00:53.399><c> when</c>

00:00:53.720 --> 00:00:53.730 align:start position:0%
all zeros where is this worked okay when
 

00:00:53.730 --> 00:00:55.330 align:start position:0%
all zeros where is this worked okay when
we<00:00:53.850><c> were</c><00:00:53.969><c> using</c><00:00:54.180><c> logistic</c><00:00:54.629><c> regression</c>

00:00:55.330 --> 00:00:55.340 align:start position:0%
we were using logistic regression
 

00:00:55.340 --> 00:00:57.470 align:start position:0%
we were using logistic regression
initializing<00:00:56.340><c> all</c><00:00:56.489><c> of</c><00:00:56.670><c> your</c><00:00:56.789><c> parameters</c><00:00:57.000><c> to</c>

00:00:57.470 --> 00:00:57.480 align:start position:0%
initializing all of your parameters to
 

00:00:57.480 --> 00:00:59.450 align:start position:0%
initializing all of your parameters to
zero<00:00:57.840><c> actually</c><00:00:58.289><c> does</c><00:00:58.500><c> not</c><00:00:58.739><c> work</c><00:00:59.010><c> when</c><00:00:59.340><c> you're</c>

00:00:59.450 --> 00:00:59.460 align:start position:0%
zero actually does not work when you're
 

00:00:59.460 --> 00:01:01.819 align:start position:0%
zero actually does not work when you're
trading<00:00:59.699><c> on</c><00:00:59.940><c> your</c><00:01:00.059><c> own</c><00:01:00.180><c> network</c><00:01:00.829><c> consider</c>

00:01:01.819 --> 00:01:01.829 align:start position:0%
trading on your own network consider
 

00:01:01.829 --> 00:01:03.410 align:start position:0%
trading on your own network consider
training<00:01:02.160><c> the</c><00:01:02.399><c> following</c><00:01:02.579><c> neural</c><00:01:03.059><c> network</c>

00:01:03.410 --> 00:01:03.420 align:start position:0%
training the following neural network
 

00:01:03.420 --> 00:01:05.119 align:start position:0%
training the following neural network
and<00:01:03.660><c> let's</c><00:01:03.989><c> say</c><00:01:04.140><c> we</c><00:01:04.290><c> initialize</c><00:01:04.799><c> all</c><00:01:05.070><c> the</c>

00:01:05.119 --> 00:01:05.129 align:start position:0%
and let's say we initialize all the
 

00:01:05.129 --> 00:01:08.420 align:start position:0%
and let's say we initialize all the
parameters<00:01:05.850><c> in</c><00:01:06.060><c> the</c><00:01:06.150><c> network</c><00:01:06.510><c> to</c><00:01:06.720><c> zero</c><00:01:07.080><c> and</c><00:01:07.500><c> if</c>

00:01:08.420 --> 00:01:08.430 align:start position:0%
parameters in the network to zero and if
 

00:01:08.430 --> 00:01:10.490 align:start position:0%
parameters in the network to zero and if
you<00:01:08.580><c> do</c><00:01:08.729><c> that</c><00:01:08.909><c> then</c><00:01:09.420><c> well</c><00:01:09.960><c> you</c><00:01:10.049><c> what</c><00:01:10.350><c> that</c>

00:01:10.490 --> 00:01:10.500 align:start position:0%
you do that then well you what that
 

00:01:10.500 --> 00:01:13.130 align:start position:0%
you do that then well you what that
means<00:01:10.710><c> is</c><00:01:10.890><c> that</c><00:01:10.920><c> at</c><00:01:11.369><c> the</c><00:01:11.520><c> initialization</c><00:01:12.140><c> this</c>

00:01:13.130 --> 00:01:13.140 align:start position:0%
means is that at the initialization this
 

00:01:13.140 --> 00:01:15.499 align:start position:0%
means is that at the initialization this
blue<00:01:13.439><c> weight</c><00:01:13.710><c> the</c><00:01:14.670><c> clogging</c><00:01:15.030><c> of</c><00:01:15.150><c> blue</c><00:01:15.299><c> is</c>

00:01:15.499 --> 00:01:15.509 align:start position:0%
blue weight the clogging of blue is
 

00:01:15.509 --> 00:01:17.359 align:start position:0%
blue weight the clogging of blue is
going<00:01:15.689><c> to</c><00:01:15.750><c> equal</c><00:01:15.900><c> to</c><00:01:16.259><c> that</c><00:01:16.380><c> way</c><00:01:16.710><c> to</c><00:01:16.770><c> serve</c><00:01:17.189><c> that</c>

00:01:17.359 --> 00:01:17.369 align:start position:0%
going to equal to that way to serve that
 

00:01:17.369 --> 00:01:20.450 align:start position:0%
going to equal to that way to serve that
both<00:01:17.549><c> 0</c><00:01:18.000><c> and</c><00:01:18.299><c> this</c><00:01:18.930><c> weight</c><00:01:19.200><c> the</c><00:01:19.860><c> coloring</c><00:01:20.310><c> in</c>

00:01:20.450 --> 00:01:20.460 align:start position:0%
both 0 and this weight the coloring in
 

00:01:20.460 --> 00:01:23.090 align:start position:0%
both 0 and this weight the coloring in
in<00:01:20.640><c> red</c><00:01:20.880><c> is</c><00:01:21.119><c> equal</c><00:01:21.450><c> to</c><00:01:21.600><c> that</c><00:01:21.810><c> weight</c><00:01:22.140><c> in</c><00:01:22.860><c> red</c>

00:01:23.090 --> 00:01:23.100 align:start position:0%
in red is equal to that weight in red
 

00:01:23.100 --> 00:01:25.910 align:start position:0%
in red is equal to that weight in red
and<00:01:23.310><c> also</c><00:01:24.119><c> this</c><00:01:24.720><c> way</c><00:01:25.020><c> to</c><00:01:25.080><c> lump</c><00:01:25.500><c> which</c><00:01:25.770><c> I'm</c>

00:01:25.910 --> 00:01:25.920 align:start position:0%
and also this way to lump which I'm
 

00:01:25.920 --> 00:01:27.590 align:start position:0%
and also this way to lump which I'm
coloring<00:01:26.250><c> in</c><00:01:26.369><c> a</c><00:01:26.490><c> green</c><00:01:26.729><c> is</c><00:01:26.909><c> going</c><00:01:27.119><c> to</c><00:01:27.180><c> be</c><00:01:27.240><c> equal</c>

00:01:27.590 --> 00:01:27.600 align:start position:0%
coloring in a green is going to be equal
 

00:01:27.600 --> 00:01:30.319 align:start position:0%
coloring in a green is going to be equal
to<00:01:28.049><c> the</c><00:01:28.140><c> value</c><00:01:28.229><c> of</c><00:01:28.530><c> that</c><00:01:28.799><c> weight</c><00:01:29.130><c> and</c><00:01:29.700><c> what</c>

00:01:30.319 --> 00:01:30.329 align:start position:0%
to the value of that weight and what
 

00:01:30.329 --> 00:01:31.760 align:start position:0%
to the value of that weight and what
that<00:01:30.450><c> means</c><00:01:30.659><c> is</c><00:01:30.900><c> that</c><00:01:30.930><c> both</c><00:01:31.290><c> of</c><00:01:31.470><c> your</c><00:01:31.590><c> hidden</c>

00:01:31.760 --> 00:01:31.770 align:start position:0%
that means is that both of your hidden
 

00:01:31.770 --> 00:01:34.429 align:start position:0%
that means is that both of your hidden
units<00:01:32.250><c> a</c><00:01:32.460><c> 1</c><00:01:32.729><c> and</c><00:01:32.880><c> a</c><00:01:32.970><c> 2</c><00:01:33.000><c> are</c><00:01:33.420><c> going</c><00:01:33.960><c> to</c><00:01:34.049><c> compute</c>

00:01:34.429 --> 00:01:34.439 align:start position:0%
units a 1 and a 2 are going to compute
 

00:01:34.439 --> 00:01:36.830 align:start position:0%
units a 1 and a 2 are going to compute
be<00:01:34.619><c> computing</c><00:01:35.189><c> the</c><00:01:35.640><c> same</c><00:01:35.880><c> function</c><00:01:36.390><c> of</c><00:01:36.570><c> your</c>

00:01:36.830 --> 00:01:36.840 align:start position:0%
be computing the same function of your
 

00:01:36.840 --> 00:01:39.710 align:start position:0%
be computing the same function of your
inputs<00:01:37.259><c> and</c><00:01:37.380><c> thus</c><00:01:38.159><c> you</c><00:01:38.369><c> end</c><00:01:38.400><c> up</c><00:01:38.790><c> with</c><00:01:39.090><c> for</c>

00:01:39.710 --> 00:01:39.720 align:start position:0%
inputs and thus you end up with for
 

00:01:39.720 --> 00:01:41.300 align:start position:0%
inputs and thus you end up with for
every<00:01:39.960><c> one</c><00:01:40.170><c> of</c><00:01:40.200><c> your</c><00:01:40.409><c> training</c><00:01:40.590><c> examples</c><00:01:41.100><c> what</c>

00:01:41.300 --> 00:01:41.310 align:start position:0%
every one of your training examples what
 

00:01:41.310 --> 00:01:46.969 align:start position:0%
every one of your training examples what
you<00:01:41.549><c> end</c><00:01:41.759><c> up</c><00:01:41.880><c> with</c><00:01:41.939><c> a</c><00:01:42.360><c> 2</c><00:01:42.420><c> 1</c><00:01:42.780><c> equals</c><00:01:43.350><c> a</c><00:01:43.619><c> 2</c><00:01:44.460><c> 2</c><00:01:45.979><c> and</c>

00:01:46.969 --> 00:01:46.979 align:start position:0%
you end up with a 2 1 equals a 2 2 and
 

00:01:46.979 --> 00:01:49.880 align:start position:0%
you end up with a 2 1 equals a 2 2 and
moreover<00:01:47.399><c> because</c><00:01:47.579><c> a</c><00:01:48.140><c> not</c><00:01:49.140><c> Michelle</c><00:01:49.500><c> this</c><00:01:49.649><c> in</c>

00:01:49.880 --> 00:01:49.890 align:start position:0%
moreover because a not Michelle this in
 

00:01:49.890 --> 00:01:51.289 align:start position:0%
moreover because a not Michelle this in
too<00:01:50.100><c> much</c><00:01:50.220><c> detail</c><00:01:50.399><c> but</c><00:01:50.790><c> because</c><00:01:51.119><c> these</c>

00:01:51.289 --> 00:01:51.299 align:start position:0%
too much detail but because these
 

00:01:51.299 --> 00:01:53.270 align:start position:0%
too much detail but because these
outgoing<00:01:51.600><c> weights</c><00:01:51.990><c> are</c><00:01:52.229><c> the</c><00:01:52.350><c> same</c><00:01:52.560><c> you</c><00:01:53.100><c> can</c>

00:01:53.270 --> 00:01:53.280 align:start position:0%
outgoing weights are the same you can
 

00:01:53.280 --> 00:01:55.850 align:start position:0%
outgoing weights are the same you can
also<00:01:53.430><c> show</c><00:01:53.850><c> that</c><00:01:54.149><c> the</c><00:01:54.540><c> Delta</c><00:01:54.780><c> values</c><00:01:55.530><c> are</c><00:01:55.740><c> also</c>

00:01:55.850 --> 00:01:55.860 align:start position:0%
also show that the Delta values are also
 

00:01:55.860 --> 00:01:58.010 align:start position:0%
also show that the Delta values are also
going<00:01:56.189><c> to</c><00:01:56.280><c> be</c><00:01:56.369><c> the</c><00:01:56.520><c> same</c><00:01:56.700><c> so</c><00:01:56.909><c> concretely</c>

00:01:58.010 --> 00:01:58.020 align:start position:0%
going to be the same so concretely
 

00:01:58.020 --> 00:02:03.800 align:start position:0%
going to be the same so concretely
with<00:01:58.250><c> Delta</c><00:01:59.250><c> 1</c><00:02:00.000><c> 1</c><00:02:00.240><c> Delta</c><00:02:01.020><c> 2</c><00:02:01.049><c> 1</c><00:02:01.439><c> equals</c><00:02:02.280><c> Delta</c><00:02:02.810><c> 2</c>

00:02:03.800 --> 00:02:03.810 align:start position:0%
with Delta 1 1 Delta 2 1 equals Delta 2
 

00:02:03.810 --> 00:02:07.460 align:start position:0%
with Delta 1 1 Delta 2 1 equals Delta 2
2<00:02:04.020><c> and</c><00:02:05.570><c> if</c><00:02:06.570><c> you</c><00:02:06.750><c> work</c><00:02:06.930><c> through</c><00:02:07.140><c> the</c><00:02:07.290><c> math</c>

00:02:07.460 --> 00:02:07.470 align:start position:0%
2 and if you work through the math
 

00:02:07.470 --> 00:02:09.589 align:start position:0%
2 and if you work through the math
further<00:02:07.830><c> what</c><00:02:08.310><c> you</c><00:02:08.340><c> can</c><00:02:08.550><c> show</c><00:02:08.580><c> is</c><00:02:09.179><c> that</c><00:02:09.209><c> the</c>

00:02:09.589 --> 00:02:09.599 align:start position:0%
further what you can show is that the
 

00:02:09.599 --> 00:02:11.930 align:start position:0%
further what you can show is that the
partial<00:02:09.630><c> derivatives</c><00:02:10.619><c> with</c><00:02:11.310><c> respect</c><00:02:11.370><c> to</c><00:02:11.849><c> your</c>

00:02:11.930 --> 00:02:11.940 align:start position:0%
partial derivatives with respect to your
 

00:02:11.940 --> 00:02:14.300 align:start position:0%
partial derivatives with respect to your
parameters<00:02:12.230><c> will</c><00:02:13.230><c> satisfy</c><00:02:13.500><c> the</c><00:02:13.890><c> following</c>

00:02:14.300 --> 00:02:14.310 align:start position:0%
parameters will satisfy the following
 

00:02:14.310 --> 00:02:19.339 align:start position:0%
parameters will satisfy the following
that<00:02:15.410><c> the</c><00:02:16.410><c> partial</c><00:02:16.650><c> derivative</c><00:02:17.250><c> of</c><00:02:18.319><c> the</c><00:02:19.319><c> cost</c>

00:02:19.339 --> 00:02:19.349 align:start position:0%
that the partial derivative of the cost
 

00:02:19.349 --> 00:02:22.250 align:start position:0%
that the partial derivative of the cost
function<00:02:19.650><c> with</c><00:02:20.010><c> respect</c><00:02:20.940><c> to</c><00:02:21.060><c> I'm</c><00:02:21.690><c> writing</c><00:02:22.140><c> out</c>

00:02:22.250 --> 00:02:22.260 align:start position:0%
function with respect to I'm writing out
 

00:02:22.260 --> 00:02:24.320 align:start position:0%
function with respect to I'm writing out
the<00:02:22.410><c> derivatives</c><00:02:22.980><c> respect</c><00:02:23.700><c> to</c><00:02:23.849><c> these</c><00:02:24.030><c> two</c>

00:02:24.320 --> 00:02:24.330 align:start position:0%
the derivatives respect to these two
 

00:02:24.330 --> 00:02:26.600 align:start position:0%
the derivatives respect to these two
blue<00:02:24.569><c> weights</c><00:02:24.780><c> in</c><00:02:25.110><c> your</c><00:02:25.290><c> network</c><00:02:25.650><c> you</c><00:02:25.920><c> find</c>

00:02:26.600 --> 00:02:26.610 align:start position:0%
blue weights in your network you find
 

00:02:26.610 --> 00:02:28.580 align:start position:0%
blue weights in your network you find
that<00:02:26.849><c> these</c><00:02:27.090><c> two</c><00:02:27.120><c> partial</c><00:02:27.360><c> derivatives</c><00:02:27.870><c> are</c>

00:02:28.580 --> 00:02:28.590 align:start position:0%
that these two partial derivatives are
 

00:02:28.590 --> 00:02:32.390 align:start position:0%
that these two partial derivatives are
going<00:02:29.010><c> to</c><00:02:29.099><c> be</c><00:02:29.250><c> equal</c><00:02:30.030><c> to</c><00:02:30.150><c> each</c><00:02:30.299><c> other</c><00:02:30.510><c> and</c><00:02:31.400><c> so</c>

00:02:32.390 --> 00:02:32.400 align:start position:0%
going to be equal to each other and so
 

00:02:32.400 --> 00:02:35.120 align:start position:0%
going to be equal to each other and so
what<00:02:32.670><c> this</c><00:02:32.790><c> means</c><00:02:32.850><c> is</c><00:02:33.299><c> that</c><00:02:33.360><c> even</c><00:02:33.810><c> after</c><00:02:34.170><c> say</c><00:02:34.890><c> 1</c>

00:02:35.120 --> 00:02:35.130 align:start position:0%
what this means is that even after say 1
 

00:02:35.130 --> 00:02:37.100 align:start position:0%
what this means is that even after say 1
gradient<00:02:35.549><c> descent</c><00:02:35.850><c> update</c><00:02:35.970><c> you're</c><00:02:36.840><c> going</c><00:02:37.049><c> to</c>

00:02:37.100 --> 00:02:37.110 align:start position:0%
gradient descent update you're going to
 

00:02:37.110 --> 00:02:39.500 align:start position:0%
gradient descent update you're going to
update<00:02:37.290><c> say</c><00:02:38.160><c> this</c><00:02:38.400><c> first</c><00:02:38.640><c> blue</c><00:02:38.940><c> weights</c><00:02:39.209><c> with</c>

00:02:39.500 --> 00:02:39.510 align:start position:0%
update say this first blue weights with
 

00:02:39.510 --> 00:02:41.809 align:start position:0%
update say this first blue weights with
your<00:02:39.780><c> learning</c><00:02:40.200><c> rate</c><00:02:40.350><c> times</c><00:02:40.410><c> this</c><00:02:40.950><c> and</c><00:02:41.250><c> you're</c>

00:02:41.809 --> 00:02:41.819 align:start position:0%
your learning rate times this and you're
 

00:02:41.819 --> 00:02:43.370 align:start position:0%
your learning rate times this and you're
going<00:02:41.970><c> to</c><00:02:42.030><c> update</c><00:02:42.209><c> the</c><00:02:42.569><c> second</c><00:02:42.959><c> blue</c><00:02:43.080><c> rates</c>

00:02:43.370 --> 00:02:43.380 align:start position:0%
going to update the second blue rates
 

00:02:43.380 --> 00:02:45.320 align:start position:0%
going to update the second blue rates
with<00:02:43.620><c> some</c><00:02:43.799><c> learning</c><00:02:43.950><c> rate</c><00:02:44.250><c> times</c><00:02:44.280><c> this</c><00:02:44.730><c> but</c>

00:02:45.320 --> 00:02:45.330 align:start position:0%
with some learning rate times this but
 

00:02:45.330 --> 00:02:47.059 align:start position:0%
with some learning rate times this but
what<00:02:45.450><c> this</c><00:02:45.569><c> means</c><00:02:45.630><c> is</c><00:02:45.989><c> that</c><00:02:46.049><c> even</c><00:02:46.500><c> after</c><00:02:46.799><c> one</c>

00:02:47.059 --> 00:02:47.069 align:start position:0%
what this means is that even after one
 

00:02:47.069 --> 00:02:49.850 align:start position:0%
what this means is that even after one
gradient<00:02:47.430><c> descent</c><00:02:47.790><c> update</c><00:02:48.170><c> those</c><00:02:49.170><c> two</c><00:02:49.530><c> blue</c>

00:02:49.850 --> 00:02:49.860 align:start position:0%
gradient descent update those two blue
 

00:02:49.860 --> 00:02:52.190 align:start position:0%
gradient descent update those two blue
weights<00:02:50.069><c> those</c><00:02:50.489><c> two</c><00:02:50.700><c> blue</c><00:02:50.970><c> color</c><00:02:51.569><c> parameters</c>

00:02:52.190 --> 00:02:52.200 align:start position:0%
weights those two blue color parameters
 

00:02:52.200 --> 00:02:55.400 align:start position:0%
weights those two blue color parameters
will<00:02:52.980><c> end</c><00:02:53.190><c> up</c><00:02:53.400><c> the</c><00:02:54.330><c> same</c><00:02:54.360><c> as</c><00:02:54.750><c> each</c><00:02:54.900><c> other</c><00:02:55.110><c> so</c>

00:02:55.400 --> 00:02:55.410 align:start position:0%
will end up the same as each other so
 

00:02:55.410 --> 00:02:57.559 align:start position:0%
will end up the same as each other so
there'll<00:02:55.920><c> be</c><00:02:55.980><c> some</c><00:02:56.220><c> nonzero</c><00:02:56.459><c> value</c><00:02:57.120><c> now</c><00:02:57.269><c> but</c>

00:02:57.559 --> 00:02:57.569 align:start position:0%
there'll be some nonzero value now but
 

00:02:57.569 --> 00:03:00.559 align:start position:0%
there'll be some nonzero value now but
this<00:02:57.750><c> value</c><00:02:57.930><c> will</c><00:02:58.680><c> equal</c><00:02:58.890><c> to</c><00:02:59.310><c> that</c><00:02:59.430><c> value</c><00:02:59.670><c> and</c>

00:03:00.559 --> 00:03:00.569 align:start position:0%
this value will equal to that value and
 

00:03:00.569 --> 00:03:02.539 align:start position:0%
this value will equal to that value and
similarly<00:03:01.110><c> even</c><00:03:01.440><c> after</c><00:03:01.890><c> one</c><00:03:02.160><c> gradient</c>

00:03:02.539 --> 00:03:02.549 align:start position:0%
similarly even after one gradient
 

00:03:02.549 --> 00:03:05.449 align:start position:0%
similarly even after one gradient
descent<00:03:02.850><c> update</c><00:03:02.940><c> this</c><00:03:03.840><c> value</c><00:03:04.739><c> would</c><00:03:04.920><c> equal</c><00:03:04.980><c> to</c>

00:03:05.449 --> 00:03:05.459 align:start position:0%
descent update this value would equal to
 

00:03:05.459 --> 00:03:07.640 align:start position:0%
descent update this value would equal to
that<00:03:05.640><c> value</c><00:03:05.910><c> I'll</c><00:03:06.390><c> be</c><00:03:06.540><c> some</c><00:03:06.720><c> nonzero</c><00:03:06.900><c> values</c>

00:03:07.640 --> 00:03:07.650 align:start position:0%
that value I'll be some nonzero values
 

00:03:07.650 --> 00:03:09.319 align:start position:0%
that value I'll be some nonzero values
just<00:03:07.859><c> at</c><00:03:07.950><c> the</c><00:03:08.010><c> two</c><00:03:08.190><c> red</c><00:03:08.400><c> values</c><00:03:08.760><c> of</c><00:03:08.880><c> equal</c><00:03:09.209><c> to</c>

00:03:09.319 --> 00:03:09.329 align:start position:0%
just at the two red values of equal to
 

00:03:09.329 --> 00:03:11.990 align:start position:0%
just at the two red values of equal to
each<00:03:09.420><c> other</c><00:03:09.600><c> and</c><00:03:09.930><c> similarly</c><00:03:10.829><c> the</c><00:03:11.430><c> two</c><00:03:11.459><c> green</c>

00:03:11.990 --> 00:03:12.000 align:start position:0%
each other and similarly the two green
 

00:03:12.000 --> 00:03:14.000 align:start position:0%
each other and similarly the two green
ways<00:03:12.269><c> well</c><00:03:12.600><c> they'll</c><00:03:12.870><c> both</c><00:03:13.019><c> change</c><00:03:13.350><c> values</c><00:03:13.799><c> but</c>

00:03:14.000 --> 00:03:14.010 align:start position:0%
ways well they'll both change values but
 

00:03:14.010 --> 00:03:16.220 align:start position:0%
ways well they'll both change values but
they<00:03:14.130><c> both</c><00:03:14.370><c> end</c><00:03:14.609><c> up</c><00:03:14.790><c> the</c><00:03:14.970><c> same</c><00:03:15.000><c> value</c><00:03:15.570><c> as</c><00:03:15.600><c> each</c>

00:03:16.220 --> 00:03:16.230 align:start position:0%
they both end up the same value as each
 

00:03:16.230 --> 00:03:18.860 align:start position:0%
they both end up the same value as each
other<00:03:16.730><c> so</c><00:03:17.730><c> after</c><00:03:18.150><c> you</c><00:03:18.239><c> update</c><00:03:18.420><c> the</c><00:03:18.720><c> parameters</c>

00:03:18.860 --> 00:03:18.870 align:start position:0%
other so after you update the parameters
 

00:03:18.870 --> 00:03:20.720 align:start position:0%
other so after you update the parameters
corresponding<00:03:19.709><c> to</c><00:03:19.859><c> the</c><00:03:19.980><c> inputs</c><00:03:20.310><c> going</c><00:03:20.489><c> to</c>

00:03:20.720 --> 00:03:20.730 align:start position:0%
corresponding to the inputs going to
 

00:03:20.730 --> 00:03:22.789 align:start position:0%
corresponding to the inputs going to
each<00:03:20.970><c> of</c><00:03:21.180><c> the</c><00:03:21.239><c> hidden</c><00:03:21.570><c> to</c><00:03:22.140><c> hidden</c><00:03:22.290><c> units</c>

00:03:22.789 --> 00:03:22.799 align:start position:0%
each of the hidden to hidden units
 

00:03:22.799 --> 00:03:24.530 align:start position:0%
each of the hidden to hidden units
identical<00:03:23.579><c> that's</c><00:03:23.910><c> just</c><00:03:24.090><c> saying</c><00:03:24.239><c> that</c><00:03:24.450><c> the</c>

00:03:24.530 --> 00:03:24.540 align:start position:0%
identical that's just saying that the
 

00:03:24.540 --> 00:03:25.880 align:start position:0%
identical that's just saying that the
two<00:03:24.720><c> green</c><00:03:24.959><c> weights</c><00:03:25.109><c> is</c><00:03:25.320><c> no</c><00:03:25.500><c> stranger</c><00:03:25.859><c> to</c>

00:03:25.880 --> 00:03:25.890 align:start position:0%
two green weights is no stranger to
 

00:03:25.890 --> 00:03:28.160 align:start position:0%
two green weights is no stranger to
racism<00:03:26.670><c> saying</c><00:03:26.910><c> the</c><00:03:27.359><c> two</c><00:03:27.569><c> blue</c><00:03:27.750><c> weights</c><00:03:27.930><c> are</c>

00:03:28.160 --> 00:03:28.170 align:start position:0%
racism saying the two blue weights are
 

00:03:28.170 --> 00:03:30.800 align:start position:0%
racism saying the two blue weights are
still<00:03:28.200><c> the</c><00:03:28.410><c> same</c><00:03:28.650><c> and</c><00:03:29.180><c> what</c><00:03:30.180><c> that</c><00:03:30.329><c> means</c><00:03:30.540><c> is</c>

00:03:30.800 --> 00:03:30.810 align:start position:0%
still the same and what that means is
 

00:03:30.810 --> 00:03:33.080 align:start position:0%
still the same and what that means is
that<00:03:30.840><c> even</c><00:03:31.350><c> after</c><00:03:31.769><c> one</c><00:03:32.040><c> iteration</c><00:03:32.190><c> of</c><00:03:32.850><c> safe</c>

00:03:33.080 --> 00:03:33.090 align:start position:0%
that even after one iteration of safe
 

00:03:33.090 --> 00:03:35.960 align:start position:0%
that even after one iteration of safe
gradient<00:03:33.480><c> descent</c><00:03:33.840><c> you</c><00:03:34.049><c> find</c><00:03:34.680><c> that</c><00:03:35.040><c> your</c><00:03:35.730><c> two</c>

00:03:35.960 --> 00:03:35.970 align:start position:0%
gradient descent you find that your two
 

00:03:35.970 --> 00:03:38.900 align:start position:0%
gradient descent you find that your two
hidden<00:03:36.180><c> units</c><00:03:36.690><c> are</c><00:03:36.930><c> still</c><00:03:37.590><c> computing</c><00:03:38.459><c> exactly</c>

00:03:38.900 --> 00:03:38.910 align:start position:0%
hidden units are still computing exactly
 

00:03:38.910 --> 00:03:40.970 align:start position:0%
hidden units are still computing exactly
the<00:03:39.630><c> same</c><00:03:39.810><c> function</c><00:03:40.230><c> at</c><00:03:40.380><c> the</c><00:03:40.470><c> input</c><00:03:40.739><c> so</c><00:03:40.889><c> you</c>

00:03:40.970 --> 00:03:40.980 align:start position:0%
the same function at the input so you
 

00:03:40.980 --> 00:03:43.849 align:start position:0%
the same function at the input so you
still<00:03:41.250><c> have</c><00:03:41.430><c> this</c><00:03:41.579><c> a</c><00:03:41.790><c> 1</c><00:03:42.239><c> 2</c><00:03:42.480><c> equals</c><00:03:42.959><c> a</c><00:03:43.170><c> 2</c><00:03:43.230><c> 2</c><00:03:43.590><c> and</c>

00:03:43.849 --> 00:03:43.859 align:start position:0%
still have this a 1 2 equals a 2 2 and
 

00:03:43.859 --> 00:03:46.400 align:start position:0%
still have this a 1 2 equals a 2 2 and
so<00:03:44.489><c> you're</c><00:03:44.639><c> back</c><00:03:44.819><c> to</c><00:03:45.030><c> this</c><00:03:45.150><c> case</c><00:03:45.420><c> and</c><00:03:45.660><c> as</c><00:03:46.230><c> you</c>

00:03:46.400 --> 00:03:46.410 align:start position:0%
so you're back to this case and as you
 

00:03:46.410 --> 00:03:48.770 align:start position:0%
so you're back to this case and as you
keep<00:03:46.590><c> running</c><00:03:47.010><c> gradient</c><00:03:47.430><c> descent</c><00:03:47.730><c> the</c><00:03:48.510><c> three</c>

00:03:48.770 --> 00:03:48.780 align:start position:0%
keep running gradient descent the three
 

00:03:48.780 --> 00:03:50.420 align:start position:0%
keep running gradient descent the three
ways<00:03:48.989><c> the</c><00:03:49.019><c> two</c><00:03:49.560><c> blue</c><00:03:49.769><c> weights</c><00:03:49.920><c> will</c><00:03:50.160><c> stay</c><00:03:50.310><c> the</c>

00:03:50.420 --> 00:03:50.430 align:start position:0%
ways the two blue weights will stay the
 

00:03:50.430 --> 00:03:51.349 align:start position:0%
ways the two blue weights will stay the
same<00:03:50.579><c> as</c><00:03:50.760><c> each</c><00:03:50.880><c> other</c>

00:03:51.349 --> 00:03:51.359 align:start position:0%
same as each other
 

00:03:51.359 --> 00:03:52.849 align:start position:0%
same as each other
the<00:03:51.569><c> two</c><00:03:51.750><c> red</c><00:03:51.959><c> ways</c><00:03:52.170><c> to</c><00:03:52.319><c> stay</c><00:03:52.440><c> in</c><00:03:52.470><c> stand</c><00:03:52.769><c> each</c>

00:03:52.849 --> 00:03:52.859 align:start position:0%
the two red ways to stay in stand each
 

00:03:52.859 --> 00:03:55.170 align:start position:0%
the two red ways to stay in stand each
other<00:03:53.069><c> in</c><00:03:53.489><c> two</c><00:03:53.700><c> green</c><00:03:53.970><c> ways</c><00:03:54.120><c> to</c><00:03:54.269><c> stay</c><00:03:54.420><c> the</c><00:03:54.480><c> same</c>

00:03:55.170 --> 00:03:55.180 align:start position:0%
other in two green ways to stay the same
 

00:03:55.180 --> 00:03:57.720 align:start position:0%
other in two green ways to stay the same
and<00:03:56.079><c> what</c><00:03:56.680><c> this</c><00:03:56.829><c> means</c><00:03:57.069><c> is</c><00:03:57.250><c> that</c><00:03:57.280><c> your</c><00:03:57.610><c> neural</c>

00:03:57.720 --> 00:03:57.730 align:start position:0%
and what this means is that your neural
 

00:03:57.730 --> 00:03:59.399 align:start position:0%
and what this means is that your neural
network<00:03:57.879><c> really</c><00:03:58.510><c> can't</c><00:03:58.810><c> compute</c><00:03:59.230><c> very</c>

00:03:59.399 --> 00:03:59.409 align:start position:0%
network really can't compute very
 

00:03:59.409 --> 00:04:01.410 align:start position:0%
network really can't compute very
interesting<00:03:59.950><c> functions</c><00:04:00.400><c> right</c><00:04:00.670><c> imagine</c><00:04:01.000><c> that</c>

00:04:01.410 --> 00:04:01.420 align:start position:0%
interesting functions right imagine that
 

00:04:01.420 --> 00:04:04.890 align:start position:0%
interesting functions right imagine that
you<00:04:01.930><c> had</c><00:04:02.170><c> um</c><00:04:02.409><c> not</c><00:04:02.920><c> only</c><00:04:03.340><c> two</c><00:04:03.670><c> hidden</c><00:04:03.909><c> units</c><00:04:04.060><c> but</c>

00:04:04.890 --> 00:04:04.900 align:start position:0%
you had um not only two hidden units but
 

00:04:04.900 --> 00:04:06.990 align:start position:0%
you had um not only two hidden units but
imagine<00:04:05.409><c> that</c><00:04:05.439><c> you</c><00:04:05.620><c> had</c><00:04:05.920><c> many</c><00:04:06.459><c> many</c><00:04:06.730><c> hidden</c>

00:04:06.990 --> 00:04:07.000 align:start position:0%
imagine that you had many many hidden
 

00:04:07.000 --> 00:04:09.330 align:start position:0%
imagine that you had many many hidden
units<00:04:07.230><c> then</c><00:04:08.230><c> what</c><00:04:08.379><c> does</c><00:04:08.500><c> the</c><00:04:08.590><c> same</c><00:04:08.799><c> is</c><00:04:09.159><c> that</c>

00:04:09.330 --> 00:04:09.340 align:start position:0%
units then what does the same is that
 

00:04:09.340 --> 00:04:11.130 align:start position:0%
units then what does the same is that
all<00:04:09.549><c> of</c><00:04:09.610><c> your</c><00:04:09.879><c> hidden</c><00:04:10.180><c> units</c><00:04:10.569><c> are</c><00:04:10.720><c> computing</c>

00:04:11.130 --> 00:04:11.140 align:start position:0%
all of your hidden units are computing
 

00:04:11.140 --> 00:04:13.619 align:start position:0%
all of your hidden units are computing
the<00:04:11.769><c> exact</c><00:04:12.189><c> same</c><00:04:12.489><c> feature</c><00:04:12.849><c> all</c><00:04:13.180><c> of</c><00:04:13.239><c> the</c><00:04:13.450><c> hidden</c>

00:04:13.619 --> 00:04:13.629 align:start position:0%
the exact same feature all of the hidden
 

00:04:13.629 --> 00:04:15.479 align:start position:0%
the exact same feature all of the hidden
units<00:04:14.079><c> are</c><00:04:14.170><c> computing</c><00:04:14.470><c> the</c><00:04:14.890><c> exact</c><00:04:15.280><c> same</c>

00:04:15.479 --> 00:04:15.489 align:start position:0%
units are computing the exact same
 

00:04:15.489 --> 00:04:18.029 align:start position:0%
units are computing the exact same
function<00:04:15.939><c> of</c><00:04:16.060><c> the</c><00:04:16.150><c> input</c><00:04:16.479><c> and</c><00:04:16.889><c> this</c><00:04:17.889><c> is</c><00:04:18.009><c> a</c>

00:04:18.029 --> 00:04:18.039 align:start position:0%
function of the input and this is a
 

00:04:18.039 --> 00:04:20.490 align:start position:0%
function of the input and this is a
highly<00:04:18.459><c> redundant</c><00:04:19.000><c> representation</c><00:04:19.750><c> because</c>

00:04:20.490 --> 00:04:20.500 align:start position:0%
highly redundant representation because
 

00:04:20.500 --> 00:04:21.960 align:start position:0%
highly redundant representation because
that<00:04:20.680><c> means</c><00:04:20.829><c> that</c><00:04:21.039><c> you</c><00:04:21.130><c> find</c><00:04:21.430><c> the</c><00:04:21.549><c> logistic</c>

00:04:21.960 --> 00:04:21.970 align:start position:0%
that means that you find the logistic
 

00:04:21.970 --> 00:04:23.400 align:start position:0%
that means that you find the logistic
regression<00:04:22.419><c> you</c><00:04:22.539><c> they</c><00:04:22.690><c> don't</c><00:04:22.960><c> really</c><00:04:23.139><c> get</c><00:04:23.350><c> to</c>

00:04:23.400 --> 00:04:23.410 align:start position:0%
regression you they don't really get to
 

00:04:23.410 --> 00:04:25.020 align:start position:0%
regression you they don't really get to
see<00:04:23.650><c> only</c><00:04:23.830><c> one</c><00:04:24.160><c> feature</c><00:04:24.430><c> because</c><00:04:24.850><c> all</c><00:04:25.000><c> of</c>

00:04:25.020 --> 00:04:25.030 align:start position:0%
see only one feature because all of
 

00:04:25.030 --> 00:04:27.029 align:start position:0%
see only one feature because all of
these<00:04:25.240><c> are</c><00:04:25.419><c> the</c><00:04:25.479><c> same</c><00:04:25.570><c> and</c><00:04:25.960><c> this</c><00:04:26.620><c> prevents</c>

00:04:27.029 --> 00:04:27.039 align:start position:0%
these are the same and this prevents
 

00:04:27.039 --> 00:04:28.260 align:start position:0%
these are the same and this prevents
your<00:04:27.220><c> neural</c><00:04:27.460><c> network</c><00:04:27.789><c> from</c><00:04:28.000><c> they</c><00:04:28.150><c> learning</c>

00:04:28.260 --> 00:04:28.270 align:start position:0%
your neural network from they learning
 

00:04:28.270 --> 00:04:32.520 align:start position:0%
your neural network from they learning
something<00:04:28.600><c> interesting</c><00:04:30.720><c> in</c><00:04:31.720><c> order</c><00:04:32.139><c> to</c><00:04:32.350><c> get</c>

00:04:32.520 --> 00:04:32.530 align:start position:0%
something interesting in order to get
 

00:04:32.530 --> 00:04:34.020 align:start position:0%
something interesting in order to get
around<00:04:32.770><c> this</c><00:04:32.949><c> problem</c><00:04:33.039><c> the</c><00:04:33.669><c> way</c><00:04:33.820><c> we</c>

00:04:34.020 --> 00:04:34.030 align:start position:0%
around this problem the way we
 

00:04:34.030 --> 00:04:35.430 align:start position:0%
around this problem the way we
initialize<00:04:34.539><c> the</c><00:04:34.570><c> parameters</c><00:04:35.199><c> of</c><00:04:35.229><c> a</c><00:04:35.410><c> neural</c>

00:04:35.430 --> 00:04:35.440 align:start position:0%
initialize the parameters of a neural
 

00:04:35.440 --> 00:04:37.620 align:start position:0%
initialize the parameters of a neural
network<00:04:35.830><c> therefore</c><00:04:36.250><c> is</c><00:04:36.669><c> with</c><00:04:37.150><c> random</c>

00:04:37.620 --> 00:04:37.630 align:start position:0%
network therefore is with random
 

00:04:37.630 --> 00:04:43.260 align:start position:0%
network therefore is with random
initialization<00:04:41.430><c> concretely</c><00:04:42.430><c> the</c><00:04:42.699><c> problem</c><00:04:43.120><c> we</c>

00:04:43.260 --> 00:04:43.270 align:start position:0%
initialization concretely the problem we
 

00:04:43.270 --> 00:04:45.420 align:start position:0%
initialization concretely the problem we
saw<00:04:43.539><c> on</c><00:04:43.900><c> the</c><00:04:44.110><c> previous</c><00:04:44.289><c> slide</c><00:04:44.530><c> is</c><00:04:45.039><c> sometimes</c>

00:04:45.420 --> 00:04:45.430 align:start position:0%
saw on the previous slide is sometimes
 

00:04:45.430 --> 00:04:47.460 align:start position:0%
saw on the previous slide is sometimes
called<00:04:45.669><c> the</c><00:04:45.820><c> problem</c><00:04:46.660><c> of</c><00:04:46.750><c> symmetric</c><00:04:47.289><c> way</c>

00:04:47.460 --> 00:04:47.470 align:start position:0%
called the problem of symmetric way
 

00:04:47.470 --> 00:04:48.960 align:start position:0%
called the problem of symmetric way
instead<00:04:47.830><c> of</c><00:04:47.889><c> the</c><00:04:48.190><c> way</c><00:04:48.310><c> it's</c><00:04:48.460><c> all</c><00:04:48.580><c> being</c><00:04:48.760><c> the</c>

00:04:48.960 --> 00:04:48.970 align:start position:0%
instead of the way it's all being the
 

00:04:48.970 --> 00:04:52.200 align:start position:0%
instead of the way it's all being the
same<00:04:49.210><c> and</c><00:04:49.870><c> so</c><00:04:50.199><c> this</c><00:04:50.530><c> random</c><00:04:51.430><c> initialization</c>

00:04:52.200 --> 00:04:52.210 align:start position:0%
same and so this random initialization
 

00:04:52.210 --> 00:04:55.710 align:start position:0%
same and so this random initialization
is<00:04:52.690><c> how</c><00:04:52.960><c> we</c><00:04:53.020><c> perform</c><00:04:53.500><c> symmetry</c><00:04:54.220><c> breaking</c><00:04:54.720><c> so</c>

00:04:55.710 --> 00:04:55.720 align:start position:0%
is how we perform symmetry breaking so
 

00:04:55.720 --> 00:04:58.050 align:start position:0%
is how we perform symmetry breaking so
what<00:04:55.960><c> we</c><00:04:56.050><c> do</c><00:04:56.199><c> is</c><00:04:56.440><c> we</c><00:04:56.590><c> initialize</c><00:04:57.160><c> each</c><00:04:57.460><c> value</c>

00:04:58.050 --> 00:04:58.060 align:start position:0%
what we do is we initialize each value
 

00:04:58.060 --> 00:05:00.270 align:start position:0%
what we do is we initialize each value
of<00:04:58.240><c> theta</c><00:04:58.360><c> to</c><00:04:59.289><c> a</c><00:04:59.320><c> random</c><00:04:59.860><c> number</c><00:05:00.039><c> between</c>

00:05:00.270 --> 00:05:00.280 align:start position:0%
of theta to a random number between
 

00:05:00.280 --> 00:05:02.580 align:start position:0%
of theta to a random number between
minus<00:05:00.669><c> epsilon</c><00:05:01.150><c> and</c><00:05:01.570><c> Epsilon</c><00:05:02.020><c> so</c><00:05:02.229><c> this</c><00:05:02.410><c> is</c><00:05:02.530><c> a</c>

00:05:02.580 --> 00:05:02.590 align:start position:0%
minus epsilon and Epsilon so this is a
 

00:05:02.590 --> 00:05:04.290 align:start position:0%
minus epsilon and Epsilon so this is a
notation<00:05:03.190><c> to</c><00:05:03.220><c> me</c><00:05:03.490><c> numbers</c><00:05:03.849><c> between</c><00:05:04.120><c> minus</c>

00:05:04.290 --> 00:05:04.300 align:start position:0%
notation to me numbers between minus
 

00:05:04.300 --> 00:05:05.820 align:start position:0%
notation to me numbers between minus
epsilon<00:05:04.690><c> and</c><00:05:05.080><c> plus</c><00:05:05.260><c> Epsilon</c>

00:05:05.820 --> 00:05:05.830 align:start position:0%
epsilon and plus Epsilon
 

00:05:05.830 --> 00:05:08.640 align:start position:0%
epsilon and plus Epsilon
so<00:05:06.460><c> my</c><00:05:06.970><c> weights</c><00:05:07.270><c> or</c><00:05:07.479><c> my</c><00:05:07.599><c> parameters</c><00:05:08.169><c> are</c><00:05:08.440><c> all</c>

00:05:08.640 --> 00:05:08.650 align:start position:0%
so my weights or my parameters are all
 

00:05:08.650 --> 00:05:10.439 align:start position:0%
so my weights or my parameters are all
gonna<00:05:08.830><c> be</c><00:05:08.889><c> randomly</c><00:05:09.550><c> initialized</c><00:05:10.060><c> between</c>

00:05:10.439 --> 00:05:10.449 align:start position:0%
gonna be randomly initialized between
 

00:05:10.449 --> 00:05:12.629 align:start position:0%
gonna be randomly initialized between
minus<00:05:10.780><c> epsilon</c><00:05:10.900><c> and</c><00:05:11.229><c> plus</c><00:05:11.289><c> Epsilon</c><00:05:11.560><c> the</c><00:05:12.430><c> way</c><00:05:12.610><c> I</c>

00:05:12.629 --> 00:05:12.639 align:start position:0%
minus epsilon and plus Epsilon the way I
 

00:05:12.639 --> 00:05:14.640 align:start position:0%
minus epsilon and plus Epsilon the way I
write<00:05:12.909><c> code</c><00:05:13.180><c> to</c><00:05:13.210><c> do</c><00:05:13.419><c> this</c><00:05:13.570><c> in</c><00:05:13.720><c> octave</c><00:05:14.080><c> is</c><00:05:14.320><c> I'm</c><00:05:14.500><c> I</c>

00:05:14.640 --> 00:05:14.650 align:start position:0%
write code to do this in octave is I'm I
 

00:05:14.650 --> 00:05:16.710 align:start position:0%
write code to do this in octave is I'm I
said<00:05:14.949><c> you</c><00:05:15.400><c> know</c><00:05:15.460><c> theta</c><00:05:15.699><c> want</c><00:05:16.120><c> to</c><00:05:16.270><c> be</c><00:05:16.360><c> equal</c><00:05:16.570><c> to</c>

00:05:16.710 --> 00:05:16.720 align:start position:0%
said you know theta want to be equal to
 

00:05:16.720 --> 00:05:21.000 align:start position:0%
said you know theta want to be equal to
this<00:05:16.960><c> so</c><00:05:17.830><c> this</c><00:05:17.860><c> R</c><00:05:18.400><c> +</c><00:05:18.729><c> 10</c><00:05:19.360><c> by</c><00:05:19.570><c> 11</c><00:05:19.680><c> that's</c><00:05:20.680><c> how</c><00:05:20.949><c> you</c>

00:05:21.000 --> 00:05:21.010 align:start position:0%
this so this R + 10 by 11 that's how you
 

00:05:21.010 --> 00:05:25.170 align:start position:0%
this so this R + 10 by 11 that's how you
compute<00:05:21.520><c> a</c><00:05:21.729><c> random</c><00:05:22.409><c> 10</c><00:05:23.409><c> by</c><00:05:23.590><c> 11</c><00:05:24.180><c> dimensional</c>

00:05:25.170 --> 00:05:25.180 align:start position:0%
compute a random 10 by 11 dimensional
 

00:05:25.180 --> 00:05:29.219 align:start position:0%
compute a random 10 by 11 dimensional
matrix<00:05:25.599><c> and</c><00:05:25.979><c> all</c><00:05:26.979><c> the</c><00:05:27.220><c> values</c><00:05:27.610><c> are</c><00:05:27.639><c> between</c><00:05:28.229><c> 0</c>

00:05:29.219 --> 00:05:29.229 align:start position:0%
matrix and all the values are between 0
 

00:05:29.229 --> 00:05:30.379 align:start position:0%
matrix and all the values are between 0
&amp;<00:05:29.380><c> 1</c>

00:05:30.379 --> 00:05:30.389 align:start position:0%
&amp; 1
 

00:05:30.389 --> 00:05:32.270 align:start position:0%
&amp; 1
so<00:05:31.020><c> these</c><00:05:31.169><c> are</c><00:05:31.349><c> going</c><00:05:31.469><c> to</c><00:05:31.590><c> be</c><00:05:31.680><c> roll</c><00:05:31.889><c> numbers</c>

00:05:32.270 --> 00:05:32.280 align:start position:0%
so these are going to be roll numbers
 

00:05:32.280 --> 00:05:33.920 align:start position:0%
so these are going to be roll numbers
that<00:05:32.520><c> take</c><00:05:32.699><c> on</c><00:05:32.849><c> any</c><00:05:33.030><c> continuous</c><00:05:33.599><c> values</c>

00:05:33.920 --> 00:05:33.930 align:start position:0%
that take on any continuous values
 

00:05:33.930 --> 00:05:36.320 align:start position:0%
that take on any continuous values
between<00:05:34.110><c> 0</c><00:05:34.469><c> and</c><00:05:34.590><c> 1</c><00:05:34.770><c> and</c><00:05:34.949><c> so</c><00:05:35.819><c> if</c><00:05:36.060><c> you</c><00:05:36.150><c> take</c><00:05:36.270><c> a</c>

00:05:36.320 --> 00:05:36.330 align:start position:0%
between 0 and 1 and so if you take a
 

00:05:36.330 --> 00:05:39.080 align:start position:0%
between 0 and 1 and so if you take a
number<00:05:36.509><c> between</c><00:05:36.750><c> 0</c><00:05:36.870><c> &amp;</c><00:05:37.139><c> 1</c><00:05:37.169><c> x</c><00:05:38.099><c> 2</c><00:05:38.370><c> x</c><00:05:38.580><c> in</c><00:05:39.000><c> the</c>

00:05:39.080 --> 00:05:39.090 align:start position:0%
number between 0 &amp; 1 x 2 x in the
 

00:05:39.090 --> 00:05:41.059 align:start position:0%
number between 0 &amp; 1 x 2 x in the
epsilon<00:05:39.449><c> then</c><00:05:39.659><c> minus</c><00:05:39.960><c> in</c><00:05:40.080><c> the</c><00:05:40.199><c> epsilon</c><00:05:40.560><c> that</c>

00:05:41.059 --> 00:05:41.069 align:start position:0%
epsilon then minus in the epsilon that
 

00:05:41.069 --> 00:05:42.619 align:start position:0%
epsilon then minus in the epsilon that
you<00:05:41.159><c> end</c><00:05:41.340><c> up</c><00:05:41.490><c> with</c><00:05:41.550><c> a</c><00:05:41.879><c> number</c><00:05:42.240><c> that's</c><00:05:42.479><c> between</c>

00:05:42.619 --> 00:05:42.629 align:start position:0%
you end up with a number that's between
 

00:05:42.629 --> 00:05:44.929 align:start position:0%
you end up with a number that's between
minus<00:05:43.169><c> epsilon</c><00:05:43.289><c> and</c><00:05:43.800><c> plus</c><00:05:43.860><c> Epsilon</c>

00:05:44.929 --> 00:05:44.939 align:start position:0%
minus epsilon and plus Epsilon
 

00:05:44.939 --> 00:05:47.420 align:start position:0%
minus epsilon and plus Epsilon
and<00:05:45.689><c> incidentally</c><00:05:46.289><c> this</c><00:05:46.500><c> epsilon</c><00:05:46.949><c> here</c><00:05:47.189><c> has</c>

00:05:47.420 --> 00:05:47.430 align:start position:0%
and incidentally this epsilon here has
 

00:05:47.430 --> 00:05:49.730 align:start position:0%
and incidentally this epsilon here has
nothing<00:05:48.090><c> to</c><00:05:48.330><c> do</c><00:05:48.599><c> with</c><00:05:48.629><c> the</c><00:05:48.960><c> epsilon</c><00:05:49.409><c> that</c><00:05:49.620><c> we</c>

00:05:49.730 --> 00:05:49.740 align:start position:0%
nothing to do with the epsilon that we
 

00:05:49.740 --> 00:05:51.649 align:start position:0%
nothing to do with the epsilon that we
were<00:05:49.889><c> using</c><00:05:50.129><c> when</c><00:05:50.490><c> we</c><00:05:50.520><c> were</c><00:05:50.699><c> doing</c><00:05:51.030><c> gradient</c>

00:05:51.649 --> 00:05:51.659 align:start position:0%
were using when we were doing gradient
 

00:05:51.659 --> 00:05:53.659 align:start position:0%
were using when we were doing gradient
checking<00:05:52.110><c> so</c><00:05:52.770><c> when</c><00:05:52.919><c> we're</c><00:05:53.009><c> doing</c><00:05:53.099><c> the</c><00:05:53.310><c> America</c>

00:05:53.659 --> 00:05:53.669 align:start position:0%
checking so when we're doing the America
 

00:05:53.669 --> 00:05:55.610 align:start position:0%
checking so when we're doing the America
gradient<00:05:54.120><c> checking</c><00:05:54.270><c> there</c><00:05:55.050><c> we</c><00:05:55.289><c> were</c><00:05:55.379><c> adding</c>

00:05:55.610 --> 00:05:55.620 align:start position:0%
gradient checking there we were adding
 

00:05:55.620 --> 00:05:57.709 align:start position:0%
gradient checking there we were adding
some<00:05:56.039><c> values</c><00:05:56.370><c> of</c><00:05:56.520><c> epsilon</c><00:05:56.639><c> to</c><00:05:56.969><c> theta</c><00:05:57.180><c> this</c><00:05:57.569><c> is</c>

00:05:57.709 --> 00:05:57.719 align:start position:0%
some values of epsilon to theta this is
 

00:05:57.719 --> 00:05:59.779 align:start position:0%
some values of epsilon to theta this is
you<00:05:58.289><c> know</c><00:05:58.349><c> unrelated</c><00:05:59.039><c> value</c><00:05:59.340><c> of</c><00:05:59.430><c> epsilon</c>

00:05:59.779 --> 00:05:59.789 align:start position:0%
you know unrelated value of epsilon
 

00:05:59.789 --> 00:06:01.580 align:start position:0%
you know unrelated value of epsilon
which<00:05:59.969><c> is</c><00:06:00.090><c> 1/2</c><00:06:00.419><c> noting</c><00:06:00.780><c> it</c><00:06:00.990><c> knit</c><00:06:01.139><c> 2</c><00:06:01.259><c> epsilon</c>

00:06:01.580 --> 00:06:01.590 align:start position:0%
which is 1/2 noting it knit 2 epsilon
 

00:06:01.590 --> 00:06:03.619 align:start position:0%
which is 1/2 noting it knit 2 epsilon
just<00:06:01.830><c> to</c><00:06:01.919><c> distinguish</c><00:06:02.400><c> it</c><00:06:02.610><c> from</c><00:06:02.759><c> the</c><00:06:03.120><c> value</c><00:06:03.240><c> of</c>

00:06:03.619 --> 00:06:03.629 align:start position:0%
just to distinguish it from the value of
 

00:06:03.629 --> 00:06:05.330 align:start position:0%
just to distinguish it from the value of
epsilon<00:06:04.020><c> we</c><00:06:04.199><c> were</c><00:06:04.289><c> using</c><00:06:04.560><c> in</c><00:06:04.889><c> gradient</c>

00:06:05.330 --> 00:06:05.340 align:start position:0%
epsilon we were using in gradient
 

00:06:05.340 --> 00:06:07.670 align:start position:0%
epsilon we were using in gradient
checking<00:06:05.509><c> and</c><00:06:06.509><c> similarly</c><00:06:07.110><c> if</c><00:06:07.319><c> you</c><00:06:07.409><c> want</c><00:06:07.439><c> to</c>

00:06:07.670 --> 00:06:07.680 align:start position:0%
checking and similarly if you want to
 

00:06:07.680 --> 00:06:10.490 align:start position:0%
checking and similarly if you want to
initialize<00:06:08.310><c> theta</c><00:06:08.550><c> 2</c><00:06:08.879><c> to</c><00:06:09.120><c> a</c><00:06:09.150><c> random</c><00:06:09.750><c> one</c><00:06:10.289><c> by</c>

00:06:10.490 --> 00:06:10.500 align:start position:0%
initialize theta 2 to a random one by
 

00:06:10.500 --> 00:06:12.860 align:start position:0%
initialize theta 2 to a random one by
the<00:06:10.560><c> 11</c><00:06:11.009><c> matrix</c><00:06:11.159><c> you</c><00:06:11.759><c> can</c><00:06:11.939><c> do</c><00:06:12.090><c> so</c><00:06:12.300><c> using</c><00:06:12.569><c> this</c>

00:06:12.860 --> 00:06:12.870 align:start position:0%
the 11 matrix you can do so using this
 

00:06:12.870 --> 00:06:15.340 align:start position:0%
the 11 matrix you can do so using this
piece<00:06:13.080><c> of</c><00:06:13.259><c> code</c><00:06:13.439><c> here</c>

00:06:15.340 --> 00:06:15.350 align:start position:0%
piece of code here
 

00:06:15.350 --> 00:06:18.650 align:start position:0%
piece of code here
so<00:06:16.350><c> to</c><00:06:16.410><c> summarize</c><00:06:17.130><c> to</c><00:06:17.460><c> trade</c><00:06:17.940><c> in</c><00:06:18.090><c> your</c><00:06:18.120><c> network</c>

00:06:18.650 --> 00:06:18.660 align:start position:0%
so to summarize to trade in your network
 

00:06:18.660 --> 00:06:20.150 align:start position:0%
so to summarize to trade in your network
where<00:06:18.930><c> you</c><00:06:19.020><c> should</c><00:06:19.200><c> do</c><00:06:19.380><c> is</c><00:06:19.530><c> randomly</c>

00:06:20.150 --> 00:06:20.160 align:start position:0%
where you should do is randomly
 

00:06:20.160 --> 00:06:22.070 align:start position:0%
where you should do is randomly
initialize<00:06:20.790><c> the</c><00:06:21.000><c> ways</c><00:06:21.150><c> to</c><00:06:21.510><c> you</c><00:06:21.690><c> know</c><00:06:21.780><c> small</c>

00:06:22.070 --> 00:06:22.080 align:start position:0%
initialize the ways to you know small
 

00:06:22.080 --> 00:06:24.050 align:start position:0%
initialize the ways to you know small
values<00:06:22.530><c> close</c><00:06:22.770><c> to</c><00:06:22.950><c> zero</c><00:06:23.280><c> between</c><00:06:23.580><c> minus</c>

00:06:24.050 --> 00:06:24.060 align:start position:0%
values close to zero between minus
 

00:06:24.060 --> 00:06:26.590 align:start position:0%
values close to zero between minus
epsilon<00:06:24.390><c> and</c><00:06:24.540><c> plus</c><00:06:24.600><c> Epsilon</c><00:06:24.840><c> say</c><00:06:25.320><c> and</c><00:06:25.590><c> then</c>

00:06:26.590 --> 00:06:26.600 align:start position:0%
epsilon and plus Epsilon say and then
 

00:06:26.600 --> 00:06:29.240 align:start position:0%
epsilon and plus Epsilon say and then
implement<00:06:27.600><c> back-propagation</c><00:06:27.950><c> do</c><00:06:28.950><c> gradient</c>

00:06:29.240 --> 00:06:29.250 align:start position:0%
implement back-propagation do gradient
 

00:06:29.250 --> 00:06:31.700 align:start position:0%
implement back-propagation do gradient
checking<00:06:29.520><c> and</c><00:06:30.000><c> use</c><00:06:30.480><c> you</c><00:06:31.200><c> think</c><00:06:31.380><c> gradient</c>

00:06:31.700 --> 00:06:31.710 align:start position:0%
checking and use you think gradient
 

00:06:31.710 --> 00:06:33.140 align:start position:0%
checking and use you think gradient
descent<00:06:32.010><c> or</c><00:06:32.130><c> one</c><00:06:32.400><c> of</c><00:06:32.520><c> the</c><00:06:32.610><c> advanced</c>

00:06:33.140 --> 00:06:33.150 align:start position:0%
descent or one of the advanced
 

00:06:33.150 --> 00:06:35.150 align:start position:0%
descent or one of the advanced
optimization<00:06:33.210><c> algorithms</c><00:06:34.200><c> to</c><00:06:34.770><c> try</c><00:06:35.100><c> to</c>

00:06:35.150 --> 00:06:35.160 align:start position:0%
optimization algorithms to try to
 

00:06:35.160 --> 00:06:37.610 align:start position:0%
optimization algorithms to try to
minimize<00:06:35.610><c> J</c><00:06:35.850><c> of</c><00:06:36.180><c> theta</c><00:06:36.330><c> as</c><00:06:36.720><c> a</c><00:06:36.960><c> function</c><00:06:37.080><c> of</c><00:06:37.560><c> the</c>

00:06:37.610 --> 00:06:37.620 align:start position:0%
minimize J of theta as a function of the
 

00:06:37.620 --> 00:06:39.830 align:start position:0%
minimize J of theta as a function of the
parameters<00:06:38.040><c> data</c><00:06:38.300><c> starting</c><00:06:39.300><c> from</c><00:06:39.570><c> this</c>

00:06:39.830 --> 00:06:39.840 align:start position:0%
parameters data starting from this
 

00:06:39.840 --> 00:06:41.900 align:start position:0%
parameters data starting from this
randomly<00:06:40.350><c> chosen</c><00:06:40.740><c> initial</c><00:06:41.220><c> value</c><00:06:41.730><c> for</c><00:06:41.760><c> the</c>

00:06:41.900 --> 00:06:41.910 align:start position:0%
randomly chosen initial value for the
 

00:06:41.910 --> 00:06:44.360 align:start position:0%
randomly chosen initial value for the
parameters<00:06:42.090><c> and</c><00:06:42.630><c> by</c><00:06:43.590><c> doing</c><00:06:43.860><c> symmetry</c>

00:06:44.360 --> 00:06:44.370 align:start position:0%
parameters and by doing symmetry
 

00:06:44.370 --> 00:06:46.130 align:start position:0%
parameters and by doing symmetry
breaking<00:06:44.490><c> which</c><00:06:44.790><c> is</c><00:06:45.060><c> this</c><00:06:45.180><c> process</c><00:06:45.420><c> hopefully</c>

00:06:46.130 --> 00:06:46.140 align:start position:0%
breaking which is this process hopefully
 

00:06:46.140 --> 00:06:47.600 align:start position:0%
breaking which is this process hopefully
gradient<00:06:46.800><c> sent</c><00:06:47.070><c> or</c><00:06:47.250><c> the</c><00:06:47.370><c> advanced</c>

00:06:47.600 --> 00:06:47.610 align:start position:0%
gradient sent or the advanced
 

00:06:47.610 --> 00:06:49.310 align:start position:0%
gradient sent or the advanced
optimization<00:06:47.820><c> algorithms</c><00:06:48.660><c> we'll</c><00:06:48.840><c> be</c><00:06:48.960><c> able</c><00:06:49.080><c> to</c>

00:06:49.310 --> 00:06:49.320 align:start position:0%
optimization algorithms we'll be able to
 

00:06:49.320 --> 00:06:52.940 align:start position:0%
optimization algorithms we'll be able to
find<00:06:49.710><c> a</c><00:06:49.830><c> good</c><00:06:49.980><c> value</c><00:06:50.430><c> of</c><00:06:50.640><c> theta</c>

