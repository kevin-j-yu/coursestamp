WEBVTT
Kind: captions
Language: en

00:00:00.030 --> 00:00:01.699 align:start position:0%
 
in<00:00:00.329><c> this</c><00:00:00.539><c> video</c><00:00:00.870><c> we'll</c><00:00:01.110><c> talk</c><00:00:01.260><c> about</c><00:00:01.439><c> the</c>

00:00:01.699 --> 00:00:01.709 align:start position:0%
in this video we'll talk about the
 

00:00:01.709 --> 00:00:04.249 align:start position:0%
in this video we'll talk about the
normal<00:00:02.010><c> equation</c><00:00:02.790><c> which</c><00:00:03.330><c> for</c><00:00:03.720><c> some</c><00:00:03.929><c> linear</c>

00:00:04.249 --> 00:00:04.259 align:start position:0%
normal equation which for some linear
 

00:00:04.259 --> 00:00:06.110 align:start position:0%
normal equation which for some linear
regression<00:00:04.710><c> problems</c><00:00:05.130><c> will</c><00:00:05.400><c> give</c><00:00:05.580><c> us</c><00:00:05.700><c> a</c><00:00:05.879><c> much</c>

00:00:06.110 --> 00:00:06.120 align:start position:0%
regression problems will give us a much
 

00:00:06.120 --> 00:00:08.120 align:start position:0%
regression problems will give us a much
better<00:00:06.299><c> way</c><00:00:06.540><c> to</c><00:00:06.569><c> solve</c><00:00:07.319><c> for</c><00:00:07.560><c> the</c><00:00:07.680><c> optimal</c>

00:00:08.120 --> 00:00:08.130 align:start position:0%
better way to solve for the optimal
 

00:00:08.130 --> 00:00:11.600 align:start position:0%
better way to solve for the optimal
value<00:00:08.550><c> of</c><00:00:08.580><c> the</c><00:00:08.820><c> parameters</c><00:00:09.510><c> theta</c><00:00:10.610><c> concretely</c>

00:00:11.600 --> 00:00:11.610 align:start position:0%
value of the parameters theta concretely
 

00:00:11.610 --> 00:00:13.610 align:start position:0%
value of the parameters theta concretely
so<00:00:12.300><c> far</c><00:00:12.570><c> the</c><00:00:12.840><c> algorithm</c><00:00:13.290><c> that</c><00:00:13.380><c> we've</c><00:00:13.530><c> been</c>

00:00:13.610 --> 00:00:13.620 align:start position:0%
so far the algorithm that we've been
 

00:00:13.620 --> 00:00:15.530 align:start position:0%
so far the algorithm that we've been
using<00:00:13.679><c> for</c><00:00:14.160><c> linear</c><00:00:14.549><c> regression</c><00:00:14.580><c> is</c><00:00:15.179><c> gradient</c>

00:00:15.530 --> 00:00:15.540 align:start position:0%
using for linear regression is gradient
 

00:00:15.540 --> 00:00:18.170 align:start position:0%
using for linear regression is gradient
descent<00:00:15.960><c> where</c><00:00:16.710><c> in</c><00:00:17.010><c> order</c><00:00:17.490><c> to</c><00:00:17.760><c> minimize</c><00:00:18.150><c> the</c>

00:00:18.170 --> 00:00:18.180 align:start position:0%
descent where in order to minimize the
 

00:00:18.180 --> 00:00:21.050 align:start position:0%
descent where in order to minimize the
cost<00:00:18.539><c> function</c><00:00:18.660><c> J</c><00:00:18.990><c> of</c><00:00:19.260><c> theta</c><00:00:19.289><c> we</c><00:00:20.189><c> would</c><00:00:20.460><c> take</c>

00:00:21.050 --> 00:00:21.060 align:start position:0%
cost function J of theta we would take
 

00:00:21.060 --> 00:00:23.810 align:start position:0%
cost function J of theta we would take
this<00:00:21.300><c> iterative</c><00:00:22.080><c> algorithm</c><00:00:22.740><c> that</c><00:00:23.279><c> takes</c><00:00:23.519><c> many</c>

00:00:23.810 --> 00:00:23.820 align:start position:0%
this iterative algorithm that takes many
 

00:00:23.820 --> 00:00:26.150 align:start position:0%
this iterative algorithm that takes many
steps<00:00:23.970><c> so</c><00:00:24.630><c> that</c><00:00:24.720><c> multiple</c><00:00:25.140><c> iterations</c><00:00:25.500><c> of</c>

00:00:26.150 --> 00:00:26.160 align:start position:0%
steps so that multiple iterations of
 

00:00:26.160 --> 00:00:28.730 align:start position:0%
steps so that multiple iterations of
gradient<00:00:26.220><c> descent</c><00:00:26.609><c> to</c><00:00:27.090><c> converge</c><00:00:28.019><c> to</c><00:00:28.500><c> the</c>

00:00:28.730 --> 00:00:28.740 align:start position:0%
gradient descent to converge to the
 

00:00:28.740 --> 00:00:29.599 align:start position:0%
gradient descent to converge to the
global<00:00:28.769><c> minimum</c>

00:00:29.599 --> 00:00:29.609 align:start position:0%
global minimum
 

00:00:29.609 --> 00:00:32.569 align:start position:0%
global minimum
in<00:00:30.599><c> contrast</c><00:00:31.199><c> the</c><00:00:31.500><c> normal</c><00:00:31.890><c> equation</c><00:00:32.340><c> will</c>

00:00:32.569 --> 00:00:32.579 align:start position:0%
in contrast the normal equation will
 

00:00:32.579 --> 00:00:35.020 align:start position:0%
in contrast the normal equation will
give<00:00:32.759><c> us</c><00:00:32.880><c> a</c><00:00:33.149><c> method</c><00:00:33.390><c> to</c><00:00:33.840><c> solve</c><00:00:34.350><c> for</c><00:00:34.620><c> theta</c>

00:00:35.020 --> 00:00:35.030 align:start position:0%
give us a method to solve for theta
 

00:00:35.030 --> 00:00:37.160 align:start position:0%
give us a method to solve for theta
analytically<00:00:36.030><c> so</c><00:00:36.660><c> there</c><00:00:36.809><c> rather</c><00:00:36.989><c> than</c>

00:00:37.160 --> 00:00:37.170 align:start position:0%
analytically so there rather than
 

00:00:37.170 --> 00:00:39.380 align:start position:0%
analytically so there rather than
needing<00:00:37.500><c> to</c><00:00:37.890><c> run</c><00:00:38.100><c> this</c><00:00:38.280><c> iterative</c><00:00:38.850><c> algorithm</c>

00:00:39.380 --> 00:00:39.390 align:start position:0%
needing to run this iterative algorithm
 

00:00:39.390 --> 00:00:41.150 align:start position:0%
needing to run this iterative algorithm
we<00:00:39.570><c> can</c><00:00:39.600><c> instead</c><00:00:40.079><c> just</c><00:00:40.320><c> solve</c><00:00:40.800><c> for</c><00:00:40.950><c> the</c>

00:00:41.150 --> 00:00:41.160 align:start position:0%
we can instead just solve for the
 

00:00:41.160 --> 00:00:43.850 align:start position:0%
we can instead just solve for the
optimal<00:00:41.579><c> value</c><00:00:41.910><c> for</c><00:00:41.940><c> theta</c><00:00:42.239><c> all</c><00:00:42.690><c> in</c><00:00:43.170><c> one</c><00:00:43.379><c> go</c><00:00:43.620><c> so</c>

00:00:43.850 --> 00:00:43.860 align:start position:0%
optimal value for theta all in one go so
 

00:00:43.860 --> 00:00:46.639 align:start position:0%
optimal value for theta all in one go so
that<00:00:44.040><c> in</c><00:00:44.219><c> basically</c><00:00:44.550><c> one</c><00:00:44.820><c> step</c><00:00:44.850><c> you</c><00:00:45.660><c> get</c><00:00:45.930><c> to</c>

00:00:46.639 --> 00:00:46.649 align:start position:0%
that in basically one step you get to
 

00:00:46.649 --> 00:00:50.270 align:start position:0%
that in basically one step you get to
the<00:00:46.770><c> optimal</c><00:00:47.160><c> value</c><00:00:47.489><c> right</c><00:00:47.850><c> there</c><00:00:48.980><c> it</c><00:00:49.980><c> turns</c>

00:00:50.270 --> 00:00:50.280 align:start position:0%
the optimal value right there it turns
 

00:00:50.280 --> 00:00:53.119 align:start position:0%
the optimal value right there it turns
out<00:00:50.460><c> the</c><00:00:50.760><c> normal</c><00:00:51.629><c> equation</c><00:00:52.289><c> method</c><00:00:52.320><c> has</c><00:00:52.920><c> some</c>

00:00:53.119 --> 00:00:53.129 align:start position:0%
out the normal equation method has some
 

00:00:53.129 --> 00:00:55.520 align:start position:0%
out the normal equation method has some
advantages<00:00:53.730><c> and</c><00:00:53.789><c> some</c><00:00:53.969><c> disadvantages</c><00:00:54.530><c> but</c>

00:00:55.520 --> 00:00:55.530 align:start position:0%
advantages and some disadvantages but
 

00:00:55.530 --> 00:00:57.650 align:start position:0%
advantages and some disadvantages but
before<00:00:56.340><c> we</c><00:00:56.460><c> get</c><00:00:56.610><c> to</c><00:00:56.760><c> that</c><00:00:56.879><c> and</c><00:00:57.210><c> talk</c><00:00:57.449><c> about</c>

00:00:57.650 --> 00:00:57.660 align:start position:0%
before we get to that and talk about
 

00:00:57.660 --> 00:00:59.779 align:start position:0%
before we get to that and talk about
when<00:00:57.840><c> you</c><00:00:57.989><c> should</c><00:00:58.020><c> use</c><00:00:58.350><c> it</c><00:00:58.559><c> let's</c><00:00:59.190><c> get</c><00:00:59.520><c> some</c>

00:00:59.779 --> 00:00:59.789 align:start position:0%
when you should use it let's get some
 

00:00:59.789 --> 00:01:01.430 align:start position:0%
when you should use it let's get some
intuition<00:01:00.300><c> about</c><00:01:00.660><c> what</c><00:01:00.930><c> this</c><00:01:01.050><c> method</c><00:01:01.260><c> does</c>

00:01:01.430 --> 00:01:01.440 align:start position:0%
intuition about what this method does
 

00:01:01.440 --> 00:01:04.369 align:start position:0%
intuition about what this method does
for<00:01:02.309><c> this</c><00:01:02.489><c> explanatory</c><00:01:03.300><c> example</c><00:01:03.809><c> let's</c>

00:01:04.369 --> 00:01:04.379 align:start position:0%
for this explanatory example let's
 

00:01:04.379 --> 00:01:06.230 align:start position:0%
for this explanatory example let's
imagine<00:01:04.559><c> let's</c><00:01:05.309><c> take</c><00:01:05.460><c> a</c><00:01:05.489><c> very</c><00:01:05.790><c> simplified</c>

00:01:06.230 --> 00:01:06.240 align:start position:0%
imagine let's take a very simplified
 

00:01:06.240 --> 00:01:08.960 align:start position:0%
imagine let's take a very simplified
cost<00:01:06.869><c> function</c><00:01:07.290><c> J</c><00:01:07.500><c> of</c><00:01:07.530><c> theta</c><00:01:07.650><c> that's</c><00:01:08.490><c> just</c><00:01:08.880><c> a</c>

00:01:08.960 --> 00:01:08.970 align:start position:0%
cost function J of theta that's just a
 

00:01:08.970 --> 00:01:11.870 align:start position:0%
cost function J of theta that's just a
function<00:01:09.180><c> of</c><00:01:09.570><c> a</c><00:01:09.840><c> real</c><00:01:10.110><c> number</c><00:01:10.380><c> theta</c><00:01:11.189><c> so</c><00:01:11.670><c> for</c>

00:01:11.870 --> 00:01:11.880 align:start position:0%
function of a real number theta so for
 

00:01:11.880 --> 00:01:14.390 align:start position:0%
function of a real number theta so for
now<00:01:12.000><c> imagine</c><00:01:12.689><c> that</c><00:01:12.720><c> theta</c><00:01:13.170><c> is</c><00:01:13.590><c> just</c><00:01:13.920><c> a</c><00:01:14.010><c> scalar</c>

00:01:14.390 --> 00:01:14.400 align:start position:0%
now imagine that theta is just a scalar
 

00:01:14.400 --> 00:01:16.550 align:start position:0%
now imagine that theta is just a scalar
value<00:01:14.700><c> or</c><00:01:15.060><c> that</c><00:01:15.210><c> theta</c><00:01:15.450><c> is</c><00:01:15.780><c> just</c><00:01:15.990><c> a</c><00:01:16.080><c> real</c><00:01:16.259><c> value</c>

00:01:16.550 --> 00:01:16.560 align:start position:0%
value or that theta is just a real value
 

00:01:16.560 --> 00:01:18.760 align:start position:0%
value or that theta is just a real value
is<00:01:16.619><c> just</c><00:01:16.799><c> a</c><00:01:16.890><c> number</c><00:01:17.250><c> rather</c><00:01:17.520><c> than</c><00:01:17.700><c> a</c><00:01:17.880><c> vector</c>

00:01:18.760 --> 00:01:18.770 align:start position:0%
is just a number rather than a vector
 

00:01:18.770 --> 00:01:20.929 align:start position:0%
is just a number rather than a vector
imagine<00:01:19.770><c> that</c><00:01:19.920><c> we</c><00:01:20.009><c> have</c><00:01:20.100><c> a</c><00:01:20.130><c> cost</c><00:01:20.369><c> function</c><00:01:20.460><c> J</c>

00:01:20.929 --> 00:01:20.939 align:start position:0%
imagine that we have a cost function J
 

00:01:20.939 --> 00:01:22.760 align:start position:0%
imagine that we have a cost function J
there's<00:01:21.210><c> a</c><00:01:21.270><c> quadratic</c><00:01:21.750><c> function</c><00:01:22.020><c> of</c><00:01:22.530><c> this</c>

00:01:22.760 --> 00:01:22.770 align:start position:0%
there's a quadratic function of this
 

00:01:22.770 --> 00:01:25.999 align:start position:0%
there's a quadratic function of this
real<00:01:23.340><c> valued</c><00:01:23.930><c> parameter</c><00:01:24.930><c> theta</c><00:01:25.170><c> so</c><00:01:25.680><c> J</c><00:01:25.890><c> of</c>

00:01:25.999 --> 00:01:26.009 align:start position:0%
real valued parameter theta so J of
 

00:01:26.009 --> 00:01:28.370 align:start position:0%
real valued parameter theta so J of
theta<00:01:26.040><c> looks</c><00:01:26.460><c> like</c><00:01:26.610><c> that</c><00:01:26.810><c> well</c><00:01:27.810><c> how</c><00:01:28.229><c> do</c><00:01:28.290><c> you</c>

00:01:28.370 --> 00:01:28.380 align:start position:0%
theta looks like that well how do you
 

00:01:28.380 --> 00:01:30.770 align:start position:0%
theta looks like that well how do you
minimize<00:01:28.590><c> a</c><00:01:28.710><c> quadratic</c><00:01:28.890><c> function</c><00:01:29.600><c> for</c><00:01:30.600><c> those</c>

00:01:30.770 --> 00:01:30.780 align:start position:0%
minimize a quadratic function for those
 

00:01:30.780 --> 00:01:31.910 align:start position:0%
minimize a quadratic function for those
of<00:01:30.960><c> you</c><00:01:31.049><c> that</c><00:01:31.170><c> know</c><00:01:31.409><c> a</c><00:01:31.439><c> little</c><00:01:31.710><c> bit</c><00:01:31.799><c> of</c>

00:01:31.910 --> 00:01:31.920 align:start position:0%
of you that know a little bit of
 

00:01:31.920 --> 00:01:34.609 align:start position:0%
of you that know a little bit of
calculus<00:01:32.400><c> you</c><00:01:32.750><c> may</c><00:01:33.750><c> know</c><00:01:33.930><c> that</c><00:01:34.229><c> the</c><00:01:34.470><c> way</c><00:01:34.590><c> to</c>

00:01:34.609 --> 00:01:34.619 align:start position:0%
calculus you may know that the way to
 

00:01:34.619 --> 00:01:36.859 align:start position:0%
calculus you may know that the way to
minimize<00:01:35.040><c> a</c><00:01:35.189><c> function</c><00:01:35.369><c> is</c><00:01:36.000><c> to</c><00:01:36.270><c> take</c>

00:01:36.859 --> 00:01:36.869 align:start position:0%
minimize a function is to take
 

00:01:36.869 --> 00:01:40.700 align:start position:0%
minimize a function is to take
derivatives<00:01:37.500><c> and</c><00:01:37.710><c> to</c><00:01:38.900><c> set</c><00:01:39.900><c> diverters</c><00:01:40.439><c> equal</c>

00:01:40.700 --> 00:01:40.710 align:start position:0%
derivatives and to set diverters equal
 

00:01:40.710 --> 00:01:42.770 align:start position:0%
derivatives and to set diverters equal
to<00:01:40.829><c> 0</c><00:01:41.130><c> so</c><00:01:41.430><c> if</c><00:01:41.490><c> you</c><00:01:41.549><c> take</c><00:01:41.729><c> the</c><00:01:41.850><c> derivative</c><00:01:41.970><c> of</c><00:01:42.509><c> J</c>

00:01:42.770 --> 00:01:42.780 align:start position:0%
to 0 so if you take the derivative of J
 

00:01:42.780 --> 00:01:44.480 align:start position:0%
to 0 so if you take the derivative of J
with<00:01:43.049><c> respect</c><00:01:43.140><c> to</c><00:01:43.530><c> the</c><00:01:43.619><c> parameter</c><00:01:43.950><c> theta</c><00:01:44.130><c> you</c>

00:01:44.480 --> 00:01:44.490 align:start position:0%
with respect to the parameter theta you
 

00:01:44.490 --> 00:01:46.130 align:start position:0%
with respect to the parameter theta you
get<00:01:44.670><c> some</c><00:01:44.909><c> formula</c><00:01:45.420><c> which</c><00:01:45.630><c> I'm</c><00:01:45.750><c> not</c><00:01:45.869><c> going</c><00:01:46.020><c> to</c>

00:01:46.130 --> 00:01:46.140 align:start position:0%
get some formula which I'm not going to
 

00:01:46.140 --> 00:01:48.230 align:start position:0%
get some formula which I'm not going to
derive<00:01:46.380><c> and</c><00:01:46.799><c> then</c><00:01:47.369><c> you</c><00:01:47.549><c> set</c><00:01:47.820><c> that</c><00:01:48.000><c> derivative</c>

00:01:48.230 --> 00:01:48.240 align:start position:0%
derive and then you set that derivative
 

00:01:48.240 --> 00:01:52.240 align:start position:0%
derive and then you set that derivative
equal<00:01:48.899><c> to</c><00:01:48.930><c> 0</c><00:01:49.350><c> and</c><00:01:49.640><c> this</c><00:01:50.640><c> allows</c><00:01:50.939><c> you</c><00:01:51.210><c> to</c><00:01:51.720><c> solve</c>

00:01:52.240 --> 00:01:52.250 align:start position:0%
equal to 0 and this allows you to solve
 

00:01:52.250 --> 00:01:55.639 align:start position:0%
equal to 0 and this allows you to solve
for<00:01:53.250><c> the</c><00:01:53.939><c> value</c><00:01:54.299><c> of</c><00:01:54.360><c> theta</c><00:01:54.570><c> that</c><00:01:54.780><c> minimizes</c><00:01:55.110><c> J</c>

00:01:55.639 --> 00:01:55.649 align:start position:0%
for the value of theta that minimizes J
 

00:01:55.649 --> 00:01:58.819 align:start position:0%
for the value of theta that minimizes J
of<00:01:56.009><c> theta</c><00:01:56.659><c> that</c><00:01:57.659><c> was</c><00:01:57.780><c> the</c><00:01:57.930><c> simpler</c><00:01:58.290><c> case</c><00:01:58.320><c> of</c>

00:01:58.819 --> 00:01:58.829 align:start position:0%
of theta that was the simpler case of
 

00:01:58.829 --> 00:02:02.090 align:start position:0%
of theta that was the simpler case of
when<00:01:59.189><c> theta</c><00:01:59.549><c> is</c><00:01:59.880><c> just</c><00:01:59.909><c> a</c><00:02:00.180><c> real</c><00:02:00.360><c> number</c><00:02:00.570><c> in</c><00:02:01.100><c> the</c>

00:02:02.090 --> 00:02:02.100 align:start position:0%
when theta is just a real number in the
 

00:02:02.100 --> 00:02:04.190 align:start position:0%
when theta is just a real number in the
problem<00:02:02.520><c> that</c><00:02:02.670><c> we're</c><00:02:02.820><c> interested</c><00:02:03.030><c> in</c><00:02:03.420><c> theta</c>

00:02:04.190 --> 00:02:04.200 align:start position:0%
problem that we're interested in theta
 

00:02:04.200 --> 00:02:06.499 align:start position:0%
problem that we're interested in theta
is<00:02:04.680><c> no</c><00:02:04.890><c> longer</c><00:02:05.130><c> just</c><00:02:05.579><c> a</c><00:02:05.670><c> real</c><00:02:05.880><c> number</c><00:02:06.030><c> but</c>

00:02:06.499 --> 00:02:06.509 align:start position:0%
is no longer just a real number but
 

00:02:06.509 --> 00:02:09.070 align:start position:0%
is no longer just a real number but
instead<00:02:06.840><c> is</c><00:02:07.079><c> this</c><00:02:07.320><c> n</c><00:02:07.560><c> plus</c><00:02:07.590><c> 1</c><00:02:08.220><c> dimensional</c>

00:02:09.070 --> 00:02:09.080 align:start position:0%
instead is this n plus 1 dimensional
 

00:02:09.080 --> 00:02:13.420 align:start position:0%
instead is this n plus 1 dimensional
ramit<00:02:09.470><c> er</c><00:02:09.610><c> vector</c><00:02:10.610><c> and</c><00:02:10.870><c> a</c><00:02:11.870><c> cost</c><00:02:12.440><c> function</c><00:02:12.650><c> J</c><00:02:13.160><c> is</c>

00:02:13.420 --> 00:02:13.430 align:start position:0%
ramit er vector and a cost function J is
 

00:02:13.430 --> 00:02:16.240 align:start position:0%
ramit er vector and a cost function J is
a<00:02:13.490><c> function</c><00:02:13.640><c> of</c><00:02:14.270><c> this</c><00:02:14.570><c> vector</c><00:02:15.290><c> value</c><00:02:15.830><c> of</c><00:02:15.980><c> theta</c>

00:02:16.240 --> 00:02:16.250 align:start position:0%
a function of this vector value of theta
 

00:02:16.250 --> 00:02:18.610 align:start position:0%
a function of this vector value of theta
0<00:02:16.790><c> through</c><00:02:17.090><c> theta</c><00:02:17.180><c> M</c><00:02:17.720><c> and</c><00:02:18.110><c> the</c><00:02:18.290><c> cost</c><00:02:18.500><c> function</c>

00:02:18.610 --> 00:02:18.620 align:start position:0%
0 through theta M and the cost function
 

00:02:18.620 --> 00:02:20.560 align:start position:0%
0 through theta M and the cost function
looks<00:02:19.040><c> like</c><00:02:19.100><c> this</c><00:02:19.370><c> sum</c><00:02:19.970><c> square</c><00:02:20.270><c> cost</c><00:02:20.480><c> function</c>

00:02:20.560 --> 00:02:20.570 align:start position:0%
looks like this sum square cost function
 

00:02:20.570 --> 00:02:23.740 align:start position:0%
looks like this sum square cost function
on<00:02:21.020><c> the</c><00:02:21.110><c> right</c><00:02:22.000><c> how</c><00:02:23.000><c> do</c><00:02:23.060><c> we</c><00:02:23.150><c> minimize</c><00:02:23.360><c> this</c>

00:02:23.740 --> 00:02:23.750 align:start position:0%
on the right how do we minimize this
 

00:02:23.750 --> 00:02:26.710 align:start position:0%
on the right how do we minimize this
cost<00:02:23.930><c> function</c><00:02:24.080><c> J</c><00:02:24.940><c> calculus</c><00:02:25.940><c> actually</c><00:02:26.480><c> tells</c>

00:02:26.710 --> 00:02:26.720 align:start position:0%
cost function J calculus actually tells
 

00:02:26.720 --> 00:02:29.980 align:start position:0%
cost function J calculus actually tells
us<00:02:26.990><c> that</c><00:02:27.410><c> if</c><00:02:27.830><c> you</c><00:02:28.280><c> that</c><00:02:29.030><c> one</c><00:02:29.270><c> way</c><00:02:29.390><c> to</c><00:02:29.450><c> do</c><00:02:29.720><c> so</c><00:02:29.960><c> is</c>

00:02:29.980 --> 00:02:29.990 align:start position:0%
us that if you that one way to do so is
 

00:02:29.990 --> 00:02:32.770 align:start position:0%
us that if you that one way to do so is
to<00:02:30.260><c> take</c><00:02:30.770><c> the</c><00:02:30.920><c> partial</c><00:02:31.160><c> derivative</c><00:02:31.370><c> of</c><00:02:32.060><c> J</c><00:02:32.480><c> with</c>

00:02:32.770 --> 00:02:32.780 align:start position:0%
to take the partial derivative of J with
 

00:02:32.780 --> 00:02:35.710 align:start position:0%
to take the partial derivative of J with
respect<00:02:33.140><c> to</c><00:02:33.290><c> every</c><00:02:34.010><c> parameter</c><00:02:34.640><c> theta</c><00:02:35.120><c> J</c><00:02:35.300><c> in</c>

00:02:35.710 --> 00:02:35.720 align:start position:0%
respect to every parameter theta J in
 

00:02:35.720 --> 00:02:39.730 align:start position:0%
respect to every parameter theta J in
turn<00:02:35.960><c> and</c><00:02:36.290><c> then</c><00:02:37.190><c> to</c><00:02:37.550><c> set</c><00:02:38.300><c> all</c><00:02:38.540><c> of</c><00:02:38.570><c> these</c><00:02:38.840><c> 0</c><00:02:39.380><c> if</c>

00:02:39.730 --> 00:02:39.740 align:start position:0%
turn and then to set all of these 0 if
 

00:02:39.740 --> 00:02:42.190 align:start position:0%
turn and then to set all of these 0 if
you<00:02:40.130><c> do</c><00:02:40.310><c> that</c><00:02:40.490><c> and</c><00:02:40.820><c> you</c><00:02:41.030><c> solve</c><00:02:41.360><c> for</c><00:02:41.720><c> the</c><00:02:41.810><c> values</c>

00:02:42.190 --> 00:02:42.200 align:start position:0%
you do that and you solve for the values
 

00:02:42.200 --> 00:02:45.340 align:start position:0%
you do that and you solve for the values
of<00:02:42.410><c> theta</c><00:02:42.620><c> 0</c><00:02:42.980><c> theta</c><00:02:43.250><c> 1</c><00:02:43.400><c> up</c><00:02:43.760><c> to</c><00:02:43.970><c> theta</c><00:02:44.180><c> n</c><00:02:44.360><c> then</c>

00:02:45.340 --> 00:02:45.350 align:start position:0%
of theta 0 theta 1 up to theta n then
 

00:02:45.350 --> 00:02:47.320 align:start position:0%
of theta 0 theta 1 up to theta n then
this<00:02:45.650><c> will</c><00:02:45.860><c> give</c><00:02:46.040><c> you</c><00:02:46.250><c> the</c><00:02:46.400><c> values</c><00:02:46.820><c> of</c><00:02:47.060><c> theta</c>

00:02:47.320 --> 00:02:47.330 align:start position:0%
this will give you the values of theta
 

00:02:47.330 --> 00:02:50.320 align:start position:0%
this will give you the values of theta
that<00:02:47.690><c> minimize</c><00:02:48.080><c> the</c><00:02:48.110><c> cost</c><00:02:48.530><c> function</c><00:02:48.650><c> J</c><00:02:49.330><c> well</c>

00:02:50.320 --> 00:02:50.330 align:start position:0%
that minimize the cost function J well
 

00:02:50.330 --> 00:02:51.670 align:start position:0%
that minimize the cost function J well
if<00:02:50.510><c> you</c><00:02:50.660><c> actually</c><00:02:51.110><c> work</c><00:02:51.320><c> through</c><00:02:51.590><c> the</c>

00:02:51.670 --> 00:02:51.680 align:start position:0%
if you actually work through the
 

00:02:51.680 --> 00:02:53.920 align:start position:0%
if you actually work through the
calculus<00:02:51.860><c> and</c><00:02:52.760><c> work</c><00:02:53.030><c> through</c><00:02:53.390><c> the</c><00:02:53.750><c> solution</c>

00:02:53.920 --> 00:02:53.930 align:start position:0%
calculus and work through the solution
 

00:02:53.930 --> 00:02:55.780 align:start position:0%
calculus and work through the solution
to<00:02:54.410><c> the</c><00:02:54.500><c> parameters</c><00:02:54.950><c> theta</c><00:02:55.220><c> 0</c><00:02:55.550><c> through</c><00:02:55.700><c> theta</c>

00:02:55.780 --> 00:02:55.790 align:start position:0%
to the parameters theta 0 through theta
 

00:02:55.790 --> 00:02:59.500 align:start position:0%
to the parameters theta 0 through theta
n<00:02:56.090><c> the</c><00:02:56.959><c> derivation</c><00:02:57.790><c> ends</c><00:02:58.790><c> up</c><00:02:58.880><c> being</c><00:02:59.120><c> someone</c>

00:02:59.500 --> 00:02:59.510 align:start position:0%
n the derivation ends up being someone
 

00:02:59.510 --> 00:03:01.660 align:start position:0%
n the derivation ends up being someone
involved<00:03:00.050><c> and</c><00:03:00.230><c> what</c><00:03:00.740><c> I'm</c><00:03:00.860><c> going</c><00:03:01.040><c> to</c><00:03:01.160><c> do</c><00:03:01.340><c> in</c>

00:03:01.660 --> 00:03:01.670 align:start position:0%
involved and what I'm going to do in
 

00:03:01.670 --> 00:03:04.720 align:start position:0%
involved and what I'm going to do in
this<00:03:02.270><c> video</c><00:03:02.450><c> is</c><00:03:02.900><c> actually</c><00:03:03.680><c> do</c><00:03:04.040><c> not</c><00:03:04.250><c> go</c><00:03:04.520><c> through</c>

00:03:04.720 --> 00:03:04.730 align:start position:0%
this video is actually do not go through
 

00:03:04.730 --> 00:03:06.190 align:start position:0%
this video is actually do not go through
the<00:03:04.880><c> derivation</c><00:03:05.030><c> which</c><00:03:05.630><c> is</c><00:03:05.750><c> kind</c><00:03:05.959><c> of</c><00:03:06.050><c> long</c><00:03:06.170><c> and</c>

00:03:06.190 --> 00:03:06.200 align:start position:0%
the derivation which is kind of long and
 

00:03:06.200 --> 00:03:08.020 align:start position:0%
the derivation which is kind of long and
kind<00:03:06.440><c> of</c><00:03:06.560><c> involved</c><00:03:06.800><c> but</c><00:03:07.370><c> what</c><00:03:07.520><c> I</c><00:03:07.580><c> want</c><00:03:07.790><c> to</c><00:03:07.880><c> do</c>

00:03:08.020 --> 00:03:08.030 align:start position:0%
kind of involved but what I want to do
 

00:03:08.030 --> 00:03:10.090 align:start position:0%
kind of involved but what I want to do
is<00:03:08.330><c> just</c><00:03:08.690><c> tell</c><00:03:09.020><c> you</c><00:03:09.170><c> what</c><00:03:09.350><c> you</c><00:03:09.380><c> need</c><00:03:09.800><c> to</c><00:03:09.920><c> know</c>

00:03:10.090 --> 00:03:10.100 align:start position:0%
is just tell you what you need to know
 

00:03:10.100 --> 00:03:12.520 align:start position:0%
is just tell you what you need to know
in<00:03:10.370><c> order</c><00:03:10.820><c> to</c><00:03:11.000><c> implement</c><00:03:11.480><c> this</c><00:03:11.720><c> process</c><00:03:11.990><c> so</c>

00:03:12.520 --> 00:03:12.530 align:start position:0%
in order to implement this process so
 

00:03:12.530 --> 00:03:14.229 align:start position:0%
in order to implement this process so
that<00:03:12.650><c> you</c><00:03:12.680><c> can</c><00:03:12.860><c> solve</c><00:03:13.160><c> for</c><00:03:13.340><c> the</c><00:03:13.610><c> values</c><00:03:14.000><c> of</c><00:03:14.150><c> the</c>

00:03:14.229 --> 00:03:14.239 align:start position:0%
that you can solve for the values of the
 

00:03:14.239 --> 00:03:16.570 align:start position:0%
that you can solve for the values of the
Thetas<00:03:14.630><c> that</c><00:03:15.230><c> corresponds</c><00:03:15.739><c> to</c><00:03:15.890><c> where</c><00:03:16.370><c> the</c>

00:03:16.570 --> 00:03:16.580 align:start position:0%
Thetas that corresponds to where the
 

00:03:16.580 --> 00:03:19.210 align:start position:0%
Thetas that corresponds to where the
partial<00:03:16.910><c> derivative</c><00:03:17.420><c> is</c><00:03:17.570><c> equal</c><00:03:17.810><c> to</c><00:03:17.900><c> 0</c><00:03:18.230><c> or</c>

00:03:19.210 --> 00:03:19.220 align:start position:0%
partial derivative is equal to 0 or
 

00:03:19.220 --> 00:03:22.060 align:start position:0%
partial derivative is equal to 0 or
alternatively<00:03:20.090><c> or</c><00:03:20.510><c> equivalently</c><00:03:21.170><c> the</c><00:03:21.709><c> values</c>

00:03:22.060 --> 00:03:22.070 align:start position:0%
alternatively or equivalently the values
 

00:03:22.070 --> 00:03:23.800 align:start position:0%
alternatively or equivalently the values
of<00:03:22.220><c> Thetas</c><00:03:22.610><c> that</c><00:03:22.910><c> minimize</c><00:03:23.390><c> the</c><00:03:23.600><c> cost</c>

00:03:23.800 --> 00:03:23.810 align:start position:0%
of Thetas that minimize the cost
 

00:03:23.810 --> 00:03:26.710 align:start position:0%
of Thetas that minimize the cost
function<00:03:23.959><c> J</c><00:03:24.260><c> of</c><00:03:24.530><c> theta</c><00:03:24.560><c> and</c><00:03:25.130><c> I</c><00:03:26.060><c> realize</c><00:03:26.450><c> some</c>

00:03:26.710 --> 00:03:26.720 align:start position:0%
function J of theta and I realize some
 

00:03:26.720 --> 00:03:28.210 align:start position:0%
function J of theta and I realize some
of<00:03:26.780><c> the</c><00:03:26.840><c> comments</c><00:03:27.260><c> I</c><00:03:27.350><c> made</c><00:03:27.380><c> may</c><00:03:27.830><c> have</c><00:03:27.980><c> made</c>

00:03:28.210 --> 00:03:28.220 align:start position:0%
of the comments I made may have made
 

00:03:28.220 --> 00:03:29.770 align:start position:0%
of the comments I made may have made
more<00:03:28.430><c> sense</c><00:03:28.670><c> only</c><00:03:29.030><c> to</c><00:03:29.180><c> those</c><00:03:29.390><c> of</c><00:03:29.450><c> you</c><00:03:29.750><c> that</c>

00:03:29.770 --> 00:03:29.780 align:start position:0%
more sense only to those of you that
 

00:03:29.780 --> 00:03:32.320 align:start position:0%
more sense only to those of you that
know<00:03:30.080><c> more</c><00:03:30.260><c> familiar</c><00:03:30.620><c> calculus</c><00:03:31.190><c> so</c><00:03:31.790><c> but</c><00:03:32.239><c> if</c>

00:03:32.320 --> 00:03:32.330 align:start position:0%
know more familiar calculus so but if
 

00:03:32.330 --> 00:03:34.030 align:start position:0%
know more familiar calculus so but if
you<00:03:32.420><c> don't</c><00:03:32.600><c> know</c><00:03:32.930><c> if</c><00:03:33.500><c> you're</c><00:03:33.709><c> less</c><00:03:33.890><c> familiar</c>

00:03:34.030 --> 00:03:34.040 align:start position:0%
you don't know if you're less familiar
 

00:03:34.040 --> 00:03:36.160 align:start position:0%
you don't know if you're less familiar
of<00:03:34.400><c> calculus</c><00:03:34.880><c> don't</c><00:03:35.330><c> worry</c><00:03:35.450><c> about</c><00:03:35.600><c> it</c><00:03:35.959><c> I'm</c>

00:03:36.160 --> 00:03:36.170 align:start position:0%
of calculus don't worry about it I'm
 

00:03:36.170 --> 00:03:37.240 align:start position:0%
of calculus don't worry about it I'm
just<00:03:36.200><c> going</c><00:03:36.380><c> to</c><00:03:36.500><c> tell</c><00:03:36.650><c> you</c><00:03:36.739><c> what</c><00:03:36.890><c> you</c><00:03:36.980><c> need</c><00:03:37.130><c> to</c>

00:03:37.240 --> 00:03:37.250 align:start position:0%
just going to tell you what you need to
 

00:03:37.250 --> 00:03:39.130 align:start position:0%
just going to tell you what you need to
know<00:03:37.370><c> in</c><00:03:37.640><c> order</c><00:03:37.760><c> to</c><00:03:37.970><c> implement</c><00:03:38.930><c> this</c>

00:03:39.130 --> 00:03:39.140 align:start position:0%
know in order to implement this
 

00:03:39.140 --> 00:03:41.320 align:start position:0%
know in order to implement this
algorithm<00:03:39.410><c> and</c><00:03:39.830><c> get</c><00:03:39.950><c> it</c><00:03:40.070><c> to</c><00:03:40.190><c> work</c><00:03:40.310><c> for</c><00:03:40.610><c> the</c>

00:03:41.320 --> 00:03:41.330 align:start position:0%
algorithm and get it to work for the
 

00:03:41.330 --> 00:03:43.509 align:start position:0%
algorithm and get it to work for the
example<00:03:41.930><c> that</c><00:03:41.959><c> I</c><00:03:42.230><c> want</c><00:03:42.530><c> to</c><00:03:42.620><c> use</c><00:03:42.830><c> as</c><00:03:43.010><c> a</c><00:03:43.040><c> running</c>

00:03:43.509 --> 00:03:43.519 align:start position:0%
example that I want to use as a running
 

00:03:43.519 --> 00:03:47.259 align:start position:0%
example that I want to use as a running
example<00:03:43.900><c> let's</c><00:03:44.900><c> say</c><00:03:45.170><c> that</c><00:03:45.200><c> I</c><00:03:45.470><c> have</c><00:03:45.890><c> M</c><00:03:46.190><c> equals</c><00:03:46.880><c> 4</c>

00:03:47.259 --> 00:03:47.269 align:start position:0%
example let's say that I have M equals 4
 

00:03:47.269 --> 00:03:51.520 align:start position:0%
example let's say that I have M equals 4
training<00:03:48.200><c> examples</c><00:03:49.060><c> in</c><00:03:50.060><c> order</c><00:03:50.959><c> to</c><00:03:51.170><c> implement</c>

00:03:51.520 --> 00:03:51.530 align:start position:0%
training examples in order to implement
 

00:03:51.530 --> 00:03:54.910 align:start position:0%
training examples in order to implement
this<00:03:51.950><c> normal</c><00:03:52.730><c> equation</c><00:03:52.940><c> method</c><00:03:53.830><c> what</c><00:03:54.830><c> I'm</c>

00:03:54.910 --> 00:03:54.920 align:start position:0%
this normal equation method what I'm
 

00:03:54.920 --> 00:03:55.990 align:start position:0%
this normal equation method what I'm
going<00:03:55.100><c> to</c><00:03:55.130><c> do</c><00:03:55.310><c> is</c><00:03:55.430><c> the</c><00:03:55.580><c> following</c>

00:03:55.990 --> 00:03:56.000 align:start position:0%
going to do is the following
 

00:03:56.000 --> 00:03:58.390 align:start position:0%
going to do is the following
I'm<00:03:56.180><c> going</c><00:03:56.480><c> to</c><00:03:56.630><c> take</c><00:03:57.260><c> my</c><00:03:57.410><c> data</c><00:03:57.590><c> set</c><00:03:57.890><c> so</c><00:03:58.160><c> here</c>

00:03:58.390 --> 00:03:58.400 align:start position:0%
I'm going to take my data set so here
 

00:03:58.400 --> 00:04:00.100 align:start position:0%
I'm going to take my data set so here
here<00:03:58.670><c> are</c><00:03:58.730><c> my</c><00:03:58.850><c> four</c><00:03:58.910><c> training</c><00:03:59.150><c> examples</c><00:03:59.930><c> in</c>

00:04:00.100 --> 00:04:00.110 align:start position:0%
here are my four training examples in
 

00:04:00.110 --> 00:04:01.600 align:start position:0%
here are my four training examples in
this<00:04:00.200><c> case</c><00:04:00.410><c> let's</c><00:04:00.830><c> assume</c><00:04:01.100><c> that</c><00:04:01.250><c> you</c><00:04:01.580><c> know</c>

00:04:01.600 --> 00:04:01.610 align:start position:0%
this case let's assume that you know
 

00:04:01.610 --> 00:04:03.970 align:start position:0%
this case let's assume that you know
these<00:04:01.910><c> four</c><00:04:02.450><c> examples</c><00:04:02.870><c> is</c><00:04:03.260><c> all</c><00:04:03.500><c> the</c><00:04:03.620><c> data</c><00:04:03.830><c> I</c>

00:04:03.970 --> 00:04:03.980 align:start position:0%
these four examples is all the data I
 

00:04:03.980 --> 00:04:07.720 align:start position:0%
these four examples is all the data I
have<00:04:04.220><c> ok</c><00:04:04.900><c> what</c><00:04:05.900><c> I'm</c><00:04:05.989><c> going</c><00:04:06.170><c> to</c><00:04:06.200><c> do</c><00:04:06.410><c> is</c><00:04:06.709><c> take</c><00:04:07.580><c> my</c>

00:04:07.720 --> 00:04:07.730 align:start position:0%
have ok what I'm going to do is take my
 

00:04:07.730 --> 00:04:10.300 align:start position:0%
have ok what I'm going to do is take my
data<00:04:07.880><c> set</c><00:04:08.180><c> and</c><00:04:08.360><c> add</c><00:04:08.570><c> an</c><00:04:08.900><c> extra</c><00:04:09.230><c> column</c><00:04:09.560><c> that</c>

00:04:10.300 --> 00:04:10.310 align:start position:0%
data set and add an extra column that
 

00:04:10.310 --> 00:04:14.410 align:start position:0%
data set and add an extra column that
corresponds<00:04:10.880><c> to</c><00:04:11.180><c> my</c><00:04:11.510><c> extra</c><00:04:12.049><c> feature</c><00:04:13.010><c> x0</c><00:04:13.420><c> that</c>

00:04:14.410 --> 00:04:14.420 align:start position:0%
corresponds to my extra feature x0 that
 

00:04:14.420 --> 00:04:16.479 align:start position:0%
corresponds to my extra feature x0 that
still<00:04:14.870><c> always</c><00:04:15.140><c> takes</c><00:04:15.530><c> on</c><00:04:15.680><c> this</c><00:04:15.860><c> value</c><00:04:16.070><c> of</c><00:04:16.280><c> 1</c>

00:04:16.479 --> 00:04:16.489 align:start position:0%
still always takes on this value of 1
 

00:04:16.489 --> 00:04:19.060 align:start position:0%
still always takes on this value of 1
what<00:04:17.299><c> I'm</c><00:04:17.419><c> going</c><00:04:17.630><c> to</c><00:04:17.750><c> do</c><00:04:17.900><c> is</c><00:04:18.169><c> I'm</c><00:04:18.530><c> then</c><00:04:18.770><c> going</c>

00:04:19.060 --> 00:04:19.070 align:start position:0%
what I'm going to do is I'm then going
 

00:04:19.070 --> 00:04:21.340 align:start position:0%
what I'm going to do is I'm then going
to<00:04:19.160><c> construct</c><00:04:19.669><c> a</c><00:04:19.820><c> matrix</c><00:04:19.850><c> called</c><00:04:20.570><c> capital</c><00:04:21.140><c> X</c>

00:04:21.340 --> 00:04:21.350 align:start position:0%
to construct a matrix called capital X
 

00:04:21.350 --> 00:04:22.960 align:start position:0%
to construct a matrix called capital X
that's<00:04:22.250><c> a</c><00:04:22.490><c> major</c>

00:04:22.960 --> 00:04:22.970 align:start position:0%
that's a major
 

00:04:22.970 --> 00:04:25.660 align:start position:0%
that's a major
exactly<00:04:23.570><c> contains</c><00:04:23.960><c> all</c><00:04:24.290><c> of</c><00:04:24.350><c> the</c><00:04:24.890><c> features</c><00:04:25.460><c> for</c>

00:04:25.660 --> 00:04:25.670 align:start position:0%
exactly contains all of the features for
 

00:04:25.670 --> 00:04:29.230 align:start position:0%
exactly contains all of the features for
my<00:04:25.820><c> training</c><00:04:26.270><c> data</c><00:04:26.380><c> so</c><00:04:27.380><c> completely</c><00:04:28.120><c> here</c><00:04:29.120><c> is</c>

00:04:29.230 --> 00:04:29.240 align:start position:0%
my training data so completely here is
 

00:04:29.240 --> 00:04:33.280 align:start position:0%
my training data so completely here is
my<00:04:29.890><c> here</c><00:04:30.890><c> all</c><00:04:31.130><c> my</c><00:04:31.370><c> features</c><00:04:32.020><c> I'm</c><00:04:33.020><c> going</c><00:04:33.200><c> to</c>

00:04:33.280 --> 00:04:33.290 align:start position:0%
my here all my features I'm going to
 

00:04:33.290 --> 00:04:35.350 align:start position:0%
my here all my features I'm going to
take<00:04:33.440><c> all</c><00:04:33.620><c> those</c><00:04:33.800><c> numbers</c><00:04:34.220><c> and</c><00:04:34.520><c> put</c><00:04:34.850><c> them</c><00:04:35.090><c> into</c>

00:04:35.350 --> 00:04:35.360 align:start position:0%
take all those numbers and put them into
 

00:04:35.360 --> 00:04:38.650 align:start position:0%
take all those numbers and put them into
this<00:04:36.230><c> matrix</c><00:04:36.500><c> X</c><00:04:37.010><c> ok</c><00:04:37.340><c> so</c><00:04:37.370><c> just</c><00:04:38.120><c> you</c><00:04:38.240><c> know</c><00:04:38.270><c> copy</c>

00:04:38.650 --> 00:04:38.660 align:start position:0%
this matrix X ok so just you know copy
 

00:04:38.660 --> 00:04:42.540 align:start position:0%
this matrix X ok so just you know copy
the<00:04:38.960><c> data</c><00:04:39.170><c> over</c><00:04:39.470><c> one</c><00:04:40.430><c> column</c><00:04:40.730><c> at</c><00:04:41.090><c> a</c><00:04:41.120><c> time</c><00:04:41.210><c> and</c>

00:04:42.540 --> 00:04:42.550 align:start position:0%
the data over one column at a time and
 

00:04:42.550 --> 00:04:44.590 align:start position:0%
the data over one column at a time and
then<00:04:43.550><c> I'm</c><00:04:43.760><c> going</c><00:04:43.880><c> to</c><00:04:43.940><c> do</c><00:04:44.090><c> something</c><00:04:44.420><c> similar</c>

00:04:44.590 --> 00:04:44.600 align:start position:0%
then I'm going to do something similar
 

00:04:44.600 --> 00:04:46.300 align:start position:0%
then I'm going to do something similar
for<00:04:44.720><c> for</c><00:04:45.200><c> Y</c><00:04:45.350><c> so</c><00:04:45.590><c> I'm</c><00:04:45.650><c> going</c><00:04:45.770><c> to</c><00:04:45.800><c> take</c><00:04:46.010><c> the</c>

00:04:46.300 --> 00:04:46.310 align:start position:0%
for for Y so I'm going to take the
 

00:04:46.310 --> 00:04:47.710 align:start position:0%
for for Y so I'm going to take the
values<00:04:46.700><c> I'm</c><00:04:46.850><c> trying</c><00:04:47.060><c> to</c><00:04:47.120><c> predict</c><00:04:47.450><c> and</c>

00:04:47.710 --> 00:04:47.720 align:start position:0%
values I'm trying to predict and
 

00:04:47.720 --> 00:04:52.870 align:start position:0%
values I'm trying to predict and
construct<00:04:48.710><c> now</c><00:04:49.040><c> a</c><00:04:49.070><c> vector</c><00:04:50.380><c> like</c><00:04:51.380><c> so</c><00:04:51.440><c> and</c><00:04:52.010><c> call</c>

00:04:52.870 --> 00:04:52.880 align:start position:0%
construct now a vector like so and call
 

00:04:52.880 --> 00:04:59.670 align:start position:0%
construct now a vector like so and call
that<00:04:53.030><c> a</c><00:04:53.090><c> vector</c><00:04:53.630><c> Y</c><00:04:53.840><c> so</c><00:04:54.820><c> X</c><00:04:55.820><c> is</c><00:04:56.240><c> going</c><00:04:56.660><c> to</c><00:04:56.780><c> be</c><00:04:56.990><c> a</c><00:04:58.450><c> M</c>

00:04:59.670 --> 00:04:59.680 align:start position:0%
that a vector Y so X is going to be a M
 

00:04:59.680 --> 00:05:06.100 align:start position:0%
that a vector Y so X is going to be a M
by<00:05:00.820><c> n</c><00:05:02.020><c> plus</c><00:05:03.020><c> 1</c><00:05:03.260><c> dimensional</c><00:05:03.950><c> matrix</c><00:05:04.370><c> and</c><00:05:04.660><c> Y</c><00:05:05.660><c> is</c>

00:05:06.100 --> 00:05:06.110 align:start position:0%
by n plus 1 dimensional matrix and Y is
 

00:05:06.110 --> 00:05:14.230 align:start position:0%
by n plus 1 dimensional matrix and Y is
going<00:05:06.620><c> to</c><00:05:06.830><c> be</c><00:05:07.010><c> a</c><00:05:07.690><c> M</c><00:05:09.550><c> dimensional</c><00:05:10.550><c> vector</c><00:05:13.240><c> where</c>

00:05:14.230 --> 00:05:14.240 align:start position:0%
going to be a M dimensional vector where
 

00:05:14.240 --> 00:05:16.180 align:start position:0%
going to be a M dimensional vector where
m<00:05:14.450><c> is</c><00:05:14.480><c> the</c><00:05:14.780><c> number</c><00:05:14.960><c> of</c><00:05:15.200><c> training</c><00:05:15.530><c> examples</c><00:05:15.560><c> and</c>

00:05:16.180 --> 00:05:16.190 align:start position:0%
m is the number of training examples and
 

00:05:16.190 --> 00:05:19.360 align:start position:0%
m is the number of training examples and
n<00:05:16.640><c> is</c><00:05:17.150><c> n</c><00:05:17.840><c> is</c><00:05:18.260><c> the</c><00:05:18.410><c> number</c><00:05:18.530><c> of</c><00:05:18.680><c> features</c><00:05:18.890><c> I</c><00:05:19.130><c> have</c>

00:05:19.360 --> 00:05:19.370 align:start position:0%
n is n is the number of features I have
 

00:05:19.370 --> 00:05:21.490 align:start position:0%
n is n is the number of features I have
n<00:05:19.520><c> plus</c><00:05:19.700><c> 1</c><00:05:19.910><c> because</c><00:05:20.060><c> of</c><00:05:20.330><c> this</c><00:05:20.419><c> extra</c><00:05:20.900><c> feature</c>

00:05:21.490 --> 00:05:21.500 align:start position:0%
n plus 1 because of this extra feature
 

00:05:21.500 --> 00:05:26.200 align:start position:0%
n plus 1 because of this extra feature
x0<00:05:21.800><c> that</c><00:05:22.250><c> I</c><00:05:22.490><c> had</c><00:05:23.710><c> finally</c><00:05:24.710><c> if</c><00:05:25.190><c> you</c><00:05:25.820><c> take</c><00:05:26.060><c> your</c>

00:05:26.200 --> 00:05:26.210 align:start position:0%
x0 that I had finally if you take your
 

00:05:26.210 --> 00:05:27.970 align:start position:0%
x0 that I had finally if you take your
matrix<00:05:26.540><c> action</c><00:05:26.900><c> you</c><00:05:26.960><c> take</c><00:05:27.080><c> your</c><00:05:27.230><c> vector</c><00:05:27.470><c> Y</c><00:05:27.650><c> and</c>

00:05:27.970 --> 00:05:27.980 align:start position:0%
matrix action you take your vector Y and
 

00:05:27.980 --> 00:05:30.940 align:start position:0%
matrix action you take your vector Y and
if<00:05:28.130><c> you</c><00:05:28.220><c> just</c><00:05:28.370><c> compute</c><00:05:28.730><c> this</c><00:05:29.120><c> and</c><00:05:29.710><c> set</c><00:05:30.710><c> theta</c>

00:05:30.940 --> 00:05:30.950 align:start position:0%
if you just compute this and set theta
 

00:05:30.950 --> 00:05:33.250 align:start position:0%
if you just compute this and set theta
to<00:05:31.340><c> be</c><00:05:31.460><c> equal</c><00:05:31.490><c> to</c><00:05:31.760><c> X</c><00:05:32.240><c> transpose</c><00:05:32.450><c> X</c><00:05:33.020><c> inverse</c>

00:05:33.250 --> 00:05:33.260 align:start position:0%
to be equal to X transpose X inverse
 

00:05:33.260 --> 00:05:36.700 align:start position:0%
to be equal to X transpose X inverse
times<00:05:34.100><c> X</c><00:05:34.400><c> transpose</c><00:05:34.610><c> Y</c><00:05:35.150><c> this</c><00:05:36.080><c> will</c><00:05:36.350><c> give</c><00:05:36.530><c> you</c>

00:05:36.700 --> 00:05:36.710 align:start position:0%
times X transpose Y this will give you
 

00:05:36.710 --> 00:05:39.159 align:start position:0%
times X transpose Y this will give you
the<00:05:36.890><c> value</c><00:05:37.340><c> of</c><00:05:37.610><c> theta</c><00:05:37.820><c> that</c><00:05:38.270><c> minimizes</c><00:05:38.540><c> your</c>

00:05:39.159 --> 00:05:39.169 align:start position:0%
the value of theta that minimizes your
 

00:05:39.169 --> 00:05:42.730 align:start position:0%
the value of theta that minimizes your
cost<00:05:39.380><c> function</c><00:05:41.320><c> there</c><00:05:42.320><c> was</c><00:05:42.440><c> a</c><00:05:42.470><c> lot</c><00:05:42.710><c> that</c>

00:05:42.730 --> 00:05:42.740 align:start position:0%
cost function there was a lot that
 

00:05:42.740 --> 00:05:44.620 align:start position:0%
cost function there was a lot that
happened<00:05:42.919><c> on</c><00:05:43.400><c> the</c><00:05:43.580><c> slide</c><00:05:43.820><c> and</c><00:05:44.090><c> I</c><00:05:44.180><c> work</c><00:05:44.390><c> through</c>

00:05:44.620 --> 00:05:44.630 align:start position:0%
happened on the slide and I work through
 

00:05:44.630 --> 00:05:46.630 align:start position:0%
happened on the slide and I work through
it<00:05:44.750><c> using</c><00:05:44.990><c> one</c><00:05:45.410><c> specific</c><00:05:45.890><c> example</c><00:05:46.010><c> of</c><00:05:46.430><c> one</c>

00:05:46.630 --> 00:05:46.640 align:start position:0%
it using one specific example of one
 

00:05:46.640 --> 00:05:48.940 align:start position:0%
it using one specific example of one
data<00:05:46.880><c> set</c><00:05:47.180><c> let</c><00:05:47.780><c> me</c><00:05:47.870><c> just</c><00:05:48.050><c> write</c><00:05:48.200><c> this</c><00:05:48.260><c> out</c><00:05:48.590><c> in</c><00:05:48.620><c> a</c>

00:05:48.940 --> 00:05:48.950 align:start position:0%
data set let me just write this out in a
 

00:05:48.950 --> 00:05:51.580 align:start position:0%
data set let me just write this out in a
slightly<00:05:49.280><c> more</c><00:05:49.550><c> general</c><00:05:49.820><c> form</c><00:05:50.390><c> and</c><00:05:50.630><c> then</c><00:05:51.410><c> let</c>

00:05:51.580 --> 00:05:51.590 align:start position:0%
slightly more general form and then let
 

00:05:51.590 --> 00:05:53.860 align:start position:0%
slightly more general form and then let
me<00:05:51.680><c> just</c><00:05:51.890><c> and</c><00:05:52.070><c> later</c><00:05:52.580><c> on</c><00:05:52.820><c> in</c><00:05:53.060><c> this</c><00:05:53.240><c> video</c><00:05:53.419><c> let</c>

00:05:53.860 --> 00:05:53.870 align:start position:0%
me just and later on in this video let
 

00:05:53.870 --> 00:05:55.990 align:start position:0%
me just and later on in this video let
me<00:05:53.900><c> explain</c><00:05:54.350><c> this</c><00:05:54.560><c> equation</c><00:05:55.400><c> a</c><00:05:55.550><c> little</c><00:05:55.760><c> bit</c>

00:05:55.990 --> 00:05:56.000 align:start position:0%
me explain this equation a little bit
 

00:05:56.000 --> 00:05:57.909 align:start position:0%
me explain this equation a little bit
more<00:05:56.210><c> in</c><00:05:56.419><c> case</c><00:05:56.630><c> um</c><00:05:56.870><c> is</c><00:05:57.110><c> not</c><00:05:57.140><c> yet</c><00:05:57.560><c> entirely</c>

00:05:57.909 --> 00:05:57.919 align:start position:0%
more in case um is not yet entirely
 

00:05:57.919 --> 00:06:01.210 align:start position:0%
more in case um is not yet entirely
clear<00:05:58.340><c> how</c><00:05:58.790><c> to</c><00:05:58.820><c> do</c><00:05:59.120><c> this</c><00:05:59.300><c> in</c><00:05:59.590><c> the</c><00:06:00.590><c> general</c><00:06:00.770><c> case</c>

00:06:01.210 --> 00:06:01.220 align:start position:0%
clear how to do this in the general case
 

00:06:01.220 --> 00:06:03.880 align:start position:0%
clear how to do this in the general case
let's<00:06:01.700><c> say</c><00:06:01.880><c> we</c><00:06:02.060><c> have</c><00:06:02.300><c> M</c><00:06:02.540><c> training</c><00:06:02.870><c> examples</c><00:06:03.140><c> so</c>

00:06:03.880 --> 00:06:03.890 align:start position:0%
let's say we have M training examples so
 

00:06:03.890 --> 00:06:09.219 align:start position:0%
let's say we have M training examples so
it's<00:06:04.190><c> 1</c><00:06:04.370><c> y</c><00:06:04.520><c> 1</c><00:06:04.550><c> up</c><00:06:05.120><c> to</c><00:06:05.360><c> XM</c><00:06:05.780><c> ym</c><00:06:06.380><c> and</c><00:06:06.650><c> n</c><00:06:07.160><c> features</c><00:06:08.229><c> so</c>

00:06:09.219 --> 00:06:09.229 align:start position:0%
it's 1 y 1 up to XM ym and n features so
 

00:06:09.229 --> 00:06:11.170 align:start position:0%
it's 1 y 1 up to XM ym and n features so
each<00:06:09.560><c> of</c><00:06:09.590><c> my</c><00:06:09.740><c> training</c><00:06:10.130><c> examples</c><00:06:10.520><c> X</c><00:06:10.729><c> I</c><00:06:10.940><c> may</c>

00:06:11.170 --> 00:06:11.180 align:start position:0%
each of my training examples X I may
 

00:06:11.180 --> 00:06:13.570 align:start position:0%
each of my training examples X I may
look<00:06:11.360><c> like</c><00:06:11.560><c> vector</c><00:06:12.560><c> like</c><00:06:12.710><c> this</c><00:06:12.740><c> there's</c><00:06:13.250><c> an</c><00:06:13.370><c> N</c>

00:06:13.570 --> 00:06:13.580 align:start position:0%
look like vector like this there's an N
 

00:06:13.580 --> 00:06:17.020 align:start position:0%
look like vector like this there's an N
plus<00:06:13.640><c> 1</c><00:06:13.970><c> dimensional</c><00:06:14.630><c> feature</c><00:06:14.870><c> vector</c><00:06:16.030><c> the</c>

00:06:17.020 --> 00:06:17.030 align:start position:0%
plus 1 dimensional feature vector the
 

00:06:17.030 --> 00:06:19.290 align:start position:0%
plus 1 dimensional feature vector the
way<00:06:17.210><c> I'm</c><00:06:17.330><c> going</c><00:06:17.479><c> to</c><00:06:17.540><c> construct</c><00:06:17.990><c> the</c><00:06:18.169><c> matrix</c><00:06:18.200><c> X</c>

00:06:19.290 --> 00:06:19.300 align:start position:0%
way I'm going to construct the matrix X
 

00:06:19.300 --> 00:06:24.460 align:start position:0%
way I'm going to construct the matrix X
this<00:06:20.300><c> is</c><00:06:20.479><c> also</c><00:06:20.660><c> called</c><00:06:21.169><c> the</c><00:06:21.290><c> design</c><00:06:22.040><c> matrix</c><00:06:23.470><c> is</c>

00:06:24.460 --> 00:06:24.470 align:start position:0%
this is also called the design matrix is
 

00:06:24.470 --> 00:06:28.390 align:start position:0%
this is also called the design matrix is
as<00:06:24.800><c> follows</c><00:06:25.479><c> each</c><00:06:26.479><c> training</c><00:06:27.350><c> example</c><00:06:27.500><c> gives</c>

00:06:28.390 --> 00:06:28.400 align:start position:0%
as follows each training example gives
 

00:06:28.400 --> 00:06:30.520 align:start position:0%
as follows each training example gives
me<00:06:28.580><c> a</c><00:06:28.610><c> feature</c><00:06:29.120><c> vector</c><00:06:29.270><c> like</c><00:06:29.750><c> this</c><00:06:29.960><c> that</c><00:06:30.290><c> say</c>

00:06:30.520 --> 00:06:30.530 align:start position:0%
me a feature vector like this that say
 

00:06:30.530 --> 00:06:33.870 align:start position:0%
me a feature vector like this that say
this<00:06:31.310><c> sort</c><00:06:31.490><c> of</c><00:06:31.580><c> n</c><00:06:31.820><c> plus</c><00:06:32.030><c> 1</c><00:06:32.270><c> dimensional</c><00:06:32.900><c> vector</c>

00:06:33.870 --> 00:06:33.880 align:start position:0%
this sort of n plus 1 dimensional vector
 

00:06:33.880 --> 00:06:35.830 align:start position:0%
this sort of n plus 1 dimensional vector
the<00:06:34.880><c> way</c><00:06:35.030><c> we're</c><00:06:35.150><c> going</c><00:06:35.240><c> to</c><00:06:35.330><c> construct</c><00:06:35.660><c> my</c>

00:06:35.830 --> 00:06:35.840 align:start position:0%
the way we're going to construct my
 

00:06:35.840 --> 00:06:37.750 align:start position:0%
the way we're going to construct my
design<00:06:36.230><c> matrix</c><00:06:36.380><c> X</c><00:06:36.860><c> is</c><00:06:37.070><c> only</c><00:06:37.220><c> construct</c><00:06:37.670><c> a</c>

00:06:37.750 --> 00:06:37.760 align:start position:0%
design matrix X is only construct a
 

00:06:37.760 --> 00:06:40.360 align:start position:0%
design matrix X is only construct a
matrix<00:06:38.090><c> like</c><00:06:38.180><c> this</c><00:06:38.330><c> and</c><00:06:39.040><c> what</c><00:06:40.040><c> I'm</c><00:06:40.160><c> going</c><00:06:40.310><c> to</c>

00:06:40.360 --> 00:06:40.370 align:start position:0%
matrix like this and what I'm going to
 

00:06:40.370 --> 00:06:43.120 align:start position:0%
matrix like this and what I'm going to
do<00:06:40.580><c> is</c><00:06:40.910><c> take</c><00:06:41.240><c> the</c><00:06:41.360><c> first</c><00:06:41.570><c> training</c><00:06:41.960><c> example</c><00:06:42.130><c> so</c>

00:06:43.120 --> 00:06:43.130 align:start position:0%
do is take the first training example so
 

00:06:43.130 --> 00:06:46.150 align:start position:0%
do is take the first training example so
that's<00:06:43.310><c> a</c><00:06:43.490><c> vector</c><00:06:43.870><c> take</c><00:06:44.870><c> us</c><00:06:45.020><c> transpose</c><00:06:45.680><c> so</c><00:06:46.100><c> it</c>

00:06:46.150 --> 00:06:46.160 align:start position:0%
that's a vector take us transpose so it
 

00:06:46.160 --> 00:06:48.430 align:start position:0%
that's a vector take us transpose so it
ends<00:06:46.400><c> up</c><00:06:46.490><c> being</c><00:06:47.180><c> this</c><00:06:47.390><c> you</c><00:06:47.720><c> know</c><00:06:47.780><c> long</c><00:06:48.050><c> flat</c>

00:06:48.430 --> 00:06:48.440 align:start position:0%
ends up being this you know long flat
 

00:06:48.440 --> 00:06:52.270 align:start position:0%
ends up being this you know long flat
thing<00:06:48.770><c> and</c><00:06:49.090><c> make</c><00:06:50.090><c> X</c><00:06:50.360><c> 1</c><00:06:50.840><c> transpose</c><00:06:51.080><c> the</c><00:06:51.950><c> first</c>

00:06:52.270 --> 00:06:52.280 align:start position:0%
thing and make X 1 transpose the first
 

00:06:52.280 --> 00:06:55.210 align:start position:0%
thing and make X 1 transpose the first
row<00:06:52.580><c> of</c><00:06:52.610><c> my</c><00:06:53.030><c> design</c><00:06:53.360><c> matrix</c><00:06:53.540><c> X</c><00:06:53.950><c> then</c><00:06:54.950><c> I'm</c><00:06:55.100><c> going</c>

00:06:55.210 --> 00:06:55.220 align:start position:0%
row of my design matrix X then I'm going
 

00:06:55.220 --> 00:06:57.550 align:start position:0%
row of my design matrix X then I'm going
to<00:06:55.280><c> take</c><00:06:55.460><c> my</c><00:06:55.610><c> second</c><00:06:55.970><c> training</c><00:06:56.180><c> example</c><00:06:56.560><c> x2</c>

00:06:57.550 --> 00:06:57.560 align:start position:0%
to take my second training example x2
 

00:06:57.560 --> 00:07:00.550 align:start position:0%
to take my second training example x2
take<00:06:58.430><c> the</c><00:06:58.580><c> transpose</c><00:06:59.060><c> of</c><00:06:59.090><c> that</c><00:06:59.270><c> and</c><00:06:59.750><c> put</c><00:07:00.380><c> that</c>

00:07:00.550 --> 00:07:00.560 align:start position:0%
take the transpose of that and put that
 

00:07:00.560 --> 00:07:03.910 align:start position:0%
take the transpose of that and put that
as<00:07:00.740><c> a</c><00:07:00.770><c> second</c><00:07:01.280><c> row</c><00:07:01.430><c> of</c><00:07:01.580><c> X</c><00:07:01.730><c> and</c><00:07:02.030><c> so</c><00:07:03.020><c> on</c><00:07:03.050><c> down</c>

00:07:03.910 --> 00:07:03.920 align:start position:0%
as a second row of X and so on down
 

00:07:03.920 --> 00:07:07.120 align:start position:0%
as a second row of X and so on down
until<00:07:04.220><c> my</c><00:07:04.730><c> last</c><00:07:05.000><c> training</c><00:07:05.510><c> example</c><00:07:06.110><c> take</c><00:07:07.010><c> the</c>

00:07:07.120 --> 00:07:07.130 align:start position:0%
until my last training example take the
 

00:07:07.130 --> 00:07:09.790 align:start position:0%
until my last training example take the
transpose<00:07:07.580><c> of</c><00:07:07.610><c> that</c><00:07:07.940><c> and</c><00:07:08.270><c> that's</c><00:07:08.930><c> my</c><00:07:09.200><c> last</c><00:07:09.440><c> row</c>

00:07:09.790 --> 00:07:09.800 align:start position:0%
transpose of that and that's my last row
 

00:07:09.800 --> 00:07:12.940 align:start position:0%
transpose of that and that's my last row
of<00:07:10.070><c> my</c><00:07:10.310><c> matrix</c><00:07:10.340><c> X</c><00:07:10.910><c> and</c><00:07:11.260><c> so</c><00:07:12.260><c> this</c><00:07:12.500><c> makes</c><00:07:12.770><c> my</c>

00:07:12.940 --> 00:07:12.950 align:start position:0%
of my matrix X and so this makes my
 

00:07:12.950 --> 00:07:17.680 align:start position:0%
of my matrix X and so this makes my
matrix<00:07:13.340><c> X</c><00:07:13.610><c> and</c><00:07:13.880><c> M</c><00:07:14.180><c> by</c><00:07:14.990><c> n</c><00:07:15.320><c> plus</c><00:07:15.950><c> 1</c><00:07:16.690><c> dimensional</c>

00:07:17.680 --> 00:07:17.690 align:start position:0%
matrix X and M by n plus 1 dimensional
 

00:07:17.690 --> 00:07:21.670 align:start position:0%
matrix X and M by n plus 1 dimensional
matrix<00:07:18.100><c> as</c><00:07:19.100><c> a</c><00:07:19.610><c> concrete</c><00:07:19.940><c> example</c><00:07:20.230><c> let's</c><00:07:21.230><c> say</c><00:07:21.470><c> I</c>

00:07:21.670 --> 00:07:21.680 align:start position:0%
matrix as a concrete example let's say I
 

00:07:21.680 --> 00:07:24.340 align:start position:0%
matrix as a concrete example let's say I
have<00:07:22.010><c> only</c><00:07:22.460><c> one</c><00:07:22.850><c> feature</c><00:07:23.150><c> really</c><00:07:23.720><c> only</c><00:07:24.140><c> one</c>

00:07:24.340 --> 00:07:24.350 align:start position:0%
have only one feature really only one
 

00:07:24.350 --> 00:07:26.740 align:start position:0%
have only one feature really only one
feature<00:07:24.620><c> other</c><00:07:24.980><c> than</c><00:07:25.250><c> X</c><00:07:25.580><c> 0</c><00:07:26.120><c> which</c><00:07:26.360><c> is</c><00:07:26.480><c> always</c>

00:07:26.740 --> 00:07:26.750 align:start position:0%
feature other than X 0 which is always
 

00:07:26.750 --> 00:07:29.650 align:start position:0%
feature other than X 0 which is always
equal<00:07:26.870><c> to</c><00:07:26.990><c> 1</c><00:07:27.200><c> so</c><00:07:28.040><c> if</c><00:07:28.400><c> my</c><00:07:28.640><c> features</c><00:07:29.090><c> feature</c>

00:07:29.650 --> 00:07:29.660 align:start position:0%
equal to 1 so if my features feature
 

00:07:29.660 --> 00:07:32.560 align:start position:0%
equal to 1 so if my features feature
vectors<00:07:30.110><c> X</c><00:07:30.320><c> I</c><00:07:30.530><c> are</c><00:07:30.800><c> equal</c><00:07:31.370><c> to</c><00:07:31.580><c> this</c><00:07:31.790><c> 1</c><00:07:32.240><c> which</c><00:07:32.540><c> is</c>

00:07:32.560 --> 00:07:32.570 align:start position:0%
vectors X I are equal to this 1 which is
 

00:07:32.570 --> 00:07:34.690 align:start position:0%
vectors X I are equal to this 1 which is
x0<00:07:32.720><c> and</c><00:07:33.470><c> then</c><00:07:33.500><c> you</c><00:07:33.770><c> know</c><00:07:33.890><c> some</c><00:07:34.130><c> real</c><00:07:34.340><c> feature</c>

00:07:34.690 --> 00:07:34.700 align:start position:0%
x0 and then you know some real feature
 

00:07:34.700 --> 00:07:37.330 align:start position:0%
x0 and then you know some real feature
like<00:07:34.970><c> maybe</c><00:07:35.180><c> the</c><00:07:35.360><c> size</c><00:07:35.570><c> of</c><00:07:35.720><c> the</c><00:07:35.780><c> house</c><00:07:36.100><c> then</c><00:07:37.100><c> my</c>

00:07:37.330 --> 00:07:37.340 align:start position:0%
like maybe the size of the house then my
 

00:07:37.340 --> 00:07:40.180 align:start position:0%
like maybe the size of the house then my
design<00:07:37.760><c> matrix</c><00:07:37.940><c> X</c><00:07:38.360><c> would</c><00:07:38.990><c> be</c><00:07:39.020><c> equal</c><00:07:39.140><c> to</c><00:07:39.650><c> this</c>

00:07:40.180 --> 00:07:40.190 align:start position:0%
design matrix X would be equal to this
 

00:07:40.190 --> 00:07:43.090 align:start position:0%
design matrix X would be equal to this
for<00:07:40.610><c> the</c><00:07:40.700><c> first</c><00:07:40.730><c> row</c><00:07:41.330><c> I'm</c><00:07:41.780><c> going</c><00:07:42.200><c> to</c><00:07:42.440><c> you</c><00:07:43.040><c> know</c>

00:07:43.090 --> 00:07:43.100 align:start position:0%
for the first row I'm going to you know
 

00:07:43.100 --> 00:07:45.070 align:start position:0%
for the first row I'm going to you know
basically<00:07:43.340><c> take</c><00:07:44.150><c> this</c><00:07:44.360><c> and</c><00:07:44.690><c> take</c><00:07:44.930><c> this</c>

00:07:45.070 --> 00:07:45.080 align:start position:0%
basically take this and take this
 

00:07:45.080 --> 00:07:47.530 align:start position:0%
basically take this and take this
transpose<00:07:45.710><c> so</c><00:07:46.400><c> I'm</c><00:07:46.490><c> going</c><00:07:46.730><c> to</c><00:07:46.760><c> end</c><00:07:46.910><c> up</c><00:07:47.030><c> with</c><00:07:47.180><c> 1</c>

00:07:47.530 --> 00:07:47.540 align:start position:0%
transpose so I'm going to end up with 1
 

00:07:47.540 --> 00:07:52.060 align:start position:0%
transpose so I'm going to end up with 1
and<00:07:47.840><c> then</c><00:07:47.870><c> I'm</c><00:07:49.480><c> x11</c><00:07:50.480><c> for</c><00:07:51.440><c> the</c><00:07:51.530><c> second</c><00:07:51.800><c> row</c><00:07:51.920><c> go</c>

00:07:52.060 --> 00:07:52.070 align:start position:0%
and then I'm x11 for the second row go
 

00:07:52.070 --> 00:07:57.100 align:start position:0%
and then I'm x11 for the second row go
negative<00:07:52.430><c> 1</c><00:07:52.670><c> and</c><00:07:52.940><c> then</c><00:07:53.240><c> X</c><00:07:53.510><c> 1</c><00:07:54.370><c> 2</c><00:07:55.370><c> and</c><00:07:55.700><c> so</c><00:07:56.300><c> on</c><00:07:56.510><c> down</c>

00:07:57.100 --> 00:07:57.110 align:start position:0%
negative 1 and then X 1 2 and so on down
 

00:07:57.110 --> 00:08:01.960 align:start position:0%
negative 1 and then X 1 2 and so on down
to<00:07:57.170><c> 1</c><00:07:57.590><c> and</c><00:07:57.860><c> then</c><00:07:58.190><c> X</c><00:07:58.720><c> 1m</c><00:07:59.750><c> and</c><00:08:00.530><c> thus</c><00:08:01.400><c> this</c><00:08:01.670><c> will</c><00:08:01.730><c> be</c>

00:08:01.960 --> 00:08:01.970 align:start position:0%
to 1 and then X 1m and thus this will be
 

00:08:01.970 --> 00:08:07.810 align:start position:0%
to 1 and then X 1m and thus this will be
a<00:08:02.450><c> M</c><00:08:02.750><c> by</c><00:08:03.590><c> 2</c><00:08:04.030><c> dimensional</c><00:08:05.030><c> matrix</c><00:08:06.610><c> so</c><00:08:07.610><c> that's</c>

00:08:07.810 --> 00:08:07.820 align:start position:0%
a M by 2 dimensional matrix so that's
 

00:08:07.820 --> 00:08:11.080 align:start position:0%
a M by 2 dimensional matrix so that's
how<00:08:07.940><c> I</c><00:08:07.970><c> construct</c><00:08:08.390><c> the</c><00:08:08.600><c> matrix</c><00:08:08.720><c> X</c><00:08:09.170><c> and</c><00:08:10.090><c> the</c>

00:08:11.080 --> 00:08:11.090 align:start position:0%
how I construct the matrix X and the
 

00:08:11.090 --> 00:08:13.660 align:start position:0%
how I construct the matrix X and the
vector<00:08:11.510><c> Y</c><00:08:11.860><c> maybe</c><00:08:12.860><c> and</c><00:08:13.040><c> sometimes</c><00:08:13.370><c> I</c><00:08:13.550><c> might</c>

00:08:13.660 --> 00:08:13.670 align:start position:0%
vector Y maybe and sometimes I might
 

00:08:13.670 --> 00:08:15.340 align:start position:0%
vector Y maybe and sometimes I might
read<00:08:14.030><c> and</c><00:08:14.210><c> everyone</c><00:08:14.630><c> talk</c><00:08:14.900><c> did</c><00:08:15.080><c> you</c><00:08:15.170><c> know</c><00:08:15.320><c> that</c>

00:08:15.340 --> 00:08:15.350 align:start position:0%
read and everyone talk did you know that
 

00:08:15.350 --> 00:08:17.170 align:start position:0%
read and everyone talk did you know that
as<00:08:15.620><c> a</c><00:08:15.650><c> vector</c><00:08:15.890><c> there</c><00:08:16.310><c> very</c><00:08:16.490><c> often</c><00:08:16.700><c> I'll</c><00:08:17.000><c> just</c>

00:08:17.170 --> 00:08:17.180 align:start position:0%
as a vector there very often I'll just
 

00:08:17.180 --> 00:08:20.080 align:start position:0%
as a vector there very often I'll just
write<00:08:17.360><c> this</c><00:08:17.540><c> as</c><00:08:17.690><c> Y</c><00:08:17.900><c> either</c><00:08:18.260><c> way</c><00:08:18.610><c> the</c><00:08:19.610><c> vector</c><00:08:19.910><c> Y</c>

00:08:20.080 --> 00:08:20.090 align:start position:0%
write this as Y either way the vector Y
 

00:08:20.090 --> 00:08:23.080 align:start position:0%
write this as Y either way the vector Y
is<00:08:20.420><c> obtained</c><00:08:20.840><c> by</c><00:08:20.990><c> taking</c><00:08:21.200><c> all</c><00:08:21.710><c> the</c><00:08:22.130><c> labels</c><00:08:22.760><c> all</c>

00:08:23.080 --> 00:08:23.090 align:start position:0%
is obtained by taking all the labels all
 

00:08:23.090 --> 00:08:25.480 align:start position:0%
is obtained by taking all the labels all
the<00:08:23.300><c> correct</c><00:08:23.960><c> prices</c><00:08:24.710><c> of</c><00:08:24.860><c> houses</c><00:08:25.040><c> in</c><00:08:25.400><c> my</c>

00:08:25.480 --> 00:08:25.490 align:start position:0%
the correct prices of houses in my
 

00:08:25.490 --> 00:08:27.880 align:start position:0%
the correct prices of houses in my
training<00:08:25.850><c> set</c><00:08:25.880><c> and</c><00:08:26.270><c> just</c><00:08:27.020><c> stacking</c><00:08:27.380><c> them</c><00:08:27.740><c> up</c>

00:08:27.880 --> 00:08:27.890 align:start position:0%
training set and just stacking them up
 

00:08:27.890 --> 00:08:31.840 align:start position:0%
training set and just stacking them up
into<00:08:28.190><c> an</c><00:08:28.790><c> M</c><00:08:29.330><c> dimensional</c><00:08:30.230><c> vector</c><00:08:30.470><c> and</c><00:08:31.250><c> that's</c>

00:08:31.840 --> 00:08:31.850 align:start position:0%
into an M dimensional vector and that's
 

00:08:31.850 --> 00:08:35.080 align:start position:0%
into an M dimensional vector and that's
why<00:08:32.680><c> finally</c><00:08:33.680><c> having</c><00:08:34.130><c> constructed</c><00:08:34.910><c> the</c>

00:08:35.080 --> 00:08:35.090 align:start position:0%
why finally having constructed the
 

00:08:35.090 --> 00:08:37.960 align:start position:0%
why finally having constructed the
matrix<00:08:35.479><c> X</c><00:08:35.720><c> and</c><00:08:36.020><c> the</c><00:08:36.470><c> vector</c><00:08:36.740><c> Y</c><00:08:36.920><c> we</c><00:08:37.729><c> then</c><00:08:37.940><c> just</c>

00:08:37.960 --> 00:08:37.970 align:start position:0%
matrix X and the vector Y we then just
 

00:08:37.970 --> 00:08:41.550 align:start position:0%
matrix X and the vector Y we then just
compute<00:08:38.660><c> theta</c><00:08:38.930><c> as</c><00:08:39.380><c> X</c><00:08:40.010><c> transpose</c><00:08:40.430><c> X</c><00:08:41.180><c> inverse</c>

00:08:41.550 --> 00:08:41.560 align:start position:0%
compute theta as X transpose X inverse
 

00:08:41.560 --> 00:08:43.260 align:start position:0%
compute theta as X transpose X inverse
times

00:08:43.260 --> 00:08:43.270 align:start position:0%
times
 

00:08:43.270 --> 00:08:45.879 align:start position:0%
times
Transpo's<00:08:43.810><c> lie</c>

00:08:45.879 --> 00:08:45.889 align:start position:0%
Transpo's lie
 

00:08:45.889 --> 00:08:48.579 align:start position:0%
Transpo's lie
I<00:08:46.059><c> just</c><00:08:47.059><c> wanna</c><00:08:47.239><c> make</c><00:08:47.359><c> sure</c><00:08:47.509><c> that</c><00:08:47.589><c> this</c>

00:08:48.579 --> 00:08:48.589 align:start position:0%
I just wanna make sure that this
 

00:08:48.589 --> 00:08:50.349 align:start position:0%
I just wanna make sure that this
equation<00:08:48.920><c> makes</c><00:08:49.489><c> sense</c><00:08:49.730><c> to</c><00:08:49.939><c> you</c><00:08:50.029><c> and</c><00:08:50.059><c> that</c><00:08:50.239><c> you</c>

00:08:50.349 --> 00:08:50.359 align:start position:0%
equation makes sense to you and that you
 

00:08:50.359 --> 00:08:51.939 align:start position:0%
equation makes sense to you and that you
know<00:08:50.480><c> how</c><00:08:50.660><c> to</c><00:08:50.720><c> implement</c><00:08:51.019><c> it</c><00:08:51.410><c> so</c><00:08:51.529><c> you</c><00:08:51.679><c> know</c>

00:08:51.939 --> 00:08:51.949 align:start position:0%
know how to implement it so you know
 

00:08:51.949 --> 00:08:53.799 align:start position:0%
know how to implement it so you know
what<00:08:52.129><c> we'll</c><00:08:52.279><c> let</c><00:08:52.489><c> concretely</c><00:08:53.089><c> what</c><00:08:53.269><c> is</c><00:08:53.420><c> this</c><00:08:53.569><c> X</c>

00:08:53.799 --> 00:08:53.809 align:start position:0%
what we'll let concretely what is this X
 

00:08:53.809 --> 00:08:57.160 align:start position:0%
what we'll let concretely what is this X
transpose<00:08:54.319><c> X</c><00:08:54.529><c> inverse</c><00:08:55.119><c> well</c><00:08:56.119><c> X</c><00:08:56.420><c> transpose</c><00:08:56.959><c> X</c>

00:08:57.160 --> 00:08:57.170 align:start position:0%
transpose X inverse well X transpose X
 

00:08:57.170 --> 00:09:00.129 align:start position:0%
transpose X inverse well X transpose X
inverse<00:08:57.410><c> is</c><00:08:57.949><c> the</c><00:08:58.279><c> inverse</c><00:08:58.309><c> of</c><00:08:59.029><c> the</c><00:08:59.299><c> matrix</c><00:08:59.329><c> X</c>

00:09:00.129 --> 00:09:00.139 align:start position:0%
inverse is the inverse of the matrix X
 

00:09:00.139 --> 00:09:04.960 align:start position:0%
inverse is the inverse of the matrix X
transpose<00:09:00.470><c> X</c><00:09:01.389><c> concretely</c><00:09:02.389><c> if</c><00:09:02.629><c> you</c><00:09:03.279><c> set</c><00:09:04.279><c> if</c><00:09:04.699><c> you</c>

00:09:04.960 --> 00:09:04.970 align:start position:0%
transpose X concretely if you set if you
 

00:09:04.970 --> 00:09:09.220 align:start position:0%
transpose X concretely if you set if you
were<00:09:05.089><c> to</c><00:09:05.269><c> say</c><00:09:05.449><c> set</c><00:09:05.779><c> a</c><00:09:06.730><c> to</c><00:09:07.730><c> be</c><00:09:07.759><c> equal</c><00:09:07.850><c> to</c><00:09:08.329><c> X</c>

00:09:09.220 --> 00:09:09.230 align:start position:0%
were to say set a to be equal to X
 

00:09:09.230 --> 00:09:11.739 align:start position:0%
were to say set a to be equal to X
transpose<00:09:09.589><c> times</c><00:09:10.279><c> X</c><00:09:10.489><c> so</c><00:09:10.850><c> X</c><00:09:11.059><c> transpose</c><00:09:11.239><c> is</c><00:09:11.720><c> a</c>

00:09:11.739 --> 00:09:11.749 align:start position:0%
transpose times X so X transpose is a
 

00:09:11.749 --> 00:09:13.960 align:start position:0%
transpose times X so X transpose is a
matrix<00:09:12.139><c> X</c><00:09:12.499><c> transpose</c><00:09:12.619><c> times</c><00:09:13.309><c> X</c><00:09:13.489><c> gives</c><00:09:13.699><c> you</c>

00:09:13.960 --> 00:09:13.970 align:start position:0%
matrix X transpose times X gives you
 

00:09:13.970 --> 00:09:15.729 align:start position:0%
matrix X transpose times X gives you
another<00:09:14.239><c> matrix</c><00:09:14.480><c> and</c><00:09:14.869><c> we</c><00:09:14.929><c> call</c><00:09:15.109><c> that</c><00:09:15.259><c> matrix</c><00:09:15.410><c> a</c>

00:09:15.729 --> 00:09:15.739 align:start position:0%
another matrix and we call that matrix a
 

00:09:15.739 --> 00:09:19.569 align:start position:0%
another matrix and we call that matrix a
then<00:09:16.699><c> you</c><00:09:17.239><c> know</c><00:09:17.359><c> X</c><00:09:17.989><c> transpose</c><00:09:18.649><c> X</c><00:09:18.889><c> inverse</c><00:09:19.100><c> is</c>

00:09:19.569 --> 00:09:19.579 align:start position:0%
then you know X transpose X inverse is
 

00:09:19.579 --> 00:09:21.369 align:start position:0%
then you know X transpose X inverse is
just<00:09:19.609><c> you</c><00:09:20.119><c> take</c><00:09:20.299><c> this</c><00:09:20.449><c> matrix</c><00:09:20.629><c> a</c><00:09:21.049><c> and</c><00:09:21.259><c> you</c>

00:09:21.369 --> 00:09:21.379 align:start position:0%
just you take this matrix a and you
 

00:09:21.379 --> 00:09:24.369 align:start position:0%
just you take this matrix a and you
invert<00:09:21.739><c> it</c><00:09:21.799><c> right</c><00:09:22.569><c> let's</c><00:09:23.569><c> equal</c><00:09:23.779><c> to</c><00:09:23.899><c> let's</c><00:09:24.230><c> say</c>

00:09:24.369 --> 00:09:24.379 align:start position:0%
invert it right let's equal to let's say
 

00:09:24.379 --> 00:09:26.859 align:start position:0%
invert it right let's equal to let's say
a<00:09:24.529><c> inverse</c><00:09:25.429><c> and</c><00:09:25.669><c> so</c><00:09:25.819><c> that's</c><00:09:26.089><c> how</c><00:09:26.239><c> you</c><00:09:26.299><c> compute</c>

00:09:26.859 --> 00:09:26.869 align:start position:0%
a inverse and so that's how you compute
 

00:09:26.869 --> 00:09:29.710 align:start position:0%
a inverse and so that's how you compute
this<00:09:27.470><c> thing</c><00:09:27.709><c> you</c><00:09:28.040><c> compute</c><00:09:28.609><c> X</c><00:09:28.790><c> transpose</c><00:09:29.269><c> X</c><00:09:29.509><c> and</c>

00:09:29.710 --> 00:09:29.720 align:start position:0%
this thing you compute X transpose X and
 

00:09:29.720 --> 00:09:32.650 align:start position:0%
this thing you compute X transpose X and
then<00:09:29.899><c> you</c><00:09:29.989><c> compute</c><00:09:30.350><c> this</c><00:09:30.499><c> inverse</c><00:09:31.269><c> we</c><00:09:32.269><c> haven't</c>

00:09:32.650 --> 00:09:32.660 align:start position:0%
then you compute this inverse we haven't
 

00:09:32.660 --> 00:09:34.869 align:start position:0%
then you compute this inverse we haven't
yet<00:09:32.779><c> talked</c><00:09:33.049><c> about</c><00:09:33.169><c> octave</c><00:09:33.769><c> we'll</c><00:09:34.040><c> do</c><00:09:34.220><c> so</c><00:09:34.459><c> in</c><00:09:34.699><c> a</c>

00:09:34.869 --> 00:09:34.879 align:start position:0%
yet talked about octave we'll do so in a
 

00:09:34.879 --> 00:09:37.269 align:start position:0%
yet talked about octave we'll do so in a
later<00:09:35.239><c> set</c><00:09:35.720><c> of</c><00:09:35.839><c> videos</c><00:09:36.139><c> but</c><00:09:36.470><c> in</c><00:09:36.589><c> the</c><00:09:36.769><c> octave</c>

00:09:37.269 --> 00:09:37.279 align:start position:0%
later set of videos but in the octave
 

00:09:37.279 --> 00:09:39.669 align:start position:0%
later set of videos but in the octave
programming<00:09:37.699><c> language</c><00:09:38.179><c> or</c><00:09:38.509><c> similarly</c><00:09:39.139><c> and</c>

00:09:39.669 --> 00:09:39.679 align:start position:0%
programming language or similarly and
 

00:09:39.679 --> 00:09:41.379 align:start position:0%
programming language or similarly and
also<00:09:39.949><c> the</c><00:09:40.160><c> MATLAB</c><00:09:40.339><c> programming</c><00:09:40.819><c> language</c><00:09:41.209><c> is</c>

00:09:41.379 --> 00:09:41.389 align:start position:0%
also the MATLAB programming language is
 

00:09:41.389 --> 00:09:44.530 align:start position:0%
also the MATLAB programming language is
very<00:09:41.600><c> similar</c><00:09:41.869><c> the</c><00:09:42.709><c> command</c><00:09:43.100><c> to</c><00:09:43.369><c> compute</c><00:09:43.819><c> this</c>

00:09:44.530 --> 00:09:44.540 align:start position:0%
very similar the command to compute this
 

00:09:44.540 --> 00:09:48.009 align:start position:0%
very similar the command to compute this
quantity<00:09:44.779><c> I</c><00:09:45.879><c> guess</c><00:09:46.879><c> really</c><00:09:47.119><c> a</c><00:09:47.209><c> disk</c><00:09:47.569><c> quantity</c>

00:09:48.009 --> 00:09:48.019 align:start position:0%
quantity I guess really a disk quantity
 

00:09:48.019 --> 00:09:50.379 align:start position:0%
quantity I guess really a disk quantity
X<00:09:48.230><c> transpose</c><00:09:48.649><c> X</c><00:09:48.799><c> inverse</c><00:09:48.949><c> times</c><00:09:49.369><c> X</c><00:09:49.489><c> times</c><00:09:49.730><c> y</c><00:09:49.819><c> is</c>

00:09:50.379 --> 00:09:50.389 align:start position:0%
X transpose X inverse times X times y is
 

00:09:50.389 --> 00:09:54.699 align:start position:0%
X transpose X inverse times X times y is
as<00:09:50.869><c> follows</c><00:09:51.350><c> in</c><00:09:52.009><c> octave</c><00:09:52.790><c> X</c><00:09:53.089><c> prime</c><00:09:53.989><c> is</c><00:09:54.319><c> the</c>

00:09:54.699 --> 00:09:54.709 align:start position:0%
as follows in octave X prime is the
 

00:09:54.709 --> 00:09:56.590 align:start position:0%
as follows in octave X prime is the
notation<00:09:55.279><c> that</c><00:09:55.309><c> you</c><00:09:55.489><c> use</c><00:09:55.759><c> to</c><00:09:56.089><c> denote</c><00:09:56.389><c> X</c>

00:09:56.590 --> 00:09:56.600 align:start position:0%
notation that you use to denote X
 

00:09:56.600 --> 00:10:00.269 align:start position:0%
notation that you use to denote X
transpose<00:09:57.290><c> and</c><00:09:57.529><c> so</c><00:09:57.850><c> this</c><00:09:58.850><c> expression</c><00:09:59.360><c> that's</c>

00:10:00.269 --> 00:10:00.279 align:start position:0%
transpose and so this expression that's
 

00:10:00.279 --> 00:10:03.460 align:start position:0%
transpose and so this expression that's
boxing<00:10:01.279><c> and</c><00:10:01.429><c> read</c><00:10:01.669><c> that's</c><00:10:02.509><c> computing</c><00:10:03.199><c> X</c>

00:10:03.460 --> 00:10:03.470 align:start position:0%
boxing and read that's computing X
 

00:10:03.470 --> 00:10:07.900 align:start position:0%
boxing and read that's computing X
transpose<00:10:04.189><c> times</c><00:10:04.819><c> X</c><00:10:05.439><c> P</c><00:10:06.439><c> in</c><00:10:06.709><c> is</c><00:10:07.069><c> a</c><00:10:07.129><c> function</c><00:10:07.699><c> for</c>

00:10:07.900 --> 00:10:07.910 align:start position:0%
transpose times X P in is a function for
 

00:10:07.910 --> 00:10:09.970 align:start position:0%
transpose times X P in is a function for
computing<00:10:08.029><c> the</c><00:10:08.569><c> inverse</c><00:10:08.749><c> of</c><00:10:09.110><c> a</c><00:10:09.199><c> matrix</c><00:10:09.230><c> so</c>

00:10:09.970 --> 00:10:09.980 align:start position:0%
computing the inverse of a matrix so
 

00:10:09.980 --> 00:10:13.960 align:start position:0%
computing the inverse of a matrix so
this<00:10:10.419><c> computes</c><00:10:11.419><c> X</c><00:10:11.689><c> transpose</c><00:10:12.379><c> X</c><00:10:12.679><c> inverse</c><00:10:12.970><c> and</c>

00:10:13.960 --> 00:10:13.970 align:start position:0%
this computes X transpose X inverse and
 

00:10:13.970 --> 00:10:16.659 align:start position:0%
this computes X transpose X inverse and
then<00:10:14.689><c> you</c><00:10:14.809><c> multiply</c><00:10:15.319><c> that</c><00:10:15.559><c> by</c><00:10:15.619><c> X</c><00:10:16.309><c> transpose</c>

00:10:16.659 --> 00:10:16.669 align:start position:0%
then you multiply that by X transpose
 

00:10:16.669 --> 00:10:19.449 align:start position:0%
then you multiply that by X transpose
and<00:10:17.360><c> you</c><00:10:17.419><c> multiply</c><00:10:17.929><c> that</c><00:10:18.169><c> by</c><00:10:18.230><c> Y</c><00:10:18.619><c> so</c><00:10:19.100><c> you</c><00:10:19.189><c> end</c><00:10:19.339><c> up</c>

00:10:19.449 --> 00:10:19.459 align:start position:0%
and you multiply that by Y so you end up
 

00:10:19.459 --> 00:10:23.619 align:start position:0%
and you multiply that by Y so you end up
computing<00:10:19.999><c> that</c><00:10:20.929><c> formula</c><00:10:21.559><c> which</c><00:10:22.160><c> I</c><00:10:22.910><c> didn't</c>

00:10:23.619 --> 00:10:23.629 align:start position:0%
computing that formula which I didn't
 

00:10:23.629 --> 00:10:25.659 align:start position:0%
computing that formula which I didn't
prove<00:10:23.869><c> but</c><00:10:24.230><c> it</c><00:10:24.949><c> is</c><00:10:25.100><c> possible</c><00:10:25.549><c> to</c><00:10:25.579><c> show</c>

00:10:25.659 --> 00:10:25.669 align:start position:0%
prove but it is possible to show
 

00:10:25.669 --> 00:10:27.429 align:start position:0%
prove but it is possible to show
mathematically<00:10:25.819><c> even</c><00:10:26.749><c> though</c><00:10:27.019><c> I'm</c><00:10:27.079><c> not</c><00:10:27.230><c> gonna</c>

00:10:27.429 --> 00:10:27.439 align:start position:0%
mathematically even though I'm not gonna
 

00:10:27.439 --> 00:10:30.489 align:start position:0%
mathematically even though I'm not gonna
do<00:10:27.559><c> so</c><00:10:27.739><c> here</c><00:10:28.009><c> it</c><00:10:28.209><c> that</c><00:10:29.209><c> this</c><00:10:29.360><c> formula</c><00:10:29.749><c> gives</c>

00:10:30.489 --> 00:10:30.499 align:start position:0%
do so here it that this formula gives
 

00:10:30.499 --> 00:10:32.529 align:start position:0%
do so here it that this formula gives
you<00:10:30.679><c> the</c><00:10:30.709><c> optimal</c><00:10:31.249><c> value</c><00:10:31.639><c> of</c><00:10:31.730><c> theta</c><00:10:31.939><c> in</c><00:10:32.360><c> the</c>

00:10:32.529 --> 00:10:32.539 align:start position:0%
you the optimal value of theta in the
 

00:10:32.539 --> 00:10:34.689 align:start position:0%
you the optimal value of theta in the
sense<00:10:32.749><c> that</c><00:10:32.839><c> this</c><00:10:33.499><c> if</c><00:10:33.739><c> you</c><00:10:33.799><c> set</c><00:10:34.039><c> theta</c><00:10:34.220><c> equal</c>

00:10:34.689 --> 00:10:34.699 align:start position:0%
sense that this if you set theta equal
 

00:10:34.699 --> 00:10:37.239 align:start position:0%
sense that this if you set theta equal
to<00:10:34.730><c> this</c><00:10:34.999><c> that's</c><00:10:35.660><c> the</c><00:10:35.869><c> value</c><00:10:36.199><c> of</c><00:10:36.289><c> theta</c><00:10:36.499><c> that</c>

00:10:37.239 --> 00:10:37.249 align:start position:0%
to this that's the value of theta that
 

00:10:37.249 --> 00:10:39.299 align:start position:0%
to this that's the value of theta that
minimizes<00:10:37.459><c> the</c><00:10:38.119><c> cost</c><00:10:38.149><c> function</c><00:10:38.539><c> J</c><00:10:38.839><c> of</c><00:10:39.049><c> theta</c>

00:10:39.299 --> 00:10:39.309 align:start position:0%
minimizes the cost function J of theta
 

00:10:39.309 --> 00:10:42.699 align:start position:0%
minimizes the cost function J of theta
for<00:10:40.309><c> linear</c><00:10:40.699><c> regression</c><00:10:40.749><c> one</c><00:10:41.749><c> last</c><00:10:41.989><c> detail</c><00:10:42.230><c> in</c>

00:10:42.699 --> 00:10:42.709 align:start position:0%
for linear regression one last detail in
 

00:10:42.709 --> 00:10:45.129 align:start position:0%
for linear regression one last detail in
an<00:10:43.189><c> earlier</c><00:10:43.579><c> video</c><00:10:43.730><c> I</c><00:10:44.179><c> talked</c><00:10:44.509><c> about</c><00:10:44.660><c> feature</c>

00:10:45.129 --> 00:10:45.139 align:start position:0%
an earlier video I talked about feature
 

00:10:45.139 --> 00:10:48.039 align:start position:0%
an earlier video I talked about feature
scaling<00:10:45.529><c> and</c><00:10:45.980><c> the</c><00:10:46.009><c> idea</c><00:10:46.489><c> of</c><00:10:46.789><c> getting</c><00:10:47.539><c> features</c>

00:10:48.039 --> 00:10:48.049 align:start position:0%
scaling and the idea of getting features
 

00:10:48.049 --> 00:10:52.269 align:start position:0%
scaling and the idea of getting features
to<00:10:48.529><c> be</c><00:10:48.679><c> on</c><00:10:48.949><c> similar</c><00:10:49.759><c> ranges</c><00:10:50.269><c> of</c><00:10:50.949><c> scales</c><00:10:51.949><c> of</c>

00:10:52.269 --> 00:10:52.279 align:start position:0%
to be on similar ranges of scales of
 

00:10:52.279 --> 00:10:54.540 align:start position:0%
to be on similar ranges of scales of
similar<00:10:52.910><c> ranges</c><00:10:53.239><c> of</c><00:10:53.389><c> values</c><00:10:53.749><c> of</c><00:10:53.899><c> each</c><00:10:54.049><c> other</c>

00:10:54.540 --> 00:10:54.550 align:start position:0%
similar ranges of values of each other
 

00:10:54.550 --> 00:10:56.700 align:start position:0%
similar ranges of values of each other
if<00:10:54.880><c> you're</c><00:10:55.420><c> using</c><00:10:55.630><c> this</c><00:10:55.930><c> normal</c><00:10:56.500><c> equation</c>

00:10:56.700 --> 00:10:56.710 align:start position:0%
if you're using this normal equation
 

00:10:56.710 --> 00:11:00.570 align:start position:0%
if you're using this normal equation
method<00:10:57.090><c> then</c><00:10:58.560><c> feature</c><00:10:59.560><c> scaling</c><00:10:59.920><c> isn't</c>

00:11:00.570 --> 00:11:00.580 align:start position:0%
method then feature scaling isn't
 

00:11:00.580 --> 00:11:03.510 align:start position:0%
method then feature scaling isn't
actually<00:11:00.970><c> necessary</c><00:11:01.000><c> and</c><00:11:01.780><c> is</c><00:11:02.500><c> actually</c><00:11:02.890><c> okay</c>

00:11:03.510 --> 00:11:03.520 align:start position:0%
actually necessary and is actually okay
 

00:11:03.520 --> 00:11:06.330 align:start position:0%
actually necessary and is actually okay
if<00:11:03.820><c> say</c><00:11:04.210><c> some</c><00:11:04.450><c> feature</c><00:11:04.660><c> x1</c><00:11:05.440><c> is</c><00:11:05.680><c> between</c><00:11:05.980><c> 0</c><00:11:06.280><c> and</c>

00:11:06.330 --> 00:11:06.340 align:start position:0%
if say some feature x1 is between 0 and
 

00:11:06.340 --> 00:11:08.910 align:start position:0%
if say some feature x1 is between 0 and
1<00:11:06.430><c> and</c><00:11:06.850><c> some</c><00:11:07.450><c> feature</c><00:11:07.690><c> exteriors</c><00:11:08.590><c> between</c>

00:11:08.910 --> 00:11:08.920 align:start position:0%
1 and some feature exteriors between
 

00:11:08.920 --> 00:11:11.370 align:start position:0%
1 and some feature exteriors between
your<00:11:09.190><c> ranges</c><00:11:09.550><c> from</c><00:11:09.640><c> 0</c><00:11:09.880><c> to</c><00:11:10.030><c> 1000</c><00:11:10.630><c> and</c><00:11:10.810><c> some</c>

00:11:11.370 --> 00:11:11.380 align:start position:0%
your ranges from 0 to 1000 and some
 

00:11:11.380 --> 00:11:14.340 align:start position:0%
your ranges from 0 to 1000 and some
feature<00:11:11.620><c> x</c><00:11:11.740><c> three</c><00:11:12.010><c> ranges</c><00:11:12.610><c> from</c><00:11:12.820><c> 0</c><00:11:13.270><c> to</c><00:11:13.570><c> 10</c><00:11:14.200><c> to</c>

00:11:14.340 --> 00:11:14.350 align:start position:0%
feature x three ranges from 0 to 10 to
 

00:11:14.350 --> 00:11:17.160 align:start position:0%
feature x three ranges from 0 to 10 to
minus<00:11:14.560><c> 5</c><00:11:14.950><c> and</c><00:11:15.310><c> if</c><00:11:16.210><c> you're</c><00:11:16.390><c> using</c><00:11:16.600><c> the</c><00:11:16.810><c> normal</c>

00:11:17.160 --> 00:11:17.170 align:start position:0%
minus 5 and if you're using the normal
 

00:11:17.170 --> 00:11:19.950 align:start position:0%
minus 5 and if you're using the normal
equation<00:11:17.560><c> method</c><00:11:17.590><c> this</c><00:11:18.070><c> is</c><00:11:18.250><c> okay</c><00:11:18.790><c> and</c><00:11:19.060><c> there's</c>

00:11:19.950 --> 00:11:19.960 align:start position:0%
equation method this is okay and there's
 

00:11:19.960 --> 00:11:22.410 align:start position:0%
equation method this is okay and there's
no<00:11:20.170><c> need</c><00:11:20.380><c> to</c><00:11:20.650><c> do</c><00:11:21.070><c> feature</c><00:11:21.310><c> scaling</c><00:11:21.640><c> although</c>

00:11:22.410 --> 00:11:22.420 align:start position:0%
no need to do feature scaling although
 

00:11:22.420 --> 00:11:24.600 align:start position:0%
no need to do feature scaling although
of<00:11:22.570><c> course</c><00:11:22.600><c> if</c><00:11:23.080><c> you</c><00:11:23.200><c> were</c><00:11:23.320><c> using</c><00:11:23.620><c> gradient</c>

00:11:24.600 --> 00:11:24.610 align:start position:0%
of course if you were using gradient
 

00:11:24.610 --> 00:11:26.760 align:start position:0%
of course if you were using gradient
descent<00:11:24.640><c> then</c><00:11:25.300><c> feature</c><00:11:25.810><c> scaling</c><00:11:26.140><c> is</c><00:11:26.500><c> still</c>

00:11:26.760 --> 00:11:26.770 align:start position:0%
descent then feature scaling is still
 

00:11:26.770 --> 00:11:27.480 align:start position:0%
descent then feature scaling is still
important

00:11:27.480 --> 00:11:27.490 align:start position:0%
important
 

00:11:27.490 --> 00:11:29.490 align:start position:0%
important
finally<00:11:28.210><c> when</c><00:11:28.510><c> should</c><00:11:28.750><c> you</c><00:11:28.780><c> use</c><00:11:28.990><c> gradient</c>

00:11:29.490 --> 00:11:29.500 align:start position:0%
finally when should you use gradient
 

00:11:29.500 --> 00:11:31.140 align:start position:0%
finally when should you use gradient
descent<00:11:29.530><c> and</c><00:11:30.040><c> when</c><00:11:30.400><c> should</c><00:11:30.640><c> you</c><00:11:30.670><c> use</c><00:11:30.790><c> the</c>

00:11:31.140 --> 00:11:31.150 align:start position:0%
descent and when should you use the
 

00:11:31.150 --> 00:11:32.490 align:start position:0%
descent and when should you use the
normal<00:11:31.360><c> equation</c><00:11:32.050><c> method</c>

00:11:32.490 --> 00:11:32.500 align:start position:0%
normal equation method
 

00:11:32.500 --> 00:11:34.470 align:start position:0%
normal equation method
here<00:11:33.190><c> are</c><00:11:33.310><c> some</c><00:11:33.430><c> of</c><00:11:33.490><c> their</c><00:11:33.760><c> advantages</c><00:11:34.150><c> and</c>

00:11:34.470 --> 00:11:34.480 align:start position:0%
here are some of their advantages and
 

00:11:34.480 --> 00:11:37.230 align:start position:0%
here are some of their advantages and
disadvantages<00:11:35.430><c> let's</c><00:11:36.430><c> say</c><00:11:36.550><c> you</c><00:11:36.670><c> have</c><00:11:36.910><c> M</c>

00:11:37.230 --> 00:11:37.240 align:start position:0%
disadvantages let's say you have M
 

00:11:37.240 --> 00:11:40.920 align:start position:0%
disadvantages let's say you have M
training<00:11:37.900><c> examples</c><00:11:38.080><c> and</c><00:11:38.830><c> n</c><00:11:39.190><c> features</c><00:11:39.930><c> one</c>

00:11:40.920 --> 00:11:40.930 align:start position:0%
training examples and n features one
 

00:11:40.930 --> 00:11:42.960 align:start position:0%
training examples and n features one
disadvantage<00:11:41.350><c> of</c><00:11:41.890><c> gradient</c><00:11:42.250><c> descent</c><00:11:42.550><c> is</c><00:11:42.700><c> that</c>

00:11:42.960 --> 00:11:42.970 align:start position:0%
disadvantage of gradient descent is that
 

00:11:42.970 --> 00:11:44.730 align:start position:0%
disadvantage of gradient descent is that
you<00:11:43.150><c> need</c><00:11:43.420><c> to</c><00:11:43.450><c> choose</c><00:11:43.930><c> the</c><00:11:43.960><c> learning</c><00:11:44.590><c> rate</c>

00:11:44.730 --> 00:11:44.740 align:start position:0%
you need to choose the learning rate
 

00:11:44.740 --> 00:11:47.280 align:start position:0%
you need to choose the learning rate
alpha<00:11:45.040><c> and</c><00:11:45.580><c> often</c><00:11:46.180><c> this</c><00:11:46.390><c> means</c><00:11:46.660><c> running</c><00:11:46.990><c> up</c><00:11:47.200><c> a</c>

00:11:47.280 --> 00:11:47.290 align:start position:0%
alpha and often this means running up a
 

00:11:47.290 --> 00:11:48.720 align:start position:0%
alpha and often this means running up a
few<00:11:47.470><c> times</c><00:11:47.680><c> with</c><00:11:47.980><c> different</c><00:11:48.430><c> learning</c><00:11:48.520><c> rate</c>

00:11:48.720 --> 00:11:48.730 align:start position:0%
few times with different learning rate
 

00:11:48.730 --> 00:11:50.760 align:start position:0%
few times with different learning rate
alpha<00:11:49.030><c> and</c><00:11:49.540><c> then</c><00:11:49.660><c> see</c><00:11:49.840><c> what</c><00:11:50.080><c> works</c><00:11:50.260><c> best</c><00:11:50.470><c> and</c>

00:11:50.760 --> 00:11:50.770 align:start position:0%
alpha and then see what works best and
 

00:11:50.770 --> 00:11:52.260 align:start position:0%
alpha and then see what works best and
so<00:11:50.950><c> that's</c><00:11:51.280><c> a</c><00:11:51.340><c> little</c><00:11:51.520><c> extra</c><00:11:51.880><c> work</c><00:11:52.000><c> and</c><00:11:52.210><c> extra</c>

00:11:52.260 --> 00:11:52.270 align:start position:0%
so that's a little extra work and extra
 

00:11:52.270 --> 00:11:55.410 align:start position:0%
so that's a little extra work and extra
hassle<00:11:53.220><c> another</c><00:11:54.220><c> disadvantage</c><00:11:54.580><c> of</c><00:11:54.910><c> n</c><00:11:55.060><c> descent</c>

00:11:55.410 --> 00:11:55.420 align:start position:0%
hassle another disadvantage of n descent
 

00:11:55.420 --> 00:11:57.600 align:start position:0%
hassle another disadvantage of n descent
is<00:11:55.630><c> that</c><00:11:55.660><c> new</c><00:11:56.170><c> it</c><00:11:56.320><c> needs</c><00:11:56.530><c> many</c><00:11:56.710><c> iterations</c><00:11:57.010><c> and</c>

00:11:57.600 --> 00:11:57.610 align:start position:0%
is that new it needs many iterations and
 

00:11:57.610 --> 00:11:59.400 align:start position:0%
is that new it needs many iterations and
so<00:11:57.760><c> depending</c><00:11:58.210><c> on</c><00:11:58.450><c> the</c><00:11:58.540><c> details</c><00:11:58.930><c> that</c><00:11:59.170><c> could</c>

00:11:59.400 --> 00:11:59.410 align:start position:0%
so depending on the details that could
 

00:11:59.410 --> 00:12:02.100 align:start position:0%
so depending on the details that could
make<00:11:59.650><c> it</c><00:11:59.680><c> slower</c><00:12:00.040><c> although</c><00:12:00.720><c> there's</c><00:12:01.720><c> more</c><00:12:01.990><c> to</c>

00:12:02.100 --> 00:12:02.110 align:start position:0%
make it slower although there's more to
 

00:12:02.110 --> 00:12:03.740 align:start position:0%
make it slower although there's more to
the<00:12:02.230><c> story</c><00:12:02.440><c> as</c><00:12:02.740><c> we'll</c><00:12:02.920><c> see</c><00:12:03.070><c> in</c><00:12:03.100><c> a</c><00:12:03.220><c> second</c><00:12:03.520><c> as</c>

00:12:03.740 --> 00:12:03.750 align:start position:0%
the story as we'll see in a second as
 

00:12:03.750 --> 00:12:06.450 align:start position:0%
the story as we'll see in a second as
for<00:12:04.750><c> the</c><00:12:04.840><c> normal</c><00:12:05.170><c> equation</c><00:12:05.590><c> you</c><00:12:06.070><c> don't</c><00:12:06.310><c> need</c>

00:12:06.450 --> 00:12:06.460 align:start position:0%
for the normal equation you don't need
 

00:12:06.460 --> 00:12:08.190 align:start position:0%
for the normal equation you don't need
to<00:12:06.580><c> choose</c><00:12:06.760><c> any</c><00:12:06.970><c> learning</c><00:12:07.360><c> rate</c><00:12:07.510><c> alpha</c><00:12:07.690><c> so</c>

00:12:08.190 --> 00:12:08.200 align:start position:0%
to choose any learning rate alpha so
 

00:12:08.200 --> 00:12:09.900 align:start position:0%
to choose any learning rate alpha so
that<00:12:08.380><c> it</c><00:12:08.620><c> makes</c><00:12:08.770><c> it</c><00:12:08.890><c> really</c><00:12:09.100><c> convenient</c><00:12:09.580><c> makes</c>

00:12:09.900 --> 00:12:09.910 align:start position:0%
that it makes it really convenient makes
 

00:12:09.910 --> 00:12:11.670 align:start position:0%
that it makes it really convenient makes
it<00:12:10.030><c> simpler</c><00:12:10.330><c> to</c><00:12:10.510><c> implement</c><00:12:10.540><c> you</c><00:12:11.080><c> just</c><00:12:11.290><c> run</c><00:12:11.530><c> it</c>

00:12:11.670 --> 00:12:11.680 align:start position:0%
it simpler to implement you just run it
 

00:12:11.680 --> 00:12:14.250 align:start position:0%
it simpler to implement you just run it
and<00:12:11.830><c> it</c><00:12:11.950><c> just</c><00:12:12.220><c> usually</c><00:12:12.700><c> just</c><00:12:12.850><c> works</c><00:12:13.060><c> and</c><00:12:13.390><c> you</c>

00:12:14.250 --> 00:12:14.260 align:start position:0%
and it just usually just works and you
 

00:12:14.260 --> 00:12:15.690 align:start position:0%
and it just usually just works and you
don't<00:12:14.500><c> need</c><00:12:14.590><c> to</c><00:12:14.650><c> iterate</c><00:12:15.130><c> so</c><00:12:15.310><c> you</c><00:12:15.370><c> don't</c><00:12:15.580><c> need</c>

00:12:15.690 --> 00:12:15.700 align:start position:0%
don't need to iterate so you don't need
 

00:12:15.700 --> 00:12:17.430 align:start position:0%
don't need to iterate so you don't need
to<00:12:15.850><c> plot</c><00:12:16.090><c> J</c><00:12:16.390><c> of</c><00:12:16.540><c> theta</c><00:12:16.570><c> or</c><00:12:17.110><c> check</c><00:12:17.320><c> the</c>

00:12:17.430 --> 00:12:17.440 align:start position:0%
to plot J of theta or check the
 

00:12:17.440 --> 00:12:19.410 align:start position:0%
to plot J of theta or check the
conversion<00:12:18.010><c> sort</c><00:12:18.340><c> of</c><00:12:18.460><c> take</c><00:12:18.760><c> all</c><00:12:18.910><c> those</c><00:12:19.060><c> extra</c>

00:12:19.410 --> 00:12:19.420 align:start position:0%
conversion sort of take all those extra
 

00:12:19.420 --> 00:12:21.870 align:start position:0%
conversion sort of take all those extra
steps<00:12:19.480><c> so</c><00:12:20.260><c> far</c><00:12:20.470><c> the</c><00:12:20.710><c> balance</c><00:12:21.130><c> seems</c><00:12:21.430><c> to</c><00:12:21.640><c> favor</c>

00:12:21.870 --> 00:12:21.880 align:start position:0%
steps so far the balance seems to favor
 

00:12:21.880 --> 00:12:24.090 align:start position:0%
steps so far the balance seems to favor
a<00:12:22.060><c> normal</c><00:12:22.480><c> equation</c><00:12:22.750><c> the</c><00:12:23.230><c> normal</c><00:12:23.620><c> equation</c>

00:12:24.090 --> 00:12:24.100 align:start position:0%
a normal equation the normal equation
 

00:12:24.100 --> 00:12:26.520 align:start position:0%
a normal equation the normal equation
here<00:12:24.730><c> are</c><00:12:24.880><c> some</c><00:12:25.210><c> disadvantages</c><00:12:25.810><c> of</c><00:12:26.290><c> the</c>

00:12:26.520 --> 00:12:26.530 align:start position:0%
here are some disadvantages of the
 

00:12:26.530 --> 00:12:28.380 align:start position:0%
here are some disadvantages of the
normal<00:12:26.560><c> equation</c><00:12:27.220><c> and</c><00:12:27.460><c> some</c><00:12:27.640><c> advantages</c><00:12:28.240><c> of</c>

00:12:28.380 --> 00:12:28.390 align:start position:0%
normal equation and some advantages of
 

00:12:28.390 --> 00:12:30.840 align:start position:0%
normal equation and some advantages of
grading<00:12:28.600><c> descent</c><00:12:29.100><c> gradient</c><00:12:30.100><c> descent</c><00:12:30.400><c> works</c>

00:12:30.840 --> 00:12:30.850 align:start position:0%
grading descent gradient descent works
 

00:12:30.850 --> 00:12:32.700 align:start position:0%
grading descent gradient descent works
pretty<00:12:31.120><c> well</c><00:12:31.420><c> even</c><00:12:31.750><c> when</c><00:12:32.140><c> you</c><00:12:32.230><c> have</c><00:12:32.410><c> a</c><00:12:32.440><c> very</c>

00:12:32.700 --> 00:12:32.710 align:start position:0%
pretty well even when you have a very
 

00:12:32.710 --> 00:12:35.550 align:start position:0%
pretty well even when you have a very
large<00:12:32.950><c> number</c><00:12:33.250><c> of</c><00:12:33.430><c> features</c><00:12:33.970><c> so</c><00:12:34.480><c> you</c><00:12:35.470><c> know</c>

00:12:35.550 --> 00:12:35.560 align:start position:0%
large number of features so you know
 

00:12:35.560 --> 00:12:37.080 align:start position:0%
large number of features so you know
even<00:12:35.770><c> if</c><00:12:36.040><c> you</c><00:12:36.160><c> have</c><00:12:36.310><c> millions</c><00:12:36.610><c> of</c><00:12:36.940><c> features</c>

00:12:37.080 --> 00:12:37.090 align:start position:0%
even if you have millions of features
 

00:12:37.090 --> 00:12:39.000 align:start position:0%
even if you have millions of features
you<00:12:37.450><c> can</c><00:12:37.570><c> run</c><00:12:37.780><c> gradient</c><00:12:37.990><c> descent</c><00:12:38.170><c> and</c><00:12:38.650><c> they'll</c>

00:12:39.000 --> 00:12:39.010 align:start position:0%
you can run gradient descent and they'll
 

00:12:39.010 --> 00:12:41.040 align:start position:0%
you can run gradient descent and they'll
be<00:12:39.160><c> reasonably</c><00:12:39.880><c> efficient</c><00:12:40.450><c> and</c><00:12:40.660><c> it</c><00:12:40.780><c> will</c><00:12:40.900><c> do</c>

00:12:41.040 --> 00:12:41.050 align:start position:0%
be reasonably efficient and it will do
 

00:12:41.050 --> 00:12:41.970 align:start position:0%
be reasonably efficient and it will do
something<00:12:41.380><c> reasonable</c>

00:12:41.970 --> 00:12:41.980 align:start position:0%
something reasonable
 

00:12:41.980 --> 00:12:46.140 align:start position:0%
something reasonable
in<00:12:42.850><c> contrast</c><00:12:43.600><c> the</c><00:12:44.050><c> normal</c><00:12:44.440><c> equation</c><00:12:44.920><c> in</c><00:12:45.220><c> order</c>

00:12:46.140 --> 00:12:46.150 align:start position:0%
in contrast the normal equation in order
 

00:12:46.150 --> 00:12:47.910 align:start position:0%
in contrast the normal equation in order
to<00:12:46.300><c> solve</c><00:12:46.570><c> for</c><00:12:46.780><c> the</c><00:12:46.840><c> parameters</c><00:12:46.960><c> theta</c><00:12:47.320><c> we</c>

00:12:47.910 --> 00:12:47.920 align:start position:0%
to solve for the parameters theta we
 

00:12:47.920 --> 00:12:50.130 align:start position:0%
to solve for the parameters theta we
need<00:12:48.100><c> to</c><00:12:48.280><c> solve</c><00:12:48.970><c> for</c><00:12:49.150><c> this</c><00:12:49.450><c> term</c><00:12:49.720><c> we</c><00:12:49.960><c> need</c><00:12:50.050><c> to</c>

00:12:50.130 --> 00:12:50.140 align:start position:0%
need to solve for this term we need to
 

00:12:50.140 --> 00:12:52.580 align:start position:0%
need to solve for this term we need to
compute<00:12:50.440><c> this</c><00:12:50.620><c> term</c><00:12:50.680><c> x</c><00:12:51.100><c> transpose</c><00:12:51.370><c> x</c><00:12:51.880><c> inverse</c>

00:12:52.580 --> 00:12:52.590 align:start position:0%
compute this term x transpose x inverse
 

00:12:52.590 --> 00:12:57.270 align:start position:0%
compute this term x transpose x inverse
this<00:12:53.590><c> matrix</c><00:12:53.650><c> x</c><00:12:54.520><c> transpose</c><00:12:54.730><c> x</c><00:12:55.480><c> that's</c><00:12:56.290><c> an</c><00:12:56.590><c> N</c><00:12:56.800><c> by</c>

00:12:57.270 --> 00:12:57.280 align:start position:0%
this matrix x transpose x that's an N by
 

00:12:57.280 --> 00:13:01.460 align:start position:0%
this matrix x transpose x that's an N by
n<00:12:57.610><c> matrix</c><00:12:57.970><c> if</c><00:12:58.750><c> you</c><00:12:58.870><c> have</c><00:12:59.020><c> n</c><00:12:59.230><c> features</c><00:13:00.240><c> because</c>

00:13:01.460 --> 00:13:01.470 align:start position:0%
n matrix if you have n features because
 

00:13:01.470 --> 00:13:03.780 align:start position:0%
n matrix if you have n features because
if<00:13:02.470><c> you</c><00:13:02.560><c> look</c><00:13:02.710><c> at</c><00:13:02.800><c> the</c><00:13:02.860><c> dimensions</c><00:13:03.370><c> of</c><00:13:03.520><c> X</c>

00:13:03.780 --> 00:13:03.790 align:start position:0%
if you look at the dimensions of X
 

00:13:03.790 --> 00:13:05.700 align:start position:0%
if you look at the dimensions of X
transpose<00:13:04.180><c> dimension</c><00:13:05.050><c> of</c><00:13:05.170><c> X</c><00:13:05.350><c> you</c><00:13:05.560><c> multiply</c>

00:13:05.700 --> 00:13:05.710 align:start position:0%
transpose dimension of X you multiply
 

00:13:05.710 --> 00:13:07.630 align:start position:0%
transpose dimension of X you multiply
and<00:13:06.130><c> figure</c><00:13:06.400><c> out</c><00:13:06.430><c> what</c><00:13:06.730><c> the</c><00:13:06.850><c> dimensional</c>

00:13:07.630 --> 00:13:07.640 align:start position:0%
and figure out what the dimensional
 

00:13:07.640 --> 00:13:10.690 align:start position:0%
and figure out what the dimensional
of<00:13:07.700><c> the</c><00:13:08.150><c> product</c><00:13:08.660><c> is</c><00:13:08.810><c> the</c><00:13:09.020><c> matrix</c><00:13:09.860><c> X</c><00:13:10.130><c> transpose</c>

00:13:10.690 --> 00:13:10.700 align:start position:0%
of the product is the matrix X transpose
 

00:13:10.700 --> 00:13:13.750 align:start position:0%
of the product is the matrix X transpose
X<00:13:10.970><c> is</c><00:13:11.300><c> an</c><00:13:11.810><c> N</c><00:13:12.110><c> by</c><00:13:12.350><c> n</c><00:13:12.380><c> matrix</c><00:13:12.650><c> where</c><00:13:13.460><c> n</c><00:13:13.490><c> is</c><00:13:13.610><c> the</c>

00:13:13.750 --> 00:13:13.760 align:start position:0%
X is an N by n matrix where n is the
 

00:13:13.760 --> 00:13:17.110 align:start position:0%
X is an N by n matrix where n is the
number<00:13:13.970><c> of</c><00:13:14.120><c> features</c><00:13:14.540><c> and</c><00:13:15.550><c> phone</c><00:13:16.550><c> on</c><00:13:16.820><c> most</c>

00:13:17.110 --> 00:13:17.120 align:start position:0%
number of features and phone on most
 

00:13:17.120 --> 00:13:19.450 align:start position:0%
number of features and phone on most
computer<00:13:17.600><c> implementations</c><00:13:18.320><c> the</c><00:13:18.830><c> cost</c><00:13:19.160><c> of</c>

00:13:19.450 --> 00:13:19.460 align:start position:0%
computer implementations the cost of
 

00:13:19.460 --> 00:13:23.020 align:start position:0%
computer implementations the cost of
inverting<00:13:19.970><c> a</c><00:13:20.390><c> matrix</c><00:13:20.620><c> grows</c><00:13:21.620><c> roughly</c><00:13:22.460><c> as</c><00:13:22.700><c> the</c>

00:13:23.020 --> 00:13:23.030 align:start position:0%
inverting a matrix grows roughly as the
 

00:13:23.030 --> 00:13:25.450 align:start position:0%
inverting a matrix grows roughly as the
cube<00:13:23.360><c> of</c><00:13:23.630><c> the</c><00:13:23.690><c> dimension</c><00:13:24.500><c> of</c><00:13:24.650><c> the</c><00:13:24.770><c> matrix</c><00:13:24.800><c> so</c>

00:13:25.450 --> 00:13:25.460 align:start position:0%
cube of the dimension of the matrix so
 

00:13:25.460 --> 00:13:28.000 align:start position:0%
cube of the dimension of the matrix so
computing<00:13:26.240><c> this</c><00:13:26.360><c> inverse</c><00:13:26.810><c> costs</c><00:13:27.740><c> roughly</c>

00:13:28.000 --> 00:13:28.010 align:start position:0%
computing this inverse costs roughly
 

00:13:28.010 --> 00:13:30.280 align:start position:0%
computing this inverse costs roughly
order<00:13:28.550><c> n</c><00:13:28.790><c> cube</c><00:13:29.210><c> times</c><00:13:29.480><c> sometimes</c><00:13:29.780><c> is</c><00:13:30.080><c> slightly</c>

00:13:30.280 --> 00:13:30.290 align:start position:0%
order n cube times sometimes is slightly
 

00:13:30.290 --> 00:13:31.900 align:start position:0%
order n cube times sometimes is slightly
faster<00:13:30.710><c> than</c><00:13:30.740><c> thank</c><00:13:31.040><c> you</c><00:13:31.220><c> but</c><00:13:31.460><c> design</c><00:13:31.790><c> you</c>

00:13:31.900 --> 00:13:31.910 align:start position:0%
faster than thank you but design you
 

00:13:31.910 --> 00:13:33.730 align:start position:0%
faster than thank you but design you
know<00:13:32.000><c> close</c><00:13:32.270><c> enough</c><00:13:32.300><c> to</c><00:13:32.780><c> fall</c><00:13:33.170><c> for</c><00:13:33.200><c> our</c>

00:13:33.730 --> 00:13:33.740 align:start position:0%
know close enough to fall for our
 

00:13:33.740 --> 00:13:36.340 align:start position:0%
know close enough to fall for our
purposes<00:13:34.280><c> so</c><00:13:35.210><c> if</c><00:13:35.480><c> n</c><00:13:35.780><c> is</c><00:13:35.960><c> the</c><00:13:35.990><c> number</c><00:13:36.200><c> of</c>

00:13:36.340 --> 00:13:36.350 align:start position:0%
purposes so if n is the number of
 

00:13:36.350 --> 00:13:38.620 align:start position:0%
purposes so if n is the number of
features<00:13:36.680><c> is</c><00:13:36.830><c> very</c><00:13:37.010><c> large</c><00:13:37.310><c> then</c><00:13:38.000><c> computing</c>

00:13:38.620 --> 00:13:38.630 align:start position:0%
features is very large then computing
 

00:13:38.630 --> 00:13:40.720 align:start position:0%
features is very large then computing
this<00:13:38.750><c> quantity</c><00:13:38.810><c> can</c><00:13:39.500><c> be</c><00:13:39.650><c> slow</c><00:13:39.980><c> and</c><00:13:40.280><c> the</c><00:13:40.400><c> normal</c>

00:13:40.720 --> 00:13:40.730 align:start position:0%
this quantity can be slow and the normal
 

00:13:40.730 --> 00:13:42.520 align:start position:0%
this quantity can be slow and the normal
equation<00:13:41.090><c> that</c><00:13:41.240><c> that</c><00:13:41.480><c> can</c><00:13:41.930><c> actually</c><00:13:42.260><c> be</c><00:13:42.380><c> much</c>

00:13:42.520 --> 00:13:42.530 align:start position:0%
equation that that can actually be much
 

00:13:42.530 --> 00:13:47.170 align:start position:0%
equation that that can actually be much
slower<00:13:43.180><c> so</c><00:13:44.180><c> if</c><00:13:44.600><c> n</c><00:13:45.050><c> is</c><00:13:45.200><c> large</c><00:13:45.530><c> then</c><00:13:46.430><c> I</c><00:13:46.790><c> might</c>

00:13:47.170 --> 00:13:47.180 align:start position:0%
slower so if n is large then I might
 

00:13:47.180 --> 00:13:49.300 align:start position:0%
slower so if n is large then I might
usually<00:13:47.720><c> use</c><00:13:47.960><c> gradient</c><00:13:48.500><c> descent</c><00:13:48.530><c> because</c><00:13:49.160><c> we</c>

00:13:49.300 --> 00:13:49.310 align:start position:0%
usually use gradient descent because we
 

00:13:49.310 --> 00:13:51.070 align:start position:0%
usually use gradient descent because we
don't<00:13:49.490><c> want</c><00:13:49.610><c> to</c><00:13:49.700><c> pay</c><00:13:49.880><c> this</c><00:13:50.030><c> all</c><00:13:50.270><c> the</c><00:13:50.390><c> NQ</c><00:13:50.810><c> time</c>

00:13:51.070 --> 00:13:51.080 align:start position:0%
don't want to pay this all the NQ time
 

00:13:51.080 --> 00:13:53.470 align:start position:0%
don't want to pay this all the NQ time
but<00:13:51.680><c> the</c><00:13:51.800><c> Zen</c><00:13:51.980><c> is</c><00:13:52.130><c> relatively</c><00:13:52.760><c> small</c><00:13:53.060><c> then</c><00:13:53.360><c> the</c>

00:13:53.470 --> 00:13:53.480 align:start position:0%
but the Zen is relatively small then the
 

00:13:53.480 --> 00:13:54.970 align:start position:0%
but the Zen is relatively small then the
normal<00:13:53.750><c> equation</c><00:13:54.230><c> might</c><00:13:54.440><c> give</c><00:13:54.590><c> you</c><00:13:54.740><c> a</c><00:13:54.770><c> better</c>

00:13:54.970 --> 00:13:54.980 align:start position:0%
normal equation might give you a better
 

00:13:54.980 --> 00:13:57.940 align:start position:0%
normal equation might give you a better
way<00:13:55.160><c> to</c><00:13:55.220><c> solve</c><00:13:55.580><c> the</c><00:13:55.790><c> parameters</c><00:13:56.590><c> what</c><00:13:57.590><c> a</c><00:13:57.620><c> small</c>

00:13:57.940 --> 00:13:57.950 align:start position:0%
way to solve the parameters what a small
 

00:13:57.950 --> 00:14:00.370 align:start position:0%
way to solve the parameters what a small
and<00:13:58.100><c> large</c><00:13:58.310><c> mean</c><00:13:58.550><c> well</c><00:13:58.820><c> if</c><00:13:59.030><c> n</c><00:13:59.540><c> is</c><00:13:59.780><c> on</c><00:14:00.080><c> the</c><00:14:00.230><c> order</c>

00:14:00.370 --> 00:14:00.380 align:start position:0%
and large mean well if n is on the order
 

00:14:00.380 --> 00:14:02.740 align:start position:0%
and large mean well if n is on the order
of<00:14:00.530><c> a</c><00:14:00.710><c> hundred</c><00:14:00.740><c> then</c><00:14:01.700><c> inverting</c><00:14:02.390><c> one</c><00:14:02.510><c> hundred</c>

00:14:02.740 --> 00:14:02.750 align:start position:0%
of a hundred then inverting one hundred
 

00:14:02.750 --> 00:14:04.570 align:start position:0%
of a hundred then inverting one hundred
one<00:14:02.870><c> hundred</c><00:14:02.930><c> matrix</c><00:14:03.560><c> is</c><00:14:03.710><c> no</c><00:14:03.920><c> problem</c><00:14:04.400><c> by</c>

00:14:04.570 --> 00:14:04.580 align:start position:0%
one hundred matrix is no problem by
 

00:14:04.580 --> 00:14:06.970 align:start position:0%
one hundred matrix is no problem by
modern<00:14:04.970><c> computing</c><00:14:05.360><c> standards</c><00:14:05.990><c> if</c><00:14:06.170><c> n</c><00:14:06.800><c> is</c><00:14:06.950><c> a</c>

00:14:06.970 --> 00:14:06.980 align:start position:0%
modern computing standards if n is a
 

00:14:06.980 --> 00:14:09.460 align:start position:0%
modern computing standards if n is a
thousand<00:14:07.580><c> I</c><00:14:07.790><c> will</c><00:14:08.630><c> still</c><00:14:08.840><c> use</c><00:14:08.870><c> a</c><00:14:09.020><c> normal</c>

00:14:09.460 --> 00:14:09.470 align:start position:0%
thousand I will still use a normal
 

00:14:09.470 --> 00:14:11.140 align:start position:0%
thousand I will still use a normal
equation<00:14:09.860><c> method</c><00:14:09.890><c> inverting</c><00:14:10.640><c> a</c><00:14:10.700><c> thousand</c><00:14:11.060><c> by</c>

00:14:11.140 --> 00:14:11.150 align:start position:0%
equation method inverting a thousand by
 

00:14:11.150 --> 00:14:12.850 align:start position:0%
equation method inverting a thousand by
thousand<00:14:11.540><c> matrix</c><00:14:11.870><c> is</c><00:14:12.080><c> actually</c><00:14:12.410><c> a</c><00:14:12.440><c> really</c>

00:14:12.850 --> 00:14:12.860 align:start position:0%
thousand matrix is actually a really
 

00:14:12.860 --> 00:14:15.820 align:start position:0%
thousand matrix is actually a really
fast<00:14:13.160><c> in</c><00:14:13.310><c> the</c><00:14:13.370><c> modern</c><00:14:13.640><c> computer</c><00:14:13.790><c> if</c><00:14:14.630><c> n</c><00:14:15.380><c> is</c><00:14:15.560><c> ten</c>

00:14:15.820 --> 00:14:15.830 align:start position:0%
fast in the modern computer if n is ten
 

00:14:15.830 --> 00:14:17.550 align:start position:0%
fast in the modern computer if n is ten
thousand<00:14:16.370><c> then</c><00:14:16.670><c> I</c><00:14:16.850><c> might</c><00:14:17.030><c> start</c><00:14:17.300><c> to</c><00:14:17.450><c> wonder</c>

00:14:17.550 --> 00:14:17.560 align:start position:0%
thousand then I might start to wonder
 

00:14:17.560 --> 00:14:20.560 align:start position:0%
thousand then I might start to wonder
inverting<00:14:18.560><c> a</c><00:14:18.620><c> 10,000</c><00:14:19.250><c> by</c><00:14:19.310><c> 10,000</c><00:14:19.880><c> matrix</c><00:14:20.300><c> thus</c>

00:14:20.560 --> 00:14:20.570 align:start position:0%
inverting a 10,000 by 10,000 matrix thus
 

00:14:20.570 --> 00:14:22.330 align:start position:0%
inverting a 10,000 by 10,000 matrix thus
we<00:14:20.780><c> get</c><00:14:20.960><c> kind</c><00:14:21.230><c> of</c><00:14:21.440><c> slow</c><00:14:21.620><c> and</c><00:14:21.800><c> it</c><00:14:21.920><c> might</c><00:14:22.040><c> then</c>

00:14:22.330 --> 00:14:22.340 align:start position:0%
we get kind of slow and it might then
 

00:14:22.340 --> 00:14:25.270 align:start position:0%
we get kind of slow and it might then
start<00:14:22.850><c> to</c><00:14:23.090><c> maybe</c><00:14:23.810><c> lean</c><00:14:24.380><c> in</c><00:14:24.620><c> the</c><00:14:24.710><c> direction</c><00:14:25.040><c> of</c>

00:14:25.270 --> 00:14:25.280 align:start position:0%
start to maybe lean in the direction of
 

00:14:25.280 --> 00:14:26.980 align:start position:0%
start to maybe lean in the direction of
gradient<00:14:25.520><c> descent</c><00:14:25.700><c> but</c><00:14:26.120><c> maybe</c><00:14:26.300><c> not</c><00:14:26.510><c> quite</c><00:14:26.570><c> N</c>

00:14:26.980 --> 00:14:26.990 align:start position:0%
gradient descent but maybe not quite N
 

00:14:26.990 --> 00:14:28.870 align:start position:0%
gradient descent but maybe not quite N
equals<00:14:27.230><c> 10,000</c><00:14:27.830><c> you</c><00:14:27.920><c> can</c><00:14:28.070><c> sort</c><00:14:28.340><c> of</c><00:14:28.400><c> inverted</c>

00:14:28.870 --> 00:14:28.880 align:start position:0%
equals 10,000 you can sort of inverted
 

00:14:28.880 --> 00:14:31.450 align:start position:0%
equals 10,000 you can sort of inverted
10,000<00:14:29.390><c> by</c><00:14:29.450><c> 10,000</c><00:14:29.960><c> matrix</c><00:14:30.320><c> but</c><00:14:30.980><c> it</c><00:14:31.010><c> gets</c><00:14:31.280><c> much</c>

00:14:31.450 --> 00:14:31.460 align:start position:0%
10,000 by 10,000 matrix but it gets much
 

00:14:31.460 --> 00:14:33.040 align:start position:0%
10,000 by 10,000 matrix but it gets much
bigger<00:14:31.910><c> than</c><00:14:32.090><c> that</c><00:14:32.150><c> then</c><00:14:32.510><c> I</c><00:14:32.600><c> would</c><00:14:32.750><c> probably</c>

00:14:33.040 --> 00:14:33.050 align:start position:0%
bigger than that then I would probably
 

00:14:33.050 --> 00:14:35.380 align:start position:0%
bigger than that then I would probably
use<00:14:33.170><c> gradient</c><00:14:33.560><c> descent</c><00:14:33.590><c> so</c><00:14:34.100><c> if</c><00:14:34.280><c> N</c><00:14:34.520><c> equals</c><00:14:35.180><c> 10</c>

00:14:35.380 --> 00:14:35.390 align:start position:0%
use gradient descent so if N equals 10
 

00:14:35.390 --> 00:14:37.530 align:start position:0%
use gradient descent so if N equals 10
to<00:14:35.540><c> the</c><00:14:35.630><c> 6</c><00:14:35.870><c> or</c><00:14:36.050><c> even</c><00:14:36.290><c> million</c><00:14:36.620><c> features</c><00:14:37.010><c> then</c>

00:14:37.530 --> 00:14:37.540 align:start position:0%
to the 6 or even million features then
 

00:14:37.540 --> 00:14:40.540 align:start position:0%
to the 6 or even million features then
inverting<00:14:38.540><c> a</c><00:14:38.750><c> million</c><00:14:39.170><c> by</c><00:14:39.350><c> million</c><00:14:39.590><c> matrix</c><00:14:40.220><c> is</c>

00:14:40.540 --> 00:14:40.550 align:start position:0%
inverting a million by million matrix is
 

00:14:40.550 --> 00:14:42.430 align:start position:0%
inverting a million by million matrix is
going<00:14:40.850><c> to</c><00:14:40.910><c> be</c><00:14:41.000><c> very</c><00:14:41.210><c> expensive</c><00:14:41.600><c> and</c><00:14:42.050><c> I</c><00:14:42.260><c> would</c>

00:14:42.430 --> 00:14:42.440 align:start position:0%
going to be very expensive and I would
 

00:14:42.440 --> 00:14:44.200 align:start position:0%
going to be very expensive and I would
definitely<00:14:42.950><c> favor</c><00:14:43.190><c> gradient</c><00:14:43.700><c> descent</c><00:14:44.000><c> of</c><00:14:44.120><c> if</c>

00:14:44.200 --> 00:14:44.210 align:start position:0%
definitely favor gradient descent of if
 

00:14:44.210 --> 00:14:47.710 align:start position:0%
definitely favor gradient descent of if
that<00:14:44.420><c> many</c><00:14:44.600><c> features</c><00:14:44.990><c> so</c><00:14:45.950><c> exactly</c><00:14:46.820><c> how</c><00:14:47.150><c> washio</c>

00:14:47.710 --> 00:14:47.720 align:start position:0%
that many features so exactly how washio
 

00:14:47.720 --> 00:14:48.970 align:start position:0%
that many features so exactly how washio
set<00:14:47.930><c> of</c><00:14:48.020><c> features</c><00:14:48.140><c> has</c><00:14:48.440><c> to</c><00:14:48.470><c> be</c><00:14:48.590><c> before</c><00:14:48.650><c> you</c>

00:14:48.970 --> 00:14:48.980 align:start position:0%
set of features has to be before you
 

00:14:48.980 --> 00:14:51.100 align:start position:0%
set of features has to be before you
convert<00:14:49.250><c> to</c><00:14:49.490><c> greatness</c><00:14:49.700><c> N</c><00:14:49.970><c> and</c><00:14:50.510><c> it</c><00:14:50.720><c> was</c><00:14:50.870><c> hard</c>

00:14:51.100 --> 00:14:51.110 align:start position:0%
convert to greatness N and it was hard
 

00:14:51.110 --> 00:14:53.080 align:start position:0%
convert to greatness N and it was hard
to<00:14:51.170><c> give</c><00:14:51.500><c> a</c><00:14:51.530><c> strict</c><00:14:51.620><c> number</c><00:14:52.250><c> but</c><00:14:52.490><c> for</c><00:14:52.520><c> me</c><00:14:52.790><c> it's</c>

00:14:53.080 --> 00:14:53.090 align:start position:0%
to give a strict number but for me it's
 

00:14:53.090 --> 00:14:55.240 align:start position:0%
to give a strict number but for me it's
usually<00:14:53.300><c> around</c><00:14:53.750><c> 10,000</c><00:14:54.440><c> but</c><00:14:54.650><c> I</c><00:14:54.800><c> might</c><00:14:55.010><c> start</c>

00:14:55.240 --> 00:14:55.250 align:start position:0%
usually around 10,000 but I might start
 

00:14:55.250 --> 00:14:58.270 align:start position:0%
usually around 10,000 but I might start
start<00:14:56.120><c> to</c><00:14:56.240><c> consider</c><00:14:56.630><c> switching</c><00:14:56.960><c> over</c><00:14:57.290><c> to</c><00:14:57.710><c> our</c>

00:14:58.270 --> 00:14:58.280 align:start position:0%
start to consider switching over to our
 

00:14:58.280 --> 00:15:00.100 align:start position:0%
start to consider switching over to our
gradient<00:14:58.550><c> descent</c><00:14:59.000><c> or</c><00:14:59.300><c> maybe</c><00:14:59.720><c> some</c><00:15:00.080><c> other</c>

00:15:00.100 --> 00:15:00.110 align:start position:0%
gradient descent or maybe some other
 

00:15:00.110 --> 00:15:02.740 align:start position:0%
gradient descent or maybe some other
algorithms<00:15:00.760><c> that</c><00:15:01.760><c> I</c><00:15:01.820><c> will</c><00:15:02.150><c> talk</c><00:15:02.300><c> about</c><00:15:02.450><c> later</c>

00:15:02.740 --> 00:15:02.750 align:start position:0%
algorithms that I will talk about later
 

00:15:02.750 --> 00:15:05.830 align:start position:0%
algorithms that I will talk about later
in<00:15:02.870><c> the</c><00:15:03.050><c> sauce</c><00:15:03.290><c> to</c><00:15:04.100><c> summarize</c><00:15:04.610><c> so</c><00:15:05.330><c> long</c><00:15:05.540><c> as</c><00:15:05.690><c> the</c>

00:15:05.830 --> 00:15:05.840 align:start position:0%
in the sauce to summarize so long as the
 

00:15:05.840 --> 00:15:07.630 align:start position:0%
in the sauce to summarize so long as the
number<00:15:06.110><c> of</c><00:15:06.170><c> features</c><00:15:06.350><c> is</c><00:15:06.710><c> not</c><00:15:06.890><c> to</c><00:15:07.100><c> launch</c><00:15:07.310><c> the</c>

00:15:07.630 --> 00:15:07.640 align:start position:0%
number of features is not to launch the
 

00:15:07.640 --> 00:15:09.430 align:start position:0%
number of features is not to launch the
normal<00:15:08.030><c> equation</c><00:15:08.540><c> gives</c><00:15:08.840><c> us</c><00:15:08.960><c> a</c><00:15:09.140><c> great</c>

00:15:09.430 --> 00:15:09.440 align:start position:0%
normal equation gives us a great
 

00:15:09.440 --> 00:15:11.020 align:start position:0%
normal equation gives us a great
alternative<00:15:09.650><c> method</c><00:15:10.490><c> to</c><00:15:10.520><c> solve</c><00:15:10.820><c> for</c><00:15:10.940><c> the</c>

00:15:11.020 --> 00:15:11.030 align:start position:0%
alternative method to solve for the
 

00:15:11.030 --> 00:15:11.970 align:start position:0%
alternative method to solve for the
parameters<00:15:11.150><c> theta</c>

00:15:11.970 --> 00:15:11.980 align:start position:0%
parameters theta
 

00:15:11.980 --> 00:15:14.050 align:start position:0%
parameters theta
concretely<00:15:12.980><c> so</c><00:15:13.280><c> long</c><00:15:13.460><c> as</c><00:15:13.610><c> the</c><00:15:13.760><c> number</c><00:15:14.030><c> of</c>

00:15:14.050 --> 00:15:14.060 align:start position:0%
concretely so long as the number of
 

00:15:14.060 --> 00:15:16.510 align:start position:0%
concretely so long as the number of
features<00:15:14.450><c> is</c><00:15:14.750><c> less</c><00:15:15.050><c> than</c><00:15:15.200><c> 1000</c><00:15:15.830><c> you</c><00:15:16.340><c> know</c><00:15:16.490><c> I</c>

00:15:16.510 --> 00:15:16.520 align:start position:0%
features is less than 1000 you know I
 

00:15:16.520 --> 00:15:18.170 align:start position:0%
features is less than 1000 you know I
would<00:15:16.880><c> use</c><00:15:17.090><c> I</c><00:15:17.300><c> would</c><00:15:17.450><c> usually</c><00:15:17.600><c> just</c>

00:15:18.170 --> 00:15:18.180 align:start position:0%
would use I would usually just
 

00:15:18.180 --> 00:15:19.790 align:start position:0%
would use I would usually just
the<00:15:18.330><c> normal</c><00:15:18.690><c> equation</c><00:15:19.110><c> method</c><00:15:19.140><c> rather</c><00:15:19.620><c> than</c>

00:15:19.790 --> 00:15:19.800 align:start position:0%
the normal equation method rather than
 

00:15:19.800 --> 00:15:22.670 align:start position:0%
the normal equation method rather than
gradient<00:15:20.130><c> descent</c><00:15:20.580><c> to</c><00:15:21.110><c> preview</c><00:15:22.110><c> some</c><00:15:22.350><c> ideas</c>

00:15:22.670 --> 00:15:22.680 align:start position:0%
gradient descent to preview some ideas
 

00:15:22.680 --> 00:15:24.019 align:start position:0%
gradient descent to preview some ideas
that<00:15:22.950><c> we'll</c><00:15:23.100><c> talk</c><00:15:23.250><c> about</c><00:15:23.310><c> later</c><00:15:23.520><c> in</c><00:15:23.910><c> this</c>

00:15:24.019 --> 00:15:24.029 align:start position:0%
that we'll talk about later in this
 

00:15:24.029 --> 00:15:26.510 align:start position:0%
that we'll talk about later in this
course<00:15:24.330><c> as</c><00:15:24.540><c> we</c><00:15:25.470><c> get</c><00:15:25.620><c> to</c><00:15:25.770><c> the</c><00:15:25.860><c> more</c><00:15:26.040><c> complex</c>

00:15:26.510 --> 00:15:26.520 align:start position:0%
course as we get to the more complex
 

00:15:26.520 --> 00:15:28.340 align:start position:0%
course as we get to the more complex
learning<00:15:26.700><c> algorithm</c><00:15:27.360><c> for</c><00:15:27.570><c> example</c><00:15:28.020><c> when</c><00:15:28.230><c> we</c>

00:15:28.340 --> 00:15:28.350 align:start position:0%
learning algorithm for example when we
 

00:15:28.350 --> 00:15:30.079 align:start position:0%
learning algorithm for example when we
talk<00:15:28.380><c> about</c><00:15:28.770><c> classification</c><00:15:29.250><c> algorithms</c>

00:15:30.079 --> 00:15:30.089 align:start position:0%
talk about classification algorithms
 

00:15:30.089 --> 00:15:32.840 align:start position:0%
talk about classification algorithms
like<00:15:30.300><c> logistic</c><00:15:30.540><c> regression</c><00:15:31.380><c> algorithm</c><00:15:31.850><c> we'll</c>

00:15:32.840 --> 00:15:32.850 align:start position:0%
like logistic regression algorithm we'll
 

00:15:32.850 --> 00:15:34.730 align:start position:0%
like logistic regression algorithm we'll
see<00:15:33.089><c> that</c><00:15:33.270><c> those</c><00:15:33.480><c> algorithms</c><00:15:34.020><c> actually</c><00:15:34.470><c> the</c>

00:15:34.730 --> 00:15:34.740 align:start position:0%
see that those algorithms actually the
 

00:15:34.740 --> 00:15:36.680 align:start position:0%
see that those algorithms actually the
normal<00:15:35.370><c> equation</c><00:15:35.760><c> method</c><00:15:35.790><c> actually</c><00:15:36.240><c> do</c><00:15:36.510><c> not</c>

00:15:36.680 --> 00:15:36.690 align:start position:0%
normal equation method actually do not
 

00:15:36.690 --> 00:15:39.079 align:start position:0%
normal equation method actually do not
work<00:15:36.990><c> for</c><00:15:37.020><c> those</c><00:15:37.649><c> more</c><00:15:38.520><c> sophisticated</c>

00:15:39.079 --> 00:15:39.089 align:start position:0%
work for those more sophisticated
 

00:15:39.089 --> 00:15:41.360 align:start position:0%
work for those more sophisticated
learning<00:15:39.570><c> algorithms</c><00:15:40.050><c> and</c><00:15:40.260><c> we</c><00:15:40.830><c> will</c><00:15:41.040><c> have</c><00:15:41.220><c> to</c>

00:15:41.360 --> 00:15:41.370 align:start position:0%
learning algorithms and we will have to
 

00:15:41.370 --> 00:15:42.949 align:start position:0%
learning algorithms and we will have to
resort<00:15:41.760><c> to</c><00:15:41.880><c> gradient</c><00:15:42.450><c> descent</c><00:15:42.720><c> for</c><00:15:42.810><c> those</c>

00:15:42.949 --> 00:15:42.959 align:start position:0%
resort to gradient descent for those
 

00:15:42.959 --> 00:15:44.720 align:start position:0%
resort to gradient descent for those
algorithms<00:15:43.500><c> so</c><00:15:43.680><c> so</c><00:15:43.860><c> gradient</c><00:15:44.130><c> descent</c><00:15:44.550><c> is</c><00:15:44.670><c> a</c>

00:15:44.720 --> 00:15:44.730 align:start position:0%
algorithms so so gradient descent is a
 

00:15:44.730 --> 00:15:47.300 align:start position:0%
algorithms so so gradient descent is a
very<00:15:44.970><c> useful</c><00:15:45.180><c> algorithm</c><00:15:45.630><c> to</c><00:15:45.959><c> know</c><00:15:46.140><c> both</c><00:15:47.070><c> for</c>

00:15:47.300 --> 00:15:47.310 align:start position:0%
very useful algorithm to know both for
 

00:15:47.310 --> 00:15:49.040 align:start position:0%
very useful algorithm to know both for
linear<00:15:47.880><c> regression</c><00:15:47.910><c> when</c><00:15:48.540><c> we</c><00:15:48.630><c> have</c><00:15:48.779><c> a</c><00:15:48.810><c> large</c>

00:15:49.040 --> 00:15:49.050 align:start position:0%
linear regression when we have a large
 

00:15:49.050 --> 00:15:50.960 align:start position:0%
linear regression when we have a large
number<00:15:49.260><c> of</c><00:15:49.410><c> features</c><00:15:49.560><c> and</c><00:15:49.950><c> for</c><00:15:50.010><c> some</c><00:15:50.760><c> of</c><00:15:50.850><c> the</c>

00:15:50.960 --> 00:15:50.970 align:start position:0%
number of features and for some of the
 

00:15:50.970 --> 00:15:53.720 align:start position:0%
number of features and for some of the
other<00:15:51.360><c> algorithms</c><00:15:52.080><c> that</c><00:15:52.380><c> we'll</c><00:15:53.250><c> see</c><00:15:53.459><c> in</c><00:15:53.610><c> this</c>

00:15:53.720 --> 00:15:53.730 align:start position:0%
other algorithms that we'll see in this
 

00:15:53.730 --> 00:15:55.790 align:start position:0%
other algorithms that we'll see in this
course<00:15:54.060><c> because</c><00:15:54.959><c> for</c><00:15:55.140><c> them</c><00:15:55.260><c> the</c><00:15:55.440><c> normal</c>

00:15:55.790 --> 00:15:55.800 align:start position:0%
course because for them the normal
 

00:15:55.800 --> 00:15:57.260 align:start position:0%
course because for them the normal
equation<00:15:56.160><c> method</c><00:15:56.190><c> just</c><00:15:56.610><c> doesn't</c><00:15:57.000><c> apply</c><00:15:57.149><c> it</c>

00:15:57.260 --> 00:15:57.270 align:start position:0%
equation method just doesn't apply it
 

00:15:57.270 --> 00:15:59.930 align:start position:0%
equation method just doesn't apply it
doesn't<00:15:57.660><c> work</c><00:15:57.779><c> but</c><00:15:58.560><c> for</c><00:15:58.860><c> the</c><00:15:59.040><c> specific</c><00:15:59.490><c> model</c>

00:15:59.930 --> 00:15:59.940 align:start position:0%
doesn't work but for the specific model
 

00:15:59.940 --> 00:16:02.660 align:start position:0%
doesn't work but for the specific model
of<00:16:00.149><c> linear</c><00:16:00.660><c> regression</c><00:16:00.779><c> the</c><00:16:01.680><c> normal</c><00:16:02.190><c> equation</c>

00:16:02.660 --> 00:16:02.670 align:start position:0%
of linear regression the normal equation
 

00:16:02.670 --> 00:16:06.380 align:start position:0%
of linear regression the normal equation
can<00:16:03.000><c> give</c><00:16:03.270><c> you</c><00:16:03.510><c> a</c><00:16:04.430><c> alternative</c><00:16:05.430><c> then</c><00:16:05.790><c> can</c><00:16:06.120><c> be</c>

00:16:06.380 --> 00:16:06.390 align:start position:0%
can give you a alternative then can be
 

00:16:06.390 --> 00:16:08.900 align:start position:0%
can give you a alternative then can be
much<00:16:06.660><c> faster</c><00:16:07.200><c> than</c><00:16:07.649><c> gradient</c><00:16:07.709><c> descent</c><00:16:08.399><c> and</c><00:16:08.610><c> so</c>

00:16:08.900 --> 00:16:08.910 align:start position:0%
much faster than gradient descent and so
 

00:16:08.910 --> 00:16:11.030 align:start position:0%
much faster than gradient descent and so
depending<00:16:09.899><c> on</c><00:16:10.140><c> the</c><00:16:10.260><c> details</c><00:16:10.680><c> of</c><00:16:10.980><c> your</c>

00:16:11.030 --> 00:16:11.040 align:start position:0%
depending on the details of your
 

00:16:11.040 --> 00:16:13.160 align:start position:0%
depending on the details of your
algorithm<00:16:11.700><c> it</c><00:16:11.940><c> depend</c><00:16:12.420><c> on</c><00:16:12.510><c> the</c><00:16:12.630><c> details</c><00:16:12.779><c> of</c>

00:16:13.160 --> 00:16:13.170 align:start position:0%
algorithm it depend on the details of
 

00:16:13.170 --> 00:16:14.810 align:start position:0%
algorithm it depend on the details of
your<00:16:13.230><c> problem</c><00:16:13.740><c> and</c><00:16:13.950><c> how</c><00:16:14.130><c> many</c><00:16:14.310><c> features</c><00:16:14.700><c> you</c>

00:16:14.810 --> 00:16:14.820 align:start position:0%
your problem and how many features you
 

00:16:14.820 --> 00:16:16.519 align:start position:0%
your problem and how many features you
have<00:16:15.000><c> both</c><00:16:15.600><c> of</c><00:16:15.779><c> these</c><00:16:15.870><c> algorithms</c><00:16:16.200><c> are</c><00:16:16.470><c> well</c>

00:16:16.519 --> 00:16:16.529 align:start position:0%
have both of these algorithms are well
 

00:16:16.529 --> 00:16:19.310 align:start position:0%
have both of these algorithms are well
worth<00:16:16.830><c> knowing</c><00:16:16.890><c> about</c>

