WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.090 align:start position:0%
 
in<00:00:00.060><c> the</c><00:00:00.570><c> last</c><00:00:00.750><c> video</c><00:00:01.140><c> we</c><00:00:01.709><c> talked</c><00:00:01.949><c> about</c>

00:00:02.090 --> 00:00:02.100 align:start position:0%
in the last video we talked about
 

00:00:02.100 --> 00:00:04.820 align:start position:0%
in the last video we talked about
gradient<00:00:02.700><c> descent</c><00:00:02.820><c> for</c><00:00:03.720><c> minimizing</c><00:00:03.929><c> the</c><00:00:04.589><c> cost</c>

00:00:04.820 --> 00:00:04.830 align:start position:0%
gradient descent for minimizing the cost
 

00:00:04.830 --> 00:00:06.349 align:start position:0%
gradient descent for minimizing the cost
function<00:00:05.009><c> J</c><00:00:05.279><c> of</c><00:00:05.670><c> theta</c><00:00:05.700><c> for</c><00:00:06.330><c> logistic</c>

00:00:06.349 --> 00:00:06.359 align:start position:0%
function J of theta for logistic
 

00:00:06.359 --> 00:00:09.080 align:start position:0%
function J of theta for logistic
regression<00:00:06.779><c> in</c><00:00:07.440><c> this</c><00:00:08.130><c> video</c><00:00:08.460><c> I'd</c><00:00:08.730><c> like</c><00:00:08.940><c> to</c>

00:00:09.080 --> 00:00:09.090 align:start position:0%
regression in this video I'd like to
 

00:00:09.090 --> 00:00:10.580 align:start position:0%
regression in this video I'd like to
tell<00:00:09.300><c> you</c><00:00:09.330><c> about</c><00:00:09.690><c> some</c><00:00:10.139><c> advanced</c>

00:00:10.580 --> 00:00:10.590 align:start position:0%
tell you about some advanced
 

00:00:10.590 --> 00:00:12.530 align:start position:0%
tell you about some advanced
optimization<00:00:11.550><c> algorithms</c><00:00:12.150><c> and</c><00:00:12.300><c> some</c>

00:00:12.530 --> 00:00:12.540 align:start position:0%
optimization algorithms and some
 

00:00:12.540 --> 00:00:15.410 align:start position:0%
optimization algorithms and some
advanced<00:00:13.110><c> optimization</c><00:00:13.670><c> concepts</c><00:00:14.670><c> using</c>

00:00:15.410 --> 00:00:15.420 align:start position:0%
advanced optimization concepts using
 

00:00:15.420 --> 00:00:17.689 align:start position:0%
advanced optimization concepts using
some<00:00:15.690><c> of</c><00:00:15.809><c> these</c><00:00:15.900><c> ideas</c><00:00:16.109><c> we'll</c><00:00:16.650><c> be</c><00:00:16.770><c> able</c><00:00:16.890><c> to</c><00:00:17.400><c> get</c>

00:00:17.689 --> 00:00:17.699 align:start position:0%
some of these ideas we'll be able to get
 

00:00:17.699 --> 00:00:19.760 align:start position:0%
some of these ideas we'll be able to get
logistic<00:00:17.910><c> regression</c><00:00:18.690><c> to</c><00:00:19.140><c> run</c><00:00:19.380><c> much</c><00:00:19.590><c> more</c>

00:00:19.760 --> 00:00:19.770 align:start position:0%
logistic regression to run much more
 

00:00:19.770 --> 00:00:22.010 align:start position:0%
logistic regression to run much more
quickly<00:00:20.039><c> than</c><00:00:20.189><c> is</c><00:00:20.490><c> possible</c><00:00:20.699><c> with</c><00:00:21.090><c> gradient</c>

00:00:22.010 --> 00:00:22.020 align:start position:0%
quickly than is possible with gradient
 

00:00:22.020 --> 00:00:24.620 align:start position:0%
quickly than is possible with gradient
descent<00:00:22.350><c> and</c><00:00:22.560><c> this</c><00:00:23.490><c> will</c><00:00:23.640><c> also</c><00:00:24.000><c> let</c><00:00:24.510><c> the</c>

00:00:24.620 --> 00:00:24.630 align:start position:0%
descent and this will also let the
 

00:00:24.630 --> 00:00:27.019 align:start position:0%
descent and this will also let the
algorithms<00:00:25.140><c> scale</c><00:00:25.560><c> much</c><00:00:26.010><c> better</c><00:00:26.279><c> to</c><00:00:26.820><c> very</c>

00:00:27.019 --> 00:00:27.029 align:start position:0%
algorithms scale much better to very
 

00:00:27.029 --> 00:00:28.910 align:start position:0%
algorithms scale much better to very
large<00:00:27.359><c> machine</c><00:00:27.630><c> learning</c><00:00:28.080><c> problems</c><00:00:28.529><c> such</c><00:00:28.890><c> as</c>

00:00:28.910 --> 00:00:28.920 align:start position:0%
large machine learning problems such as
 

00:00:28.920 --> 00:00:30.740 align:start position:0%
large machine learning problems such as
if<00:00:29.429><c> we</c><00:00:29.609><c> have</c><00:00:29.789><c> a</c><00:00:29.820><c> very</c><00:00:30.060><c> large</c><00:00:30.300><c> number</c><00:00:30.720><c> of</c>

00:00:30.740 --> 00:00:30.750 align:start position:0%
if we have a very large number of
 

00:00:30.750 --> 00:00:33.260 align:start position:0%
if we have a very large number of
features<00:00:31.170><c> here's</c><00:00:32.040><c> an</c><00:00:32.219><c> alternative</c><00:00:32.969><c> view</c><00:00:33.239><c> of</c>

00:00:33.260 --> 00:00:33.270 align:start position:0%
features here's an alternative view of
 

00:00:33.270 --> 00:00:35.780 align:start position:0%
features here's an alternative view of
what<00:00:33.930><c> gradient</c><00:00:34.230><c> descent</c><00:00:34.440><c> is</c><00:00:34.829><c> doing</c><00:00:35.190><c> we</c><00:00:35.700><c> have</c>

00:00:35.780 --> 00:00:35.790 align:start position:0%
what gradient descent is doing we have
 

00:00:35.790 --> 00:00:37.580 align:start position:0%
what gradient descent is doing we have
some<00:00:36.000><c> cost</c><00:00:36.270><c> function</c><00:00:36.660><c> J</c><00:00:36.870><c> and</c><00:00:36.899><c> we</c><00:00:37.290><c> want</c><00:00:37.500><c> to</c>

00:00:37.580 --> 00:00:37.590 align:start position:0%
some cost function J and we want to
 

00:00:37.590 --> 00:00:40.850 align:start position:0%
some cost function J and we want to
minimize<00:00:37.739><c> it</c><00:00:38.190><c> so</c><00:00:39.120><c> what</c><00:00:39.480><c> we</c><00:00:39.600><c> need</c><00:00:39.899><c> to</c><00:00:39.930><c> do</c><00:00:40.230><c> is</c><00:00:40.559><c> we</c>

00:00:40.850 --> 00:00:40.860 align:start position:0%
minimize it so what we need to do is we
 

00:00:40.860 --> 00:00:42.979 align:start position:0%
minimize it so what we need to do is we
need<00:00:41.010><c> to</c><00:00:41.129><c> write</c><00:00:41.280><c> code</c><00:00:41.610><c> they</c><00:00:42.180><c> can</c><00:00:42.390><c> take</c><00:00:42.840><c> as</c>

00:00:42.979 --> 00:00:42.989 align:start position:0%
need to write code they can take as
 

00:00:42.989 --> 00:00:45.500 align:start position:0%
need to write code they can take as
input<00:00:43.140><c> the</c><00:00:43.410><c> parameters</c><00:00:43.680><c> theta</c><00:00:44.219><c> and</c><00:00:44.610><c> they</c><00:00:45.329><c> can</c>

00:00:45.500 --> 00:00:45.510 align:start position:0%
input the parameters theta and they can
 

00:00:45.510 --> 00:00:48.049 align:start position:0%
input the parameters theta and they can
compute<00:00:45.960><c> two</c><00:00:46.110><c> things</c><00:00:46.350><c> J</c><00:00:46.680><c> of</c><00:00:46.800><c> theta</c><00:00:46.829><c> and</c><00:00:47.370><c> these</c>

00:00:48.049 --> 00:00:48.059 align:start position:0%
compute two things J of theta and these
 

00:00:48.059 --> 00:00:50.750 align:start position:0%
compute two things J of theta and these
partial<00:00:48.170><c> derivative</c><00:00:49.170><c> terms</c><00:00:49.500><c> for</c><00:00:50.190><c> your</c><00:00:50.460><c> J</c>

00:00:50.750 --> 00:00:50.760 align:start position:0%
partial derivative terms for your J
 

00:00:50.760 --> 00:00:53.990 align:start position:0%
partial derivative terms for your J
equals<00:00:51.090><c> 0</c><00:00:51.449><c> 1</c><00:00:51.719><c> up</c><00:00:51.930><c> to</c><00:00:51.960><c> n</c><00:00:52.399><c> given</c><00:00:53.399><c> code</c><00:00:53.670><c> they</c><00:00:53.820><c> can</c>

00:00:53.990 --> 00:00:54.000 align:start position:0%
equals 0 1 up to n given code they can
 

00:00:54.000 --> 00:00:55.369 align:start position:0%
equals 0 1 up to n given code they can
do<00:00:54.120><c> these</c><00:00:54.329><c> two</c><00:00:54.570><c> things</c><00:00:54.840><c> what</c><00:00:55.140><c> gradient</c>

00:00:55.369 --> 00:00:55.379 align:start position:0%
do these two things what gradient
 

00:00:55.379 --> 00:00:58.099 align:start position:0%
do these two things what gradient
descent<00:00:55.590><c> does</c><00:00:56.100><c> is</c><00:00:56.370><c> it</c><00:00:56.820><c> repeatedly</c><00:00:57.360><c> performs</c>

00:00:58.099 --> 00:00:58.109 align:start position:0%
descent does is it repeatedly performs
 

00:00:58.109 --> 00:01:00.260 align:start position:0%
descent does is it repeatedly performs
the<00:00:58.230><c> following</c><00:00:58.410><c> update</c><00:00:58.980><c> right</c><00:00:59.219><c> so</c><00:00:59.460><c> given</c><00:00:59.879><c> the</c>

00:01:00.260 --> 00:01:00.270 align:start position:0%
the following update right so given the
 

00:01:00.270 --> 00:01:01.639 align:start position:0%
the following update right so given the
code<00:01:00.480><c> that</c><00:01:00.629><c> we</c><00:01:00.840><c> wrote</c><00:01:01.050><c> to</c><00:01:01.199><c> compute</c><00:01:01.559><c> these</c>

00:01:01.639 --> 00:01:01.649 align:start position:0%
code that we wrote to compute these
 

00:01:01.649 --> 00:01:03.799 align:start position:0%
code that we wrote to compute these
partial<00:01:01.710><c> derivatives</c><00:01:02.640><c> gradient</c><00:01:03.480><c> descent</c>

00:01:03.799 --> 00:01:03.809 align:start position:0%
partial derivatives gradient descent
 

00:01:03.809 --> 00:01:06.710 align:start position:0%
partial derivatives gradient descent
plugs<00:01:04.080><c> in</c><00:01:04.409><c> here</c><00:01:04.439><c> and</c><00:01:04.860><c> uses</c><00:01:05.850><c> that</c><00:01:06.060><c> to</c><00:01:06.270><c> update</c>

00:01:06.710 --> 00:01:06.720 align:start position:0%
plugs in here and uses that to update
 

00:01:06.720 --> 00:01:09.500 align:start position:0%
plugs in here and uses that to update
our<00:01:06.750><c> parameters</c><00:01:07.320><c> theta</c><00:01:07.790><c> so</c><00:01:08.790><c> another</c><00:01:09.360><c> way</c><00:01:09.479><c> of</c>

00:01:09.500 --> 00:01:09.510 align:start position:0%
our parameters theta so another way of
 

00:01:09.510 --> 00:01:11.240 align:start position:0%
our parameters theta so another way of
thinking<00:01:09.630><c> about</c><00:01:10.020><c> gradient</c><00:01:10.530><c> descent</c><00:01:10.830><c> is</c><00:01:11.010><c> that</c>

00:01:11.240 --> 00:01:11.250 align:start position:0%
thinking about gradient descent is that
 

00:01:11.250 --> 00:01:13.520 align:start position:0%
thinking about gradient descent is that
we<00:01:11.490><c> need</c><00:01:11.700><c> to</c><00:01:11.850><c> supply</c><00:01:12.150><c> code</c><00:01:12.600><c> to</c><00:01:12.840><c> compute</c><00:01:13.170><c> J</c><00:01:13.409><c> of</c>

00:01:13.520 --> 00:01:13.530 align:start position:0%
we need to supply code to compute J of
 

00:01:13.530 --> 00:01:15.859 align:start position:0%
we need to supply code to compute J of
theta<00:01:13.560><c> and</c><00:01:14.189><c> these</c><00:01:14.400><c> derivatives</c><00:01:15.030><c> and</c><00:01:15.270><c> then</c>

00:01:15.859 --> 00:01:15.869 align:start position:0%
theta and these derivatives and then
 

00:01:15.869 --> 00:01:17.810 align:start position:0%
theta and these derivatives and then
these<00:01:16.110><c> get</c><00:01:16.350><c> plugged</c><00:01:16.680><c> into</c><00:01:16.890><c> gradient</c><00:01:17.220><c> descents</c>

00:01:17.810 --> 00:01:17.820 align:start position:0%
these get plugged into gradient descents
 

00:01:17.820 --> 00:01:19.550 align:start position:0%
these get plugged into gradient descents
which<00:01:18.000><c> can</c><00:01:18.210><c> then</c><00:01:18.420><c> try</c><00:01:18.930><c> to</c><00:01:18.990><c> minimize</c><00:01:19.140><c> the</c>

00:01:19.550 --> 00:01:19.560 align:start position:0%
which can then try to minimize the
 

00:01:19.560 --> 00:01:22.010 align:start position:0%
which can then try to minimize the
function<00:01:19.680><c> for</c><00:01:20.130><c> us</c><00:01:20.189><c> for</c><00:01:21.119><c> gradient</c><00:01:21.450><c> descent</c><00:01:21.840><c> I</c>

00:01:22.010 --> 00:01:22.020 align:start position:0%
function for us for gradient descent I
 

00:01:22.020 --> 00:01:23.330 align:start position:0%
function for us for gradient descent I
guess<00:01:22.170><c> technically</c><00:01:22.650><c> you</c><00:01:22.770><c> don't</c><00:01:23.100><c> actually</c>

00:01:23.330 --> 00:01:23.340 align:start position:0%
guess technically you don't actually
 

00:01:23.340 --> 00:01:26.210 align:start position:0%
guess technically you don't actually
need<00:01:23.759><c> code</c><00:01:24.119><c> to</c><00:01:24.500><c> compute</c><00:01:25.500><c> the</c><00:01:25.619><c> cost</c><00:01:25.799><c> function</c><00:01:25.920><c> J</c>

00:01:26.210 --> 00:01:26.220 align:start position:0%
need code to compute the cost function J
 

00:01:26.220 --> 00:01:26.899 align:start position:0%
need code to compute the cost function J
of<00:01:26.430><c> theta</c>

00:01:26.899 --> 00:01:26.909 align:start position:0%
of theta
 

00:01:26.909 --> 00:01:28.550 align:start position:0%
of theta
you<00:01:27.150><c> only</c><00:01:27.330><c> need</c><00:01:27.570><c> code</c><00:01:27.810><c> to</c><00:01:27.960><c> compute</c><00:01:28.320><c> the</c>

00:01:28.550 --> 00:01:28.560 align:start position:0%
you only need code to compute the
 

00:01:28.560 --> 00:01:30.530 align:start position:0%
you only need code to compute the
derivative<00:01:29.040><c> terms</c><00:01:29.280><c> but</c><00:01:29.909><c> if</c><00:01:30.119><c> you</c><00:01:30.240><c> think</c><00:01:30.390><c> of</c>

00:01:30.530 --> 00:01:30.540 align:start position:0%
derivative terms but if you think of
 

00:01:30.540 --> 00:01:32.929 align:start position:0%
derivative terms but if you think of
your<00:01:30.630><c> code</c><00:01:30.869><c> as</c><00:01:31.079><c> also</c><00:01:31.259><c> monitoring</c><00:01:32.250><c> convergence</c>

00:01:32.929 --> 00:01:32.939 align:start position:0%
your code as also monitoring convergence
 

00:01:32.939 --> 00:01:34.969 align:start position:0%
your code as also monitoring convergence
of<00:01:33.060><c> some</c><00:01:33.210><c> such</c><00:01:33.450><c> we'll</c><00:01:33.869><c> think</c><00:01:34.020><c> of</c><00:01:34.200><c> this</c><00:01:34.409><c> we'll</c>

00:01:34.969 --> 00:01:34.979 align:start position:0%
of some such we'll think of this we'll
 

00:01:34.979 --> 00:01:36.620 align:start position:0%
of some such we'll think of this we'll
just<00:01:35.280><c> think</c><00:01:35.460><c> of</c><00:01:35.579><c> ourselves</c><00:01:35.670><c> as</c><00:01:36.090><c> providing</c>

00:01:36.620 --> 00:01:36.630 align:start position:0%
just think of ourselves as providing
 

00:01:36.630 --> 00:01:38.600 align:start position:0%
just think of ourselves as providing
code<00:01:36.840><c> to</c><00:01:37.020><c> probe</c><00:01:37.170><c> up</c><00:01:37.380><c> to</c><00:01:37.560><c> compute</c><00:01:37.950><c> both</c><00:01:38.400><c> the</c>

00:01:38.600 --> 00:01:38.610 align:start position:0%
code to probe up to compute both the
 

00:01:38.610 --> 00:01:41.889 align:start position:0%
code to probe up to compute both the
cost<00:01:38.850><c> function</c><00:01:39.030><c> and</c><00:01:39.420><c> the</c><00:01:39.689><c> derivative</c><00:01:39.720><c> terms</c>

00:01:41.889 --> 00:01:41.899 align:start position:0%
cost function and the derivative terms
 

00:01:41.899 --> 00:01:44.840 align:start position:0%
cost function and the derivative terms
so<00:01:42.899><c> having</c><00:01:43.500><c> written</c><00:01:43.710><c> code</c><00:01:44.100><c> to</c><00:01:44.310><c> compute</c><00:01:44.700><c> these</c>

00:01:44.840 --> 00:01:44.850 align:start position:0%
so having written code to compute these
 

00:01:44.850 --> 00:01:47.300 align:start position:0%
so having written code to compute these
two<00:01:44.909><c> things</c><00:01:45.360><c> one</c><00:01:46.049><c> algorithm</c><00:01:46.439><c> we</c><00:01:46.680><c> can</c><00:01:46.829><c> use</c><00:01:47.070><c> is</c>

00:01:47.300 --> 00:01:47.310 align:start position:0%
two things one algorithm we can use is
 

00:01:47.310 --> 00:01:50.090 align:start position:0%
two things one algorithm we can use is
gradient<00:01:47.820><c> descent</c><00:01:48.210><c> but</c><00:01:49.049><c> gradient</c><00:01:49.470><c> is</c><00:01:49.590><c> descent</c>

00:01:50.090 --> 00:01:50.100 align:start position:0%
gradient descent but gradient is descent
 

00:01:50.100 --> 00:01:52.280 align:start position:0%
gradient descent but gradient is descent
isn't<00:01:50.369><c> the</c><00:01:50.670><c> only</c><00:01:51.030><c> algorithm</c><00:01:51.360><c> we</c><00:01:51.630><c> can</c><00:01:51.780><c> use</c><00:01:52.020><c> and</c>

00:01:52.280 --> 00:01:52.290 align:start position:0%
isn't the only algorithm we can use and
 

00:01:52.290 --> 00:01:54.950 align:start position:0%
isn't the only algorithm we can use and
there<00:01:52.920><c> are</c><00:01:53.070><c> other</c><00:01:53.270><c> algorithms</c><00:01:54.270><c> more</c><00:01:54.509><c> advanced</c>

00:01:54.950 --> 00:01:54.960 align:start position:0%
there are other algorithms more advanced
 

00:01:54.960 --> 00:01:57.709 align:start position:0%
there are other algorithms more advanced
more<00:01:55.259><c> sophisticated</c><00:01:55.860><c> ones</c><00:01:56.219><c> that</c><00:01:56.850><c> if</c><00:01:57.210><c> we</c><00:01:57.540><c> only</c>

00:01:57.709 --> 00:01:57.719 align:start position:0%
more sophisticated ones that if we only
 

00:01:57.719 --> 00:02:00.319 align:start position:0%
more sophisticated ones that if we only
provide<00:01:58.140><c> them</c><00:01:58.619><c> a</c><00:01:58.829><c> way</c><00:01:59.009><c> to</c><00:01:59.310><c> compute</c><00:01:59.909><c> these</c><00:02:00.149><c> two</c>

00:02:00.319 --> 00:02:00.329 align:start position:0%
provide them a way to compute these two
 

00:02:00.329 --> 00:02:01.910 align:start position:0%
provide them a way to compute these two
things<00:02:00.630><c> then</c><00:02:01.200><c> these</c><00:02:01.680><c> are</c><00:02:01.740><c> different</c>

00:02:01.910 --> 00:02:01.920 align:start position:0%
things then these are different
 

00:02:01.920 --> 00:02:03.980 align:start position:0%
things then these are different
approaches<00:02:02.729><c> to</c><00:02:03.000><c> optimize</c><00:02:03.450><c> the</c><00:02:03.630><c> cost</c><00:02:03.780><c> function</c>

00:02:03.980 --> 00:02:03.990 align:start position:0%
approaches to optimize the cost function
 

00:02:03.990 --> 00:02:06.709 align:start position:0%
approaches to optimize the cost function
for<00:02:04.409><c> us</c><00:02:04.500><c> so</c><00:02:05.219><c> conjugate</c><00:02:05.700><c> gradient</c><00:02:06.119><c> bfgs</c><00:02:06.299><c> and</c>

00:02:06.709 --> 00:02:06.719 align:start position:0%
for us so conjugate gradient bfgs and
 

00:02:06.719 --> 00:02:09.440 align:start position:0%
for us so conjugate gradient bfgs and
l-bfgs<00:02:07.020><c> are</c><00:02:07.970><c> examples</c><00:02:08.970><c> of</c><00:02:09.239><c> more</c>

00:02:09.440 --> 00:02:09.450 align:start position:0%
l-bfgs are examples of more
 

00:02:09.450 --> 00:02:11.150 align:start position:0%
l-bfgs are examples of more
sophisticated<00:02:10.020><c> optimization</c><00:02:10.770><c> algorithms</c>

00:02:11.150 --> 00:02:11.160 align:start position:0%
sophisticated optimization algorithms
 

00:02:11.160 --> 00:02:12.950 align:start position:0%
sophisticated optimization algorithms
that<00:02:11.610><c> need</c><00:02:11.879><c> a</c><00:02:11.910><c> way</c><00:02:12.150><c> to</c><00:02:12.209><c> compute</c><00:02:12.599><c> J</c>

00:02:12.950 --> 00:02:12.960 align:start position:0%
that need a way to compute J
 

00:02:12.960 --> 00:02:14.240 align:start position:0%
that need a way to compute J
they<00:02:13.050><c> turn</c><00:02:13.260><c> either</c><00:02:13.530><c> way</c><00:02:13.740><c> to</c><00:02:13.800><c> compute</c><00:02:14.160><c> the</c>

00:02:14.240 --> 00:02:14.250 align:start position:0%
they turn either way to compute the
 

00:02:14.250 --> 00:02:16.940 align:start position:0%
they turn either way to compute the
derivatives<00:02:14.400><c> and</c><00:02:14.970><c> can</c><00:02:15.660><c> then</c><00:02:15.870><c> use</c><00:02:16.680><c> more</c>

00:02:16.940 --> 00:02:16.950 align:start position:0%
derivatives and can then use more
 

00:02:16.950 --> 00:02:18.680 align:start position:0%
derivatives and can then use more
sophisticated<00:02:17.210><c> strategies</c><00:02:18.210><c> than</c><00:02:18.480><c> gradient</c>

00:02:18.680 --> 00:02:18.690 align:start position:0%
sophisticated strategies than gradient
 

00:02:18.690 --> 00:02:20.380 align:start position:0%
sophisticated strategies than gradient
descent<00:02:18.870><c> to</c><00:02:19.290><c> minimize</c><00:02:19.320><c> the</c><00:02:19.770><c> cost</c><00:02:19.920><c> function</c>

00:02:20.380 --> 00:02:20.390 align:start position:0%
descent to minimize the cost function
 

00:02:20.390 --> 00:02:23.330 align:start position:0%
descent to minimize the cost function
the<00:02:21.390><c> details</c><00:02:21.840><c> of</c><00:02:22.050><c> exactly</c><00:02:22.140><c> what</c><00:02:22.770><c> these</c><00:02:22.950><c> three</c>

00:02:23.330 --> 00:02:23.340 align:start position:0%
the details of exactly what these three
 

00:02:23.340 --> 00:02:25.460 align:start position:0%
the details of exactly what these three
algorithms<00:02:23.670><c> that</c><00:02:23.970><c> do</c><00:02:24.180><c> is</c><00:02:24.450><c> well</c><00:02:24.990><c> beyond</c><00:02:25.350><c> the</c>

00:02:25.460 --> 00:02:25.470 align:start position:0%
algorithms that do is well beyond the
 

00:02:25.470 --> 00:02:28.160 align:start position:0%
algorithms that do is well beyond the
scope<00:02:25.680><c> of</c><00:02:25.740><c> this</c><00:02:25.950><c> course</c><00:02:26.250><c> and</c><00:02:26.520><c> in</c><00:02:27.240><c> fact</c><00:02:27.510><c> you</c>

00:02:28.160 --> 00:02:28.170 align:start position:0%
scope of this course and in fact you
 

00:02:28.170 --> 00:02:30.740 align:start position:0%
scope of this course and in fact you
often<00:02:28.410><c> end</c><00:02:28.830><c> up</c><00:02:28.980><c> spending</c><00:02:29.580><c> you</c><00:02:30.000><c> know</c><00:02:30.030><c> many</c><00:02:30.510><c> days</c>

00:02:30.740 --> 00:02:30.750 align:start position:0%
often end up spending you know many days
 

00:02:30.750 --> 00:02:32.630 align:start position:0%
often end up spending you know many days
or<00:02:31.020><c> small</c><00:02:31.350><c> number</c><00:02:31.590><c> of</c><00:02:31.650><c> weeks</c><00:02:31.890><c> studying</c><00:02:32.460><c> these</c>

00:02:32.630 --> 00:02:32.640 align:start position:0%
or small number of weeks studying these
 

00:02:32.640 --> 00:02:34.340 align:start position:0%
or small number of weeks studying these
algorithms<00:02:32.970><c> if</c><00:02:33.390><c> you</c><00:02:33.480><c> take</c><00:02:33.660><c> a</c><00:02:33.690><c> class</c><00:02:33.990><c> if</c><00:02:34.230><c> you</c>

00:02:34.340 --> 00:02:34.350 align:start position:0%
algorithms if you take a class if you
 

00:02:34.350 --> 00:02:35.570 align:start position:0%
algorithms if you take a class if you
take<00:02:34.500><c> a</c><00:02:34.530><c> class</c><00:02:34.770><c> in</c><00:02:34.980><c> the</c><00:02:35.070><c> advanced</c><00:02:35.310><c> numerical</c>

00:02:35.570 --> 00:02:35.580 align:start position:0%
take a class in the advanced numerical
 

00:02:35.580 --> 00:02:37.670 align:start position:0%
take a class in the advanced numerical
computing<00:02:36.330><c> but</c><00:02:37.050><c> let</c><00:02:37.170><c> me</c><00:02:37.230><c> just</c><00:02:37.410><c> tell</c><00:02:37.560><c> you</c><00:02:37.650><c> about</c>

00:02:37.670 --> 00:02:37.680 align:start position:0%
computing but let me just tell you about
 

00:02:37.680 --> 00:02:40.490 align:start position:0%
computing but let me just tell you about
some<00:02:38.010><c> of</c><00:02:38.130><c> their</c><00:02:38.250><c> properties</c><00:02:39.260><c> these</c><00:02:40.260><c> three</c>

00:02:40.490 --> 00:02:40.500 align:start position:0%
some of their properties these three
 

00:02:40.500 --> 00:02:43.070 align:start position:0%
some of their properties these three
algorithms<00:02:40.830><c> have</c><00:02:41.340><c> number</c><00:02:41.730><c> of</c><00:02:41.820><c> advantages</c><00:02:42.450><c> one</c>

00:02:43.070 --> 00:02:43.080 align:start position:0%
algorithms have number of advantages one
 

00:02:43.080 --> 00:02:45.380 align:start position:0%
algorithms have number of advantages one
is<00:02:43.260><c> that</c><00:02:43.530><c> with</c><00:02:43.920><c> any</c><00:02:44.190><c> of</c><00:02:44.400><c> these</c><00:02:44.550><c> algorithms</c><00:02:44.820><c> you</c>

00:02:45.380 --> 00:02:45.390 align:start position:0%
is that with any of these algorithms you
 

00:02:45.390 --> 00:02:48.260 align:start position:0%
is that with any of these algorithms you
usually<00:02:45.870><c> do</c><00:02:46.050><c> not</c><00:02:46.080><c> need</c><00:02:46.500><c> to</c><00:02:46.680><c> manually</c><00:02:47.280><c> pick</c><00:02:47.790><c> the</c>

00:02:48.260 --> 00:02:48.270 align:start position:0%
usually do not need to manually pick the
 

00:02:48.270 --> 00:02:51.530 align:start position:0%
usually do not need to manually pick the
learning<00:02:48.630><c> rate</c><00:02:48.780><c> alpha</c><00:02:49.760><c> so</c><00:02:50.760><c> one</c><00:02:51.240><c> way</c><00:02:51.360><c> to</c><00:02:51.420><c> think</c>

00:02:51.530 --> 00:02:51.540 align:start position:0%
learning rate alpha so one way to think
 

00:02:51.540 --> 00:02:54.290 align:start position:0%
learning rate alpha so one way to think
of<00:02:51.750><c> these</c><00:02:51.900><c> algorithms</c><00:02:52.230><c> is</c><00:02:52.680><c> that</c><00:02:53.000><c> given</c><00:02:54.000><c> these</c>

00:02:54.290 --> 00:02:54.300 align:start position:0%
of these algorithms is that given these
 

00:02:54.300 --> 00:02:56.630 align:start position:0%
of these algorithms is that given these
the<00:02:55.290><c> way</c><00:02:55.470><c> to</c><00:02:55.530><c> compute</c><00:02:56.010><c> the</c><00:02:56.070><c> derivative</c><00:02:56.490><c> of</c><00:02:56.550><c> the</c>

00:02:56.630 --> 00:02:56.640 align:start position:0%
the way to compute the derivative of the
 

00:02:56.640 --> 00:02:58.040 align:start position:0%
the way to compute the derivative of the
cost<00:02:56.820><c> function</c><00:02:56.970><c> you</c><00:02:57.480><c> can</c><00:02:57.630><c> think</c><00:02:57.840><c> of</c><00:02:57.900><c> these</c>

00:02:58.040 --> 00:02:58.050 align:start position:0%
cost function you can think of these
 

00:02:58.050 --> 00:03:00.470 align:start position:0%
cost function you can think of these
algorithms<00:02:58.410><c> as</c><00:02:58.980><c> having</c><00:02:59.610><c> a</c><00:02:59.700><c> clever</c><00:03:00.090><c> inter-loop</c>

00:03:00.470 --> 00:03:00.480 align:start position:0%
algorithms as having a clever inter-loop
 

00:03:00.480 --> 00:03:02.180 align:start position:0%
algorithms as having a clever inter-loop
and<00:03:00.900><c> in</c><00:03:01.410><c> fact</c><00:03:01.620><c> they</c><00:03:01.770><c> have</c><00:03:01.920><c> a</c><00:03:01.950><c> clever</c>

00:03:02.180 --> 00:03:02.190 align:start position:0%
and in fact they have a clever
 

00:03:02.190 --> 00:03:02.930 align:start position:0%
and in fact they have a clever
inter-loop

00:03:02.930 --> 00:03:02.940 align:start position:0%
inter-loop
 

00:03:02.940 --> 00:03:05.690 align:start position:0%
inter-loop
called<00:03:03.540><c> a</c><00:03:03.720><c> line</c><00:03:04.020><c> search</c><00:03:04.380><c> algorithm</c><00:03:04.860><c> that</c>

00:03:05.690 --> 00:03:05.700 align:start position:0%
called a line search algorithm that
 

00:03:05.700 --> 00:03:07.880 align:start position:0%
called a line search algorithm that
automatically<00:03:06.480><c> tries</c><00:03:06.900><c> out</c><00:03:07.080><c> different</c><00:03:07.140><c> values</c>

00:03:07.880 --> 00:03:07.890 align:start position:0%
automatically tries out different values
 

00:03:07.890 --> 00:03:09.320 align:start position:0%
automatically tries out different values
for<00:03:08.070><c> the</c><00:03:08.130><c> learning</c><00:03:08.220><c> rate</c><00:03:08.610><c> alpha</c><00:03:08.820><c> and</c>

00:03:09.320 --> 00:03:09.330 align:start position:0%
for the learning rate alpha and
 

00:03:09.330 --> 00:03:10.910 align:start position:0%
for the learning rate alpha and
automatically<00:03:09.960><c> picks</c><00:03:10.260><c> a</c><00:03:10.380><c> good</c><00:03:10.560><c> learning</c><00:03:10.770><c> rate</c>

00:03:10.910 --> 00:03:10.920 align:start position:0%
automatically picks a good learning rate
 

00:03:10.920 --> 00:03:13.160 align:start position:0%
automatically picks a good learning rate
alpha<00:03:11.250><c> so</c><00:03:12.150><c> that</c><00:03:12.180><c> it</c><00:03:12.510><c> can</c><00:03:12.630><c> even</c><00:03:12.780><c> pick</c><00:03:12.960><c> a</c>

00:03:13.160 --> 00:03:13.170 align:start position:0%
alpha so that it can even pick a
 

00:03:13.170 --> 00:03:14.510 align:start position:0%
alpha so that it can even pick a
different<00:03:13.410><c> learning</c><00:03:13.800><c> rate</c><00:03:14.100><c> for</c><00:03:14.130><c> every</c>

00:03:14.510 --> 00:03:14.520 align:start position:0%
different learning rate for every
 

00:03:14.520 --> 00:03:17.720 align:start position:0%
different learning rate for every
iteration<00:03:15.140><c> and</c><00:03:16.140><c> so</c><00:03:16.740><c> then</c><00:03:16.950><c> you</c><00:03:17.250><c> don't</c><00:03:17.460><c> need</c><00:03:17.550><c> to</c>

00:03:17.720 --> 00:03:17.730 align:start position:0%
iteration and so then you don't need to
 

00:03:17.730 --> 00:03:21.950 align:start position:0%
iteration and so then you don't need to
choose<00:03:17.940><c> it</c><00:03:18.090><c> yourself</c><00:03:20.600><c> these</c><00:03:21.600><c> algorithms</c>

00:03:21.950 --> 00:03:21.960 align:start position:0%
choose it yourself these algorithms
 

00:03:21.960 --> 00:03:23.870 align:start position:0%
choose it yourself these algorithms
actually<00:03:22.410><c> do</c><00:03:22.890><c> more</c><00:03:23.160><c> sophisticated</c><00:03:23.340><c> things</c>

00:03:23.870 --> 00:03:23.880 align:start position:0%
actually do more sophisticated things
 

00:03:23.880 --> 00:03:25.610 align:start position:0%
actually do more sophisticated things
than<00:03:24.270><c> just</c><00:03:24.300><c> pick</c><00:03:24.630><c> a</c><00:03:24.660><c> good</c><00:03:24.930><c> learning</c><00:03:25.110><c> rate</c><00:03:25.440><c> and</c>

00:03:25.610 --> 00:03:25.620 align:start position:0%
than just pick a good learning rate and
 

00:03:25.620 --> 00:03:28.520 align:start position:0%
than just pick a good learning rate and
so<00:03:26.070><c> they</c><00:03:26.550><c> often</c><00:03:26.790><c> end</c><00:03:27.270><c> up</c><00:03:27.420><c> converging</c><00:03:28.140><c> much</c>

00:03:28.520 --> 00:03:28.530 align:start position:0%
so they often end up converging much
 

00:03:28.530 --> 00:03:31.420 align:start position:0%
so they often end up converging much
faster<00:03:29.100><c> than</c><00:03:29.310><c> rate</c><00:03:29.610><c> than</c><00:03:29.880><c> gradient</c><00:03:30.150><c> descent</c>

00:03:31.420 --> 00:03:31.430 align:start position:0%
faster than rate than gradient descent
 

00:03:31.430 --> 00:03:33.950 align:start position:0%
faster than rate than gradient descent
these<00:03:32.430><c> algorithms</c><00:03:33.060><c> actually</c><00:03:33.330><c> do</c><00:03:33.720><c> more</c>

00:03:33.950 --> 00:03:33.960 align:start position:0%
these algorithms actually do more
 

00:03:33.960 --> 00:03:35.570 align:start position:0%
these algorithms actually do more
sophisticated<00:03:34.560><c> things</c><00:03:34.860><c> than</c><00:03:35.160><c> just</c><00:03:35.190><c> pick</c><00:03:35.550><c> a</c>

00:03:35.570 --> 00:03:35.580 align:start position:0%
sophisticated things than just pick a
 

00:03:35.580 --> 00:03:37.910 align:start position:0%
sophisticated things than just pick a
good<00:03:35.790><c> learning</c><00:03:36.030><c> rate</c><00:03:36.180><c> and</c><00:03:36.480><c> so</c><00:03:37.080><c> they</c><00:03:37.290><c> often</c><00:03:37.500><c> end</c>

00:03:37.910 --> 00:03:37.920 align:start position:0%
good learning rate and so they often end
 

00:03:37.920 --> 00:03:39.890 align:start position:0%
good learning rate and so they often end
up<00:03:38.070><c> converging</c><00:03:38.760><c> much</c><00:03:38.940><c> faster</c><00:03:39.510><c> than</c><00:03:39.690><c> gradient</c>

00:03:39.890 --> 00:03:39.900 align:start position:0%
up converging much faster than gradient
 

00:03:39.900 --> 00:03:42.230 align:start position:0%
up converging much faster than gradient
descent<00:03:40.140><c> but</c><00:03:41.010><c> a</c><00:03:41.040><c> detailed</c><00:03:41.640><c> discussion</c><00:03:42.090><c> of</c>

00:03:42.230 --> 00:03:42.240 align:start position:0%
descent but a detailed discussion of
 

00:03:42.240 --> 00:03:44.120 align:start position:0%
descent but a detailed discussion of
exactly<00:03:42.390><c> what</c><00:03:42.870><c> they</c><00:03:42.990><c> do</c><00:03:43.050><c> is</c><00:03:43.410><c> beyond</c><00:03:43.800><c> the</c><00:03:43.890><c> scope</c>

00:03:44.120 --> 00:03:44.130 align:start position:0%
exactly what they do is beyond the scope
 

00:03:44.130 --> 00:03:44.810 align:start position:0%
exactly what they do is beyond the scope
of<00:03:44.250><c> this</c><00:03:44.400><c> course</c>

00:03:44.810 --> 00:03:44.820 align:start position:0%
of this course
 

00:03:44.820 --> 00:03:47.930 align:start position:0%
of this course
in<00:03:45.600><c> fact</c><00:03:45.900><c> them</c><00:03:46.140><c> I</c><00:03:46.350><c> actually</c><00:03:46.830><c> used</c><00:03:47.340><c> to</c><00:03:47.490><c> have</c>

00:03:47.930 --> 00:03:47.940 align:start position:0%
in fact them I actually used to have
 

00:03:47.940 --> 00:03:49.700 align:start position:0%
in fact them I actually used to have
used<00:03:48.180><c> these</c><00:03:48.360><c> algorithms</c><00:03:48.960><c> for</c><00:03:49.200><c> a</c><00:03:49.260><c> long</c><00:03:49.440><c> time</c>

00:03:49.700 --> 00:03:49.710 align:start position:0%
used these algorithms for a long time
 

00:03:49.710 --> 00:03:51.170 align:start position:0%
used these algorithms for a long time
like<00:03:49.890><c> maybe</c><00:03:50.040><c> over</c><00:03:50.280><c> a</c><00:03:50.490><c> decade</c><00:03:50.940><c> quite</c>

00:03:51.170 --> 00:03:51.180 align:start position:0%
like maybe over a decade quite
 

00:03:51.180 --> 00:03:54.380 align:start position:0%
like maybe over a decade quite
frequently<00:03:51.690><c> and</c><00:03:52.680><c> it</c><00:03:53.340><c> was</c><00:03:53.520><c> only</c><00:03:53.880><c> you</c><00:03:54.240><c> know</c><00:03:54.270><c> a</c>

00:03:54.380 --> 00:03:54.390 align:start position:0%
frequently and it was only you know a
 

00:03:54.390 --> 00:03:56.420 align:start position:0%
frequently and it was only you know a
few<00:03:54.630><c> years</c><00:03:54.690><c> ago</c><00:03:54.930><c> that</c><00:03:55.110><c> I</c><00:03:55.350><c> actually</c><00:03:55.680><c> figured</c>

00:03:56.420 --> 00:03:56.430 align:start position:0%
few years ago that I actually figured
 

00:03:56.430 --> 00:03:58.040 align:start position:0%
few years ago that I actually figured
out<00:03:56.520><c> for</c><00:03:56.640><c> myself</c><00:03:56.820><c> the</c><00:03:57.240><c> details</c><00:03:57.660><c> and</c><00:03:57.930><c> what</c>

00:03:58.040 --> 00:03:58.050 align:start position:0%
out for myself the details and what
 

00:03:58.050 --> 00:04:01.040 align:start position:0%
out for myself the details and what
conjugate<00:03:58.500><c> gradient</c><00:03:58.980><c> bfgs</c><00:03:59.100><c> and</c><00:03:59.460><c> l-bfgs</c><00:03:59.670><c> do</c><00:04:00.360><c> so</c>

00:04:01.040 --> 00:04:01.050 align:start position:0%
conjugate gradient bfgs and l-bfgs do so
 

00:04:01.050 --> 00:04:03.920 align:start position:0%
conjugate gradient bfgs and l-bfgs do so
it<00:04:01.380><c> is</c><00:04:01.500><c> actually</c><00:04:01.920><c> entirely</c><00:04:02.610><c> possible</c><00:04:03.330><c> to</c><00:04:03.720><c> use</c>

00:04:03.920 --> 00:04:03.930 align:start position:0%
it is actually entirely possible to use
 

00:04:03.930 --> 00:04:05.510 align:start position:0%
it is actually entirely possible to use
these<00:04:04.110><c> algorithms</c><00:04:04.470><c> successfully</c><00:04:05.370><c> and</c>

00:04:05.510 --> 00:04:05.520 align:start position:0%
these algorithms successfully and
 

00:04:05.520 --> 00:04:06.650 align:start position:0%
these algorithms successfully and
applied<00:04:05.760><c> to</c><00:04:05.940><c> lots</c><00:04:06.090><c> of</c><00:04:06.240><c> different</c><00:04:06.570><c> learning</c>

00:04:06.650 --> 00:04:06.660 align:start position:0%
applied to lots of different learning
 

00:04:06.660 --> 00:04:09.110 align:start position:0%
applied to lots of different learning
problems<00:04:07.260><c> without</c><00:04:07.950><c> actually</c><00:04:08.460><c> understanding</c>

00:04:09.110 --> 00:04:09.120 align:start position:0%
problems without actually understanding
 

00:04:09.120 --> 00:04:11.060 align:start position:0%
problems without actually understanding
the<00:04:09.180><c> inner</c><00:04:09.720><c> loop</c><00:04:09.930><c> of</c><00:04:10.170><c> what</c><00:04:10.650><c> these</c><00:04:10.770><c> algorithms</c>

00:04:11.060 --> 00:04:11.070 align:start position:0%
the inner loop of what these algorithms
 

00:04:11.070 --> 00:04:13.340 align:start position:0%
the inner loop of what these algorithms
do<00:04:11.370><c> if</c><00:04:12.360><c> these</c><00:04:12.660><c> algorithms</c><00:04:13.170><c> have</c><00:04:13.320><c> a</c>

00:04:13.340 --> 00:04:13.350 align:start position:0%
do if these algorithms have a
 

00:04:13.350 --> 00:04:15.620 align:start position:0%
do if these algorithms have a
disadvantage<00:04:13.710><c> I'll</c><00:04:14.370><c> say</c><00:04:14.670><c> that</c><00:04:15.060><c> the</c><00:04:15.270><c> main</c>

00:04:15.620 --> 00:04:15.630 align:start position:0%
disadvantage I'll say that the main
 

00:04:15.630 --> 00:04:17.630 align:start position:0%
disadvantage I'll say that the main
disadvantage<00:04:16.260><c> is</c><00:04:16.290><c> that</c><00:04:16.650><c> they're</c><00:04:17.100><c> quite</c><00:04:17.400><c> a</c><00:04:17.430><c> lot</c>

00:04:17.630 --> 00:04:17.640 align:start position:0%
disadvantage is that they're quite a lot
 

00:04:17.640 --> 00:04:19.880 align:start position:0%
disadvantage is that they're quite a lot
more<00:04:17.820><c> complex</c><00:04:18.420><c> than</c><00:04:18.720><c> gradient</c><00:04:19.350><c> descent</c><00:04:19.680><c> and</c>

00:04:19.880 --> 00:04:19.890 align:start position:0%
more complex than gradient descent and
 

00:04:19.890 --> 00:04:22.220 align:start position:0%
more complex than gradient descent and
in<00:04:20.430><c> particular</c><00:04:20.549><c> you</c><00:04:21.270><c> probably</c><00:04:21.660><c> should</c><00:04:21.989><c> not</c>

00:04:22.220 --> 00:04:22.230 align:start position:0%
in particular you probably should not
 

00:04:22.230 --> 00:04:24.260 align:start position:0%
in particular you probably should not
implement<00:04:22.710><c> these</c><00:04:23.250><c> algorithms</c><00:04:23.610><c> concha</c>

00:04:24.260 --> 00:04:24.270 align:start position:0%
implement these algorithms concha
 

00:04:24.270 --> 00:04:25.100 align:start position:0%
implement these algorithms concha
gradient<00:04:24.630><c> lbf</c>

00:04:25.100 --> 00:04:25.110 align:start position:0%
gradient lbf
 

00:04:25.110 --> 00:04:28.309 align:start position:0%
gradient lbf
yes<00:04:25.289><c> BFGS</c><00:04:26.099><c> yourself</c><00:04:26.900><c> unless</c><00:04:27.900><c> you're</c><00:04:28.080><c> an</c>

00:04:28.309 --> 00:04:28.319 align:start position:0%
yes BFGS yourself unless you're an
 

00:04:28.319 --> 00:04:31.159 align:start position:0%
yes BFGS yourself unless you're an
expert<00:04:28.349><c> in</c><00:04:28.830><c> numerical</c><00:04:29.520><c> computing</c><00:04:30.169><c> instead</c>

00:04:31.159 --> 00:04:31.169 align:start position:0%
expert in numerical computing instead
 

00:04:31.169 --> 00:04:33.050 align:start position:0%
expert in numerical computing instead
just<00:04:31.560><c> as</c><00:04:31.740><c> you</c><00:04:32.069><c> know</c><00:04:32.219><c> I</c><00:04:32.400><c> wouldn't</c><00:04:32.789><c> recommend</c>

00:04:33.050 --> 00:04:33.060 align:start position:0%
just as you know I wouldn't recommend
 

00:04:33.060 --> 00:04:35.059 align:start position:0%
just as you know I wouldn't recommend
that<00:04:33.330><c> you</c><00:04:33.599><c> write</c><00:04:33.810><c> your</c><00:04:33.960><c> own</c><00:04:34.020><c> code</c><00:04:34.409><c> to</c><00:04:34.469><c> compute</c>

00:04:35.059 --> 00:04:35.069 align:start position:0%
that you write your own code to compute
 

00:04:35.069 --> 00:04:37.189 align:start position:0%
that you write your own code to compute
square<00:04:35.400><c> roots</c><00:04:35.610><c> of</c><00:04:36.030><c> numbers</c><00:04:36.180><c> or</c><00:04:36.599><c> to</c><00:04:36.810><c> compute</c>

00:04:37.189 --> 00:04:37.199 align:start position:0%
square roots of numbers or to compute
 

00:04:37.199 --> 00:04:39.320 align:start position:0%
square roots of numbers or to compute
inverses<00:04:37.590><c> of</c><00:04:37.830><c> matrices</c><00:04:38.180><c> for</c><00:04:39.180><c> these</c>

00:04:39.320 --> 00:04:39.330 align:start position:0%
inverses of matrices for these
 

00:04:39.330 --> 00:04:40.730 align:start position:0%
inverses of matrices for these
algorithms<00:04:39.599><c> also</c><00:04:40.080><c> what</c><00:04:40.439><c> I</c><00:04:40.469><c> would</c><00:04:40.620><c> recommend</c>

00:04:40.730 --> 00:04:40.740 align:start position:0%
algorithms also what I would recommend
 

00:04:40.740 --> 00:04:42.950 align:start position:0%
algorithms also what I would recommend
you<00:04:41.069><c> do</c><00:04:41.219><c> is</c><00:04:41.490><c> just</c><00:04:41.789><c> use</c><00:04:41.969><c> the</c><00:04:42.120><c> software</c><00:04:42.539><c> library</c>

00:04:42.950 --> 00:04:42.960 align:start position:0%
you do is just use the software library
 

00:04:42.960 --> 00:04:44.629 align:start position:0%
you do is just use the software library
so<00:04:43.199><c> you</c><00:04:43.229><c> know</c><00:04:43.409><c> to</c><00:04:43.469><c> take</c><00:04:43.710><c> a</c><00:04:43.770><c> square</c><00:04:44.099><c> root</c><00:04:44.310><c> what</c>

00:04:44.629 --> 00:04:44.639 align:start position:0%
so you know to take a square root what
 

00:04:44.639 --> 00:04:47.240 align:start position:0%
so you know to take a square root what
all<00:04:44.849><c> of</c><00:04:44.879><c> us</c><00:04:45.060><c> do</c><00:04:45.300><c> is</c><00:04:45.599><c> use</c><00:04:46.110><c> some</c><00:04:46.439><c> function</c><00:04:46.740><c> that</c>

00:04:47.240 --> 00:04:47.250 align:start position:0%
all of us do is use some function that
 

00:04:47.250 --> 00:04:49.249 align:start position:0%
all of us do is use some function that
some<00:04:47.580><c> someone</c><00:04:48.180><c> else</c><00:04:48.330><c> has</c><00:04:48.479><c> written</c><00:04:48.629><c> to</c><00:04:48.930><c> compute</c>

00:04:49.249 --> 00:04:49.259 align:start position:0%
some someone else has written to compute
 

00:04:49.259 --> 00:04:51.580 align:start position:0%
some someone else has written to compute
the<00:04:49.349><c> square</c><00:04:49.530><c> root</c><00:04:49.800><c> of</c><00:04:49.889><c> all</c><00:04:50.039><c> numbers</c><00:04:50.400><c> and</c>

00:04:51.580 --> 00:04:51.590 align:start position:0%
the square root of all numbers and
 

00:04:51.590 --> 00:04:54.320 align:start position:0%
the square root of all numbers and
fortunately<00:04:52.590><c> octave</c><00:04:52.919><c> and</c><00:04:53.490><c> the</c><00:04:53.939><c> closely</c>

00:04:54.320 --> 00:04:54.330 align:start position:0%
fortunately octave and the closely
 

00:04:54.330 --> 00:04:55.969 align:start position:0%
fortunately octave and the closely
related<00:04:54.599><c> language</c><00:04:54.990><c> MATLAB</c><00:04:55.409><c> will</c><00:04:55.620><c> be</c><00:04:55.680><c> using</c>

00:04:55.969 --> 00:04:55.979 align:start position:0%
related language MATLAB will be using
 

00:04:55.979 --> 00:04:58.279 align:start position:0%
related language MATLAB will be using
that<00:04:56.099><c> octave</c><00:04:56.909><c> has</c><00:04:57.180><c> a</c><00:04:57.240><c> very</c><00:04:57.479><c> good</c><00:04:57.779><c> it's</c><00:04:58.229><c> a</c>

00:04:58.279 --> 00:04:58.289 align:start position:0%
that octave has a very good it's a
 

00:04:58.289 --> 00:05:00.860 align:start position:0%
that octave has a very good it's a
pretty<00:04:58.469><c> reasonable</c><00:04:58.699><c> library</c><00:04:59.870><c> implementing</c>

00:05:00.860 --> 00:05:00.870 align:start position:0%
pretty reasonable library implementing
 

00:05:00.870 --> 00:05:02.450 align:start position:0%
pretty reasonable library implementing
some<00:05:01.110><c> of</c><00:05:01.139><c> these</c><00:05:01.349><c> advanced</c><00:05:01.770><c> optimization</c>

00:05:02.450 --> 00:05:02.460 align:start position:0%
some of these advanced optimization
 

00:05:02.460 --> 00:05:04.700 align:start position:0%
some of these advanced optimization
algorithms<00:05:02.939><c> and</c><00:05:03.120><c> so</c><00:05:03.750><c> if</c><00:05:04.050><c> you</c><00:05:04.169><c> just</c><00:05:04.199><c> use</c><00:05:04.439><c> the</c>

00:05:04.700 --> 00:05:04.710 align:start position:0%
algorithms and so if you just use the
 

00:05:04.710 --> 00:05:05.629 align:start position:0%
algorithms and so if you just use the
built-in<00:05:04.860><c> library</c>

00:05:05.629 --> 00:05:05.639 align:start position:0%
built-in library
 

00:05:05.639 --> 00:05:07.429 align:start position:0%
built-in library
you<00:05:05.819><c> know</c><00:05:05.939><c> you</c><00:05:06.000><c> get</c><00:05:06.300><c> pretty</c><00:05:06.599><c> good</c><00:05:06.840><c> results</c><00:05:07.289><c> I</c>

00:05:07.429 --> 00:05:07.439 align:start position:0%
you know you get pretty good results I
 

00:05:07.439 --> 00:05:10.399 align:start position:0%
you know you get pretty good results I
should<00:05:08.310><c> say</c><00:05:08.490><c> that</c><00:05:08.729><c> there</c><00:05:08.909><c> is</c><00:05:09.090><c> a</c><00:05:09.409><c> difference</c>

00:05:10.399 --> 00:05:10.409 align:start position:0%
should say that there is a difference
 

00:05:10.409 --> 00:05:12.619 align:start position:0%
should say that there is a difference
between<00:05:10.620><c> good</c><00:05:11.069><c> and</c><00:05:11.310><c> bad</c><00:05:11.449><c> implementations</c><00:05:12.449><c> of</c>

00:05:12.619 --> 00:05:12.629 align:start position:0%
between good and bad implementations of
 

00:05:12.629 --> 00:05:14.719 align:start position:0%
between good and bad implementations of
these<00:05:12.750><c> algorithms</c><00:05:13.050><c> and</c><00:05:13.439><c> so</c><00:05:14.039><c> if</c><00:05:14.310><c> you're</c><00:05:14.490><c> using</c>

00:05:14.719 --> 00:05:14.729 align:start position:0%
these algorithms and so if you're using
 

00:05:14.729 --> 00:05:16.550 align:start position:0%
these algorithms and so if you're using
a<00:05:14.939><c> different</c><00:05:15.090><c> language</c><00:05:15.300><c> for</c><00:05:16.050><c> your</c><00:05:16.409><c> machine</c>

00:05:16.550 --> 00:05:16.560 align:start position:0%
a different language for your machine
 

00:05:16.560 --> 00:05:17.779 align:start position:0%
a different language for your machine
learning<00:05:16.949><c> application</c><00:05:17.490><c> that</c><00:05:17.639><c> you're</c><00:05:17.759><c> using</c>

00:05:17.779 --> 00:05:17.789 align:start position:0%
learning application that you're using
 

00:05:17.789 --> 00:05:21.950 align:start position:0%
learning application that you're using
like<00:05:18.210><c> C</c><00:05:18.449><c> C++</c><00:05:18.479><c> Java</c><00:05:19.229><c> and</c><00:05:19.830><c> so</c><00:05:20.400><c> on</c><00:05:20.610><c> you</c><00:05:21.569><c> might</c><00:05:21.750><c> want</c>

00:05:21.950 --> 00:05:21.960 align:start position:0%
like C C++ Java and so on you might want
 

00:05:21.960 --> 00:05:24.140 align:start position:0%
like C C++ Java and so on you might want
to<00:05:22.020><c> try</c><00:05:22.349><c> out</c><00:05:22.650><c> a</c><00:05:22.919><c> different</c><00:05:23.189><c> couple</c><00:05:23.819><c> different</c>

00:05:24.140 --> 00:05:24.150 align:start position:0%
to try out a different couple different
 

00:05:24.150 --> 00:05:25.700 align:start position:0%
to try out a different couple different
libraries<00:05:24.599><c> to</c><00:05:24.779><c> make</c><00:05:24.810><c> sure</c><00:05:25.080><c> that</c><00:05:25.259><c> you</c><00:05:25.379><c> find</c><00:05:25.560><c> a</c>

00:05:25.700 --> 00:05:25.710 align:start position:0%
libraries to make sure that you find a
 

00:05:25.710 --> 00:05:27.740 align:start position:0%
libraries to make sure that you find a
good<00:05:25.740><c> library</c><00:05:26.310><c> for</c><00:05:26.909><c> implementing</c><00:05:27.659><c> these</c>

00:05:27.740 --> 00:05:27.750 align:start position:0%
good library for implementing these
 

00:05:27.750 --> 00:05:29.360 align:start position:0%
good library for implementing these
algorithms<00:05:28.080><c> because</c><00:05:28.529><c> there</c><00:05:28.740><c> is</c><00:05:28.889><c> a</c><00:05:28.919><c> difference</c>

00:05:29.360 --> 00:05:29.370 align:start position:0%
algorithms because there is a difference
 

00:05:29.370 --> 00:05:30.709 align:start position:0%
algorithms because there is a difference
in<00:05:29.490><c> performance</c><00:05:29.639><c> between</c><00:05:30.120><c> a</c><00:05:30.419><c> good</c>

00:05:30.709 --> 00:05:30.719 align:start position:0%
in performance between a good
 

00:05:30.719 --> 00:05:32.779 align:start position:0%
in performance between a good
implementation<00:05:30.990><c> of</c><00:05:31.800><c> you</c><00:05:32.219><c> know</c><00:05:32.339><c> constant</c>

00:05:32.779 --> 00:05:32.789 align:start position:0%
implementation of you know constant
 

00:05:32.789 --> 00:05:35.329 align:start position:0%
implementation of you know constant
gradient<00:05:32.909><c> or</c><00:05:33.240><c> l-bfgs</c><00:05:33.680><c> versus</c><00:05:34.680><c> a</c><00:05:34.710><c> less</c><00:05:35.099><c> good</c>

00:05:35.329 --> 00:05:35.339 align:start position:0%
gradient or l-bfgs versus a less good
 

00:05:35.339 --> 00:05:37.309 align:start position:0%
gradient or l-bfgs versus a less good
implementation<00:05:35.610><c> of</c><00:05:36.330><c> contra</c><00:05:36.750><c> gradient</c><00:05:36.870><c> or</c>

00:05:37.309 --> 00:05:37.319 align:start position:0%
implementation of contra gradient or
 

00:05:37.319 --> 00:05:44.899 align:start position:0%
implementation of contra gradient or
l-bfgs<00:05:42.139><c> so</c><00:05:43.139><c> now</c><00:05:43.589><c> let's</c><00:05:43.830><c> explain</c><00:05:44.219><c> how</c><00:05:44.550><c> to</c><00:05:44.610><c> use</c>

00:05:44.899 --> 00:05:44.909 align:start position:0%
l-bfgs so now let's explain how to use
 

00:05:44.909 --> 00:05:46.999 align:start position:0%
l-bfgs so now let's explain how to use
these<00:05:45.060><c> algorithms</c><00:05:45.419><c> I'm</c><00:05:45.779><c> going</c><00:05:46.020><c> to</c><00:05:46.110><c> do</c><00:05:46.259><c> so</c><00:05:46.500><c> with</c>

00:05:46.999 --> 00:05:47.009 align:start position:0%
these algorithms I'm going to do so with
 

00:05:47.009 --> 00:05:50.180 align:start position:0%
these algorithms I'm going to do so with
an<00:05:47.129><c> example</c><00:05:48.139><c> let's</c><00:05:49.139><c> say</c><00:05:49.379><c> that</c><00:05:49.589><c> you</c><00:05:49.800><c> have</c><00:05:50.159><c> a</c>

00:05:50.180 --> 00:05:50.190 align:start position:0%
an example let's say that you have a
 

00:05:50.190 --> 00:05:53.589 align:start position:0%
an example let's say that you have a
problem<00:05:50.909><c> with</c><00:05:51.150><c> two</c><00:05:51.629><c> parameters</c><00:05:52.199><c> or</c><00:05:52.529><c> theta</c>

00:05:53.589 --> 00:05:53.599 align:start position:0%
problem with two parameters or theta
 

00:05:53.599 --> 00:05:55.969 align:start position:0%
problem with two parameters or theta
equals<00:05:54.599><c> theta</c><00:05:54.689><c> zero</c><00:05:55.259><c> and</c><00:05:55.319><c> theta</c><00:05:55.409><c> one</c><00:05:55.770><c> and</c>

00:05:55.969 --> 00:05:55.979 align:start position:0%
equals theta zero and theta one and
 

00:05:55.979 --> 00:05:58.429 align:start position:0%
equals theta zero and theta one and
let's<00:05:56.789><c> say</c><00:05:57.000><c> your</c><00:05:57.210><c> cost</c><00:05:57.240><c> function</c><00:05:57.900><c> is</c><00:05:58.110><c> J</c><00:05:58.319><c> of</c>

00:05:58.429 --> 00:05:58.439 align:start position:0%
let's say your cost function is J of
 

00:05:58.439 --> 00:05:59.959 align:start position:0%
let's say your cost function is J of
theta<00:05:58.469><c> equals</c><00:05:59.159><c> theta</c><00:05:59.310><c> one</c><00:05:59.610><c> minus</c><00:05:59.639><c> five</c>

00:05:59.959 --> 00:05:59.969 align:start position:0%
theta equals theta one minus five
 

00:05:59.969 --> 00:06:01.519 align:start position:0%
theta equals theta one minus five
squared<00:06:00.360><c> plus</c><00:06:00.539><c> theta</c><00:06:00.900><c> two</c><00:06:01.080><c> minus</c><00:06:01.110><c> five</c>

00:06:01.519 --> 00:06:01.529 align:start position:0%
squared plus theta two minus five
 

00:06:01.529 --> 00:06:01.999 align:start position:0%
squared plus theta two minus five
squared

00:06:01.999 --> 00:06:02.009 align:start position:0%
squared
 

00:06:02.009 --> 00:06:05.059 align:start position:0%
squared
so<00:06:02.819><c> with</c><00:06:03.599><c> this</c><00:06:03.750><c> cost</c><00:06:04.050><c> function</c><00:06:04.259><c> you</c><00:06:04.740><c> know</c><00:06:04.860><c> the</c>

00:06:05.059 --> 00:06:05.069 align:start position:0%
so with this cost function you know the
 

00:06:05.069 --> 00:06:07.309 align:start position:0%
so with this cost function you know the
value<00:06:05.490><c> for</c><00:06:05.520><c> theta</c><00:06:05.909><c> one</c><00:06:06.180><c> and</c><00:06:06.300><c> theta</c><00:06:06.360><c> two</c><00:06:06.629><c> if</c><00:06:07.110><c> you</c>

00:06:07.309 --> 00:06:07.319 align:start position:0%
value for theta one and theta two if you
 

00:06:07.319 --> 00:06:08.869 align:start position:0%
value for theta one and theta two if you
want<00:06:07.500><c> to</c><00:06:07.589><c> minimize</c><00:06:07.740><c> J</c><00:06:08.009><c> of</c><00:06:08.400><c> theta</c><00:06:08.430><c> as</c><00:06:08.759><c> a</c>

00:06:08.869 --> 00:06:08.879 align:start position:0%
want to minimize J of theta as a
 

00:06:08.879 --> 00:06:10.490 align:start position:0%
want to minimize J of theta as a
function<00:06:08.969><c> of</c><00:06:09.270><c> theta</c><00:06:09.419><c> the</c><00:06:10.050><c> value</c><00:06:10.379><c> that</c>

00:06:10.490 --> 00:06:10.500 align:start position:0%
function of theta the value that
 

00:06:10.500 --> 00:06:12.200 align:start position:0%
function of theta the value that
minimizes<00:06:10.620><c> it</c><00:06:11.219><c> is</c><00:06:11.370><c> going</c><00:06:11.580><c> to</c><00:06:11.699><c> be</c><00:06:11.759><c> theta</c><00:06:11.939><c> one</c>

00:06:12.200 --> 00:06:12.210 align:start position:0%
minimizes it is going to be theta one
 

00:06:12.210 --> 00:06:16.369 align:start position:0%
minimizes it is going to be theta one
equals<00:06:12.240><c> 5</c><00:06:12.689><c> theta</c><00:06:12.990><c> 2</c><00:06:13.710><c> equals</c><00:06:14.069><c> 5</c><00:06:14.360><c> now</c><00:06:15.360><c> again</c><00:06:16.139><c> I</c>

00:06:16.369 --> 00:06:16.379 align:start position:0%
equals 5 theta 2 equals 5 now again I
 

00:06:16.379 --> 00:06:18.140 align:start position:0%
equals 5 theta 2 equals 5 now again I
know<00:06:16.500><c> some</c><00:06:16.620><c> of</c><00:06:16.919><c> you</c><00:06:17.099><c> will</c><00:06:17.310><c> know</c><00:06:17.460><c> more</c><00:06:17.639><c> calculus</c>

00:06:18.140 --> 00:06:18.150 align:start position:0%
know some of you will know more calculus
 

00:06:18.150 --> 00:06:20.899 align:start position:0%
know some of you will know more calculus
than<00:06:18.330><c> others</c><00:06:18.629><c> but</c><00:06:19.169><c> the</c><00:06:19.589><c> derivatives</c><00:06:20.520><c> of</c><00:06:20.789><c> the</c>

00:06:20.899 --> 00:06:20.909 align:start position:0%
than others but the derivatives of the
 

00:06:20.909 --> 00:06:23.420 align:start position:0%
than others but the derivatives of the
cost<00:06:21.120><c> function</c><00:06:21.270><c> J</c><00:06:21.539><c> turn</c><00:06:22.289><c> out</c><00:06:22.439><c> to</c><00:06:22.589><c> be</c><00:06:22.620><c> these</c><00:06:23.189><c> two</c>

00:06:23.420 --> 00:06:23.430 align:start position:0%
cost function J turn out to be these two
 

00:06:23.430 --> 00:06:25.159 align:start position:0%
cost function J turn out to be these two
expressions<00:06:23.939><c> down</c><00:06:24.089><c> here</c><00:06:24.360><c> and</c><00:06:24.479><c> I've</c><00:06:24.870><c> done</c><00:06:25.050><c> the</c>

00:06:25.159 --> 00:06:25.169 align:start position:0%
expressions down here and I've done the
 

00:06:25.169 --> 00:06:27.709 align:start position:0%
expressions down here and I've done the
calculus<00:06:25.620><c> so</c><00:06:26.370><c> if</c><00:06:26.669><c> you</c><00:06:26.789><c> want</c><00:06:26.969><c> to</c><00:06:27.089><c> apply</c><00:06:27.330><c> one</c><00:06:27.689><c> of</c>

00:06:27.709 --> 00:06:27.719 align:start position:0%
calculus so if you want to apply one of
 

00:06:27.719 --> 00:06:29.959 align:start position:0%
calculus so if you want to apply one of
the<00:06:27.900><c> advanced</c><00:06:28.409><c> optimization</c><00:06:28.699><c> algorithms</c><00:06:29.699><c> to</c>

00:06:29.959 --> 00:06:29.969 align:start position:0%
the advanced optimization algorithms to
 

00:06:29.969 --> 00:06:32.059 align:start position:0%
the advanced optimization algorithms to
minimize<00:06:30.360><c> this</c><00:06:30.659><c> cost</c><00:06:30.900><c> function</c><00:06:31.139><c> J</c><00:06:31.560><c> so</c><00:06:31.620><c> if</c><00:06:31.949><c> you</c>

00:06:32.059 --> 00:06:32.069 align:start position:0%
minimize this cost function J so if you
 

00:06:32.069 --> 00:06:34.040 align:start position:0%
minimize this cost function J so if you
know<00:06:32.129><c> if</c><00:06:32.250><c> we</c><00:06:32.759><c> didn't</c><00:06:33.180><c> know</c><00:06:33.330><c> the</c><00:06:33.569><c> minimum</c><00:06:33.870><c> was</c>

00:06:34.040 --> 00:06:34.050 align:start position:0%
know if we didn't know the minimum was
 

00:06:34.050 --> 00:06:36.250 align:start position:0%
know if we didn't know the minimum was
at<00:06:34.169><c> 5</c><00:06:34.409><c> 5</c><00:06:34.680><c> but</c><00:06:34.949><c> if</c><00:06:35.099><c> you</c><00:06:35.190><c> want</c><00:06:35.370><c> to</c><00:06:35.490><c> have</c><00:06:36.089><c> a</c>

00:06:36.250 --> 00:06:36.260 align:start position:0%
at 5 5 but if you want to have a
 

00:06:36.260 --> 00:06:37.930 align:start position:0%
at 5 5 but if you want to have a
cost<00:06:36.410><c> function</c><00:06:36.830><c> find</c><00:06:37.430><c> the</c><00:06:37.580><c> minimum</c>

00:06:37.930 --> 00:06:37.940 align:start position:0%
cost function find the minimum
 

00:06:37.940 --> 00:06:39.880 align:start position:0%
cost function find the minimum
numerically<00:06:38.630><c> right</c><00:06:39.080><c> using</c><00:06:39.470><c> something</c><00:06:39.770><c> like</c>

00:06:39.880 --> 00:06:39.890 align:start position:0%
numerically right using something like
 

00:06:39.890 --> 00:06:41.740 align:start position:0%
numerically right using something like
gradient<00:06:40.370><c> descent</c><00:06:40.430><c> but</c><00:06:40.820><c> preferably</c><00:06:41.210><c> more</c>

00:06:41.740 --> 00:06:41.750 align:start position:0%
gradient descent but preferably more
 

00:06:41.750 --> 00:06:43.660 align:start position:0%
gradient descent but preferably more
advanced<00:06:42.020><c> than</c><00:06:42.230><c> gradient</c><00:06:42.470><c> descent</c><00:06:42.620><c> what</c><00:06:43.580><c> you</c>

00:06:43.660 --> 00:06:43.670 align:start position:0%
advanced than gradient descent what you
 

00:06:43.670 --> 00:06:46.030 align:start position:0%
advanced than gradient descent what you
would<00:06:43.820><c> do</c><00:06:44.000><c> is</c><00:06:44.270><c> implement</c><00:06:44.840><c> an</c><00:06:45.080><c> octave</c><00:06:45.620><c> function</c>

00:06:46.030 --> 00:06:46.040 align:start position:0%
would do is implement an octave function
 

00:06:46.040 --> 00:06:48.190 align:start position:0%
would do is implement an octave function
like<00:06:46.220><c> this</c><00:06:46.430><c> so</c><00:06:46.700><c> we</c><00:06:46.850><c> implement</c><00:06:47.360><c> a</c><00:06:47.510><c> cost</c>

00:06:48.190 --> 00:06:48.200 align:start position:0%
like this so we implement a cost
 

00:06:48.200 --> 00:06:51.070 align:start position:0%
like this so we implement a cost
function<00:06:48.440><c> cost</c><00:06:49.430><c> function</c><00:06:49.820><c> theta</c><00:06:50.080><c> function</c>

00:06:51.070 --> 00:06:51.080 align:start position:0%
function cost function theta function
 

00:06:51.080 --> 00:06:53.410 align:start position:0%
function cost function theta function
like<00:06:51.200><c> that</c><00:06:51.230><c> and</c><00:06:51.680><c> what</c><00:06:52.430><c> this</c><00:06:52.610><c> does</c><00:06:52.850><c> is</c><00:06:53.210><c> it</c>

00:06:53.410 --> 00:06:53.420 align:start position:0%
like that and what this does is it
 

00:06:53.420 --> 00:06:57.220 align:start position:0%
like that and what this does is it
returns<00:06:53.540><c> two</c><00:06:54.230><c> arguments</c><00:06:54.890><c> the</c><00:06:55.090><c> first</c><00:06:56.090><c> j-val</c><00:06:56.750><c> is</c>

00:06:57.220 --> 00:06:57.230 align:start position:0%
returns two arguments the first j-val is
 

00:06:57.230 --> 00:07:00.190 align:start position:0%
returns two arguments the first j-val is
a<00:06:57.940><c> how</c><00:06:58.940><c> we</c><00:06:59.000><c> would</c><00:06:59.270><c> compute</c><00:06:59.630><c> the</c><00:06:59.810><c> cost</c><00:06:59.990><c> function</c>

00:07:00.190 --> 00:07:00.200 align:start position:0%
a how we would compute the cost function
 

00:07:00.200 --> 00:07:03.190 align:start position:0%
a how we would compute the cost function
J<00:07:00.440><c> so</c><00:07:01.070><c> this</c><00:07:01.250><c> says</c><00:07:01.430><c> J</c><00:07:01.760><c> Val</c><00:07:02.000><c> equals</c><00:07:02.510><c> you</c><00:07:03.110><c> know</c>

00:07:03.190 --> 00:07:03.200 align:start position:0%
J so this says J Val equals you know
 

00:07:03.200 --> 00:07:05.530 align:start position:0%
J so this says J Val equals you know
theta<00:07:03.380><c> 1</c><00:07:03.650><c> minus</c><00:07:03.920><c> 5</c><00:07:04.070><c> squared</c><00:07:04.430><c> plus</c><00:07:04.520><c> de</c><00:07:04.820><c> 2</c><00:07:04.880><c> theta</c>

00:07:05.530 --> 00:07:05.540 align:start position:0%
theta 1 minus 5 squared plus de 2 theta
 

00:07:05.540 --> 00:07:07.690 align:start position:0%
theta 1 minus 5 squared plus de 2 theta
2<00:07:05.630><c> minus</c><00:07:06.080><c> 5</c><00:07:06.230><c> squared</c><00:07:06.530><c> so</c><00:07:06.710><c> it's</c><00:07:06.860><c> just</c><00:07:07.010><c> computing</c>

00:07:07.690 --> 00:07:07.700 align:start position:0%
2 minus 5 squared so it's just computing
 

00:07:07.700 --> 00:07:10.930 align:start position:0%
2 minus 5 squared so it's just computing
this<00:07:08.330><c> cost</c><00:07:08.630><c> function</c><00:07:08.810><c> over</c><00:07:09.200><c> here</c><00:07:09.230><c> and</c><00:07:09.940><c> the</c>

00:07:10.930 --> 00:07:10.940 align:start position:0%
this cost function over here and the
 

00:07:10.940 --> 00:07:12.790 align:start position:0%
this cost function over here and the
second<00:07:11.450><c> argument</c><00:07:11.600><c> that</c><00:07:12.080><c> this</c><00:07:12.380><c> function</c>

00:07:12.790 --> 00:07:12.800 align:start position:0%
second argument that this function
 

00:07:12.800 --> 00:07:15.880 align:start position:0%
second argument that this function
returns<00:07:12.920><c> is</c><00:07:13.600><c> gradient</c><00:07:14.600><c> so</c><00:07:14.960><c> gradient</c><00:07:15.290><c> is</c><00:07:15.710><c> going</c>

00:07:15.880 --> 00:07:15.890 align:start position:0%
returns is gradient so gradient is going
 

00:07:15.890 --> 00:07:19.390 align:start position:0%
returns is gradient so gradient is going
to<00:07:16.190><c> be</c><00:07:16.340><c> a</c><00:07:16.370><c> 2</c><00:07:16.610><c> by</c><00:07:16.880><c> 1</c><00:07:17.060><c> vector</c><00:07:17.720><c> and</c><00:07:18.190><c> the</c><00:07:19.190><c> two</c>

00:07:19.390 --> 00:07:19.400 align:start position:0%
to be a 2 by 1 vector and the two
 

00:07:19.400 --> 00:07:20.970 align:start position:0%
to be a 2 by 1 vector and the two
elements<00:07:19.970><c> of</c><00:07:20.060><c> the</c><00:07:20.180><c> gradient</c><00:07:20.420><c> vector</c>

00:07:20.970 --> 00:07:20.980 align:start position:0%
elements of the gradient vector
 

00:07:20.980 --> 00:07:24.130 align:start position:0%
elements of the gradient vector
correspond<00:07:21.980><c> to</c><00:07:22.160><c> the</c><00:07:22.910><c> two</c><00:07:23.090><c> partial</c><00:07:23.140><c> derivative</c>

00:07:24.130 --> 00:07:24.140 align:start position:0%
correspond to the two partial derivative
 

00:07:24.140 --> 00:07:28.240 align:start position:0%
correspond to the two partial derivative
terms<00:07:24.410><c> over</c><00:07:24.740><c> here</c><00:07:26.320><c> having</c><00:07:27.320><c> implemented</c><00:07:28.130><c> this</c>

00:07:28.240 --> 00:07:28.250 align:start position:0%
terms over here having implemented this
 

00:07:28.250 --> 00:07:30.690 align:start position:0%
terms over here having implemented this
cost<00:07:28.550><c> function</c><00:07:28.760><c> you</c><00:07:29.750><c> would</c><00:07:29.960><c> you</c><00:07:30.200><c> can</c><00:07:30.380><c> then</c>

00:07:30.690 --> 00:07:30.700 align:start position:0%
cost function you would you can then
 

00:07:30.700 --> 00:07:34.420 align:start position:0%
cost function you would you can then
call<00:07:31.700><c> the</c><00:07:32.450><c> advanced</c><00:07:33.380><c> optimization</c><00:07:33.560><c> function</c>

00:07:34.420 --> 00:07:34.430 align:start position:0%
call the advanced optimization function
 

00:07:34.430 --> 00:07:36.790 align:start position:0%
call the advanced optimization function
called<00:07:35.120><c> the</c><00:07:35.210><c> F</c><00:07:35.480><c> min</c><00:07:35.900><c> uncle</c><00:07:36.380><c> it</c><00:07:36.470><c> stands</c><00:07:36.680><c> for</c>

00:07:36.790 --> 00:07:36.800 align:start position:0%
called the F min uncle it stands for
 

00:07:36.800 --> 00:07:39.010 align:start position:0%
called the F min uncle it stands for
function<00:07:37.370><c> minimization</c><00:07:37.780><c> unconstrained</c><00:07:38.780><c> in</c>

00:07:39.010 --> 00:07:39.020 align:start position:0%
function minimization unconstrained in
 

00:07:39.020 --> 00:07:41.320 align:start position:0%
function minimization unconstrained in
octave<00:07:39.770><c> and</c><00:07:39.950><c> the</c><00:07:40.520><c> way</c><00:07:40.640><c> you</c><00:07:40.700><c> call</c><00:07:41.000><c> this</c><00:07:41.150><c> as</c>

00:07:41.320 --> 00:07:41.330 align:start position:0%
octave and the way you call this as
 

00:07:41.330 --> 00:07:43.570 align:start position:0%
octave and the way you call this as
follows<00:07:41.510><c> you</c><00:07:41.930><c> set</c><00:07:42.140><c> a</c><00:07:42.170><c> few</c><00:07:42.410><c> options</c><00:07:42.830><c> this</c><00:07:43.370><c> is</c><00:07:43.430><c> a</c>

00:07:43.570 --> 00:07:43.580 align:start position:0%
follows you set a few options this is a
 

00:07:43.580 --> 00:07:45.430 align:start position:0%
follows you set a few options this is a
options<00:07:44.480><c> it's</c><00:07:44.690><c> a</c><00:07:44.750><c> data</c><00:07:44.960><c> structure</c><00:07:45.410><c> that</c>

00:07:45.430 --> 00:07:45.440 align:start position:0%
options it's a data structure that
 

00:07:45.440 --> 00:07:48.070 align:start position:0%
options it's a data structure that
stores<00:07:45.980><c> the</c><00:07:46.070><c> options</c><00:07:46.580><c> you</c><00:07:46.700><c> want</c><00:07:46.880><c> so</c><00:07:47.450><c> grant</c><00:07:47.870><c> up</c>

00:07:48.070 --> 00:07:48.080 align:start position:0%
stores the options you want so grant up
 

00:07:48.080 --> 00:07:50.850 align:start position:0%
stores the options you want so grant up
on<00:07:48.410><c> this</c><00:07:49.310><c> sense</c><00:07:49.580><c> the</c><00:07:49.760><c> gradient</c><00:07:50.210><c> objective</c>

00:07:50.850 --> 00:07:50.860 align:start position:0%
on this sense the gradient objective
 

00:07:50.860 --> 00:07:53.230 align:start position:0%
on this sense the gradient objective
parameter<00:07:51.860><c> on</c><00:07:52.130><c> it</c><00:07:52.340><c> just</c><00:07:52.490><c> means</c><00:07:52.670><c> that</c><00:07:52.880><c> you</c><00:07:53.030><c> are</c>

00:07:53.230 --> 00:07:53.240 align:start position:0%
parameter on it just means that you are
 

00:07:53.240 --> 00:07:55.030 align:start position:0%
parameter on it just means that you are
indeed<00:07:53.570><c> going</c><00:07:53.780><c> to</c><00:07:53.960><c> provide</c><00:07:54.290><c> a</c><00:07:54.350><c> gradient</c><00:07:54.890><c> to</c>

00:07:55.030 --> 00:07:55.040 align:start position:0%
indeed going to provide a gradient to
 

00:07:55.040 --> 00:07:56.710 align:start position:0%
indeed going to provide a gradient to
this<00:07:55.160><c> algorithm</c><00:07:55.460><c> and</c><00:07:55.850><c> we're</c><00:07:56.360><c> going</c><00:07:56.480><c> to</c><00:07:56.540><c> set</c>

00:07:56.710 --> 00:07:56.720 align:start position:0%
this algorithm and we're going to set
 

00:07:56.720 --> 00:07:58.780 align:start position:0%
this algorithm and we're going to set
the<00:07:56.870><c> maximum</c><00:07:57.050><c> number</c><00:07:57.830><c> of</c><00:07:57.860><c> iterations</c><00:07:58.070><c> to</c>

00:07:58.780 --> 00:07:58.790 align:start position:0%
the maximum number of iterations to
 

00:07:58.790 --> 00:08:01.360 align:start position:0%
the maximum number of iterations to
let's<00:07:59.000><c> say</c><00:07:59.150><c> 100</c><00:07:59.810><c> we're</c><00:08:00.680><c> going</c><00:08:00.860><c> to</c><00:08:00.950><c> give</c><00:08:01.130><c> it</c><00:08:01.160><c> an</c>

00:08:01.360 --> 00:08:01.370 align:start position:0%
let's say 100 we're going to give it an
 

00:08:01.370 --> 00:08:03.400 align:start position:0%
let's say 100 we're going to give it an
initial<00:08:01.520><c> guess</c><00:08:02.030><c> for</c><00:08:02.060><c> theta</c><00:08:02.450><c> there's</c><00:08:02.930><c> a</c><00:08:03.050><c> 2</c><00:08:03.230><c> by</c><00:08:03.380><c> 1</c>

00:08:03.400 --> 00:08:03.410 align:start position:0%
initial guess for theta there's a 2 by 1
 

00:08:03.410 --> 00:08:07.690 align:start position:0%
initial guess for theta there's a 2 by 1
vector<00:08:03.590><c> and</c><00:08:04.130><c> then</c><00:08:04.760><c> this</c><00:08:05.680><c> command</c><00:08:06.680><c> calls</c><00:08:07.160><c> F</c><00:08:07.460><c> min</c>

00:08:07.690 --> 00:08:07.700 align:start position:0%
vector and then this command calls F min
 

00:08:07.700 --> 00:08:10.900 align:start position:0%
vector and then this command calls F min
UNK<00:08:08.000><c> this</c><00:08:08.540><c> add</c><00:08:08.810><c> symbol</c><00:08:09.410><c> represents</c><00:08:10.310><c> a</c><00:08:10.430><c> pointer</c>

00:08:10.900 --> 00:08:10.910 align:start position:0%
UNK this add symbol represents a pointer
 

00:08:10.910 --> 00:08:13.630 align:start position:0%
UNK this add symbol represents a pointer
to<00:08:10.940><c> the</c><00:08:11.360><c> cost</c><00:08:11.570><c> function</c><00:08:12.320><c> of</c><00:08:12.500><c> function</c><00:08:13.160><c> that</c><00:08:13.520><c> we</c>

00:08:13.630 --> 00:08:13.640 align:start position:0%
to the cost function of function that we
 

00:08:13.640 --> 00:08:16.000 align:start position:0%
to the cost function of function that we
just<00:08:13.790><c> defined</c><00:08:14.150><c> up</c><00:08:14.270><c> there</c><00:08:14.540><c> and</c><00:08:14.750><c> if</c><00:08:15.650><c> you</c><00:08:15.740><c> call</c>

00:08:16.000 --> 00:08:16.010 align:start position:0%
just defined up there and if you call
 

00:08:16.010 --> 00:08:17.950 align:start position:0%
just defined up there and if you call
this<00:08:16.190><c> this</c><00:08:16.400><c> will</c><00:08:16.670><c> compute</c><00:08:17.180><c> you</c><00:08:17.660><c> know</c><00:08:17.720><c> we'll</c>

00:08:17.950 --> 00:08:17.960 align:start position:0%
this this will compute you know we'll
 

00:08:17.960 --> 00:08:19.780 align:start position:0%
this this will compute you know we'll
use<00:08:18.500><c> one</c><00:08:18.800><c> of</c><00:08:18.920><c> the</c><00:08:19.010><c> more</c><00:08:19.490><c> advanced</c>

00:08:19.780 --> 00:08:19.790 align:start position:0%
use one of the more advanced
 

00:08:19.790 --> 00:08:21.640 align:start position:0%
use one of the more advanced
optimization<00:08:20.000><c> algorithms</c><00:08:20.960><c> and</c><00:08:21.260><c> if</c><00:08:21.380><c> you</c><00:08:21.500><c> if</c>

00:08:21.640 --> 00:08:21.650 align:start position:0%
optimization algorithms and if you if
 

00:08:21.650 --> 00:08:22.960 align:start position:0%
optimization algorithms and if you if
you<00:08:21.770><c> want</c><00:08:21.980><c> to</c><00:08:22.010><c> think</c><00:08:22.220><c> of</c><00:08:22.310><c> it</c><00:08:22.400><c> as</c><00:08:22.520><c> just</c><00:08:22.910><c> like</c>

00:08:22.960 --> 00:08:22.970 align:start position:0%
you want to think of it as just like
 

00:08:22.970 --> 00:08:24.610 align:start position:0%
you want to think of it as just like
gradient<00:08:23.390><c> descent</c><00:08:23.450><c> but</c><00:08:23.870><c> automatically</c>

00:08:24.610 --> 00:08:24.620 align:start position:0%
gradient descent but automatically
 

00:08:24.620 --> 00:08:26.320 align:start position:0%
gradient descent but automatically
choosing<00:08:25.070><c> the</c><00:08:25.160><c> learning</c><00:08:25.490><c> rate</c><00:08:25.670><c> alpha</c><00:08:25.850><c> for</c><00:08:26.180><c> you</c>

00:08:26.320 --> 00:08:26.330 align:start position:0%
choosing the learning rate alpha for you
 

00:08:26.330 --> 00:08:28.510 align:start position:0%
choosing the learning rate alpha for you
so<00:08:26.510><c> you</c><00:08:26.630><c> don't</c><00:08:26.780><c> have</c><00:08:26.870><c> to</c><00:08:27.050><c> do</c><00:08:27.170><c> so</c><00:08:27.200><c> yourself</c><00:08:27.680><c> but</c>

00:08:28.510 --> 00:08:28.520 align:start position:0%
so you don't have to do so yourself but
 

00:08:28.520 --> 00:08:30.610 align:start position:0%
so you don't have to do so yourself but
it<00:08:28.610><c> will</c><00:08:28.670><c> then</c><00:08:28.850><c> attempt</c><00:08:29.540><c> to</c><00:08:29.630><c> use</c><00:08:30.110><c> these</c><00:08:30.320><c> sort</c>

00:08:30.610 --> 00:08:30.620 align:start position:0%
it will then attempt to use these sort
 

00:08:30.620 --> 00:08:32.740 align:start position:0%
it will then attempt to use these sort
of<00:08:30.680><c> advanced</c><00:08:31.340><c> optimization</c><00:08:32.000><c> algorithms</c><00:08:32.479><c> like</c>

00:08:32.740 --> 00:08:32.750 align:start position:0%
of advanced optimization algorithms like
 

00:08:32.750 --> 00:08:34.780 align:start position:0%
of advanced optimization algorithms like
gradient<00:08:32.810><c> descent</c><00:08:33.200><c> on</c><00:08:33.470><c> steroids</c><00:08:33.550><c> to</c><00:08:34.550><c> try</c><00:08:34.729><c> to</c>

00:08:34.780 --> 00:08:34.790 align:start position:0%
gradient descent on steroids to try to
 

00:08:34.790 --> 00:08:36.670 align:start position:0%
gradient descent on steroids to try to
find<00:08:35.120><c> the</c><00:08:35.270><c> optimal</c><00:08:35.599><c> value</c><00:08:35.930><c> of</c><00:08:35.960><c> theta</c><00:08:36.200><c> for</c><00:08:36.410><c> you</c>

00:08:36.670 --> 00:08:36.680 align:start position:0%
find the optimal value of theta for you
 

00:08:36.680 --> 00:08:38.440 align:start position:0%
find the optimal value of theta for you
let<00:08:37.340><c> me</c><00:08:37.370><c> actually</c><00:08:37.550><c> show</c><00:08:37.849><c> you</c><00:08:37.910><c> what</c><00:08:38.240><c> this</c><00:08:38.390><c> looks</c>

00:08:38.440 --> 00:08:38.450 align:start position:0%
let me actually show you what this looks
 

00:08:38.450 --> 00:08:41.710 align:start position:0%
let me actually show you what this looks
like<00:08:38.720><c> in</c><00:08:39.020><c> octave</c><00:08:39.760><c> so</c><00:08:40.760><c> I've</c><00:08:41.060><c> written</c><00:08:41.210><c> there's</c><00:08:41.660><c> a</c>

00:08:41.710 --> 00:08:41.720 align:start position:0%
like in octave so I've written there's a
 

00:08:41.720 --> 00:08:44.710 align:start position:0%
like in octave so I've written there's a
cost<00:08:42.410><c> function</c><00:08:42.890><c> of</c><00:08:43.010><c> theta</c><00:08:43.280><c> function</c><00:08:44.270><c> exactly</c>

00:08:44.710 --> 00:08:44.720 align:start position:0%
cost function of theta function exactly
 

00:08:44.720 --> 00:08:46.810 align:start position:0%
cost function of theta function exactly
as<00:08:44.930><c> we</c><00:08:45.260><c> had</c><00:08:45.440><c> it</c><00:08:45.620><c> on</c><00:08:45.800><c> their</c><00:08:46.010><c> previous</c><00:08:46.250><c> line</c><00:08:46.610><c> it</c>

00:08:46.810 --> 00:08:46.820 align:start position:0%
as we had it on their previous line it
 

00:08:46.820 --> 00:08:47.740 align:start position:0%
as we had it on their previous line it
computes<00:08:47.240><c> j-val</c>

00:08:47.740 --> 00:08:47.750 align:start position:0%
computes j-val
 

00:08:47.750 --> 00:08:48.900 align:start position:0%
computes j-val
which<00:08:48.020><c> is</c><00:08:48.200><c> the</c>

00:08:48.900 --> 00:08:48.910 align:start position:0%
which is the
 

00:08:48.910 --> 00:08:50.730 align:start position:0%
which is the
cost<00:08:49.060><c> function</c><00:08:49.540><c> and</c><00:08:49.780><c> it</c><00:08:50.140><c> computes</c><00:08:50.560><c> the</c>

00:08:50.730 --> 00:08:50.740 align:start position:0%
cost function and it computes the
 

00:08:50.740 --> 00:08:53.100 align:start position:0%
cost function and it computes the
gradient<00:08:51.220><c> with</c><00:08:52.060><c> the</c><00:08:52.180><c> two</c><00:08:52.330><c> elements</c><00:08:52.780><c> being</c><00:08:52.930><c> the</c>

00:08:53.100 --> 00:08:53.110 align:start position:0%
gradient with the two elements being the
 

00:08:53.110 --> 00:08:54.600 align:start position:0%
gradient with the two elements being the
partial<00:08:53.500><c> derivatives</c><00:08:54.010><c> of</c><00:08:54.130><c> the</c><00:08:54.250><c> cost</c><00:08:54.460><c> function</c>

00:08:54.600 --> 00:08:54.610 align:start position:0%
partial derivatives of the cost function
 

00:08:54.610 --> 00:08:56.700 align:start position:0%
partial derivatives of the cost function
with<00:08:54.880><c> respect</c><00:08:55.750><c> to</c><00:08:55.840><c> you</c><00:08:56.230><c> know</c><00:08:56.260><c> the</c><00:08:56.500><c> two</c>

00:08:56.700 --> 00:08:56.710 align:start position:0%
with respect to you know the two
 

00:08:56.710 --> 00:08:59.370 align:start position:0%
with respect to you know the two
parameters<00:08:57.160><c> theta</c><00:08:57.370><c> 1</c><00:08:57.580><c> and</c><00:08:57.760><c> theta</c><00:08:57.790><c> 2</c><00:08:58.170><c> now</c><00:08:59.170><c> let's</c>

00:08:59.370 --> 00:08:59.380 align:start position:0%
parameters theta 1 and theta 2 now let's
 

00:08:59.380 --> 00:09:01.380 align:start position:0%
parameters theta 1 and theta 2 now let's
switch<00:08:59.560><c> to</c><00:08:59.770><c> my</c><00:08:59.890><c> octave</c><00:09:00.280><c> window</c><00:09:00.310><c> I'm</c><00:09:01.210><c> going</c><00:09:01.330><c> to</c>

00:09:01.380 --> 00:09:01.390 align:start position:0%
switch to my octave window I'm going to
 

00:09:01.390 --> 00:09:03.270 align:start position:0%
switch to my octave window I'm going to
type<00:09:01.630><c> in</c><00:09:01.750><c> those</c><00:09:01.900><c> commands</c><00:09:02.290><c> I</c><00:09:02.470><c> had</c><00:09:02.680><c> just</c><00:09:02.920><c> now</c>

00:09:03.270 --> 00:09:03.280 align:start position:0%
type in those commands I had just now
 

00:09:03.280 --> 00:09:06.000 align:start position:0%
type in those commands I had just now
so<00:09:03.400><c> options</c><00:09:03.880><c> equals</c><00:09:04.360><c> optim</c><00:09:04.810><c> set</c><00:09:05.080><c> this</c><00:09:05.830><c> is</c><00:09:05.980><c> a</c>

00:09:06.000 --> 00:09:06.010 align:start position:0%
so options equals optim set this is a
 

00:09:06.010 --> 00:09:10.260 align:start position:0%
so options equals optim set this is a
the<00:09:06.730><c> notation</c><00:09:07.450><c> for</c><00:09:07.480><c> setting</c><00:09:08.050><c> my</c><00:09:09.270><c> parameters</c>

00:09:10.260 --> 00:09:10.270 align:start position:0%
the notation for setting my parameters
 

00:09:10.270 --> 00:09:12.390 align:start position:0%
the notation for setting my parameters
or<00:09:10.540><c> my</c><00:09:10.690><c> options</c><00:09:11.590><c> for</c><00:09:11.890><c> my</c><00:09:12.010><c> optimization</c>

00:09:12.390 --> 00:09:12.400 align:start position:0%
or my options for my optimization
 

00:09:12.400 --> 00:09:17.220 align:start position:0%
or my options for my optimization
algorithm<00:09:12.970><c> grad</c><00:09:13.600><c> object</c><00:09:14.080><c> on</c><00:09:14.170><c> max</c><00:09:15.160><c> enter</c><00:09:16.230><c> 100</c>

00:09:17.220 --> 00:09:17.230 align:start position:0%
algorithm grad object on max enter 100
 

00:09:17.230 --> 00:09:19.680 align:start position:0%
algorithm grad object on max enter 100
so<00:09:17.560><c> that</c><00:09:17.590><c> says</c><00:09:17.950><c> 100</c><00:09:18.340><c> iterations</c><00:09:18.580><c> and</c><00:09:19.210><c> I</c><00:09:19.450><c> am</c>

00:09:19.680 --> 00:09:19.690 align:start position:0%
so that says 100 iterations and I am
 

00:09:19.690 --> 00:09:22.140 align:start position:0%
so that says 100 iterations and I am
going<00:09:19.990><c> to</c><00:09:20.140><c> provide</c><00:09:20.680><c> the</c><00:09:21.250><c> gradient</c><00:09:21.790><c> to</c><00:09:21.970><c> my</c>

00:09:22.140 --> 00:09:22.150 align:start position:0%
going to provide the gradient to my
 

00:09:22.150 --> 00:09:26.070 align:start position:0%
going to provide the gradient to my
algorithm<00:09:22.680><c> let's</c><00:09:23.680><c> say</c><00:09:23.860><c> initial</c><00:09:24.400><c> theta</c><00:09:25.080><c> equals</c>

00:09:26.070 --> 00:09:26.080 align:start position:0%
algorithm let's say initial theta equals
 

00:09:26.080 --> 00:09:29.100 align:start position:0%
algorithm let's say initial theta equals
0<00:09:26.560><c> 2</c><00:09:27.040><c> by</c><00:09:27.190><c> 1</c><00:09:27.430><c> so</c><00:09:28.090><c> that's</c><00:09:28.240><c> my</c><00:09:28.420><c> initial</c><00:09:28.570><c> guess</c><00:09:29.050><c> for</c>

00:09:29.100 --> 00:09:29.110 align:start position:0%
0 2 by 1 so that's my initial guess for
 

00:09:29.110 --> 00:09:33.180 align:start position:0%
0 2 by 1 so that's my initial guess for
theta<00:09:29.500><c> and</c><00:09:29.980><c> now</c><00:09:30.790><c> I</c><00:09:30.820><c> have</c><00:09:31.150><c> updater</c><00:09:32.190><c> function</c>

00:09:33.180 --> 00:09:33.190 align:start position:0%
theta and now I have updater function
 

00:09:33.190 --> 00:09:34.040 align:start position:0%
theta and now I have updater function
Val

00:09:34.040 --> 00:09:34.050 align:start position:0%
Val
 

00:09:34.050 --> 00:09:40.200 align:start position:0%
Val
exit<00:09:35.050><c> flag</c><00:09:37.050><c> equals</c><00:09:38.050><c> F</c><00:09:38.470><c> min</c><00:09:39.010><c> unconstrained</c><00:09:39.970><c> a</c>

00:09:40.200 --> 00:09:40.210 align:start position:0%
exit flag equals F min unconstrained a
 

00:09:40.210 --> 00:09:44.040 align:start position:0%
exit flag equals F min unconstrained a
pointer<00:09:41.020><c> to</c><00:09:41.230><c> the</c><00:09:41.320><c> cost</c><00:09:41.500><c> function</c><00:09:41.800><c> and</c><00:09:43.050><c> provide</c>

00:09:44.040 --> 00:09:44.050 align:start position:0%
pointer to the cost function and provide
 

00:09:44.050 --> 00:09:49.290 align:start position:0%
pointer to the cost function and provide
my<00:09:44.230><c> initial</c><00:09:44.740><c> guess</c><00:09:44.950><c> and</c><00:09:45.720><c> the</c><00:09:46.860><c> options</c><00:09:48.030><c> like</c><00:09:49.030><c> so</c>

00:09:49.290 --> 00:09:49.300 align:start position:0%
my initial guess and the options like so
 

00:09:49.300 --> 00:09:52.170 align:start position:0%
my initial guess and the options like so
and<00:09:49.600><c> if</c><00:09:50.500><c> I</c><00:09:50.590><c> hit</c><00:09:50.710><c> enter</c><00:09:50.770><c> this</c><00:09:51.760><c> will</c><00:09:51.940><c> run</c><00:09:52.120><c> the</c>

00:09:52.170 --> 00:09:52.180 align:start position:0%
and if I hit enter this will run the
 

00:09:52.180 --> 00:09:54.510 align:start position:0%
and if I hit enter this will run the
optimization<00:09:52.390><c> algorithm</c><00:09:53.230><c> and</c><00:09:53.470><c> the</c><00:09:54.190><c> returns</c>

00:09:54.510 --> 00:09:54.520 align:start position:0%
optimization algorithm and the returns
 

00:09:54.520 --> 00:09:56.820 align:start position:0%
optimization algorithm and the returns
pretty<00:09:54.820><c> quickly</c><00:09:55.030><c> so</c><00:09:55.360><c> this</c><00:09:55.960><c> funny</c><00:09:56.260><c> formatting</c>

00:09:56.820 --> 00:09:56.830 align:start position:0%
pretty quickly so this funny formatting
 

00:09:56.830 --> 00:09:58.680 align:start position:0%
pretty quickly so this funny formatting
that's<00:09:56.980><c> because</c><00:09:57.370><c> my</c><00:09:57.580><c> line</c><00:09:57.820><c> you</c><00:09:58.210><c> know</c><00:09:58.270><c> Maya</c>

00:09:58.680 --> 00:09:58.690 align:start position:0%
that's because my line you know Maya
 

00:09:58.690 --> 00:10:02.310 align:start position:0%
that's because my line you know Maya
might<00:09:59.230><c> come</c><00:09:59.950><c> wrapped</c><00:10:00.250><c> around</c><00:10:00.400><c> but</c><00:10:00.880><c> what</c><00:10:01.600><c> this</c>

00:10:02.310 --> 00:10:02.320 align:start position:0%
might come wrapped around but what this
 

00:10:02.320 --> 00:10:03.960 align:start position:0%
might come wrapped around but what this
funny<00:10:02.530><c> thing</c><00:10:02.710><c> is</c><00:10:02.800><c> just</c><00:10:02.980><c> because</c><00:10:03.190><c> my</c><00:10:03.370><c> command</c>

00:10:03.960 --> 00:10:03.970 align:start position:0%
funny thing is just because my command
 

00:10:03.970 --> 00:10:05.880 align:start position:0%
funny thing is just because my command
line<00:10:04.180><c> had</c><00:10:04.420><c> wrapped</c><00:10:04.660><c> around</c><00:10:04.810><c> but</c><00:10:05.650><c> what</c><00:10:05.770><c> this</c>

00:10:05.880 --> 00:10:05.890 align:start position:0%
line had wrapped around but what this
 

00:10:05.890 --> 00:10:07.980 align:start position:0%
line had wrapped around but what this
says<00:10:05.950><c> is</c><00:10:06.340><c> that</c><00:10:06.370><c> it</c><00:10:06.640><c> numerically</c><00:10:06.970><c> renders</c><00:10:07.780><c> you</c>

00:10:07.980 --> 00:10:07.990 align:start position:0%
says is that it numerically renders you
 

00:10:07.990 --> 00:10:09.630 align:start position:0%
says is that it numerically renders you
know<00:10:08.080><c> think</c><00:10:08.710><c> of</c><00:10:08.800><c> as</c><00:10:08.890><c> gradient</c><00:10:09.280><c> descent</c><00:10:09.550><c> on</c>

00:10:09.630 --> 00:10:09.640 align:start position:0%
know think of as gradient descent on
 

00:10:09.640 --> 00:10:11.670 align:start position:0%
know think of as gradient descent on
steroids<00:10:09.700><c> they</c><00:10:10.360><c> found</c><00:10:10.600><c> the</c><00:10:10.810><c> optimal</c><00:10:11.350><c> value</c><00:10:11.650><c> of</c>

00:10:11.670 --> 00:10:11.680 align:start position:0%
steroids they found the optimal value of
 

00:10:11.680 --> 00:10:14.010 align:start position:0%
steroids they found the optimal value of
a<00:10:11.860><c> theta</c><00:10:12.100><c> is</c><00:10:12.430><c> Theta</c><00:10:13.090><c> y</c><00:10:13.240><c> equals</c><00:10:13.480><c> 5</c><00:10:13.630><c> theta</c><00:10:13.660><c> 2</c>

00:10:14.010 --> 00:10:14.020 align:start position:0%
a theta is Theta y equals 5 theta 2
 

00:10:14.020 --> 00:10:16.110 align:start position:0%
a theta is Theta y equals 5 theta 2
equals<00:10:14.320><c> 5</c><00:10:14.470><c> exactly</c><00:10:15.130><c> as</c><00:10:15.250><c> we're</c><00:10:15.430><c> hoping</c><00:10:15.700><c> for</c><00:10:15.760><c> the</c>

00:10:16.110 --> 00:10:16.120 align:start position:0%
equals 5 exactly as we're hoping for the
 

00:10:16.120 --> 00:10:19.610 align:start position:0%
equals 5 exactly as we're hoping for the
function<00:10:17.050><c> value</c><00:10:17.500><c> at</c><00:10:18.250><c> the</c><00:10:18.850><c> optimum</c><00:10:19.330><c> is</c>

00:10:19.610 --> 00:10:19.620 align:start position:0%
function value at the optimum is
 

00:10:19.620 --> 00:10:22.080 align:start position:0%
function value at the optimum is
essentially<00:10:20.620><c> 10</c><00:10:20.830><c> to</c><00:10:20.950><c> the</c><00:10:21.040><c> minus</c><00:10:21.310><c> 30</c><00:10:21.580><c> so</c><00:10:21.940><c> that's</c>

00:10:22.080 --> 00:10:22.090 align:start position:0%
essentially 10 to the minus 30 so that's
 

00:10:22.090 --> 00:10:24.420 align:start position:0%
essentially 10 to the minus 30 so that's
essentially<00:10:22.510><c> 0</c><00:10:23.050><c> which</c><00:10:23.350><c> is</c><00:10:23.530><c> also</c><00:10:23.770><c> what</c><00:10:24.280><c> we're</c>

00:10:24.420 --> 00:10:24.430 align:start position:0%
essentially 0 which is also what we're
 

00:10:24.430 --> 00:10:24.960 align:start position:0%
essentially 0 which is also what we're
hoping<00:10:24.550><c> for</c>

00:10:24.960 --> 00:10:24.970 align:start position:0%
hoping for
 

00:10:24.970 --> 00:10:29.400 align:start position:0%
hoping for
and<00:10:25.180><c> the</c><00:10:25.870><c> exit</c><00:10:26.350><c> flag</c><00:10:26.560><c> is</c><00:10:27.160><c> 1</c><00:10:27.580><c> and</c><00:10:27.880><c> this</c><00:10:28.870><c> shows</c>

00:10:29.400 --> 00:10:29.410 align:start position:0%
and the exit flag is 1 and this shows
 

00:10:29.410 --> 00:10:31.920 align:start position:0%
and the exit flag is 1 and this shows
what<00:10:29.890><c> the</c><00:10:29.920><c> convergence</c><00:10:30.180><c> status</c><00:10:31.180><c> of</c><00:10:31.420><c> this</c><00:10:31.570><c> end</c>

00:10:31.920 --> 00:10:31.930 align:start position:0%
what the convergence status of this end
 

00:10:31.930 --> 00:10:35.130 align:start position:0%
what the convergence status of this end
if<00:10:32.080><c> you</c><00:10:32.170><c> want</c><00:10:32.320><c> you</c><00:10:32.470><c> can</c><00:10:32.620><c> do</c><00:10:33.130><c> help</c><00:10:33.430><c> F</c><00:10:33.670><c> min</c><00:10:34.060><c> um</c><00:10:34.270><c> to</c>

00:10:35.130 --> 00:10:35.140 align:start position:0%
if you want you can do help F min um to
 

00:10:35.140 --> 00:10:36.720 align:start position:0%
if you want you can do help F min um to
read<00:10:35.320><c> the</c><00:10:35.470><c> documentation</c><00:10:36.010><c> for</c><00:10:36.520><c> how</c><00:10:36.670><c> to</c>

00:10:36.720 --> 00:10:36.730 align:start position:0%
read the documentation for how to
 

00:10:36.730 --> 00:10:38.520 align:start position:0%
read the documentation for how to
interpret<00:10:37.180><c> the</c><00:10:37.480><c> exit</c><00:10:37.780><c> flag</c><00:10:37.900><c> but</c><00:10:38.170><c> the</c><00:10:38.260><c> exit</c>

00:10:38.520 --> 00:10:38.530 align:start position:0%
interpret the exit flag but the exit
 

00:10:38.530 --> 00:10:40.680 align:start position:0%
interpret the exit flag but the exit
flag<00:10:38.650><c> lets</c><00:10:39.010><c> you</c><00:10:39.130><c> verify</c><00:10:39.340><c> whether</c><00:10:40.180><c> or</c><00:10:40.360><c> not</c><00:10:40.480><c> this</c>

00:10:40.680 --> 00:10:40.690 align:start position:0%
flag lets you verify whether or not this
 

00:10:40.690 --> 00:10:44.130 align:start position:0%
flag lets you verify whether or not this
algorithm<00:10:41.170><c> things</c><00:10:41.410><c> that</c><00:10:41.560><c> has</c><00:10:41.680><c> converged</c><00:10:43.140><c> so</c>

00:10:44.130 --> 00:10:44.140 align:start position:0%
algorithm things that has converged so
 

00:10:44.140 --> 00:10:46.320 align:start position:0%
algorithm things that has converged so
that's<00:10:44.590><c> how</c><00:10:44.860><c> you</c><00:10:44.920><c> run</c><00:10:45.280><c> these</c><00:10:45.460><c> algorithms</c><00:10:45.790><c> in</c>

00:10:46.320 --> 00:10:46.330 align:start position:0%
that's how you run these algorithms in
 

00:10:46.330 --> 00:10:48.570 align:start position:0%
that's how you run these algorithms in
octave<00:10:46.600><c> I</c><00:10:47.140><c> should</c><00:10:47.800><c> mention</c><00:10:47.980><c> by</c><00:10:48.220><c> the</c><00:10:48.370><c> way</c><00:10:48.520><c> that</c>

00:10:48.570 --> 00:10:48.580 align:start position:0%
octave I should mention by the way that
 

00:10:48.580 --> 00:10:51.450 align:start position:0%
octave I should mention by the way that
for<00:10:49.180><c> the</c><00:10:49.270><c> octave</c><00:10:49.630><c> implementation</c><00:10:50.350><c> this</c><00:10:50.920><c> value</c>

00:10:51.450 --> 00:10:51.460 align:start position:0%
for the octave implementation this value
 

00:10:51.460 --> 00:10:53.660 align:start position:0%
for the octave implementation this value
of<00:10:51.760><c> theta</c><00:10:52.120><c> your</c><00:10:52.600><c> parameter</c><00:10:53.080><c> vector</c><00:10:53.410><c> theta</c>

00:10:53.660 --> 00:10:53.670 align:start position:0%
of theta your parameter vector theta
 

00:10:53.670 --> 00:10:57.600 align:start position:0%
of theta your parameter vector theta
must<00:10:54.670><c> be</c><00:10:54.790><c> in</c><00:10:54.880><c> Rd</c><00:10:55.780><c> for</c><00:10:56.440><c> D</c><00:10:56.680><c> greater</c><00:10:56.950><c> than</c><00:10:57.310><c> or</c>

00:10:57.600 --> 00:10:57.610 align:start position:0%
must be in Rd for D greater than or
 

00:10:57.610 --> 00:10:59.750 align:start position:0%
must be in Rd for D greater than or
equal<00:10:57.640><c> to</c><00:10:57.970><c> 2</c><00:10:58.270><c> so</c><00:10:58.600><c> if</c><00:10:58.840><c> theta</c>

00:10:59.750 --> 00:10:59.760 align:start position:0%
equal to 2 so if theta
 

00:10:59.760 --> 00:11:01.580 align:start position:0%
equal to 2 so if theta
is<00:10:59.820><c> just</c><00:11:00.090><c> a</c><00:11:00.150><c> real</c><00:11:00.360><c> number</c><00:11:00.390><c> so</c><00:11:00.960><c> if</c><00:11:01.050><c> it's</c><00:11:01.200><c> not</c><00:11:01.410><c> if</c>

00:11:01.580 --> 00:11:01.590 align:start position:0%
is just a real number so if it's not if
 

00:11:01.590 --> 00:11:03.170 align:start position:0%
is just a real number so if it's not if
it's<00:11:01.770><c> not</c><00:11:01.950><c> at</c><00:11:02.160><c> least</c><00:11:02.400><c> a</c><00:11:02.550><c> two-dimensional</c>

00:11:03.170 --> 00:11:03.180 align:start position:0%
it's not at least a two-dimensional
 

00:11:03.180 --> 00:11:04.580 align:start position:0%
it's not at least a two-dimensional
vector<00:11:03.510><c> or</c><00:11:03.900><c> some</c><00:11:04.170><c> higher</c><00:11:04.410><c> than</c>

00:11:04.580 --> 00:11:04.590 align:start position:0%
vector or some higher than
 

00:11:04.590 --> 00:11:07.670 align:start position:0%
vector or some higher than
two-dimensional<00:11:05.220><c> vector</c><00:11:05.520><c> this</c><00:11:06.420><c> fminunc</c><00:11:06.680><c> may</c>

00:11:07.670 --> 00:11:07.680 align:start position:0%
two-dimensional vector this fminunc may
 

00:11:07.680 --> 00:11:10.190 align:start position:0%
two-dimensional vector this fminunc may
not<00:11:07.890><c> work</c><00:11:08.130><c> so</c><00:11:08.460><c> if</c><00:11:08.970><c> in</c><00:11:09.510><c> case</c><00:11:09.570><c> you</c><00:11:09.990><c> have</c><00:11:10.170><c> a</c>

00:11:10.190 --> 00:11:10.200 align:start position:0%
not work so if in case you have a
 

00:11:10.200 --> 00:11:11.690 align:start position:0%
not work so if in case you have a
one-dimensional<00:11:10.320><c> function</c><00:11:11.070><c> that</c><00:11:11.490><c> you</c><00:11:11.550><c> need</c>

00:11:11.690 --> 00:11:11.700 align:start position:0%
one-dimensional function that you need
 

00:11:11.700 --> 00:11:13.730 align:start position:0%
one-dimensional function that you need
to<00:11:11.790><c> optimize</c><00:11:12.030><c> you</c><00:11:12.720><c> can</c><00:11:12.930><c> look</c><00:11:13.080><c> in</c><00:11:13.230><c> the</c><00:11:13.320><c> octave</c>

00:11:13.730 --> 00:11:13.740 align:start position:0%
to optimize you can look in the octave
 

00:11:13.740 --> 00:11:15.800 align:start position:0%
to optimize you can look in the octave
documentation<00:11:14.520><c> for</c><00:11:14.700><c> F</c><00:11:14.820><c> min</c><00:11:15.090><c> uncle</c><00:11:15.420><c> for</c>

00:11:15.800 --> 00:11:15.810 align:start position:0%
documentation for F min uncle for
 

00:11:15.810 --> 00:11:18.980 align:start position:0%
documentation for F min uncle for
additional<00:11:16.260><c> details</c><00:11:17.390><c> so</c><00:11:18.390><c> that's</c><00:11:18.750><c> how</c><00:11:18.930><c> we</c>

00:11:18.980 --> 00:11:18.990 align:start position:0%
additional details so that's how we
 

00:11:18.990 --> 00:11:22.700 align:start position:0%
additional details so that's how we
optimize<00:11:19.350><c> our</c><00:11:20.250><c> toy</c><00:11:20.640><c> example</c><00:11:21.270><c> of</c><00:11:21.540><c> this</c><00:11:21.810><c> simple</c>

00:11:22.700 --> 00:11:22.710 align:start position:0%
optimize our toy example of this simple
 

00:11:22.710 --> 00:11:25.430 align:start position:0%
optimize our toy example of this simple
quadratic<00:11:23.400><c> cost</c><00:11:23.760><c> function</c><00:11:23.940><c> how</c><00:11:24.930><c> do</c><00:11:24.990><c> we</c><00:11:25.230><c> apply</c>

00:11:25.430 --> 00:11:25.440 align:start position:0%
quadratic cost function how do we apply
 

00:11:25.440 --> 00:11:28.310 align:start position:0%
quadratic cost function how do we apply
this<00:11:25.560><c> to</c><00:11:26.040><c> logistic</c><00:11:26.580><c> regression</c><00:11:27.090><c> in</c><00:11:27.320><c> logistic</c>

00:11:28.310 --> 00:11:28.320 align:start position:0%
this to logistic regression in logistic
 

00:11:28.320 --> 00:11:30.380 align:start position:0%
this to logistic regression in logistic
regression<00:11:28.800><c> we</c><00:11:29.280><c> have</c><00:11:29.310><c> a</c><00:11:29.520><c> parameter</c><00:11:30.210><c> vector</c>

00:11:30.380 --> 00:11:30.390 align:start position:0%
regression we have a parameter vector
 

00:11:30.390 --> 00:11:32.720 align:start position:0%
regression we have a parameter vector
theta<00:11:30.630><c> and</c><00:11:31.260><c> I'm</c><00:11:31.560><c> going</c><00:11:31.740><c> to</c><00:11:31.800><c> use</c><00:11:31.980><c> a</c><00:11:32.220><c> mix</c><00:11:32.520><c> of</c>

00:11:32.720 --> 00:11:32.730 align:start position:0%
theta and I'm going to use a mix of
 

00:11:32.730 --> 00:11:35.180 align:start position:0%
theta and I'm going to use a mix of
octave<00:11:32.910><c> notation</c><00:11:33.840><c> and</c><00:11:34.080><c> select</c><00:11:34.560><c> math</c><00:11:34.740><c> notation</c>

00:11:35.180 --> 00:11:35.190 align:start position:0%
octave notation and select math notation
 

00:11:35.190 --> 00:11:37.040 align:start position:0%
octave notation and select math notation
but<00:11:35.580><c> I</c><00:11:35.610><c> hope</c><00:11:35.850><c> this</c><00:11:36.330><c> explanation</c><00:11:36.690><c> will</c><00:11:36.960><c> be</c>

00:11:37.040 --> 00:11:37.050 align:start position:0%
but I hope this explanation will be
 

00:11:37.050 --> 00:11:39.310 align:start position:0%
but I hope this explanation will be
clear<00:11:37.260><c> but</c><00:11:37.440><c> our</c><00:11:37.920><c> parameter</c><00:11:38.550><c> vector</c><00:11:38.910><c> theta</c>

00:11:39.310 --> 00:11:39.320 align:start position:0%
clear but our parameter vector theta
 

00:11:39.320 --> 00:11:41.540 align:start position:0%
clear but our parameter vector theta
comprises<00:11:40.320><c> these</c><00:11:40.530><c> parameters</c><00:11:40.950><c> theta</c><00:11:41.190><c> 0</c>

00:11:41.540 --> 00:11:41.550 align:start position:0%
comprises these parameters theta 0
 

00:11:41.550 --> 00:11:45.520 align:start position:0%
comprises these parameters theta 0
through<00:11:41.790><c> theta</c><00:11:41.850><c> n</c><00:11:42.470><c> because</c><00:11:43.470><c> octave</c><00:11:43.800><c> indexes</c>

00:11:45.520 --> 00:11:45.530 align:start position:0%
through theta n because octave indexes
 

00:11:45.530 --> 00:11:48.830 align:start position:0%
through theta n because octave indexes
vectors<00:11:46.530><c> using</c><00:11:47.090><c> indexing</c><00:11:48.090><c> from</c><00:11:48.210><c> 1</c><00:11:48.540><c> you</c><00:11:48.780><c> know</c>

00:11:48.830 --> 00:11:48.840 align:start position:0%
vectors using indexing from 1 you know
 

00:11:48.840 --> 00:11:51.500 align:start position:0%
vectors using indexing from 1 you know
theta<00:11:49.080><c> 0</c><00:11:49.530><c> is</c><00:11:49.710><c> actually</c><00:11:49.860><c> written</c><00:11:50.310><c> theta</c><00:11:51.060><c> 1</c><00:11:51.360><c> in</c>

00:11:51.500 --> 00:11:51.510 align:start position:0%
theta 0 is actually written theta 1 in
 

00:11:51.510 --> 00:11:53.540 align:start position:0%
theta 0 is actually written theta 1 in
octave<00:11:51.870><c> theta</c><00:11:52.530><c> 1</c><00:11:52.830><c> is</c><00:11:52.980><c> going</c><00:11:53.130><c> to</c><00:11:53.190><c> be</c><00:11:53.250><c> written</c>

00:11:53.540 --> 00:11:53.550 align:start position:0%
octave theta 1 is going to be written
 

00:11:53.550 --> 00:11:55.820 align:start position:0%
octave theta 1 is going to be written
sort<00:11:54.090><c> of</c><00:11:54.120><c> theta</c><00:11:54.360><c> 2</c><00:11:54.600><c> in</c><00:11:54.720><c> octave</c><00:11:55.050><c> and</c><00:11:55.320><c> that</c><00:11:55.560><c> can</c>

00:11:55.820 --> 00:11:55.830 align:start position:0%
sort of theta 2 in octave and that can
 

00:11:55.830 --> 00:11:58.760 align:start position:0%
sort of theta 2 in octave and that can
be<00:11:55.950><c> written</c><00:11:56.190><c> theta</c><00:11:56.940><c> n</c><00:11:57.330><c> plus</c><00:11:57.900><c> 1</c><00:11:58.140><c> right</c><00:11:58.560><c> and</c>

00:11:58.760 --> 00:11:58.770 align:start position:0%
be written theta n plus 1 right and
 

00:11:58.770 --> 00:12:01.520 align:start position:0%
be written theta n plus 1 right and
that's<00:11:58.890><c> because</c><00:11:59.250><c> octave</c><00:12:00.180><c> indexes</c><00:12:00.480><c> is</c><00:12:01.440><c> vectors</c>

00:12:01.520 --> 00:12:01.530 align:start position:0%
that's because octave indexes is vectors
 

00:12:01.530 --> 00:12:04.370 align:start position:0%
that's because octave indexes is vectors
starting<00:12:02.190><c> from</c><00:12:02.700><c> index</c><00:12:03.060><c> of</c><00:12:03.570><c> 1</c><00:12:03.810><c> instead</c><00:12:04.200><c> of</c><00:12:04.290><c> an</c>

00:12:04.370 --> 00:12:04.380 align:start position:0%
starting from index of 1 instead of an
 

00:12:04.380 --> 00:12:08.690 align:start position:0%
starting from index of 1 instead of an
index<00:12:04.650><c> from</c><00:12:04.830><c> 0</c><00:12:05.220><c> so</c><00:12:06.890><c> what</c><00:12:07.890><c> we</c><00:12:08.010><c> need</c><00:12:08.160><c> to</c><00:12:08.280><c> do</c><00:12:08.460><c> then</c>

00:12:08.690 --> 00:12:08.700 align:start position:0%
index from 0 so what we need to do then
 

00:12:08.700 --> 00:12:12.140 align:start position:0%
index from 0 so what we need to do then
is<00:12:08.910><c> write</c><00:12:09.480><c> a</c><00:12:09.750><c> cost</c><00:12:10.230><c> function</c><00:12:10.770><c> to</c><00:12:11.150><c> there</c>

00:12:12.140 --> 00:12:12.150 align:start position:0%
is write a cost function to there
 

00:12:12.150 --> 00:12:13.970 align:start position:0%
is write a cost function to there
captures<00:12:12.660><c> the</c><00:12:12.840><c> cost</c><00:12:13.050><c> function</c><00:12:13.260><c> for</c><00:12:13.800><c> logistic</c>

00:12:13.970 --> 00:12:13.980 align:start position:0%
captures the cost function for logistic
 

00:12:13.980 --> 00:12:16.610 align:start position:0%
captures the cost function for logistic
regression<00:12:14.810><c> concretely</c><00:12:15.810><c> the</c><00:12:16.230><c> cost</c><00:12:16.440><c> function</c>

00:12:16.610 --> 00:12:16.620 align:start position:0%
regression concretely the cost function
 

00:12:16.620 --> 00:12:19.070 align:start position:0%
regression concretely the cost function
needs<00:12:17.100><c> to</c><00:12:17.250><c> return</c><00:12:17.580><c> j-val</c><00:12:18.180><c> which</c><00:12:18.420><c> is</c><00:12:18.600><c> you</c><00:12:19.020><c> know</c>

00:12:19.070 --> 00:12:19.080 align:start position:0%
needs to return j-val which is you know
 

00:12:19.080 --> 00:12:20.840 align:start position:0%
needs to return j-val which is you know
j<00:12:19.320><c> Vallance</c><00:12:19.680><c> you</c><00:12:19.740><c> need</c><00:12:19.920><c> some</c><00:12:20.100><c> code</c><00:12:20.340><c> to</c><00:12:20.490><c> compute</c>

00:12:20.840 --> 00:12:20.850 align:start position:0%
j Vallance you need some code to compute
 

00:12:20.850 --> 00:12:23.870 align:start position:0%
j Vallance you need some code to compute
J<00:12:21.420><c> of</c><00:12:21.570><c> theta</c><00:12:21.600><c> and</c><00:12:22.110><c> we</c><00:12:22.200><c> also</c><00:12:22.890><c> need</c><00:12:23.340><c> to</c><00:12:23.520><c> give</c><00:12:23.760><c> it</c>

00:12:23.870 --> 00:12:23.880 align:start position:0%
J of theta and we also need to give it
 

00:12:23.880 --> 00:12:26.210 align:start position:0%
J of theta and we also need to give it
the<00:12:24.060><c> gradient</c><00:12:24.510><c> so</c><00:12:24.600><c> gradient</c><00:12:25.200><c> 1</c><00:12:25.470><c> is</c><00:12:25.860><c> going</c><00:12:26.130><c> to</c>

00:12:26.210 --> 00:12:26.220 align:start position:0%
the gradient so gradient 1 is going to
 

00:12:26.220 --> 00:12:27.590 align:start position:0%
the gradient so gradient 1 is going to
be<00:12:26.280><c> some</c><00:12:26.550><c> code</c><00:12:26.790><c> to</c><00:12:26.850><c> compute</c><00:12:27.330><c> the</c><00:12:27.420><c> partial</c>

00:12:27.590 --> 00:12:27.600 align:start position:0%
be some code to compute the partial
 

00:12:27.600 --> 00:12:30.830 align:start position:0%
be some code to compute the partial
derivative<00:12:28.170><c> respect</c><00:12:28.380><c> to</c><00:12:29.100><c> theta</c><00:12:29.280><c> 0</c><00:12:29.690><c> the</c><00:12:30.690><c> next</c>

00:12:30.830 --> 00:12:30.840 align:start position:0%
derivative respect to theta 0 the next
 

00:12:30.840 --> 00:12:33.500 align:start position:0%
derivative respect to theta 0 the next
partial<00:12:31.650><c> derivative</c><00:12:32.100><c> respect</c><00:12:32.280><c> to</c><00:12:33.030><c> theta</c><00:12:33.210><c> 1</c>

00:12:33.500 --> 00:12:33.510 align:start position:0%
partial derivative respect to theta 1
 

00:12:33.510 --> 00:12:35.690 align:start position:0%
partial derivative respect to theta 1
and<00:12:33.720><c> so</c><00:12:34.200><c> on</c><00:12:34.410><c> and</c><00:12:34.830><c> once</c><00:12:35.040><c> again</c><00:12:35.160><c> this</c><00:12:35.550><c> is</c>

00:12:35.690 --> 00:12:35.700 align:start position:0%
and so on and once again this is
 

00:12:35.700 --> 00:12:38.180 align:start position:0%
and so on and once again this is
gradient<00:12:36.120><c> 0</c><00:12:36.600><c> this</c><00:12:37.050><c> gradient</c><00:12:37.470><c> 1</c><00:12:37.650><c> gradient</c><00:12:38.040><c> 2</c>

00:12:38.180 --> 00:12:38.190 align:start position:0%
gradient 0 this gradient 1 gradient 2
 

00:12:38.190 --> 00:12:40.130 align:start position:0%
gradient 0 this gradient 1 gradient 2
and<00:12:38.400><c> so</c><00:12:38.550><c> on</c><00:12:38.610><c> rather</c><00:12:39.150><c> than</c><00:12:39.360><c> gradient</c><00:12:39.690><c> 0</c>

00:12:40.130 --> 00:12:40.140 align:start position:0%
and so on rather than gradient 0
 

00:12:40.140 --> 00:12:43.550 align:start position:0%
and so on rather than gradient 0
gradient<00:12:40.560><c> 1</c><00:12:40.740><c> because</c><00:12:41.550><c> octave</c><00:12:42.360><c> indexes</c><00:12:42.630><c> is</c>

00:12:43.550 --> 00:12:43.560 align:start position:0%
gradient 1 because octave indexes is
 

00:12:43.560 --> 00:12:46.100 align:start position:0%
gradient 1 because octave indexes is
vectors<00:12:43.700><c> starting</c><00:12:44.700><c> from</c><00:12:44.970><c> 1</c><00:12:45.330><c> rather</c><00:12:45.630><c> than</c><00:12:45.930><c> from</c>

00:12:46.100 --> 00:12:46.110 align:start position:0%
vectors starting from 1 rather than from
 

00:12:46.110 --> 00:12:48.980 align:start position:0%
vectors starting from 1 rather than from
0<00:12:46.580><c> but</c><00:12:47.580><c> the</c><00:12:47.730><c> main</c><00:12:47.910><c> concept</c><00:12:48.120><c> I</c><00:12:48.510><c> hope</c><00:12:48.690><c> you</c><00:12:48.840><c> take</c>

00:12:48.980 --> 00:12:48.990 align:start position:0%
0 but the main concept I hope you take
 

00:12:48.990 --> 00:12:50.480 align:start position:0%
0 but the main concept I hope you take
away<00:12:49.170><c> from</c><00:12:49.230><c> the</c><00:12:49.530><c> slide</c><00:12:49.650><c> is</c><00:12:50.010><c> that</c><00:12:50.190><c> what</c><00:12:50.370><c> you</c>

00:12:50.480 --> 00:12:50.490 align:start position:0%
away from the slide is that what you
 

00:12:50.490 --> 00:12:53.600 align:start position:0%
away from the slide is that what you
need<00:12:50.640><c> to</c><00:12:50.760><c> do</c><00:12:50.940><c> is</c><00:12:51.270><c> write</c><00:12:51.540><c> a</c><00:12:51.570><c> function</c><00:12:52.610><c> that</c>

00:12:53.600 --> 00:12:53.610 align:start position:0%
need to do is write a function that
 

00:12:53.610 --> 00:12:56.960 align:start position:0%
need to do is write a function that
returns<00:12:54.620><c> the</c><00:12:55.620><c> cost</c><00:12:55.890><c> function</c><00:12:56.070><c> and</c><00:12:56.550><c> returns</c><00:12:56.820><c> a</c>

00:12:56.960 --> 00:12:56.970 align:start position:0%
returns the cost function and returns a
 

00:12:56.970 --> 00:13:00.320 align:start position:0%
returns the cost function and returns a
gradient<00:12:57.240><c> and</c><00:12:57.690><c> so</c><00:12:58.530><c> in</c><00:12:59.280><c> order</c><00:12:59.580><c> to</c><00:12:59.730><c> apply</c><00:13:00.090><c> this</c>

00:13:00.320 --> 00:13:00.330 align:start position:0%
gradient and so in order to apply this
 

00:13:00.330 --> 00:13:02.990 align:start position:0%
gradient and so in order to apply this
to<00:13:00.960><c> logistic</c><00:13:01.440><c> regression</c><00:13:01.860><c> or</c><00:13:02.010><c> even</c><00:13:02.460><c> to</c><00:13:02.640><c> linear</c>

00:13:02.990 --> 00:13:03.000 align:start position:0%
to logistic regression or even to linear
 

00:13:03.000 --> 00:13:04.760 align:start position:0%
to logistic regression or even to linear
regression<00:13:03.030><c> if</c><00:13:03.630><c> you</c><00:13:03.720><c> want</c><00:13:03.900><c> to</c><00:13:04.020><c> use</c><00:13:04.560><c> these</c>

00:13:04.760 --> 00:13:04.770 align:start position:0%
regression if you want to use these
 

00:13:04.770 --> 00:13:06.140 align:start position:0%
regression if you want to use these
optimization<00:13:05.550><c> algorithms</c><00:13:05.910><c> for</c><00:13:06.030><c> linear</c>

00:13:06.140 --> 00:13:06.150 align:start position:0%
optimization algorithms for linear
 

00:13:06.150 --> 00:13:08.550 align:start position:0%
optimization algorithms for linear
regression<00:13:06.330><c> what</c><00:13:07.230><c> you</c><00:13:07.320><c> need</c><00:13:07.470><c> to</c><00:13:07.590><c> do</c><00:13:07.740><c> is</c><00:13:08.010><c> plug</c>

00:13:08.550 --> 00:13:08.560 align:start position:0%
regression what you need to do is plug
 

00:13:08.560 --> 00:13:10.980 align:start position:0%
regression what you need to do is plug
the<00:13:08.650><c> appropriate</c><00:13:09.190><c> code</c><00:13:09.400><c> to</c><00:13:09.970><c> compute</c><00:13:10.420><c> these</c>

00:13:10.980 --> 00:13:10.990 align:start position:0%
the appropriate code to compute these
 

00:13:10.990 --> 00:13:14.199 align:start position:0%
the appropriate code to compute these
things<00:13:11.050><c> over</c><00:13:11.640><c> here</c>

00:13:14.199 --> 00:13:14.209 align:start position:0%
things over here
 

00:13:14.209 --> 00:13:16.730 align:start position:0%
things over here
so<00:13:15.209><c> now</c><00:13:15.660><c> you</c><00:13:15.720><c> know</c><00:13:15.959><c> how</c><00:13:16.199><c> to</c><00:13:16.230><c> use</c><00:13:16.560><c> these</c>

00:13:16.730 --> 00:13:16.740 align:start position:0%
so now you know how to use these
 

00:13:16.740 --> 00:13:19.400 align:start position:0%
so now you know how to use these
advanced<00:13:17.250><c> optimization</c><00:13:17.940><c> algorithms</c><00:13:18.449><c> because</c>

00:13:19.400 --> 00:13:19.410 align:start position:0%
advanced optimization algorithms because
 

00:13:19.410 --> 00:13:21.769 align:start position:0%
advanced optimization algorithms because
I'm<00:13:19.649><c> using</c><00:13:20.339><c> because</c><00:13:20.879><c> for</c><00:13:21.329><c> these</c><00:13:21.480><c> algorithms</c>

00:13:21.769 --> 00:13:21.779 align:start position:0%
I'm using because for these algorithms
 

00:13:21.779 --> 00:13:23.480 align:start position:0%
I'm using because for these algorithms
you<00:13:22.139><c> are</c><00:13:22.199><c> using</c><00:13:22.440><c> a</c><00:13:22.800><c> sophisticated</c>

00:13:23.480 --> 00:13:23.490 align:start position:0%
you are using a sophisticated
 

00:13:23.490 --> 00:13:25.819 align:start position:0%
you are using a sophisticated
optimization<00:13:23.879><c> library</c><00:13:24.690><c> it</c><00:13:25.170><c> makes</c><00:13:25.410><c> the</c><00:13:25.620><c> code</c>

00:13:25.819 --> 00:13:25.829 align:start position:0%
optimization library it makes the code
 

00:13:25.829 --> 00:13:28.670 align:start position:0%
optimization library it makes the code
just<00:13:26.370><c> a</c><00:13:26.459><c> little</c><00:13:26.730><c> bit</c><00:13:26.879><c> more</c><00:13:27.180><c> opaque</c><00:13:28.079><c> and</c><00:13:28.410><c> so</c>

00:13:28.670 --> 00:13:28.680 align:start position:0%
just a little bit more opaque and so
 

00:13:28.680 --> 00:13:30.619 align:start position:0%
just a little bit more opaque and so
just<00:13:29.040><c> maybe</c><00:13:29.279><c> a</c><00:13:29.399><c> little</c><00:13:29.699><c> bit</c><00:13:29.819><c> harder</c><00:13:30.300><c> to</c><00:13:30.449><c> debug</c>

00:13:30.619 --> 00:13:30.629 align:start position:0%
just maybe a little bit harder to debug
 

00:13:30.629 --> 00:13:33.199 align:start position:0%
just maybe a little bit harder to debug
but<00:13:31.470><c> because</c><00:13:31.829><c> these</c><00:13:32.129><c> algorithms</c><00:13:32.459><c> often</c><00:13:32.879><c> run</c>

00:13:33.199 --> 00:13:33.209 align:start position:0%
but because these algorithms often run
 

00:13:33.209 --> 00:13:35.389 align:start position:0%
but because these algorithms often run
much<00:13:33.389><c> faster</c><00:13:33.870><c> than</c><00:13:34.019><c> gradient</c><00:13:34.079><c> descent</c><00:13:34.410><c> often</c>

00:13:35.389 --> 00:13:35.399 align:start position:0%
much faster than gradient descent often
 

00:13:35.399 --> 00:13:37.790 align:start position:0%
much faster than gradient descent often
quite<00:13:36.000><c> typically</c><00:13:36.389><c> whenever</c><00:13:37.079><c> I</c><00:13:37.139><c> have</c><00:13:37.410><c> a</c><00:13:37.439><c> large</c>

00:13:37.790 --> 00:13:37.800 align:start position:0%
quite typically whenever I have a large
 

00:13:37.800 --> 00:13:39.679 align:start position:0%
quite typically whenever I have a large
machine<00:13:38.100><c> learning</c><00:13:38.459><c> problem</c><00:13:38.879><c> I</c><00:13:39.029><c> will</c><00:13:39.449><c> use</c>

00:13:39.679 --> 00:13:39.689 align:start position:0%
machine learning problem I will use
 

00:13:39.689 --> 00:13:41.600 align:start position:0%
machine learning problem I will use
these<00:13:39.930><c> algorithms</c><00:13:40.259><c> instead</c><00:13:40.949><c> of</c><00:13:41.160><c> using</c>

00:13:41.600 --> 00:13:41.610 align:start position:0%
these algorithms instead of using
 

00:13:41.610 --> 00:13:44.809 align:start position:0%
these algorithms instead of using
gradient<00:13:42.120><c> descent</c><00:13:42.149><c> and</c><00:13:43.490><c> with</c><00:13:44.490><c> these</c><00:13:44.610><c> ideas</c>

00:13:44.809 --> 00:13:44.819 align:start position:0%
gradient descent and with these ideas
 

00:13:44.819 --> 00:13:46.490 align:start position:0%
gradient descent and with these ideas
hopefully<00:13:45.240><c> you'll</c><00:13:45.660><c> be</c><00:13:45.750><c> able</c><00:13:45.839><c> to</c><00:13:46.019><c> get</c><00:13:46.290><c> logistic</c>

00:13:46.490 --> 00:13:46.500 align:start position:0%
hopefully you'll be able to get logistic
 

00:13:46.500 --> 00:13:48.769 align:start position:0%
hopefully you'll be able to get logistic
regression<00:13:47.220><c> and</c><00:13:47.430><c> also</c><00:13:47.730><c> linear</c><00:13:48.089><c> regression</c><00:13:48.540><c> to</c>

00:13:48.769 --> 00:13:48.779 align:start position:0%
regression and also linear regression to
 

00:13:48.779 --> 00:13:52.040 align:start position:0%
regression and also linear regression to
work<00:13:48.990><c> on</c><00:13:49.230><c> much</c><00:13:49.439><c> larger</c><00:13:49.649><c> problems</c><00:13:50.600><c> so</c><00:13:51.600><c> that's</c>

00:13:52.040 --> 00:13:52.050 align:start position:0%
work on much larger problems so that's
 

00:13:52.050 --> 00:13:54.319 align:start position:0%
work on much larger problems so that's
it<00:13:52.259><c> for</c><00:13:52.500><c> advanced</c><00:13:52.920><c> optimization</c><00:13:53.699><c> concepts</c>

00:13:54.319 --> 00:13:54.329 align:start position:0%
it for advanced optimization concepts
 

00:13:54.329 --> 00:13:57.170 align:start position:0%
it for advanced optimization concepts
and<00:13:54.569><c> in</c><00:13:55.470><c> the</c><00:13:55.829><c> next</c><00:13:56.160><c> and</c><00:13:56.339><c> final</c><00:13:56.399><c> video</c><00:13:56.879><c> on</c>

00:13:57.170 --> 00:13:57.180 align:start position:0%
and in the next and final video on
 

00:13:57.180 --> 00:13:59.210 align:start position:0%
and in the next and final video on
logistic<00:13:57.750><c> regression</c><00:13:58.230><c> I</c><00:13:58.410><c> want</c><00:13:58.829><c> to</c><00:13:58.889><c> tell</c><00:13:59.069><c> you</c>

00:13:59.210 --> 00:13:59.220 align:start position:0%
logistic regression I want to tell you
 

00:13:59.220 --> 00:14:00.980 align:start position:0%
logistic regression I want to tell you
how<00:13:59.459><c> to</c><00:13:59.519><c> take</c><00:13:59.819><c> the</c><00:14:00.029><c> logistic</c><00:14:00.269><c> regression</c>

00:14:00.980 --> 00:14:00.990 align:start position:0%
how to take the logistic regression
 

00:14:00.990 --> 00:14:02.030 align:start position:0%
how to take the logistic regression
algorithm<00:14:01.290><c> that</c><00:14:01.500><c> you</c><00:14:01.589><c> already</c><00:14:01.709><c> know</c><00:14:02.009><c> about</c>

00:14:02.030 --> 00:14:02.040 align:start position:0%
algorithm that you already know about
 

00:14:02.040 --> 00:14:04.639 align:start position:0%
algorithm that you already know about
and<00:14:02.399><c> make</c><00:14:02.939><c> it</c><00:14:03.089><c> work</c><00:14:03.300><c> also</c><00:14:03.750><c> on</c><00:14:04.019><c> multi-class</c>

00:14:04.639 --> 00:14:04.649 align:start position:0%
and make it work also on multi-class
 

00:14:04.649 --> 00:14:07.879 align:start position:0%
and make it work also on multi-class
classification<00:14:04.889><c> problems</c>

