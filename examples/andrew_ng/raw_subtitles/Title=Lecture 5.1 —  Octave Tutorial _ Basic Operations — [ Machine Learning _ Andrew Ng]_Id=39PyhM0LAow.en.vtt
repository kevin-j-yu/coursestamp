WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.459 align:start position:0%
 
you<00:00:00.210><c> now</c><00:00:00.359><c> know</c><00:00:00.570><c> a</c><00:00:00.599><c> bunch</c><00:00:00.870><c> about</c><00:00:01.050><c> machine</c>

00:00:01.459 --> 00:00:01.469 align:start position:0%
you now know a bunch about machine
 

00:00:01.469 --> 00:00:03.770 align:start position:0%
you now know a bunch about machine
learning<00:00:01.890><c> in</c><00:00:02.340><c> this</c><00:00:02.669><c> video</c><00:00:03.030><c> I'd</c><00:00:03.300><c> like</c><00:00:03.449><c> to</c><00:00:03.600><c> teach</c>

00:00:03.770 --> 00:00:03.780 align:start position:0%
learning in this video I'd like to teach
 

00:00:03.780 --> 00:00:06.170 align:start position:0%
learning in this video I'd like to teach
you<00:00:03.840><c> a</c><00:00:04.110><c> programming</c><00:00:04.770><c> language</c><00:00:04.910><c> octave</c><00:00:05.910><c> in</c>

00:00:06.170 --> 00:00:06.180 align:start position:0%
you a programming language octave in
 

00:00:06.180 --> 00:00:08.150 align:start position:0%
you a programming language octave in
which<00:00:06.420><c> you</c><00:00:06.600><c> be</c><00:00:06.779><c> able</c><00:00:07.109><c> to</c><00:00:07.259><c> very</c><00:00:07.529><c> quickly</c>

00:00:08.150 --> 00:00:08.160 align:start position:0%
which you be able to very quickly
 

00:00:08.160 --> 00:00:10.220 align:start position:0%
which you be able to very quickly
implement<00:00:08.880><c> the</c><00:00:09.300><c> learning</c><00:00:09.719><c> algorithms</c><00:00:10.110><c> we've</c>

00:00:10.220 --> 00:00:10.230 align:start position:0%
implement the learning algorithms we've
 

00:00:10.230 --> 00:00:12.200 align:start position:0%
implement the learning algorithms we've
seen<00:00:10.469><c> already</c><00:00:10.650><c> and</c><00:00:11.130><c> the</c><00:00:11.490><c> learning</c><00:00:11.790><c> algorithms</c>

00:00:12.200 --> 00:00:12.210 align:start position:0%
seen already and the learning algorithms
 

00:00:12.210 --> 00:00:14.570 align:start position:0%
seen already and the learning algorithms
we'll<00:00:12.389><c> see</c><00:00:12.630><c> later</c><00:00:12.809><c> in</c><00:00:13.049><c> this</c><00:00:13.170><c> course</c><00:00:13.410><c> in</c><00:00:14.370><c> the</c>

00:00:14.570 --> 00:00:14.580 align:start position:0%
we'll see later in this course in the
 

00:00:14.580 --> 00:00:15.919 align:start position:0%
we'll see later in this course in the
past<00:00:14.790><c> I've</c><00:00:15.030><c> tried</c><00:00:15.059><c> to</c><00:00:15.389><c> teach</c><00:00:15.570><c> machine</c>

00:00:15.919 --> 00:00:15.929 align:start position:0%
past I've tried to teach machine
 

00:00:15.929 --> 00:00:18.019 align:start position:0%
past I've tried to teach machine
learning<00:00:16.289><c> using</c><00:00:16.529><c> a</c><00:00:16.859><c> live</c><00:00:17.130><c> variety</c><00:00:17.580><c> of</c>

00:00:18.019 --> 00:00:18.029 align:start position:0%
learning using a live variety of
 

00:00:18.029 --> 00:00:19.519 align:start position:0%
learning using a live variety of
different<00:00:18.690><c> programming</c><00:00:19.020><c> languages</c>

00:00:19.519 --> 00:00:19.529 align:start position:0%
different programming languages
 

00:00:19.529 --> 00:00:24.050 align:start position:0%
different programming languages
including<00:00:19.820><c> C</c><00:00:20.820><c> pluses</c><00:00:21.150><c> Java</c><00:00:22.100><c> Python</c><00:00:23.100><c> numpy</c><00:00:23.670><c> R</c>

00:00:24.050 --> 00:00:24.060 align:start position:0%
including C pluses Java Python numpy R
 

00:00:24.060 --> 00:00:27.470 align:start position:0%
including C pluses Java Python numpy R
and<00:00:24.539><c> also</c><00:00:25.470><c> octave</c><00:00:25.980><c> and</c><00:00:26.250><c> what</c><00:00:26.939><c> I</c><00:00:26.970><c> found</c><00:00:27.180><c> is</c><00:00:27.449><c> that</c>

00:00:27.470 --> 00:00:27.480 align:start position:0%
and also octave and what I found is that
 

00:00:27.480 --> 00:00:30.200 align:start position:0%
and also octave and what I found is that
students<00:00:28.140><c> were</c><00:00:28.260><c> able</c><00:00:28.740><c> to</c><00:00:28.769><c> learn</c><00:00:29.699><c> the</c><00:00:30.029><c> most</c>

00:00:30.200 --> 00:00:30.210 align:start position:0%
students were able to learn the most
 

00:00:30.210 --> 00:00:32.569 align:start position:0%
students were able to learn the most
productively<00:00:30.750><c> learned</c><00:00:31.650><c> most</c><00:00:31.980><c> quickly</c><00:00:32.219><c> and</c>

00:00:32.569 --> 00:00:32.579 align:start position:0%
productively learned most quickly and
 

00:00:32.579 --> 00:00:34.010 align:start position:0%
productively learned most quickly and
prototype<00:00:33.090><c> your</c><00:00:33.239><c> algorithms</c><00:00:33.570><c> most</c><00:00:33.719><c> quickly</c>

00:00:34.010 --> 00:00:34.020 align:start position:0%
prototype your algorithms most quickly
 

00:00:34.020 --> 00:00:36.470 align:start position:0%
prototype your algorithms most quickly
using<00:00:34.860><c> a</c><00:00:35.010><c> relatively</c><00:00:35.460><c> high</c><00:00:35.790><c> level</c><00:00:35.820><c> language</c>

00:00:36.470 --> 00:00:36.480 align:start position:0%
using a relatively high level language
 

00:00:36.480 --> 00:00:40.040 align:start position:0%
using a relatively high level language
like<00:00:36.510><c> octave</c><00:00:37.370><c> in</c><00:00:38.370><c> fact</c><00:00:38.640><c> um</c><00:00:38.879><c> what</c><00:00:39.420><c> I</c><00:00:39.450><c> often</c><00:00:39.809><c> see</c>

00:00:40.040 --> 00:00:40.050 align:start position:0%
like octave in fact um what I often see
 

00:00:40.050 --> 00:00:42.920 align:start position:0%
like octave in fact um what I often see
in<00:00:40.170><c> Silicon</c><00:00:40.559><c> Valley</c><00:00:40.590><c> is</c><00:00:41.250><c> that</c><00:00:41.550><c> if</c><00:00:42.300><c> even</c><00:00:42.750><c> if</c><00:00:42.840><c> you</c>

00:00:42.920 --> 00:00:42.930 align:start position:0%
in Silicon Valley is that if even if you
 

00:00:42.930 --> 00:00:44.450 align:start position:0%
in Silicon Valley is that if even if you
need<00:00:43.079><c> to</c><00:00:43.230><c> build</c><00:00:43.530><c> if</c><00:00:43.770><c> you</c><00:00:43.860><c> want</c><00:00:44.040><c> to</c><00:00:44.160><c> build</c><00:00:44.309><c> a</c>

00:00:44.450 --> 00:00:44.460 align:start position:0%
need to build if you want to build a
 

00:00:44.460 --> 00:00:45.920 align:start position:0%
need to build if you want to build a
large-scale<00:00:44.789><c> deployment</c><00:00:45.600><c> of</c><00:00:45.660><c> a</c><00:00:45.750><c> learning</c>

00:00:45.920 --> 00:00:45.930 align:start position:0%
large-scale deployment of a learning
 

00:00:45.930 --> 00:00:48.170 align:start position:0%
large-scale deployment of a learning
algorithm<00:00:46.320><c> what</c><00:00:47.039><c> people</c><00:00:47.340><c> will</c><00:00:47.460><c> often</c><00:00:47.640><c> do</c><00:00:47.940><c> is</c>

00:00:48.170 --> 00:00:48.180 align:start position:0%
algorithm what people will often do is
 

00:00:48.180 --> 00:00:50.569 align:start position:0%
algorithm what people will often do is
prototype<00:00:48.870><c> in</c><00:00:49.170><c> the</c><00:00:49.620><c> language</c><00:00:49.980><c> like</c><00:00:50.129><c> octave</c>

00:00:50.569 --> 00:00:50.579 align:start position:0%
prototype in the language like octave
 

00:00:50.579 --> 00:00:52.220 align:start position:0%
prototype in the language like octave
which<00:00:50.820><c> is</c><00:00:50.910><c> a</c><00:00:50.940><c> great</c><00:00:51.180><c> prototyping</c><00:00:51.719><c> language</c>

00:00:52.220 --> 00:00:52.230 align:start position:0%
which is a great prototyping language
 

00:00:52.230 --> 00:00:53.510 align:start position:0%
which is a great prototyping language
you<00:00:52.440><c> can</c><00:00:52.620><c> sort</c><00:00:52.890><c> of</c><00:00:52.920><c> get</c><00:00:53.100><c> your</c><00:00:53.280><c> learning</c>

00:00:53.510 --> 00:00:53.520 align:start position:0%
you can sort of get your learning
 

00:00:53.520 --> 00:00:55.790 align:start position:0%
you can sort of get your learning
algorithms<00:00:53.850><c> working</c><00:00:54.149><c> quickly</c><00:00:54.480><c> and</c><00:00:54.719><c> then</c><00:00:55.500><c> only</c>

00:00:55.790 --> 00:00:55.800 align:start position:0%
algorithms working quickly and then only
 

00:00:55.800 --> 00:00:57.590 align:start position:0%
algorithms working quickly and then only
if<00:00:56.100><c> you</c><00:00:56.280><c> need</c><00:00:56.460><c> to</c><00:00:56.699><c> very</c><00:00:57.000><c> large</c><00:00:57.329><c> scale</c>

00:00:57.590 --> 00:00:57.600 align:start position:0%
if you need to very large scale
 

00:00:57.600 --> 00:00:59.479 align:start position:0%
if you need to very large scale
deployment<00:00:58.170><c> of</c><00:00:58.289><c> it</c><00:00:58.440><c> only</c><00:00:58.770><c> then</c><00:00:59.010><c> spend</c><00:00:59.430><c> your</c>

00:00:59.479 --> 00:00:59.489 align:start position:0%
deployment of it only then spend your
 

00:00:59.489 --> 00:01:02.209 align:start position:0%
deployment of it only then spend your
time<00:01:00.379><c> re-implementing</c><00:01:01.379><c> the</c><00:01:01.530><c> algorithms</c><00:01:02.039><c> in</c>

00:01:02.209 --> 00:01:02.219 align:start position:0%
time re-implementing the algorithms in
 

00:01:02.219 --> 00:01:04.100 align:start position:0%
time re-implementing the algorithms in
C++<00:01:02.760><c> or</c><00:01:02.910><c> Java</c><00:01:02.969><c> or</c><00:01:03.359><c> some</c><00:01:03.600><c> other</c><00:01:03.750><c> language</c><00:01:03.870><c> like</c>

00:01:04.100 --> 00:01:04.110 align:start position:0%
C++ or Java or some other language like
 

00:01:04.110 --> 00:01:05.840 align:start position:0%
C++ or Java or some other language like
that<00:01:04.290><c> because</c><00:01:05.189><c> one</c><00:01:05.339><c> of</c><00:01:05.369><c> the</c><00:01:05.460><c> lessons</c><00:01:05.729><c> we've</c>

00:01:05.840 --> 00:01:05.850 align:start position:0%
that because one of the lessons we've
 

00:01:05.850 --> 00:01:07.789 align:start position:0%
that because one of the lessons we've
learned<00:01:05.880><c> is</c><00:01:06.299><c> that</c><00:01:06.330><c> programmer</c><00:01:07.320><c> time</c><00:01:07.560><c> or</c>

00:01:07.789 --> 00:01:07.799 align:start position:0%
learned is that programmer time or
 

00:01:07.799 --> 00:01:09.980 align:start position:0%
learned is that programmer time or
developer<00:01:08.369><c> time</c><00:01:08.610><c> that</c><00:01:08.970><c> is</c><00:01:09.119><c> your</c><00:01:09.210><c> time</c><00:01:09.390><c> your</c>

00:01:09.980 --> 00:01:09.990 align:start position:0%
developer time that is your time your
 

00:01:09.990 --> 00:01:11.480 align:start position:0%
developer time that is your time your
the<00:01:10.110><c> machine</c><00:01:10.350><c> learning</c><00:01:10.470><c> Swiss</c><00:01:10.950><c> time</c><00:01:11.220><c> is</c>

00:01:11.480 --> 00:01:11.490 align:start position:0%
the machine learning Swiss time is
 

00:01:11.490 --> 00:01:15.289 align:start position:0%
the machine learning Swiss time is
incredibly<00:01:12.090><c> valuable</c><00:01:12.360><c> and</c><00:01:13.460><c> if</c><00:01:14.460><c> you</c><00:01:14.670><c> can</c><00:01:14.970><c> get</c>

00:01:15.289 --> 00:01:15.299 align:start position:0%
incredibly valuable and if you can get
 

00:01:15.299 --> 00:01:16.580 align:start position:0%
incredibly valuable and if you can get
your<00:01:15.509><c> learning</c><00:01:15.780><c> Urban's</c><00:01:16.110><c> to</c><00:01:16.200><c> work</c><00:01:16.350><c> more</c>

00:01:16.580 --> 00:01:16.590 align:start position:0%
your learning Urban's to work more
 

00:01:16.590 --> 00:01:18.830 align:start position:0%
your learning Urban's to work more
quickly<00:01:16.830><c> an</c><00:01:17.040><c> octave</c><00:01:17.400><c> then</c><00:01:18.000><c> overall</c><00:01:18.390><c> you</c><00:01:18.720><c> have</c>

00:01:18.830 --> 00:01:18.840 align:start position:0%
quickly an octave then overall you have
 

00:01:18.840 --> 00:01:21.230 align:start position:0%
quickly an octave then overall you have
a<00:01:18.900><c> huge</c><00:01:19.229><c> time</c><00:01:19.530><c> savings</c><00:01:19.830><c> by</c><00:01:20.310><c> first</c><00:01:20.640><c> developing</c>

00:01:21.230 --> 00:01:21.240 align:start position:0%
a huge time savings by first developing
 

00:01:21.240 --> 00:01:23.030 align:start position:0%
a huge time savings by first developing
the<00:01:21.390><c> algorithms</c><00:01:21.840><c> in</c><00:01:21.930><c> octave</c><00:01:22.049><c> and</c><00:01:22.470><c> then</c>

00:01:23.030 --> 00:01:23.040 align:start position:0%
the algorithms in octave and then
 

00:01:23.040 --> 00:01:24.740 align:start position:0%
the algorithms in octave and then
implementing<00:01:23.700><c> and</c><00:01:23.880><c> like</c><00:01:24.060><c> maybe</c><00:01:24.210><c> C</c><00:01:24.420><c> versus</c>

00:01:24.740 --> 00:01:24.750 align:start position:0%
implementing and like maybe C versus
 

00:01:24.750 --> 00:01:26.539 align:start position:0%
implementing and like maybe C versus
Java<00:01:24.930><c> only</c><00:01:25.380><c> after</c><00:01:25.740><c> we</c><00:01:25.920><c> have</c><00:01:26.100><c> the</c><00:01:26.250><c> ideas</c>

00:01:26.539 --> 00:01:26.549 align:start position:0%
Java only after we have the ideas
 

00:01:26.549 --> 00:01:29.510 align:start position:0%
Java only after we have the ideas
working<00:01:27.259><c> the</c><00:01:28.259><c> most</c><00:01:28.439><c> common</c><00:01:28.890><c> prototyping</c>

00:01:29.510 --> 00:01:29.520 align:start position:0%
working the most common prototyping
 

00:01:29.520 --> 00:01:31.550 align:start position:0%
working the most common prototyping
languages<00:01:30.060><c> I</c><00:01:30.090><c> see</c><00:01:30.479><c> people</c><00:01:30.810><c> use</c><00:01:31.020><c> for</c><00:01:31.290><c> machine</c>

00:01:31.550 --> 00:01:31.560 align:start position:0%
languages I see people use for machine
 

00:01:31.560 --> 00:01:35.390 align:start position:0%
languages I see people use for machine
learning<00:01:31.590><c> are</c><00:01:32.159><c> octave</c><00:01:33.030><c> MATLAB</c><00:01:33.750><c> Python</c><00:01:34.400><c> numpy</c>

00:01:35.390 --> 00:01:35.400 align:start position:0%
learning are octave MATLAB Python numpy
 

00:01:35.400 --> 00:01:39.770 align:start position:0%
learning are octave MATLAB Python numpy
and<00:01:35.759><c> our</c><00:01:37.520><c> octave</c><00:01:38.520><c> is</c><00:01:38.759><c> nice</c><00:01:39.060><c> since</c><00:01:39.270><c> this</c><00:01:39.450><c> free</c>

00:01:39.770 --> 00:01:39.780 align:start position:0%
and our octave is nice since this free
 

00:01:39.780 --> 00:01:42.950 align:start position:0%
and our octave is nice since this free
open<00:01:40.170><c> source</c><00:01:40.200><c> and</c><00:01:40.820><c> MATLAB</c><00:01:41.820><c> works</c><00:01:42.329><c> well</c><00:01:42.630><c> too</c>

00:01:42.950 --> 00:01:42.960 align:start position:0%
open source and MATLAB works well too
 

00:01:42.960 --> 00:01:45.590 align:start position:0%
open source and MATLAB works well too
but<00:01:43.259><c> it's</c><00:01:43.409><c> expensive</c><00:01:43.740><c> for</c><00:01:44.340><c> too</c><00:01:45.030><c> many</c><00:01:45.210><c> people</c>

00:01:45.590 --> 00:01:45.600 align:start position:0%
but it's expensive for too many people
 

00:01:45.600 --> 00:01:47.539 align:start position:0%
but it's expensive for too many people
but<00:01:46.110><c> if</c><00:01:46.320><c> you</c><00:01:46.439><c> have</c><00:01:46.590><c> access</c><00:01:47.009><c> to</c><00:01:47.070><c> coffee</c><00:01:47.399><c> in</c>

00:01:47.539 --> 00:01:47.549 align:start position:0%
but if you have access to coffee in
 

00:01:47.549 --> 00:01:49.249 align:start position:0%
but if you have access to coffee in
MATLAB<00:01:47.909><c> you</c><00:01:48.030><c> can</c><00:01:48.180><c> also</c><00:01:48.329><c> use</c><00:01:48.630><c> matter</c><00:01:48.869><c> for</c><00:01:49.170><c> this</c>

00:01:49.249 --> 00:01:49.259 align:start position:0%
MATLAB you can also use matter for this
 

00:01:49.259 --> 00:01:52.130 align:start position:0%
MATLAB you can also use matter for this
class<00:01:49.500><c> if</c><00:01:50.220><c> you</c><00:01:50.610><c> know</c><00:01:50.820><c> Python</c><00:01:51.329><c> numpy</c><00:01:51.659><c> or</c><00:01:51.960><c> if</c><00:01:52.049><c> you</c>

00:01:52.130 --> 00:01:52.140 align:start position:0%
class if you know Python numpy or if you
 

00:01:52.140 --> 00:01:55.039 align:start position:0%
class if you know Python numpy or if you
know<00:01:52.290><c> R</c><00:01:52.590><c> I</c><00:01:52.890><c> do</c><00:01:53.189><c> see</c><00:01:53.610><c> some</c><00:01:53.909><c> people</c><00:01:54.240><c> use</c><00:01:54.450><c> it</c><00:01:54.659><c> but</c>

00:01:55.039 --> 00:01:55.049 align:start position:0%
know R I do see some people use it but
 

00:01:55.049 --> 00:01:57.679 align:start position:0%
know R I do see some people use it but
what<00:01:55.979><c> I</c><00:01:56.009><c> see</c><00:01:56.250><c> is</c><00:01:56.369><c> that</c><00:01:56.399><c> people</c><00:01:56.549><c> usually</c><00:01:57.149><c> end</c><00:01:57.360><c> up</c>

00:01:57.679 --> 00:01:57.689 align:start position:0%
what I see is that people usually end up
 

00:01:57.689 --> 00:02:00.170 align:start position:0%
what I see is that people usually end up
developing<00:01:58.290><c> somewhat</c><00:01:58.770><c> more</c><00:01:58.979><c> slowly</c><00:01:59.159><c> in</c><00:01:59.729><c> you</c>

00:02:00.170 --> 00:02:00.180 align:start position:0%
developing somewhat more slowly in you
 

00:02:00.180 --> 00:02:03.139 align:start position:0%
developing somewhat more slowly in you
know<00:02:00.299><c> these</c><00:02:01.259><c> languages</c><00:02:01.799><c> because</c><00:02:02.490><c> the</c><00:02:02.700><c> Python</c>

00:02:03.139 --> 00:02:03.149 align:start position:0%
know these languages because the Python
 

00:02:03.149 --> 00:02:05.719 align:start position:0%
know these languages because the Python
numpy<00:02:03.479><c> syntax</c><00:02:03.930><c> is</c><00:02:04.170><c> just</c><00:02:04.409><c> slightly</c><00:02:05.130><c> clunkier</c>

00:02:05.719 --> 00:02:05.729 align:start position:0%
numpy syntax is just slightly clunkier
 

00:02:05.729 --> 00:02:09.139 align:start position:0%
numpy syntax is just slightly clunkier
than<00:02:05.790><c> the</c><00:02:06.299><c> octave</c><00:02:06.810><c> syntax</c><00:02:07.429><c> and</c><00:02:08.429><c> so</c><00:02:08.729><c> because</c><00:02:09.000><c> of</c>

00:02:09.139 --> 00:02:09.149 align:start position:0%
than the octave syntax and so because of
 

00:02:09.149 --> 00:02:11.390 align:start position:0%
than the octave syntax and so because of
that<00:02:09.179><c> and</c><00:02:09.629><c> because</c><00:02:10.080><c> we're</c><00:02:10.349><c> releasing</c><00:02:10.709><c> starter</c>

00:02:11.390 --> 00:02:11.400 align:start position:0%
that and because we're releasing starter
 

00:02:11.400 --> 00:02:12.570 align:start position:0%
that and because we're releasing starter
code<00:02:11.640><c> and</c><00:02:11.849><c> octave</c>

00:02:12.570 --> 00:02:12.580 align:start position:0%
code and octave
 

00:02:12.580 --> 00:02:14.910 align:start position:0%
code and octave
I<00:02:12.670><c> strongly</c><00:02:13.600><c> recommend</c><00:02:14.080><c> that</c><00:02:14.170><c> you</c><00:02:14.290><c> not</c><00:02:14.620><c> try</c><00:02:14.830><c> to</c>

00:02:14.910 --> 00:02:14.920 align:start position:0%
I strongly recommend that you not try to
 

00:02:14.920 --> 00:02:17.310 align:start position:0%
I strongly recommend that you not try to
do<00:02:15.190><c> the</c><00:02:15.430><c> toning</c><00:02:16.030><c> exercises</c><00:02:16.390><c> in</c><00:02:16.720><c> this</c><00:02:16.870><c> class</c><00:02:17.110><c> in</c>

00:02:17.310 --> 00:02:17.320 align:start position:0%
do the toning exercises in this class in
 

00:02:17.320 --> 00:02:19.500 align:start position:0%
do the toning exercises in this class in
the<00:02:17.380><c> umpire</c><00:02:17.680><c> are</c><00:02:17.860><c> but</c><00:02:18.490><c> that</c><00:02:18.730><c> I</c><00:02:18.760><c> do</c><00:02:19.060><c> recommend</c>

00:02:19.500 --> 00:02:19.510 align:start position:0%
the umpire are but that I do recommend
 

00:02:19.510 --> 00:02:20.820 align:start position:0%
the umpire are but that I do recommend
that<00:02:19.690><c> you</c><00:02:19.930><c> instead</c><00:02:20.230><c> do</c><00:02:20.470><c> they're</c><00:02:20.650><c> probably</c>

00:02:20.820 --> 00:02:20.830 align:start position:0%
that you instead do they're probably
 

00:02:20.830 --> 00:02:22.770 align:start position:0%
that you instead do they're probably
exercises<00:02:21.580><c> for</c><00:02:21.730><c> this</c><00:02:21.850><c> cause</c><00:02:22.060><c> in</c><00:02:22.330><c> octave</c>

00:02:22.770 --> 00:02:22.780 align:start position:0%
exercises for this cause in octave
 

00:02:22.780 --> 00:02:25.530 align:start position:0%
exercises for this cause in octave
instead<00:02:23.910><c> what</c><00:02:24.910><c> I'm</c><00:02:24.970><c> going</c><00:02:25.030><c> to</c><00:02:25.180><c> do</c><00:02:25.360><c> in</c><00:02:25.450><c> this</c>

00:02:25.530 --> 00:02:25.540 align:start position:0%
instead what I'm going to do in this
 

00:02:25.540 --> 00:02:27.930 align:start position:0%
instead what I'm going to do in this
video<00:02:25.720><c> is</c><00:02:25.900><c> go</c><00:02:26.410><c> through</c><00:02:26.440><c> a</c><00:02:26.740><c> list</c><00:02:27.190><c> of</c><00:02:27.430><c> commands</c>

00:02:27.930 --> 00:02:27.940 align:start position:0%
video is go through a list of commands
 

00:02:27.940 --> 00:02:29.940 align:start position:0%
video is go through a list of commands
and<00:02:28.300><c> very</c><00:02:28.480><c> fairly</c><00:02:28.960><c> quickly</c><00:02:29.170><c> and</c><00:02:29.560><c> the</c><00:02:29.620><c> goal</c><00:02:29.830><c> is</c>

00:02:29.940 --> 00:02:29.950 align:start position:0%
and very fairly quickly and the goal is
 

00:02:29.950 --> 00:02:31.470 align:start position:0%
and very fairly quickly and the goal is
to<00:02:30.070><c> quickly</c><00:02:30.190><c> show</c><00:02:30.670><c> you</c><00:02:30.700><c> the</c><00:02:31.090><c> range</c><00:02:31.300><c> of</c>

00:02:31.470 --> 00:02:31.480 align:start position:0%
to quickly show you the range of
 

00:02:31.480 --> 00:02:33.240 align:start position:0%
to quickly show you the range of
commands<00:02:31.900><c> and</c><00:02:32.200><c> the</c><00:02:32.260><c> range</c><00:02:32.470><c> of</c><00:02:32.620><c> things</c><00:02:32.860><c> you</c><00:02:33.040><c> can</c>

00:02:33.240 --> 00:02:33.250 align:start position:0%
commands and the range of things you can
 

00:02:33.250 --> 00:02:36.360 align:start position:0%
commands and the range of things you can
do<00:02:33.430><c> in</c><00:02:33.670><c> octave</c><00:02:34.120><c> the</c><00:02:34.900><c> course</c><00:02:35.410><c> website</c><00:02:35.650><c> will</c>

00:02:36.360 --> 00:02:36.370 align:start position:0%
do in octave the course website will
 

00:02:36.370 --> 00:02:39.950 align:start position:0%
do in octave the course website will
have<00:02:36.520><c> a</c><00:02:36.580><c> transcript</c><00:02:37.300><c> of</c><00:02:37.540><c> everything</c><00:02:38.440><c> I</c><00:02:38.950><c> do</c><00:02:39.010><c> and</c>

00:02:39.950 --> 00:02:39.960 align:start position:0%
have a transcript of everything I do and
 

00:02:39.960 --> 00:02:43.320 align:start position:0%
have a transcript of everything I do and
so<00:02:40.960><c> after</c><00:02:41.950><c> watching</c><00:02:42.310><c> this</c><00:02:42.640><c> video</c><00:02:42.940><c> you</c><00:02:43.030><c> can</c>

00:02:43.320 --> 00:02:43.330 align:start position:0%
so after watching this video you can
 

00:02:43.330 --> 00:02:45.390 align:start position:0%
so after watching this video you can
refer<00:02:43.750><c> to</c><00:02:43.960><c> the</c><00:02:44.080><c> to</c><00:02:44.500><c> the</c><00:02:44.590><c> transcript</c><00:02:45.070><c> I</c><00:02:45.100><c> posted</c>

00:02:45.390 --> 00:02:45.400 align:start position:0%
refer to the to the transcript I posted
 

00:02:45.400 --> 00:02:47.220 align:start position:0%
refer to the to the transcript I posted
on<00:02:45.490><c> the</c><00:02:45.580><c> course</c><00:02:45.730><c> website</c><00:02:45.910><c> when</c><00:02:46.810><c> you</c><00:02:46.960><c> want</c><00:02:47.170><c> to</c>

00:02:47.220 --> 00:02:47.230 align:start position:0%
on the course website when you want to
 

00:02:47.230 --> 00:02:49.410 align:start position:0%
on the course website when you want to
find<00:02:47.530><c> a</c><00:02:47.650><c> command</c><00:02:48.090><c> completely</c><00:02:49.090><c> whatever</c>

00:02:49.410 --> 00:02:49.420 align:start position:0%
find a command completely whatever
 

00:02:49.420 --> 00:02:51.420 align:start position:0%
find a command completely whatever
recommend<00:02:50.200><c> you</c><00:02:50.290><c> do</c><00:02:50.440><c> is</c><00:02:50.709><c> first</c><00:02:51.130><c> watch</c><00:02:51.400><c> the</c>

00:02:51.420 --> 00:02:51.430 align:start position:0%
recommend you do is first watch the
 

00:02:51.430 --> 00:02:54.690 align:start position:0%
recommend you do is first watch the
tutorial<00:02:52.270><c> videos</c><00:02:52.630><c> and</c><00:02:52.980><c> after</c><00:02:53.980><c> watching</c><00:02:54.160><c> you</c>

00:02:54.690 --> 00:02:54.700 align:start position:0%
tutorial videos and after watching you
 

00:02:54.700 --> 00:02:57.210 align:start position:0%
tutorial videos and after watching you
know<00:02:54.820><c> to</c><00:02:54.880><c> the</c><00:02:55.120><c> end</c><00:02:55.300><c> then</c><00:02:55.660><c> install</c><00:02:56.470><c> octave</c><00:02:56.980><c> on</c>

00:02:57.210 --> 00:02:57.220 align:start position:0%
know to the end then install octave on
 

00:02:57.220 --> 00:02:59.760 align:start position:0%
know to the end then install octave on
your<00:02:57.370><c> computer</c><00:02:58.000><c> and</c><00:02:58.320><c> finally</c><00:02:59.320><c> it</c><00:02:59.440><c> goes</c><00:02:59.560><c> to</c><00:02:59.680><c> the</c>

00:02:59.760 --> 00:02:59.770 align:start position:0%
your computer and finally it goes to the
 

00:02:59.770 --> 00:03:01.710 align:start position:0%
your computer and finally it goes to the
course<00:02:59.980><c> website</c><00:03:00.160><c> download</c><00:03:00.730><c> the</c><00:03:00.940><c> transcript</c>

00:03:01.710 --> 00:03:01.720 align:start position:0%
course website download the transcript
 

00:03:01.720 --> 00:03:03.680 align:start position:0%
course website download the transcript
of<00:03:01.870><c> the</c><00:03:01.959><c> things</c><00:03:02.440><c> you</c><00:03:02.590><c> see</c><00:03:02.830><c> in</c><00:03:02.920><c> the</c><00:03:03.040><c> session</c><00:03:03.250><c> and</c>

00:03:03.680 --> 00:03:03.690 align:start position:0%
of the things you see in the session and
 

00:03:03.690 --> 00:03:06.630 align:start position:0%
of the things you see in the session and
type<00:03:04.690><c> in</c><00:03:04.930><c> whatever</c><00:03:05.200><c> commands</c><00:03:05.890><c> seem</c>

00:03:06.630 --> 00:03:06.640 align:start position:0%
type in whatever commands seem
 

00:03:06.640 --> 00:03:09.060 align:start position:0%
type in whatever commands seem
interesting<00:03:07.180><c> to</c><00:03:07.209><c> you</c><00:03:07.570><c> in</c><00:03:07.870><c> two</c><00:03:08.290><c> octaves</c><00:03:08.800><c> of</c>

00:03:09.060 --> 00:03:09.070 align:start position:0%
interesting to you in two octaves of
 

00:03:09.070 --> 00:03:10.890 align:start position:0%
interesting to you in two octaves of
running<00:03:09.370><c> on</c><00:03:09.490><c> your</c><00:03:09.580><c> own</c><00:03:09.640><c> computer</c><00:03:09.760><c> so</c><00:03:10.450><c> that</c><00:03:10.780><c> you</c>

00:03:10.890 --> 00:03:10.900 align:start position:0%
running on your own computer so that you
 

00:03:10.900 --> 00:03:13.530 align:start position:0%
running on your own computer so that you
can<00:03:11.110><c> see</c><00:03:11.380><c> it</c><00:03:11.500><c> work</c><00:03:11.650><c> for</c><00:03:11.860><c> yourself</c><00:03:11.950><c> and</c><00:03:12.540><c> what's</c>

00:03:13.530 --> 00:03:13.540 align:start position:0%
can see it work for yourself and what's
 

00:03:13.540 --> 00:03:16.470 align:start position:0%
can see it work for yourself and what's
that<00:03:13.720><c> let's</c><00:03:13.990><c> get</c><00:03:14.170><c> started</c><00:03:15.090><c> here's</c><00:03:16.090><c> my</c><00:03:16.270><c> Windows</c>

00:03:16.470 --> 00:03:16.480 align:start position:0%
that let's get started here's my Windows
 

00:03:16.480 --> 00:03:18.900 align:start position:0%
that let's get started here's my Windows
desktop<00:03:16.720><c> and</c><00:03:17.440><c> I'm</c><00:03:17.500><c> gonna</c><00:03:17.680><c> start</c><00:03:18.280><c> up</c><00:03:18.400><c> octave</c>

00:03:18.900 --> 00:03:18.910 align:start position:0%
desktop and I'm gonna start up octave
 

00:03:18.910 --> 00:03:21.690 align:start position:0%
desktop and I'm gonna start up octave
and<00:03:19.140><c> I'm</c><00:03:20.140><c> now</c><00:03:20.290><c> in</c><00:03:20.470><c> octave</c><00:03:20.890><c> and</c><00:03:21.130><c> there's</c><00:03:21.550><c> my</c>

00:03:21.690 --> 00:03:21.700 align:start position:0%
and I'm now in octave and there's my
 

00:03:21.700 --> 00:03:23.790 align:start position:0%
and I'm now in octave and there's my
octave<00:03:22.120><c> prompt</c><00:03:22.480><c> let</c><00:03:22.930><c> me</c><00:03:23.019><c> first</c><00:03:23.200><c> show</c><00:03:23.350><c> you</c><00:03:23.500><c> the</c>

00:03:23.790 --> 00:03:23.800 align:start position:0%
octave prompt let me first show you the
 

00:03:23.800 --> 00:03:25.590 align:start position:0%
octave prompt let me first show you the
elementary<00:03:24.220><c> operations</c><00:03:25.120><c> you</c><00:03:25.239><c> can</c><00:03:25.360><c> do</c><00:03:25.480><c> an</c>

00:03:25.590 --> 00:03:25.600 align:start position:0%
elementary operations you can do an
 

00:03:25.600 --> 00:03:27.570 align:start position:0%
elementary operations you can do an
octave<00:03:25.959><c> so</c><00:03:26.200><c> you</c><00:03:26.290><c> type</c><00:03:26.500><c> in</c><00:03:26.620><c> 5</c><00:03:26.800><c> +</c><00:03:26.980><c> 6</c><00:03:27.130><c> that</c><00:03:27.519><c> gives</c>

00:03:27.570 --> 00:03:27.580 align:start position:0%
octave so you type in 5 + 6 that gives
 

00:03:27.580 --> 00:03:35.070 align:start position:0%
octave so you type in 5 + 6 that gives
you<00:03:27.850><c> the</c><00:03:28.000><c> answer</c><00:03:28.330><c> of</c><00:03:28.420><c> 11</c><00:03:28.840><c> z</c><00:03:29.769><c> -2</c><00:03:30.690><c> 5</c><00:03:31.690><c> x</c><00:03:31.959><c> 8</c><00:03:32.489><c> 1</c><00:03:33.489><c> /</c><00:03:33.760><c> 2</c><00:03:34.080><c> 2</c>

00:03:35.070 --> 00:03:35.080 align:start position:0%
you the answer of 11 z -2 5 x 8 1 / 2 2
 

00:03:35.080 --> 00:03:39.570 align:start position:0%
you the answer of 11 z -2 5 x 8 1 / 2 2
to<00:03:35.769><c> the</c><00:03:35.800><c> power</c><00:03:36.040><c> of</c><00:03:36.190><c> 6</c><00:03:36.459><c> is</c><00:03:37.209><c> 64</c><00:03:38.250><c> so</c><00:03:39.250><c> does</c><00:03:39.400><c> the</c>

00:03:39.570 --> 00:03:39.580 align:start position:0%
to the power of 6 is 64 so does the
 

00:03:39.580 --> 00:03:42.870 align:start position:0%
to the power of 6 is 64 so does the
elementary<00:03:40.510><c> math</c><00:03:41.410><c> operations</c><00:03:42.100><c> you</c><00:03:42.550><c> can</c><00:03:42.700><c> also</c>

00:03:42.870 --> 00:03:42.880 align:start position:0%
elementary math operations you can also
 

00:03:42.880 --> 00:03:45.600 align:start position:0%
elementary math operations you can also
do<00:03:43.420><c> logical</c><00:03:43.930><c> operations</c><00:03:44.470><c> so</c><00:03:44.709><c> one</c><00:03:44.950><c> equals</c><00:03:45.400><c> two</c>

00:03:45.600 --> 00:03:45.610 align:start position:0%
do logical operations so one equals two
 

00:03:45.610 --> 00:03:48.360 align:start position:0%
do logical operations so one equals two
this<00:03:45.970><c> evaluates</c><00:03:46.930><c> to</c><00:03:47.080><c> false</c><00:03:47.110><c> the</c><00:03:47.830><c> percent</c><00:03:48.220><c> come</c>

00:03:48.360 --> 00:03:48.370 align:start position:0%
this evaluates to false the percent come
 

00:03:48.370 --> 00:03:52.140 align:start position:0%
this evaluates to false the percent come
on<00:03:48.519><c> here</c><00:03:48.850><c> is</c><00:03:49.920><c> means</c><00:03:50.920><c> a</c><00:03:51.040><c> comment</c><00:03:51.550><c> so</c><00:03:51.700><c> one</c><00:03:51.880><c> equals</c>

00:03:52.140 --> 00:03:52.150 align:start position:0%
on here is means a comment so one equals
 

00:03:52.150 --> 00:03:54.150 align:start position:0%
on here is means a comment so one equals
two<00:03:52.390><c> evaluates</c><00:03:53.350><c> to</c><00:03:53.440><c> false</c><00:03:53.470><c> which</c><00:03:53.980><c> is</c>

00:03:54.150 --> 00:03:54.160 align:start position:0%
two evaluates to false which is
 

00:03:54.160 --> 00:03:56.970 align:start position:0%
two evaluates to false which is
represented<00:03:54.610><c> by</c><00:03:54.640><c> zero</c><00:03:55.090><c> one</c><00:03:55.870><c> not</c><00:03:56.500><c> equals</c><00:03:56.890><c> to</c>

00:03:56.970 --> 00:03:56.980 align:start position:0%
represented by zero one not equals to
 

00:03:56.980 --> 00:04:00.240 align:start position:0%
represented by zero one not equals to
two<00:03:57.360><c> this</c><00:03:58.360><c> is</c><00:03:58.510><c> true</c><00:03:58.870><c> so</c><00:03:59.320><c> that</c><00:03:59.350><c> returns</c><00:03:59.980><c> one</c>

00:04:00.240 --> 00:04:00.250 align:start position:0%
two this is true so that returns one
 

00:04:00.250 --> 00:04:02.600 align:start position:0%
two this is true so that returns one
note<00:04:00.790><c> that</c><00:04:00.970><c> the</c><00:04:01.060><c> not</c><00:04:01.269><c> equal</c><00:04:01.690><c> sign</c><00:04:01.989><c> is</c><00:04:02.290><c> this</c>

00:04:02.600 --> 00:04:02.610 align:start position:0%
note that the not equal sign is this
 

00:04:02.610 --> 00:04:06.420 align:start position:0%
note that the not equal sign is this
toter<00:04:03.610><c> equals</c><00:04:04.239><c> symbol</c><00:04:04.780><c> and</c><00:04:05.650><c> not</c><00:04:05.860><c> bang</c><00:04:06.130><c> equals</c>

00:04:06.420 --> 00:04:06.430 align:start position:0%
toter equals symbol and not bang equals
 

00:04:06.430 --> 00:04:09.090 align:start position:0%
toter equals symbol and not bang equals
which<00:04:07.390><c> is</c><00:04:07.570><c> what</c><00:04:08.380><c> some</c><00:04:08.620><c> other</c><00:04:08.650><c> programming</c>

00:04:09.090 --> 00:04:09.100 align:start position:0%
which is what some other programming
 

00:04:09.100 --> 00:04:11.789 align:start position:0%
which is what some other programming
languages<00:04:09.489><c> use</c><00:04:09.750><c> let's</c><00:04:10.750><c> see</c><00:04:10.870><c> logic</c><00:04:11.230><c> operations</c>

00:04:11.789 --> 00:04:11.799 align:start position:0%
languages use let's see logic operations
 

00:04:11.799 --> 00:04:15.300 align:start position:0%
languages use let's see logic operations
1<00:04:12.190><c> &amp;</c><00:04:12.459><c> 0</c><00:04:12.970><c> use</c><00:04:13.750><c> a</c><00:04:13.780><c> double</c><00:04:14.290><c> ampersand</c><00:04:14.769><c> sign</c><00:04:15.010><c> to</c>

00:04:15.300 --> 00:04:15.310 align:start position:0%
1 &amp; 0 use a double ampersand sign to
 

00:04:15.310 --> 00:04:19.000 align:start position:0%
1 &amp; 0 use a double ampersand sign to
denote<00:04:15.580><c> the</c><00:04:16.200><c> logical</c><00:04:17.200><c> end</c><00:04:17.440><c> and</c><00:04:17.919><c> that</c>

00:04:19.000 --> 00:04:19.010 align:start position:0%
denote the logical end and that
 

00:04:19.010 --> 00:04:23.350 align:start position:0%
denote the logical end and that
Falls<00:04:19.820><c> one</c><00:04:20.330><c> all</c><00:04:20.720><c> zero</c><00:04:21.350><c> is</c><00:04:22.070><c> the</c><00:04:22.310><c> or</c><00:04:22.520><c> operation</c>

00:04:23.350 --> 00:04:23.360 align:start position:0%
Falls one all zero is the or operation
 

00:04:23.360 --> 00:04:26.290 align:start position:0%
Falls one all zero is the or operation
and<00:04:23.600><c> that</c><00:04:23.770><c> evaluates</c><00:04:24.770><c> the</c><00:04:24.950><c> true</c><00:04:24.980><c> and</c><00:04:25.520><c> I</c><00:04:25.940><c> can</c><00:04:26.090><c> X</c>

00:04:26.290 --> 00:04:26.300 align:start position:0%
and that evaluates the true and I can X
 

00:04:26.300 --> 00:04:29.460 align:start position:0%
and that evaluates the true and I can X
all<00:04:26.540><c> one</c><00:04:26.900><c> and</c><00:04:27.080><c> 0</c><00:04:27.380><c> and</c><00:04:27.680><c> that</c><00:04:28.070><c> evaluates</c><00:04:28.550><c> the</c><00:04:28.700><c> one</c>

00:04:29.460 --> 00:04:29.470 align:start position:0%
all one and 0 and that evaluates the one
 

00:04:29.470 --> 00:04:32.320 align:start position:0%
all one and 0 and that evaluates the one
this<00:04:30.470><c> thing</c><00:04:30.740><c> over</c><00:04:31.100><c> on</c><00:04:31.160><c> the</c><00:04:31.310><c> left</c><00:04:31.550><c> is</c><00:04:31.730><c> octane</c><00:04:32.120><c> 3</c>

00:04:32.320 --> 00:04:32.330 align:start position:0%
this thing over on the left is octane 3
 

00:04:32.330 --> 00:04:34.330 align:start position:0%
this thing over on the left is octane 3
240<00:04:32.630><c> X</c><00:04:33.050><c> equal</c><00:04:33.290><c> 11</c><00:04:33.710><c> this</c><00:04:33.890><c> is</c><00:04:33.950><c> the</c><00:04:34.040><c> default</c>

00:04:34.330 --> 00:04:34.340 align:start position:0%
240 X equal 11 this is the default
 

00:04:34.340 --> 00:04:37.000 align:start position:0%
240 X equal 11 this is the default
octave<00:04:35.060><c> prompt</c><00:04:35.600><c> it</c><00:04:35.870><c> shows</c><00:04:36.110><c> the</c><00:04:36.410><c> what</c>

00:04:37.000 --> 00:04:37.010 align:start position:0%
octave prompt it shows the what
 

00:04:37.010 --> 00:04:39.460 align:start position:0%
octave prompt it shows the what
variation<00:04:37.940><c> an</c><00:04:38.030><c> octave</c><00:04:38.330><c> and</c><00:04:38.360><c> so</c><00:04:38.630><c> on</c><00:04:38.810><c> if</c><00:04:39.380><c> you</c>

00:04:39.460 --> 00:04:39.470 align:start position:0%
variation an octave and so on if you
 

00:04:39.470 --> 00:04:40.930 align:start position:0%
variation an octave and so on if you
don't<00:04:39.620><c> want</c><00:04:39.770><c> that</c><00:04:39.830><c> problem</c><00:04:40.130><c> this</c><00:04:40.490><c> is</c><00:04:40.640><c> somewhat</c>

00:04:40.930 --> 00:04:40.940 align:start position:0%
don't want that problem this is somewhat
 

00:04:40.940 --> 00:04:44.290 align:start position:0%
don't want that problem this is somewhat
cryptic<00:04:41.270><c> come</c><00:04:41.450><c> on</c><00:04:41.570><c> PS</c><00:04:42.380><c> quote</c><00:04:43.280><c> greater</c><00:04:44.030><c> greater</c>

00:04:44.290 --> 00:04:44.300 align:start position:0%
cryptic come on PS quote greater greater
 

00:04:44.300 --> 00:04:48.010 align:start position:0%
cryptic come on PS quote greater greater
than<00:04:44.840><c> and</c><00:04:45.110><c> so</c><00:04:45.830><c> on</c><00:04:46.040><c> that</c><00:04:46.460><c> you</c><00:04:47.420><c> can</c><00:04:47.600><c> use</c><00:04:47.810><c> to</c>

00:04:48.010 --> 00:04:48.020 align:start position:0%
than and so on that you can use to
 

00:04:48.020 --> 00:04:49.360 align:start position:0%
than and so on that you can use to
change<00:04:48.230><c> the</c><00:04:48.440><c> prompt</c><00:04:48.770><c> and</c><00:04:48.920><c> I</c><00:04:49.010><c> guess</c><00:04:49.160><c> this</c>

00:04:49.360 --> 00:04:49.370 align:start position:0%
change the prompt and I guess this
 

00:04:49.370 --> 00:04:51.760 align:start position:0%
change the prompt and I guess this
quoted<00:04:50.060><c> string</c><00:04:50.330><c> in</c><00:04:50.450><c> the</c><00:04:50.510><c> middle</c><00:04:50.540><c> your</c><00:04:51.410><c> quote</c>

00:04:51.760 --> 00:04:51.770 align:start position:0%
quoted string in the middle your quote
 

00:04:51.770 --> 00:04:53.590 align:start position:0%
quoted string in the middle your quote
greater<00:04:52.070><c> than</c><00:04:52.280><c> greater</c><00:04:52.490><c> than</c><00:04:52.580><c> space</c><00:04:52.730><c> that's</c>

00:04:53.590 --> 00:04:53.600 align:start position:0%
greater than greater than space that's
 

00:04:53.600 --> 00:04:55.570 align:start position:0%
greater than greater than space that's
what<00:04:53.810><c> I</c><00:04:53.840><c> prefer</c><00:04:54.470><c> my</c><00:04:54.680><c> octave</c><00:04:55.070><c> prompt</c><00:04:55.310><c> to</c><00:04:55.430><c> look</c>

00:04:55.570 --> 00:04:55.580 align:start position:0%
what I prefer my octave prompt to look
 

00:04:55.580 --> 00:04:57.150 align:start position:0%
what I prefer my octave prompt to look
like<00:04:55.790><c> so</c><00:04:56.030><c> if</c><00:04:56.090><c> I</c><00:04:56.180><c> hit</c><00:04:56.300><c> enter</c>

00:04:57.150 --> 00:04:57.160 align:start position:0%
like so if I hit enter
 

00:04:57.160 --> 00:05:02.740 align:start position:0%
like so if I hit enter
oops<00:04:58.160><c> excuse</c><00:04:58.520><c> me</c><00:04:59.500><c> like</c><00:05:00.500><c> so</c><00:05:00.710><c> ps1</c><00:05:01.070><c> like</c><00:05:01.910><c> so</c><00:05:02.180><c> now</c>

00:05:02.740 --> 00:05:02.750 align:start position:0%
oops excuse me like so ps1 like so now
 

00:05:02.750 --> 00:05:04.540 align:start position:0%
oops excuse me like so ps1 like so now
my<00:05:02.960><c> octave</c><00:05:03.380><c> prompt</c><00:05:03.740><c> has</c><00:05:03.830><c> changed</c><00:05:04.280><c> to</c><00:05:04.400><c> their</c>

00:05:04.540 --> 00:05:04.550 align:start position:0%
my octave prompt has changed to their
 

00:05:04.550 --> 00:05:06.670 align:start position:0%
my octave prompt has changed to their
greater<00:05:04.790><c> than</c><00:05:05.000><c> greater</c><00:05:05.210><c> than</c><00:05:05.450><c> sign</c><00:05:05.720><c> which</c><00:05:06.350><c> you</c>

00:05:06.670 --> 00:05:06.680 align:start position:0%
greater than greater than sign which you
 

00:05:06.680 --> 00:05:09.030 align:start position:0%
greater than greater than sign which you
know<00:05:06.770><c> looks</c><00:05:07.190><c> quite</c><00:05:07.400><c> a</c><00:05:07.430><c> bit</c><00:05:07.490><c> better</c>

00:05:09.030 --> 00:05:09.040 align:start position:0%
know looks quite a bit better
 

00:05:09.040 --> 00:05:12.400 align:start position:0%
know looks quite a bit better
next<00:05:10.040><c> let's</c><00:05:10.250><c> talk</c><00:05:10.460><c> about</c><00:05:10.520><c> octave</c><00:05:11.240><c> variables</c><00:05:11.990><c> I</c>

00:05:12.400 --> 00:05:12.410 align:start position:0%
next let's talk about octave variables I
 

00:05:12.410 --> 00:05:14.950 align:start position:0%
next let's talk about octave variables I
can<00:05:12.860><c> take</c><00:05:13.430><c> the</c><00:05:13.520><c> variable</c><00:05:13.850><c> a</c><00:05:14.030><c> and</c><00:05:14.330><c> assign</c><00:05:14.600><c> it</c><00:05:14.810><c> to</c>

00:05:14.950 --> 00:05:14.960 align:start position:0%
can take the variable a and assign it to
 

00:05:14.960 --> 00:05:19.690 align:start position:0%
can take the variable a and assign it to
3<00:05:15.500><c> and</c><00:05:16.300><c> hit</c><00:05:17.300><c> enter</c><00:05:17.330><c> and</c><00:05:18.050><c> now</c><00:05:18.710><c> is</c><00:05:18.980><c> equal</c><00:05:19.220><c> to</c><00:05:19.460><c> me</c>

00:05:19.690 --> 00:05:19.700 align:start position:0%
3 and hit enter and now is equal to me
 

00:05:19.700 --> 00:05:21.460 align:start position:0%
3 and hit enter and now is equal to me
you<00:05:20.210><c> want</c><00:05:20.420><c> to</c><00:05:20.480><c> assign</c><00:05:20.720><c> a</c><00:05:20.780><c> variable</c><00:05:21.020><c> but</c><00:05:21.410><c> you</c>

00:05:21.460 --> 00:05:21.470 align:start position:0%
you want to assign a variable but you
 

00:05:21.470 --> 00:05:22.990 align:start position:0%
you want to assign a variable but you
don't<00:05:21.680><c> want</c><00:05:21.830><c> to</c><00:05:21.950><c> print</c><00:05:22.190><c> out</c><00:05:22.340><c> the</c><00:05:22.490><c> result</c><00:05:22.850><c> if</c>

00:05:22.990 --> 00:05:23.000 align:start position:0%
don't want to print out the result if
 

00:05:23.000 --> 00:05:26.490 align:start position:0%
don't want to print out the result if
you<00:05:23.060><c> put</c><00:05:23.240><c> a</c><00:05:23.270><c> semicolon</c><00:05:23.860><c> the</c><00:05:24.860><c> semicolon</c>

00:05:26.490 --> 00:05:26.500 align:start position:0%
you put a semicolon the semicolon
 

00:05:26.500 --> 00:05:30.670 align:start position:0%
you put a semicolon the semicolon
suppresses<00:05:27.850><c> the</c><00:05:28.850><c> print</c><00:05:29.390><c> the</c><00:05:29.720><c> print</c><00:05:30.290><c> outputs</c>

00:05:30.670 --> 00:05:30.680 align:start position:0%
suppresses the print the print outputs
 

00:05:30.680 --> 00:05:32.740 align:start position:0%
suppresses the print the print outputs
let<00:05:30.890><c> me</c><00:05:30.980><c> do</c><00:05:31.100><c> that</c><00:05:31.280><c> until</c><00:05:32.180><c> it</c><00:05:32.330><c> doesn't</c><00:05:32.480><c> print</c>

00:05:32.740 --> 00:05:32.750 align:start position:0%
let me do that until it doesn't print
 

00:05:32.750 --> 00:05:35.080 align:start position:0%
let me do that until it doesn't print
anything<00:05:32.870><c> whereas</c><00:05:33.410><c> a</c><00:05:33.620><c> equals</c><00:05:34.070><c> 3</c><00:05:34.370><c> you</c><00:05:35.030><c> know</c>

00:05:35.080 --> 00:05:35.090 align:start position:0%
anything whereas a equals 3 you know
 

00:05:35.090 --> 00:05:37.510 align:start position:0%
anything whereas a equals 3 you know
makes<00:05:35.600><c> it</c><00:05:35.780><c> printed</c><00:05:36.380><c> out</c><00:05:36.470><c> whereas</c><00:05:36.920><c> a</c><00:05:37.040><c> equals</c><00:05:37.310><c> 3</c>

00:05:37.510 --> 00:05:37.520 align:start position:0%
makes it printed out whereas a equals 3
 

00:05:37.520 --> 00:05:40.150 align:start position:0%
makes it printed out whereas a equals 3
semicolon<00:05:38.150><c> doesn't</c><00:05:38.780><c> print</c><00:05:38.900><c> anything</c><00:05:39.020><c> I</c><00:05:39.500><c> can</c>

00:05:40.150 --> 00:05:40.160 align:start position:0%
semicolon doesn't print anything I can
 

00:05:40.160 --> 00:05:44.740 align:start position:0%
semicolon doesn't print anything I can
do<00:05:40.340><c> string</c><00:05:40.670><c> assignment</c><00:05:41.210><c> equals</c><00:05:41.900><c> hi</c><00:05:42.670><c> now</c><00:05:43.670><c> if</c><00:05:44.630><c> I</c>

00:05:44.740 --> 00:05:44.750 align:start position:0%
do string assignment equals hi now if I
 

00:05:44.750 --> 00:05:46.450 align:start position:0%
do string assignment equals hi now if I
just<00:05:45.020><c> enter</c><00:05:45.200><c> be</c><00:05:45.530><c> a</c><00:05:45.560><c> prince</c><00:05:45.890><c> of</c><00:05:45.980><c> the</c><00:05:46.040><c> variable</c><00:05:46.430><c> B</c>

00:05:46.450 --> 00:05:46.460 align:start position:0%
just enter be a prince of the variable B
 

00:05:46.460 --> 00:05:49.870 align:start position:0%
just enter be a prince of the variable B
so<00:05:46.850><c> B</c><00:05:47.030><c> is</c><00:05:47.120><c> the</c><00:05:47.330><c> string</c><00:05:47.630><c> hi</c><00:05:47.840><c> C</c><00:05:48.590><c> equals</c><00:05:49.100><c> 3</c><00:05:49.310><c> grades</c>

00:05:49.870 --> 00:05:49.880 align:start position:0%
so B is the string hi C equals 3 grades
 

00:05:49.880 --> 00:05:55.750 align:start position:0%
so B is the string hi C equals 3 grades
in<00:05:50.000><c> equal</c><00:05:50.330><c> 1</c><00:05:50.510><c> so</c><00:05:51.070><c> now</c><00:05:52.070><c> C</c><00:05:52.850><c> evaluates</c><00:05:53.540><c> to</c><00:05:53.960><c> true</c><00:05:54.760><c> if</c>

00:05:55.750 --> 00:05:55.760 align:start position:0%
in equal 1 so now C evaluates to true if
 

00:05:55.760 --> 00:05:58.840 align:start position:0%
in equal 1 so now C evaluates to true if
you<00:05:56.380><c> want</c><00:05:57.380><c> to</c><00:05:57.500><c> print</c><00:05:57.890><c> out</c><00:05:58.160><c> or</c><00:05:58.430><c> display</c><00:05:58.820><c> a</c>

00:05:58.840 --> 00:05:58.850 align:start position:0%
you want to print out or display a
 

00:05:58.850 --> 00:06:00.940 align:start position:0%
you want to print out or display a
variable<00:05:59.360><c> here's</c><00:05:59.690><c> how</c><00:05:59.810><c> you</c><00:05:59.870><c> go</c><00:06:00.050><c> about</c><00:06:00.170><c> it</c><00:06:00.350><c> let</c>

00:06:00.940 --> 00:06:00.950 align:start position:0%
variable here's how you go about it let
 

00:06:00.950 --> 00:06:04.690 align:start position:0%
variable here's how you go about it let
me<00:06:00.980><c> set</c><00:06:01.250><c> a</c><00:06:01.520><c> equals</c><00:06:02.090><c> pi</c><00:06:02.390><c> and</c><00:06:03.340><c> if</c><00:06:04.340><c> I</c><00:06:04.460><c> want</c><00:06:04.640><c> to</c>

00:06:04.690 --> 00:06:04.700 align:start position:0%
me set a equals pi and if I want to
 

00:06:04.700 --> 00:06:07.390 align:start position:0%
me set a equals pi and if I want to
print<00:06:04.910><c> a</c><00:06:05.120><c> and</c><00:06:05.330><c> just</c><00:06:05.690><c> type</c><00:06:05.900><c> a</c><00:06:06.200><c> like</c><00:06:07.010><c> so</c><00:06:07.190><c> no</c>

00:06:07.390 --> 00:06:07.400 align:start position:0%
print a and just type a like so no
 

00:06:07.400 --> 00:06:09.970 align:start position:0%
print a and just type a like so no
printed<00:06:07.730><c> out</c><00:06:07.850><c> for</c><00:06:08.690><c> more</c><00:06:08.840><c> complex</c><00:06:09.380><c> printing</c>

00:06:09.970 --> 00:06:09.980 align:start position:0%
printed out for more complex printing
 

00:06:09.980 --> 00:06:11.590 align:start position:0%
printed out for more complex printing
there's<00:06:10.250><c> also</c><00:06:10.400><c> the</c><00:06:10.640><c> disc</c><00:06:10.880><c> command</c><00:06:11.300><c> which</c>

00:06:11.590 --> 00:06:11.600 align:start position:0%
there's also the disc command which
 

00:06:11.600 --> 00:06:13.870 align:start position:0%
there's also the disc command which
stands<00:06:12.470><c> with</c><00:06:12.620><c> this</c><00:06:12.770><c> place</c><00:06:13.040><c> when</c><00:06:13.190><c> I</c><00:06:13.220><c> display</c><00:06:13.670><c> a</c>

00:06:13.870 --> 00:06:13.880 align:start position:0%
stands with this place when I display a
 

00:06:13.880 --> 00:06:16.500 align:start position:0%
stands with this place when I display a
just<00:06:14.240><c> prints</c><00:06:14.450><c> out</c><00:06:14.540><c> a</c><00:06:14.690><c> like</c><00:06:14.870><c> so</c><00:06:15.110><c> you</c><00:06:16.040><c> can</c><00:06:16.190><c> also</c>

00:06:16.500 --> 00:06:16.510 align:start position:0%
just prints out a like so you can also
 

00:06:16.510 --> 00:06:20.370 align:start position:0%
just prints out a like so you can also
display<00:06:17.510><c> the</c><00:06:17.870><c> strings</c><00:06:18.230><c> so</c><00:06:18.710><c> this</c><00:06:19.370><c> is</c><00:06:19.850><c> printf</c>

00:06:20.370 --> 00:06:20.380 align:start position:0%
display the strings so this is printf
 

00:06:20.380 --> 00:06:23.740 align:start position:0%
display the strings so this is printf
two<00:06:21.380><c> decimals</c>

00:06:23.740 --> 00:06:23.750 align:start position:0%
two decimals
 

00:06:23.750 --> 00:06:28.990 align:start position:0%
two decimals
percent<00:06:24.290><c> 0.2</c><00:06:24.890><c> F</c><00:06:25.310><c> comma</c><00:06:26.060><c> a</c><00:06:26.330><c> like</c><00:06:27.290><c> so</c><00:06:27.590><c> and</c><00:06:28.000><c> this</c>

00:06:28.990 --> 00:06:29.000 align:start position:0%
percent 0.2 F comma a like so and this
 

00:06:29.000 --> 00:06:30.850 align:start position:0%
percent 0.2 F comma a like so and this
will<00:06:29.180><c> print</c><00:06:29.420><c> out</c><00:06:29.540><c> the</c><00:06:29.600><c> string</c><00:06:29.690><c> two</c><00:06:30.080><c> decimals</c><00:06:30.500><c> :</c>

00:06:30.850 --> 00:06:30.860 align:start position:0%
will print out the string two decimals :
 

00:06:30.860 --> 00:06:35.110 align:start position:0%
will print out the string two decimals :
3.14<00:06:31.730><c> this</c><00:06:32.510><c> is</c><00:06:32.660><c> kind</c><00:06:32.900><c> of</c><00:06:33.020><c> a</c><00:06:33.140><c> old</c><00:06:33.560><c> style</c><00:06:34.460><c> C</c>

00:06:35.110 --> 00:06:35.120 align:start position:0%
3.14 this is kind of a old style C
 

00:06:35.120 --> 00:06:37.600 align:start position:0%
3.14 this is kind of a old style C
syntax<00:06:35.980><c> for</c><00:06:36.980><c> those</c><00:06:37.100><c> of</c><00:06:37.220><c> you</c><00:06:37.280><c> that</c><00:06:37.430><c> have</c>

00:06:37.600 --> 00:06:37.610 align:start position:0%
syntax for those of you that have
 

00:06:37.610 --> 00:06:39.400 align:start position:0%
syntax for those of you that have
permanent<00:06:38.000><c> C</c><00:06:38.150><c> before</c><00:06:38.480><c> this</c><00:06:38.900><c> is</c><00:06:39.080><c> essentially</c>

00:06:39.400 --> 00:06:39.410 align:start position:0%
permanent C before this is essentially
 

00:06:39.410 --> 00:06:41.560 align:start position:0%
permanent C before this is essentially
the<00:06:39.590><c> syntax</c><00:06:39.980><c> you</c><00:06:40.070><c> use</c><00:06:40.340><c> to</c><00:06:40.640><c> print</c><00:06:40.970><c> string</c><00:06:41.360><c> so</c>

00:06:41.560 --> 00:06:41.570 align:start position:0%
the syntax you use to print string so
 

00:06:41.570 --> 00:06:44.290 align:start position:0%
the syntax you use to print string so
the<00:06:41.720><c> printf</c><00:06:42.530><c> generates</c><00:06:43.130><c> a</c><00:06:43.280><c> spirit</c><00:06:43.670><c> generates</c>

00:06:44.290 --> 00:06:44.300 align:start position:0%
the printf generates a spirit generates
 

00:06:44.300 --> 00:06:46.300 align:start position:0%
the printf generates a spirit generates
a<00:06:44.510><c> string</c><00:06:44.990><c> that</c><00:06:45.620><c> is</c><00:06:45.770><c> this</c><00:06:45.950><c> you</c><00:06:46.070><c> know</c><00:06:46.160><c> two</c>

00:06:46.300 --> 00:06:46.310 align:start position:0%
a string that is this you know two
 

00:06:46.310 --> 00:06:49.540 align:start position:0%
a string that is this you know two
decimals<00:06:46.670><c> 3.14</c><00:06:47.360><c> string</c><00:06:47.720><c> this</c><00:06:48.380><c> percent</c><00:06:48.860><c> 0.2</c><00:06:49.340><c> f</c>

00:06:49.540 --> 00:06:49.550 align:start position:0%
decimals 3.14 string this percent 0.2 f
 

00:06:49.550 --> 00:06:52.870 align:start position:0%
decimals 3.14 string this percent 0.2 f
means<00:06:50.380><c> substitute</c><00:06:51.380><c> a</c><00:06:51.530><c> into</c><00:06:51.950><c> here</c><00:06:52.220><c> sharing</c><00:06:52.730><c> it</c>

00:06:52.870 --> 00:06:52.880 align:start position:0%
means substitute a into here sharing it
 

00:06:52.880 --> 00:06:54.730 align:start position:0%
means substitute a into here sharing it
with<00:06:52.940><c> you</c><00:06:53.270><c> know</c><00:06:53.330><c> two</c><00:06:53.470><c> digits</c><00:06:54.470><c> after</c><00:06:54.620><c> the</c>

00:06:54.730 --> 00:06:54.740 align:start position:0%
with you know two digits after the
 

00:06:54.740 --> 00:06:57.880 align:start position:0%
with you know two digits after the
decimal<00:06:54.830><c> point</c><00:06:55.310><c> and</c><00:06:55.580><c> this</c><00:06:56.540><c> takes</c><00:06:57.050><c> the</c><00:06:57.140><c> string</c>

00:06:57.880 --> 00:06:57.890 align:start position:0%
decimal point and this takes the string
 

00:06:57.890 --> 00:07:00.220 align:start position:0%
decimal point and this takes the string
that's<00:06:58.280><c> generated</c><00:06:59.030><c> by</c><00:06:59.060><c> this</c><00:06:59.450><c> printf</c><00:06:59.840><c> command</c>

00:07:00.220 --> 00:07:00.230 align:start position:0%
that's generated by this printf command
 

00:07:00.230 --> 00:07:02.230 align:start position:0%
that's generated by this printf command
s<00:07:00.470><c> printf</c><00:07:01.010><c> well</c><00:07:01.190><c> the</c><00:07:01.250><c> string</c><00:07:01.550><c> printf</c><00:07:01.910><c> come</c><00:07:02.060><c> on</c>

00:07:02.230 --> 00:07:02.240 align:start position:0%
s printf well the string printf come on
 

00:07:02.240 --> 00:07:05.500 align:start position:0%
s printf well the string printf come on
and<00:07:02.530><c> this</c><00:07:03.530><c> actually</c><00:07:03.860><c> displays</c><00:07:04.700><c> a</c><00:07:04.850><c> string</c><00:07:05.090><c> and</c>

00:07:05.500 --> 00:07:05.510 align:start position:0%
and this actually displays a string and
 

00:07:05.510 --> 00:07:08.740 align:start position:0%
and this actually displays a string and
it's<00:07:06.440><c> really</c><00:07:06.770><c> another</c><00:07:06.950><c> example</c><00:07:07.490><c> this</c><00:07:08.300><c> printf</c>

00:07:08.740 --> 00:07:08.750 align:start position:0%
it's really another example this printf
 

00:07:08.750 --> 00:07:14.730 align:start position:0%
it's really another example this printf
6<00:07:09.590><c> decimals</c><00:07:10.660><c> percent</c><00:07:11.660><c> 0.6</c><00:07:12.530><c> F</c><00:07:12.770><c> comma</c><00:07:13.700><c> a</c><00:07:13.970><c> and</c>

00:07:14.730 --> 00:07:14.740 align:start position:0%
6 decimals percent 0.6 F comma a and
 

00:07:14.740 --> 00:07:19.780 align:start position:0%
6 decimals percent 0.6 F comma a and
this<00:07:15.740><c> should</c><00:07:15.950><c> print</c><00:07:16.280><c> PI</c><00:07:16.880><c> with</c><00:07:17.320><c> 6</c><00:07:18.320><c> decimal</c><00:07:18.740><c> to</c><00:07:19.070><c> 6</c>

00:07:19.780 --> 00:07:19.790 align:start position:0%
this should print PI with 6 decimal to 6
 

00:07:19.790 --> 00:07:23.470 align:start position:0%
this should print PI with 6 decimal to 6
decimal<00:07:19.940><c> places</c><00:07:21.580><c> finally</c><00:07:22.580><c> I</c><00:07:22.760><c> was</c><00:07:23.120><c> displaying</c>

00:07:23.470 --> 00:07:23.480 align:start position:0%
decimal places finally I was displaying
 

00:07:23.480 --> 00:07:25.270 align:start position:0%
decimal places finally I was displaying
a<00:07:23.690><c> like</c><00:07:23.900><c> 7</c><00:07:24.230><c> love</c><00:07:24.440><c> like</c><00:07:24.590><c> this</c><00:07:24.770><c> you</c><00:07:24.919><c> can</c><00:07:25.040><c> see</c>

00:07:25.270 --> 00:07:25.280 align:start position:0%
a like 7 love like this you can see
 

00:07:25.280 --> 00:07:26.890 align:start position:0%
a like 7 love like this you can see
they're<00:07:25.610><c> they're</c><00:07:25.880><c> useful</c><00:07:26.240><c> shortcuts</c><00:07:26.810><c> you</c>

00:07:26.890 --> 00:07:26.900 align:start position:0%
they're they're useful shortcuts you
 

00:07:26.900 --> 00:07:30.790 align:start position:0%
they're they're useful shortcuts you
type<00:07:27.110><c> format</c><00:07:27.500><c> long</c><00:07:27.950><c> it</c><00:07:28.700><c> causes</c><00:07:29.270><c> strings</c><00:07:30.020><c> to</c><00:07:30.500><c> by</c>

00:07:30.790 --> 00:07:30.800 align:start position:0%
type format long it causes strings to by
 

00:07:30.800 --> 00:07:33.250 align:start position:0%
type format long it causes strings to by
default<00:07:30.910><c> be</c><00:07:31.910><c> its</c><00:07:32.090><c> way</c><00:07:32.270><c> to</c><00:07:32.330><c> a</c><00:07:32.540><c> lot</c><00:07:32.750><c> more</c><00:07:32.780><c> decimal</c>

00:07:33.250 --> 00:07:33.260 align:start position:0%
default be its way to a lot more decimal
 

00:07:33.260 --> 00:07:35.860 align:start position:0%
default be its way to a lot more decimal
places<00:07:33.470><c> and</c><00:07:33.890><c> format</c><00:07:34.280><c> short</c><00:07:34.640><c> is</c><00:07:35.419><c> a</c><00:07:35.480><c> command</c>

00:07:35.860 --> 00:07:35.870 align:start position:0%
places and format short is a command
 

00:07:35.870 --> 00:07:37.810 align:start position:0%
places and format short is a command
that<00:07:35.960><c> we</c><00:07:36.200><c> stores</c><00:07:36.500><c> the</c><00:07:36.650><c> default</c><00:07:37.040><c> of</c><00:07:37.250><c> just</c>

00:07:37.810 --> 00:07:37.820 align:start position:0%
that we stores the default of just
 

00:07:37.820 --> 00:07:40.980 align:start position:0%
that we stores the default of just
printing<00:07:37.970><c> a</c><00:07:38.210><c> small</c><00:07:38.480><c> number</c><00:07:38.690><c> of</c><00:07:38.900><c> digits</c><00:07:39.790><c> ok</c>

00:07:40.980 --> 00:07:40.990 align:start position:0%
printing a small number of digits ok
 

00:07:40.990 --> 00:07:43.990 align:start position:0%
printing a small number of digits ok
that's<00:07:41.990><c> how</c><00:07:42.169><c> you</c><00:07:42.380><c> work</c><00:07:42.740><c> with</c><00:07:42.770><c> variables</c><00:07:43.490><c> now</c>

00:07:43.990 --> 00:07:44.000 align:start position:0%
that's how you work with variables now
 

00:07:44.000 --> 00:07:47.260 align:start position:0%
that's how you work with variables now
let's<00:07:44.390><c> look</c><00:07:44.660><c> at</c><00:07:44.930><c> vectors</c><00:07:45.680><c> and</c><00:07:45.919><c> matrices</c><00:07:46.270><c> let's</c>

00:07:47.260 --> 00:07:47.270 align:start position:0%
let's look at vectors and matrices let's
 

00:07:47.270 --> 00:07:49.210 align:start position:0%
let's look at vectors and matrices let's
say<00:07:47.419><c> I</c><00:07:47.479><c> want</c><00:07:47.630><c> to</c><00:07:47.660><c> assign</c><00:07:47.780><c> me</c><00:07:48.200><c> a</c><00:07:48.410><c> to</c><00:07:48.500><c> a</c><00:07:48.740><c> matrix</c>

00:07:49.210 --> 00:07:49.220 align:start position:0%
say I want to assign me a to a matrix
 

00:07:49.220 --> 00:07:51.670 align:start position:0%
say I want to assign me a to a matrix
I'm<00:07:49.400><c> sure</c><00:07:49.610><c> in</c><00:07:49.729><c> example</c><00:07:50.210><c> 1</c><00:07:50.510><c> 2</c><00:07:50.720><c> semicolon</c><00:07:51.169><c> 3</c><00:07:51.590><c> 4</c>

00:07:51.670 --> 00:07:51.680 align:start position:0%
I'm sure in example 1 2 semicolon 3 4
 

00:07:51.680 --> 00:07:56.200 align:start position:0%
I'm sure in example 1 2 semicolon 3 4
semicolon<00:07:52.510><c> 5</c><00:07:53.510><c> 6</c><00:07:53.990><c> this</c><00:07:54.770><c> generates</c><00:07:55.340><c> a</c><00:07:55.580><c> 3</c><00:07:55.970><c> by</c><00:07:56.180><c> 2</c>

00:07:56.200 --> 00:07:56.210 align:start position:0%
semicolon 5 6 this generates a 3 by 2
 

00:07:56.210 --> 00:07:59.620 align:start position:0%
semicolon 5 6 this generates a 3 by 2
matrix<00:07:56.540><c> a</c><00:07:57.169><c> whose</c><00:07:57.919><c> first</c><00:07:58.490><c> row</c><00:07:58.700><c> as</c><00:07:58.820><c> 1</c><00:07:59.000><c> 2</c><00:07:59.210><c> second</c>

00:07:59.620 --> 00:07:59.630 align:start position:0%
matrix a whose first row as 1 2 second
 

00:07:59.630 --> 00:08:02.469 align:start position:0%
matrix a whose first row as 1 2 second
row<00:07:59.750><c> 3</c><00:07:59.990><c> for</c><00:08:00.020><c> the</c><00:08:00.530><c> third</c><00:08:00.860><c> row</c><00:08:01.100><c> is</c><00:08:01.310><c> 5</c><00:08:01.520><c> 6</c><00:08:01.760><c> what</c><00:08:02.390><c> the</c>

00:08:02.469 --> 00:08:02.479 align:start position:0%
row 3 for the third row is 5 6 what the
 

00:08:02.479 --> 00:08:05.740 align:start position:0%
row 3 for the third row is 5 6 what the
semicolon<00:08:03.260><c> does</c><00:08:03.530><c> is</c><00:08:03.860><c> essentially</c><00:08:04.790><c> say</c><00:08:05.150><c> go</c><00:08:05.690><c> to</c>

00:08:05.740 --> 00:08:05.750 align:start position:0%
semicolon does is essentially say go to
 

00:08:05.750 --> 00:08:08.020 align:start position:0%
semicolon does is essentially say go to
the<00:08:05.990><c> next</c><00:08:06.200><c> row</c><00:08:06.530><c> of</c><00:08:06.800><c> the</c><00:08:06.919><c> matrix</c><00:08:07.040><c> there</c><00:08:07.970><c> are</c>

00:08:08.020 --> 00:08:08.030 align:start position:0%
the next row of the matrix there are
 

00:08:08.030 --> 00:08:09.550 align:start position:0%
the next row of the matrix there are
other<00:08:08.120><c> ways</c><00:08:08.270><c> to</c><00:08:08.330><c> type</c><00:08:08.600><c> the</c><00:08:08.750><c> same</c><00:08:08.900><c> type</c><00:08:09.140><c> equals</c>

00:08:09.550 --> 00:08:09.560 align:start position:0%
other ways to type the same type equals
 

00:08:09.560 --> 00:08:14.830 align:start position:0%
other ways to type the same type equals
1<00:08:09.770><c> 2</c><00:08:10.010><c> semicolon</c><00:08:10.660><c> 3</c><00:08:11.660><c> 4</c><00:08:11.780><c> semicolon</c><00:08:12.740><c> 5</c><00:08:13.430><c> 6</c><00:08:13.790><c> like</c><00:08:14.060><c> so</c>

00:08:14.830 --> 00:08:14.840 align:start position:0%
1 2 semicolon 3 4 semicolon 5 6 like so
 

00:08:14.840 --> 00:08:17.020 align:start position:0%
1 2 semicolon 3 4 semicolon 5 6 like so
and<00:08:15.080><c> that's</c><00:08:15.350><c> another</c><00:08:15.710><c> equivalent</c><00:08:16.400><c> way</c><00:08:16.640><c> of</c>

00:08:17.020 --> 00:08:17.030 align:start position:0%
and that's another equivalent way of
 

00:08:17.030 --> 00:08:20.440 align:start position:0%
and that's another equivalent way of
assigning<00:08:17.330><c> a</c><00:08:17.750><c> to</c><00:08:18.380><c> be</c><00:08:18.500><c> the</c><00:08:18.710><c> values</c><00:08:19.250><c> of</c><00:08:19.460><c> this</c><00:08:19.640><c> 3</c>

00:08:20.440 --> 00:08:20.450 align:start position:0%
assigning a to be the values of this 3
 

00:08:20.450 --> 00:08:21.739 align:start position:0%
assigning a to be the values of this 3
by<00:08:20.600><c> 2</c><00:08:20.660><c> matrix</c>

00:08:21.739 --> 00:08:21.749 align:start position:0%
by 2 matrix
 

00:08:21.749 --> 00:08:23.839 align:start position:0%
by 2 matrix
similarly<00:08:22.499><c> you</c><00:08:22.649><c> can</c><00:08:22.769><c> assign</c><00:08:23.009><c> vectors</c><00:08:23.429><c> so</c><00:08:23.669><c> V</c>

00:08:23.839 --> 00:08:23.849 align:start position:0%
similarly you can assign vectors so V
 

00:08:23.849 --> 00:08:26.329 align:start position:0%
similarly you can assign vectors so V
equals<00:08:24.299><c> one</c><00:08:24.599><c> two</c><00:08:24.809><c> three</c><00:08:25.169><c> this</c><00:08:25.860><c> is</c><00:08:25.919><c> actually</c><00:08:26.309><c> a</c>

00:08:26.329 --> 00:08:26.339 align:start position:0%
equals one two three this is actually a
 

00:08:26.339 --> 00:08:28.549 align:start position:0%
equals one two three this is actually a
row<00:08:26.729><c> vector</c><00:08:27.179><c> or</c><00:08:27.209><c> this</c><00:08:27.539><c> is</c><00:08:27.629><c> a</c><00:08:27.659><c> three</c><00:08:28.319><c> by</c><00:08:28.529><c> one</c>

00:08:28.549 --> 00:08:28.559 align:start position:0%
row vector or this is a three by one
 

00:08:28.559 --> 00:08:31.609 align:start position:0%
row vector or this is a three by one
vector<00:08:29.459><c> right</c><00:08:30.119><c> there</c><00:08:30.149><c> so</c><00:08:30.449><c> that's</c><00:08:30.689><c> why</c><00:08:31.049><c> vectors</c>

00:08:31.609 --> 00:08:31.619 align:start position:0%
vector right there so that's why vectors
 

00:08:31.619 --> 00:08:35.079 align:start position:0%
vector right there so that's why vectors
excuse<00:08:32.399><c> me</c><00:08:32.550><c> not</c><00:08:32.789><c> this</c><00:08:33.360><c> is</c><00:08:33.509><c> on</c><00:08:33.659><c> a</c><00:08:33.899><c> one</c><00:08:34.769><c> by</c><00:08:34.800><c> three</c>

00:08:35.079 --> 00:08:35.089 align:start position:0%
excuse me not this is on a one by three
 

00:08:35.089 --> 00:08:40.040 align:start position:0%
excuse me not this is on a one by three
matrix<00:08:36.199><c> right</c><00:08:37.490><c> not</c><00:08:38.490><c> to</c><00:08:38.610><c> me</c><00:08:38.699><c> by</c><00:08:38.849><c> one</c><00:08:39.029><c> if</c><00:08:39.599><c> I</c><00:08:39.810><c> want</c>

00:08:40.040 --> 00:08:40.050 align:start position:0%
matrix right not to me by one if I want
 

00:08:40.050 --> 00:08:44.149 align:start position:0%
matrix right not to me by one if I want
to<00:08:40.259><c> assign</c><00:08:40.709><c> this</c><00:08:41.189><c> to</c><00:08:41.639><c> a</c><00:08:42.289><c> column</c><00:08:43.289><c> vector</c><00:08:43.319><c> what</c><00:08:44.129><c> I</c>

00:08:44.149 --> 00:08:44.159 align:start position:0%
to assign this to a column vector what I
 

00:08:44.159 --> 00:08:46.160 align:start position:0%
to assign this to a column vector what I
would<00:08:44.339><c> do</c><00:08:44.459><c> is</c><00:08:44.579><c> instead</c><00:08:44.879><c> to</c><00:08:45.089><c> V</c><00:08:45.329><c> equals</c><00:08:45.810><c> one</c>

00:08:46.160 --> 00:08:46.170 align:start position:0%
would do is instead to V equals one
 

00:08:46.170 --> 00:08:49.160 align:start position:0%
would do is instead to V equals one
semicolon<00:08:46.589><c> to</c><00:08:47.069><c> semicolon</c><00:08:47.790><c> three</c><00:08:48.149><c> and</c><00:08:48.420><c> this</c>

00:08:49.160 --> 00:08:49.170 align:start position:0%
semicolon to semicolon three and this
 

00:08:49.170 --> 00:08:52.009 align:start position:0%
semicolon to semicolon three and this
will<00:08:49.379><c> give</c><00:08:49.529><c> me</c><00:08:49.560><c> a</c><00:08:50.009><c> three</c><00:08:50.819><c> by</c><00:08:51.000><c> one</c><00:08:51.029><c> instead</c><00:08:51.600><c> of</c><00:08:51.689><c> 1</c>

00:08:52.009 --> 00:08:52.019 align:start position:0%
will give me a three by one instead of 1
 

00:08:52.019 --> 00:08:55.540 align:start position:0%
will give me a three by one instead of 1
by<00:08:52.199><c> 3</c><00:08:52.230><c> vector</c><00:08:53.160><c> so</c><00:08:53.430><c> this</c><00:08:53.579><c> is</c><00:08:53.730><c> a</c><00:08:53.850><c> column</c><00:08:54.240><c> vector</c>

00:08:55.540 --> 00:08:55.550 align:start position:0%
by 3 vector so this is a column vector
 

00:08:55.550 --> 00:08:58.100 align:start position:0%
by 3 vector so this is a column vector
here's<00:08:56.550><c> some</c><00:08:56.790><c> more</c><00:08:57.089><c> useful</c><00:08:57.300><c> notation</c><00:08:57.629><c> I</c><00:08:58.079><c> can</c>

00:08:58.100 --> 00:08:58.110 align:start position:0%
here's some more useful notation I can
 

00:08:58.110 --> 00:09:02.900 align:start position:0%
here's some more useful notation I can
all<00:08:58.290><c> set</c><00:08:58.560><c> V</c><00:08:58.769><c> equals</c><00:08:59.220><c> 1</c><00:08:59.579><c> and</c><00:08:59.819><c> :</c><00:09:00.329><c> 0.1</c><00:09:01.110><c> :</c><00:09:01.800><c> to</c><00:09:02.069><c> what</c>

00:09:02.900 --> 00:09:02.910 align:start position:0%
all set V equals 1 and : 0.1 : to what
 

00:09:02.910 --> 00:09:05.780 align:start position:0%
all set V equals 1 and : 0.1 : to what
this<00:09:03.120><c> does</c><00:09:03.360><c> is</c><00:09:03.600><c> it</c><00:09:03.779><c> sets</c><00:09:04.019><c> V</c><00:09:04.319><c> to</c><00:09:04.649><c> the</c><00:09:04.980><c> bunch</c><00:09:05.699><c> of</c>

00:09:05.780 --> 00:09:05.790 align:start position:0%
this does is it sets V to the bunch of
 

00:09:05.790 --> 00:09:08.980 align:start position:0%
this does is it sets V to the bunch of
elements<00:09:06.000><c> that</c><00:09:06.329><c> start</c><00:09:06.810><c> from</c><00:09:06.959><c> 1</c><00:09:07.259><c> and</c>

00:09:08.980 --> 00:09:08.990 align:start position:0%
elements that start from 1 and
 

00:09:08.990 --> 00:09:12.769 align:start position:0%
elements that start from 1 and
increments<00:09:09.990><c> in</c><00:09:10.110><c> steps</c><00:09:10.379><c> of</c><00:09:10.529><c> 0.1</c><00:09:11.480><c> until</c><00:09:12.480><c> you</c><00:09:12.569><c> get</c>

00:09:12.769 --> 00:09:12.779 align:start position:0%
increments in steps of 0.1 until you get
 

00:09:12.779 --> 00:09:17.090 align:start position:0%
increments in steps of 0.1 until you get
up<00:09:12.899><c> to</c><00:09:13.079><c> 2</c><00:09:13.259><c> so</c><00:09:13.769><c> if</c><00:09:14.100><c> I</c><00:09:14.189><c> do</c><00:09:14.250><c> this</c><00:09:15.290><c> V</c><00:09:16.290><c> is</c><00:09:16.649><c> going</c><00:09:16.860><c> to</c><00:09:17.009><c> be</c>

00:09:17.090 --> 00:09:17.100 align:start position:0%
up to 2 so if I do this V is going to be
 

00:09:17.100 --> 00:09:19.879 align:start position:0%
up to 2 so if I do this V is going to be
this<00:09:17.519><c> you</c><00:09:18.360><c> know</c><00:09:18.420><c> row</c><00:09:18.839><c> vector</c><00:09:19.319><c> oh</c><00:09:19.350><c> this</c><00:09:19.709><c> is</c><00:09:19.860><c> a</c>

00:09:19.879 --> 00:09:19.889 align:start position:0%
this you know row vector oh this is a
 

00:09:19.889 --> 00:09:24.290 align:start position:0%
this you know row vector oh this is a
what<00:09:20.430><c> 1</c><00:09:21.180><c> by</c><00:09:21.360><c> 11</c><00:09:21.839><c> matrix</c><00:09:22.019><c> already</c><00:09:22.649><c> that's</c><00:09:23.300><c> 1.1</c>

00:09:24.290 --> 00:09:24.300 align:start position:0%
what 1 by 11 matrix already that's 1.1
 

00:09:24.300 --> 00:09:28.519 align:start position:0%
what 1 by 11 matrix already that's 1.1
1.1<00:09:24.899><c> 1.2</c><00:09:25.560><c> 1.3</c><00:09:26.069><c> and</c><00:09:26.459><c> so</c><00:09:26.670><c> on</c><00:09:26.850><c> until</c><00:09:27.600><c> we</c><00:09:27.720><c> get</c><00:09:27.870><c> up</c><00:09:28.050><c> to</c>

00:09:28.519 --> 00:09:28.529 align:start position:0%
1.1 1.2 1.3 and so on until we get up to
 

00:09:28.529 --> 00:09:34.460 align:start position:0%
1.1 1.2 1.3 and so on until we get up to
2<00:09:30.589><c> now</c><00:09:31.589><c> um</c><00:09:31.980><c> and</c><00:09:32.279><c> I</c><00:09:32.699><c> can</c><00:09:33.029><c> also</c><00:09:33.149><c> set</c><00:09:33.420><c> B</c><00:09:33.600><c> equals</c><00:09:33.930><c> 1</c><00:09:33.990><c> :</c>

00:09:34.460 --> 00:09:34.470 align:start position:0%
2 now um and I can also set B equals 1 :
 

00:09:34.470 --> 00:09:37.009 align:start position:0%
2 now um and I can also set B equals 1 :
6<00:09:34.500><c> and</c><00:09:35.100><c> that's</c><00:09:35.430><c> set</c><00:09:35.699><c> to</c><00:09:35.730><c> be</c><00:09:36.059><c> to</c><00:09:36.420><c> be</c><00:09:36.569><c> you</c><00:09:36.839><c> know</c>

00:09:37.009 --> 00:09:37.019 align:start position:0%
6 and that's set to be to be you know
 

00:09:37.019 --> 00:09:41.780 align:start position:0%
6 and that's set to be to be you know
these<00:09:37.199><c> numbers</c><00:09:37.459><c> 1</c><00:09:38.459><c> through</c><00:09:38.759><c> 6</c><00:09:39.379><c> okay</c><00:09:40.790><c> now</c>

00:09:41.780 --> 00:09:41.790 align:start position:0%
these numbers 1 through 6 okay now
 

00:09:41.790 --> 00:09:43.519 align:start position:0%
these numbers 1 through 6 okay now
here's<00:09:42.509><c> some</c><00:09:42.689><c> other</c><00:09:42.809><c> way</c><00:09:42.959><c> to</c><00:09:43.019><c> generate</c><00:09:43.379><c> a</c>

00:09:43.519 --> 00:09:43.529 align:start position:0%
here's some other way to generate a
 

00:09:43.529 --> 00:09:47.240 align:start position:0%
here's some other way to generate a
matrices<00:09:44.009><c> once</c><00:09:44.430><c> 2</c><00:09:45.420><c> by</c><00:09:45.629><c> 3</c><00:09:46.050><c> there's</c><00:09:46.860><c> a</c><00:09:46.949><c> command</c>

00:09:47.240 --> 00:09:47.250 align:start position:0%
matrices once 2 by 3 there's a command
 

00:09:47.250 --> 00:09:49.790 align:start position:0%
matrices once 2 by 3 there's a command
that<00:09:47.370><c> generates</c><00:09:47.490><c> a</c><00:09:48.120><c> matrix</c><00:09:48.629><c> that</c><00:09:48.899><c> is</c><00:09:49.110><c> a</c><00:09:49.439><c> two</c><00:09:49.470><c> by</c>

00:09:49.790 --> 00:09:49.800 align:start position:0%
that generates a matrix that is a two by
 

00:09:49.800 --> 00:09:51.829 align:start position:0%
that generates a matrix that is a two by
three<00:09:49.829><c> matrix</c><00:09:50.160><c> that</c><00:09:50.910><c> is</c><00:09:50.970><c> the</c><00:09:51.120><c> matrix</c><00:09:51.269><c> of</c><00:09:51.689><c> all</c>

00:09:51.829 --> 00:09:51.839 align:start position:0%
three matrix that is the matrix of all
 

00:09:51.839 --> 00:09:56.629 align:start position:0%
three matrix that is the matrix of all
ones<00:09:51.899><c> so</c><00:09:52.860><c> if</c><00:09:53.040><c> I</c><00:09:53.129><c> set</c><00:09:53.370><c> C</c><00:09:53.639><c> equals</c><00:09:54.059><c> 2</c><00:09:54.149><c> times</c><00:09:54.990><c> 1</c><00:09:55.649><c> is</c><00:09:55.680><c> 2</c>

00:09:56.629 --> 00:09:56.639 align:start position:0%
ones so if I set C equals 2 times 1 is 2
 

00:09:56.639 --> 00:10:01.040 align:start position:0%
ones so if I set C equals 2 times 1 is 2
by<00:09:56.819><c> 3</c><00:09:57.079><c> this</c><00:09:58.079><c> generates</c><00:09:58.860><c> a</c><00:09:59.189><c> 2</c><00:09:59.939><c> by</c><00:10:00.089><c> 3</c><00:10:00.120><c> matrix</c><00:10:00.360><c> does</c>

00:10:01.040 --> 00:10:01.050 align:start position:0%
by 3 this generates a 2 by 3 matrix does
 

00:10:01.050 --> 00:10:03.470 align:start position:0%
by 3 this generates a 2 by 3 matrix does
all<00:10:01.379><c> tubes</c><00:10:01.769><c> and</c><00:10:02.160><c> this</c><00:10:02.699><c> is</c><00:10:02.850><c> you</c><00:10:03.059><c> can</c><00:10:03.209><c> think</c><00:10:03.389><c> of</c>

00:10:03.470 --> 00:10:03.480 align:start position:0%
all tubes and this is you can think of
 

00:10:03.480 --> 00:10:05.509 align:start position:0%
all tubes and this is you can think of
it<00:10:03.600><c> as</c><00:10:03.689><c> a</c><00:10:03.750><c> shorter</c><00:10:04.589><c> way</c><00:10:04.740><c> of</c><00:10:04.829><c> writing</c><00:10:05.009><c> this</c><00:10:05.279><c> and</c>

00:10:05.509 --> 00:10:05.519 align:start position:0%
it as a shorter way of writing this and
 

00:10:05.519 --> 00:10:08.600 align:start position:0%
it as a shorter way of writing this and
C<00:10:05.730><c> equals</c><00:10:05.970><c> 2</c><00:10:06.180><c> to</c><00:10:06.360><c> 2</c><00:10:06.540><c> semicolon</c><00:10:06.990><c> 2</c><00:10:07.379><c> to</c><00:10:07.589><c> 2</c><00:10:07.800><c> which</c>

00:10:08.600 --> 00:10:08.610 align:start position:0%
C equals 2 to 2 semicolon 2 to 2 which
 

00:10:08.610 --> 00:10:11.600 align:start position:0%
C equals 2 to 2 semicolon 2 to 2 which
will<00:10:08.730><c> also</c><00:10:08.939><c> give</c><00:10:09.120><c> you</c><00:10:09.420><c> the</c><00:10:09.449><c> same</c><00:10:09.720><c> result</c><00:10:10.610><c> let's</c>

00:10:11.600 --> 00:10:11.610 align:start position:0%
will also give you the same result let's
 

00:10:11.610 --> 00:10:15.710 align:start position:0%
will also give you the same result let's
say<00:10:11.759><c> W</c><00:10:12.209><c> equals</c><00:10:12.720><c> 1</c><00:10:13.139><c> 1</c><00:10:13.920><c> by</c><00:10:14.069><c> 3</c><00:10:14.430><c> so</c><00:10:15.029><c> this</c><00:10:15.240><c> is</c><00:10:15.389><c> going</c>

00:10:15.710 --> 00:10:15.720 align:start position:0%
say W equals 1 1 by 3 so this is going
 

00:10:15.720 --> 00:10:22.129 align:start position:0%
say W equals 1 1 by 3 so this is going
to<00:10:15.899><c> be</c><00:10:16.019><c> a</c><00:10:16.189><c> row</c><00:10:17.189><c> vector</c><00:10:17.220><c> or</c><00:10:17.939><c> a</c><00:10:20.389><c> row</c><00:10:21.389><c> of</c><00:10:21.629><c> 3</c><00:10:21.870><c> runs</c>

00:10:22.129 --> 00:10:22.139 align:start position:0%
to be a row vector or a row of 3 runs
 

00:10:22.139 --> 00:10:25.690 align:start position:0%
to be a row vector or a row of 3 runs
and<00:10:22.639><c> similarly</c><00:10:23.639><c> you</c><00:10:24.029><c> can</c><00:10:24.149><c> also</c><00:10:24.300><c> set</c><00:10:24.629><c> W</c><00:10:24.990><c> equals</c>

00:10:25.690 --> 00:10:25.700 align:start position:0%
and similarly you can also set W equals
 

00:10:25.700 --> 00:10:29.500 align:start position:0%
and similarly you can also set W equals
rows<00:10:26.320><c> one</c><00:10:27.320><c> by</c><00:10:27.470><c> three</c><00:10:27.770><c> and</c><00:10:27.980><c> this</c><00:10:28.910><c> generates</c><00:10:29.300><c> a</c>

00:10:29.500 --> 00:10:29.510 align:start position:0%
rows one by three and this generates a
 

00:10:29.510 --> 00:10:33.190 align:start position:0%
rows one by three and this generates a
matrix<00:10:29.720><c> one</c><00:10:30.620><c> by</c><00:10:30.770><c> three</c><00:10:30.980><c> matrix</c><00:10:31.390><c> of</c><00:10:32.390><c> all</c><00:10:32.840><c> zeros</c>

00:10:33.190 --> 00:10:33.200 align:start position:0%
matrix one by three matrix of all zeros
 

00:10:33.200 --> 00:10:36.790 align:start position:0%
matrix one by three matrix of all zeros
just<00:10:34.870><c> a</c><00:10:35.870><c> couple</c><00:10:36.050><c> more</c><00:10:36.290><c> ways</c><00:10:36.470><c> to</c><00:10:36.500><c> generate</c>

00:10:36.790 --> 00:10:36.800 align:start position:0%
just a couple more ways to generate
 

00:10:36.800 --> 00:10:40.810 align:start position:0%
just a couple more ways to generate
matrices<00:10:37.150><c> if</c><00:10:38.150><c> I</c><00:10:38.240><c> do</c><00:10:38.300><c> W</c><00:10:38.750><c> equals</c><00:10:39.050><c> R</c><00:10:39.140><c> and</c><00:10:39.350><c> 1</c><00:10:40.250><c> by</c><00:10:40.430><c> 3</c>

00:10:40.810 --> 00:10:40.820 align:start position:0%
matrices if I do W equals R and 1 by 3
 

00:10:40.820 --> 00:10:44.470 align:start position:0%
matrices if I do W equals R and 1 by 3
this<00:10:41.060><c> gives</c><00:10:42.020><c> me</c><00:10:42.290><c> a</c><00:10:42.590><c> 1</c><00:10:43.010><c> by</c><00:10:43.160><c> 3</c><00:10:43.190><c> matrix</c><00:10:43.880><c> of</c><00:10:44.210><c> all</c>

00:10:44.470 --> 00:10:44.480 align:start position:0%
this gives me a 1 by 3 matrix of all
 

00:10:44.480 --> 00:10:49.150 align:start position:0%
this gives me a 1 by 3 matrix of all
random<00:10:44.510><c> numbers</c><00:10:45.380><c> if</c><00:10:45.980><c> I</c><00:10:46.100><c> do</c><00:10:46.160><c> R</c><00:10:46.310><c> and</c><00:10:47.410><c> 3</c><00:10:48.410><c> by</c><00:10:48.590><c> 3</c><00:10:48.770><c> this</c>

00:10:49.150 --> 00:10:49.160 align:start position:0%
random numbers if I do R and 3 by 3 this
 

00:10:49.160 --> 00:10:51.820 align:start position:0%
random numbers if I do R and 3 by 3 this
gives<00:10:49.430><c> me</c><00:10:49.580><c> a</c><00:10:49.610><c> 3</c><00:10:50.150><c> by</c><00:10:50.300><c> 3</c><00:10:50.540><c> matrix</c><00:10:51.080><c> of</c><00:10:51.320><c> all</c><00:10:51.800><c> random</c>

00:10:51.820 --> 00:10:51.830 align:start position:0%
gives me a 3 by 3 matrix of all random
 

00:10:51.830 --> 00:10:53.770 align:start position:0%
gives me a 3 by 3 matrix of all random
numbers<00:10:52.670><c> drawn</c><00:10:53.060><c> from</c><00:10:53.300><c> the</c><00:10:53.540><c> uniform</c>

00:10:53.770 --> 00:10:53.780 align:start position:0%
numbers drawn from the uniform
 

00:10:53.780 --> 00:10:56.590 align:start position:0%
numbers drawn from the uniform
distribution<00:10:54.530><c> between</c><00:10:55.190><c> 0</c><00:10:55.610><c> &amp;</c><00:10:55.760><c> 1</c><00:10:55.790><c> so</c><00:10:55.940><c> every</c><00:10:56.450><c> time</c>

00:10:56.590 --> 00:10:56.600 align:start position:0%
distribution between 0 &amp; 1 so every time
 

00:10:56.600 --> 00:10:58.810 align:start position:0%
distribution between 0 &amp; 1 so every time
I<00:10:56.630><c> do</c><00:10:56.780><c> this</c><00:10:57.080><c> I</c><00:10:57.320><c> get</c><00:10:57.800><c> a</c><00:10:57.830><c> different</c><00:10:58.430><c> set</c><00:10:58.790><c> of</c>

00:10:58.810 --> 00:10:58.820 align:start position:0%
I do this I get a different set of
 

00:10:58.820 --> 00:11:01.810 align:start position:0%
I do this I get a different set of
random<00:10:59.390><c> numbers</c><00:10:59.930><c> drawn</c><00:11:00.380><c> uniformly</c><00:11:01.070><c> between</c><00:11:01.340><c> 0</c>

00:11:01.810 --> 00:11:01.820 align:start position:0%
random numbers drawn uniformly between 0
 

00:11:01.820 --> 00:11:04.030 align:start position:0%
random numbers drawn uniformly between 0
&amp;<00:11:02.030><c> 1</c><00:11:02.320><c> for</c><00:11:03.320><c> those</c><00:11:03.440><c> of</c><00:11:03.560><c> you</c><00:11:03.620><c> that</c><00:11:03.710><c> know</c><00:11:03.860><c> whether</c>

00:11:04.030 --> 00:11:04.040 align:start position:0%
&amp; 1 for those of you that know whether
 

00:11:04.040 --> 00:11:05.890 align:start position:0%
&amp; 1 for those of you that know whether
Gaussian<00:11:04.700><c> random</c><00:11:04.730><c> variable</c><00:11:05.420><c> and</c><00:11:05.570><c> so</c><00:11:05.690><c> for</c>

00:11:05.890 --> 00:11:05.900 align:start position:0%
Gaussian random variable and so for
 

00:11:05.900 --> 00:11:07.240 align:start position:0%
Gaussian random variable and so for
those<00:11:05.990><c> who</c><00:11:06.050><c> than</c><00:11:06.260><c> there</c><00:11:06.380><c> was</c><00:11:06.560><c> a</c><00:11:06.590><c> normal</c><00:11:07.070><c> and</c>

00:11:07.240 --> 00:11:07.250 align:start position:0%
those who than there was a normal and
 

00:11:07.250 --> 00:11:08.830 align:start position:0%
those who than there was a normal and
the<00:11:07.310><c> variable</c><00:11:07.700><c> is</c><00:11:07.760><c> you</c><00:11:08.000><c> can</c><00:11:08.150><c> also</c><00:11:08.330><c> set</c><00:11:08.660><c> down</c>

00:11:08.830 --> 00:11:08.840 align:start position:0%
the variable is you can also set down
 

00:11:08.840 --> 00:11:13.270 align:start position:0%
the variable is you can also set down
equals<00:11:09.290><c> R</c><00:11:09.410><c> and</c><00:11:09.590><c> N</c><00:11:10.010><c> 1</c><00:11:10.760><c> by</c><00:11:10.970><c> 3</c><00:11:11.300><c> and</c><00:11:12.140><c> so</c><00:11:12.350><c> these</c><00:11:12.920><c> are</c>

00:11:13.270 --> 00:11:13.280 align:start position:0%
equals R and N 1 by 3 and so these are
 

00:11:13.280 --> 00:11:15.550 align:start position:0%
equals R and N 1 by 3 and so these are
going<00:11:13.610><c> to</c><00:11:13.730><c> be</c><00:11:13.850><c> three</c><00:11:14.150><c> values</c><00:11:14.420><c> drawn</c><00:11:14.960><c> from</c><00:11:15.290><c> a</c>

00:11:15.550 --> 00:11:15.560 align:start position:0%
going to be three values drawn from a
 

00:11:15.560 --> 00:11:18.190 align:start position:0%
going to be three values drawn from a
Gaussian<00:11:16.160><c> distribution</c><00:11:16.310><c> with</c><00:11:17.030><c> mean</c><00:11:17.630><c> 0</c><00:11:18.110><c> and</c>

00:11:18.190 --> 00:11:18.200 align:start position:0%
Gaussian distribution with mean 0 and
 

00:11:18.200 --> 00:11:20.230 align:start position:0%
Gaussian distribution with mean 0 and
variance<00:11:18.500><c> and</c><00:11:19.220><c> standard</c><00:11:19.280><c> deviation</c><00:11:19.580><c> equal</c><00:11:20.180><c> to</c>

00:11:20.230 --> 00:11:20.240 align:start position:0%
variance and standard deviation equal to
 

00:11:20.240 --> 00:11:23.350 align:start position:0%
variance and standard deviation equal to
1<00:11:20.450><c> and</c><00:11:20.980><c> you</c><00:11:21.980><c> can</c><00:11:22.010><c> set</c><00:11:22.430><c> more</c><00:11:22.610><c> complex</c><00:11:23.090><c> things</c>

00:11:23.350 --> 00:11:23.360 align:start position:0%
1 and you can set more complex things
 

00:11:23.360 --> 00:11:25.870 align:start position:0%
1 and you can set more complex things
like<00:11:23.540><c> W</c><00:11:23.990><c> equals</c><00:11:24.380><c> minus</c><00:11:24.710><c> 6</c><00:11:24.890><c> plus</c><00:11:25.220><c> square</c><00:11:25.850><c> root</c>

00:11:25.870 --> 00:11:25.880 align:start position:0%
like W equals minus 6 plus square root
 

00:11:25.880 --> 00:11:30.150 align:start position:0%
like W equals minus 6 plus square root
10<00:11:26.420><c> times</c><00:11:27.400><c> let's</c><00:11:28.400><c> say</c><00:11:28.550><c> R</c><00:11:28.580><c> and</c><00:11:28.850><c> and</c><00:11:29.150><c> one</c><00:11:29.630><c> by</c>

00:11:30.150 --> 00:11:30.160 align:start position:0%
10 times let's say R and and one by
 

00:11:30.160 --> 00:11:33.010 align:start position:0%
10 times let's say R and and one by
10,000<00:11:31.160><c> and</c><00:11:31.910><c> I'm</c><00:11:32.000><c> gonna</c><00:11:32.120><c> put</c><00:11:32.270><c> a</c><00:11:32.330><c> semicolon</c><00:11:32.630><c> at</c>

00:11:33.010 --> 00:11:33.020 align:start position:0%
10,000 and I'm gonna put a semicolon at
 

00:11:33.020 --> 00:11:34.990 align:start position:0%
10,000 and I'm gonna put a semicolon at
the<00:11:33.050><c> end</c><00:11:33.160><c> because</c><00:11:34.160><c> I</c><00:11:34.250><c> don't</c><00:11:34.430><c> really</c><00:11:34.640><c> want</c><00:11:34.880><c> this</c>

00:11:34.990 --> 00:11:35.000 align:start position:0%
the end because I don't really want this
 

00:11:35.000 --> 00:11:37.420 align:start position:0%
the end because I don't really want this
printed<00:11:35.360><c> out</c><00:11:35.480><c> this</c><00:11:35.720><c> is</c><00:11:35.900><c> going</c><00:11:36.140><c> to</c><00:11:36.260><c> be</c><00:11:36.350><c> a</c><00:11:36.430><c> what</c>

00:11:37.420 --> 00:11:37.430 align:start position:0%
printed out this is going to be a what
 

00:11:37.430 --> 00:11:40.810 align:start position:0%
printed out this is going to be a what
well<00:11:38.000><c> it</c><00:11:38.360><c> was</c><00:11:38.600><c> going</c><00:11:38.780><c> to</c><00:11:38.840><c> be</c><00:11:38.900><c> a</c><00:11:38.930><c> vector</c><00:11:39.310><c> with</c><00:11:40.310><c> a</c>

00:11:40.810 --> 00:11:40.820 align:start position:0%
well it was going to be a vector with a
 

00:11:40.820 --> 00:11:46.240 align:start position:0%
well it was going to be a vector with a
hundred<00:11:41.510><c> thousand</c><00:11:42.490><c> 10,000</c><00:11:43.490><c> elements</c><00:11:43.700><c> so</c><00:11:45.250><c> well</c>

00:11:46.240 --> 00:11:46.250 align:start position:0%
hundred thousand 10,000 elements so well
 

00:11:46.250 --> 00:11:48.070 align:start position:0%
hundred thousand 10,000 elements so well
okay<00:11:46.490><c> you</c><00:11:47.060><c> know</c><00:11:47.180><c> what</c><00:11:47.360><c> let's</c><00:11:47.390><c> let's</c><00:11:47.780><c> print</c><00:11:47.930><c> it</c>

00:11:48.070 --> 00:11:48.080 align:start position:0%
okay you know what let's let's print it
 

00:11:48.080 --> 00:11:50.170 align:start position:0%
okay you know what let's let's print it
out<00:11:48.170><c> so</c><00:11:48.410><c> this</c><00:11:48.560><c> will</c><00:11:48.710><c> generate</c><00:11:49.100><c> a</c><00:11:49.160><c> matrix</c><00:11:49.820><c> like</c>

00:11:50.170 --> 00:11:50.180 align:start position:0%
out so this will generate a matrix like
 

00:11:50.180 --> 00:11:54.070 align:start position:0%
out so this will generate a matrix like
this<00:11:50.950><c> right</c><00:11:51.950><c> with</c><00:11:52.300><c> 10,000</c><00:11:53.300><c> elements</c><00:11:53.780><c> so</c>

00:11:54.070 --> 00:11:54.080 align:start position:0%
this right with 10,000 elements so
 

00:11:54.080 --> 00:11:57.940 align:start position:0%
this right with 10,000 elements so
that's<00:11:54.290><c> what</c><00:11:54.440><c> W</c><00:11:54.800><c> is</c><00:11:54.980><c> and</c><00:11:55.630><c> if</c><00:11:56.630><c> I</c><00:11:56.930><c> now</c><00:11:57.140><c> plot</c><00:11:57.650><c> a</c>

00:11:57.940 --> 00:11:57.950 align:start position:0%
that's what W is and if I now plot a
 

00:11:57.950 --> 00:12:00.750 align:start position:0%
that's what W is and if I now plot a
histogram<00:11:58.160><c> of</c><00:11:58.790><c> W</c><00:11:59.330><c> what</c><00:11:59.600><c> the</c><00:11:59.720><c> his</c><00:11:59.930><c> command</c><00:12:00.410><c> I</c>

00:12:00.750 --> 00:12:00.760 align:start position:0%
histogram of W what the his command I
 

00:12:00.760 --> 00:12:05.500 align:start position:0%
histogram of W what the his command I
can<00:12:01.760><c> now</c><00:12:01.970><c> and</c><00:12:02.410><c> I'll</c><00:12:03.410><c> type</c><00:12:03.680><c> in</c><00:12:04.010><c> his</c><00:12:04.460><c> command</c><00:12:05.120><c> it</c>

00:12:05.500 --> 00:12:05.510 align:start position:0%
can now and I'll type in his command it
 

00:12:05.510 --> 00:12:07.180 align:start position:0%
can now and I'll type in his command it
takes<00:12:05.690><c> a</c><00:12:05.810><c> couple</c><00:12:06.260><c> seconds</c><00:12:06.650><c> to</c><00:12:06.740><c> bring</c><00:12:06.890><c> this</c><00:12:07.010><c> up</c>

00:12:07.180 --> 00:12:07.190 align:start position:0%
takes a couple seconds to bring this up
 

00:12:07.190 --> 00:12:09.400 align:start position:0%
takes a couple seconds to bring this up
but<00:12:07.220><c> this</c><00:12:07.460><c> is</c><00:12:07.520><c> a</c><00:12:07.640><c> histogram</c><00:12:08.060><c> of</c><00:12:08.480><c> my</c><00:12:09.140><c> random</c>

00:12:09.400 --> 00:12:09.410 align:start position:0%
but this is a histogram of my random
 

00:12:09.410 --> 00:12:12.130 align:start position:0%
but this is a histogram of my random
variable<00:12:09.950><c> for</c><00:12:10.070><c> W</c><00:12:10.430><c> there</c><00:12:10.790><c> was</c><00:12:10.940><c> minus</c><00:12:11.330><c> 6</c><00:12:11.570><c> plus</c><00:12:11.810><c> 3</c>

00:12:12.130 --> 00:12:12.140 align:start position:0%
variable for W there was minus 6 plus 3
 

00:12:12.140 --> 00:12:14.200 align:start position:0%
variable for W there was minus 6 plus 3
over<00:12:12.680><c> 10</c><00:12:12.950><c> times</c><00:12:13.220><c> this</c><00:12:13.520><c> Gaussian</c><00:12:14.150><c> random</c>

00:12:14.200 --> 00:12:14.210 align:start position:0%
over 10 times this Gaussian random
 

00:12:14.210 --> 00:12:17.050 align:start position:0%
over 10 times this Gaussian random
variable<00:12:14.900><c> and</c><00:12:15.590><c> I</c><00:12:15.740><c> can</c><00:12:15.920><c> plot</c><00:12:16.160><c> a</c><00:12:16.190><c> histogram</c><00:12:16.430><c> with</c>

00:12:17.050 --> 00:12:17.060 align:start position:0%
variable and I can plot a histogram with
 

00:12:17.060 --> 00:12:20.140 align:start position:0%
variable and I can plot a histogram with
more<00:12:17.750><c> buckets</c><00:12:18.200><c> with</c><00:12:18.410><c> more</c><00:12:18.620><c> bins</c><00:12:18.860><c> will</c><00:12:19.220><c> say</c><00:12:19.430><c> 50</c>

00:12:20.140 --> 00:12:20.150 align:start position:0%
more buckets with more bins will say 50
 

00:12:20.150 --> 00:12:23.380 align:start position:0%
more buckets with more bins will say 50
bins<00:12:20.390><c> and</c><00:12:21.220><c> this</c><00:12:22.220><c> is</c><00:12:22.400><c> my</c><00:12:22.550><c> histogram</c><00:12:22.850><c> of</c><00:12:23.270><c> a</c>

00:12:23.380 --> 00:12:23.390 align:start position:0%
bins and this is my histogram of a
 

00:12:23.390 --> 00:12:26.020 align:start position:0%
bins and this is my histogram of a
Gaussian<00:12:24.110><c> with</c><00:12:24.590><c> mean</c><00:12:24.620><c> minus</c><00:12:25.340><c> 6</c><00:12:25.520><c> because</c><00:12:26.000><c> I</c>

00:12:26.020 --> 00:12:26.030 align:start position:0%
Gaussian with mean minus 6 because I
 

00:12:26.030 --> 00:12:28.720 align:start position:0%
Gaussian with mean minus 6 because I
have<00:12:26.300><c> a</c><00:12:26.330><c> minus</c><00:12:26.720><c> 6</c><00:12:27.140><c> there</c><00:12:27.440><c> plus</c><00:12:28.040><c> square</c><00:12:28.400><c> root</c><00:12:28.430><c> 10</c>

00:12:28.720 --> 00:12:28.730 align:start position:0%
have a minus 6 there plus square root 10
 

00:12:28.730 --> 00:12:29.360 align:start position:0%
have a minus 6 there plus square root 10
times

00:12:29.360 --> 00:12:29.370 align:start position:0%
times
 

00:12:29.370 --> 00:12:33.290 align:start position:0%
times
so<00:12:29.490><c> the</c><00:12:30.410><c> dr</c><00:12:31.410><c> variance</c><00:12:31.950><c> or</c><00:12:32.220><c> ritas</c><00:12:32.640><c> of</c><00:12:32.940><c> this</c>

00:12:33.290 --> 00:12:33.300 align:start position:0%
so the dr variance or ritas of this
 

00:12:33.300 --> 00:12:35.300 align:start position:0%
so the dr variance or ritas of this
Gaussian<00:12:33.540><c> random</c><00:12:34.080><c> variable</c><00:12:34.650><c> was</c><00:12:34.770><c> 10</c><00:12:35.040><c> on</c><00:12:35.070><c> the</c>

00:12:35.300 --> 00:12:35.310 align:start position:0%
Gaussian random variable was 10 on the
 

00:12:35.310 --> 00:12:37.370 align:start position:0%
Gaussian random variable was 10 on the
standard<00:12:35.700><c> deviation</c><00:12:36.240><c> this</c><00:12:36.390><c> square</c><00:12:37.080><c> root</c><00:12:37.200><c> of</c>

00:12:37.370 --> 00:12:37.380 align:start position:0%
standard deviation this square root of
 

00:12:37.380 --> 00:12:42.769 align:start position:0%
standard deviation this square root of
10<00:12:37.589><c> which</c><00:12:37.800><c> is</c><00:12:37.940><c> about</c><00:12:38.940><c> what</c><00:12:39.300><c> 3.1</c><00:12:41.270><c> finally</c><00:12:42.270><c> one</c>

00:12:42.769 --> 00:12:42.779 align:start position:0%
10 which is about what 3.1 finally one
 

00:12:42.779 --> 00:12:44.480 align:start position:0%
10 which is about what 3.1 finally one
special<00:12:43.440><c> command</c><00:12:43.740><c> for</c><00:12:43.920><c> generated</c><00:12:44.339><c> matrix</c>

00:12:44.480 --> 00:12:44.490 align:start position:0%
special command for generated matrix
 

00:12:44.490 --> 00:12:46.250 align:start position:0%
special command for generated matrix
which<00:12:44.970><c> is</c><00:12:45.150><c> the</c><00:12:45.180><c> I</c><00:12:45.360><c> command</c>

00:12:46.250 --> 00:12:46.260 align:start position:0%
which is the I command
 

00:12:46.260 --> 00:12:49.670 align:start position:0%
which is the I command
so<00:12:46.410><c> I</c><00:12:46.680><c> stands</c><00:12:47.610><c> for</c><00:12:47.730><c> this</c><00:12:48.660><c> may</c><00:12:48.779><c> be</c><00:12:48.839><c> a</c><00:12:48.960><c> pun</c><00:12:49.380><c> on</c><00:12:49.620><c> the</c>

00:12:49.670 --> 00:12:49.680 align:start position:0%
so I stands for this may be a pun on the
 

00:12:49.680 --> 00:12:53.150 align:start position:0%
so I stands for this may be a pun on the
word<00:12:49.860><c> identity</c><00:12:50.640><c> but</c><00:12:51.150><c> survived</c><00:12:52.110><c> said</c><00:12:52.320><c> I</c><00:12:52.470><c> for</c>

00:12:53.150 --> 00:12:53.160 align:start position:0%
word identity but survived said I for
 

00:12:53.160 --> 00:12:55.940 align:start position:0%
word identity but survived said I for
this<00:12:53.940><c> is</c><00:12:54.089><c> the</c><00:12:54.270><c> 4</c><00:12:54.540><c> by</c><00:12:54.690><c> 4</c><00:12:54.720><c> identity</c><00:12:54.960><c> matrix</c><00:12:55.470><c> I</c>

00:12:55.940 --> 00:12:55.950 align:start position:0%
this is the 4 by 4 identity matrix I
 

00:12:55.950 --> 00:12:59.210 align:start position:0%
this is the 4 by 4 identity matrix I
said<00:12:56.100><c> I</c><00:12:56.310><c> enclose</c><00:12:56.760><c> I</c><00:12:56.820><c> for</c><00:12:57.750><c> this</c><00:12:58.050><c> gives</c><00:12:58.290><c> me</c><00:12:58.440><c> a</c><00:12:58.470><c> 4</c>

00:12:59.210 --> 00:12:59.220 align:start position:0%
said I enclose I for this gives me a 4
 

00:12:59.220 --> 00:13:02.950 align:start position:0%
said I enclose I for this gives me a 4
by<00:12:59.370><c> 4</c><00:12:59.400><c> identity</c><00:12:59.790><c> matrix</c><00:13:00.029><c> and</c><00:13:00.600><c> I</c><00:13:01.020><c> because</c><00:13:01.589><c> I</c><00:13:01.880><c> v</c>

00:13:02.950 --> 00:13:02.960 align:start position:0%
by 4 identity matrix and I because I v
 

00:13:02.960 --> 00:13:06.290 align:start position:0%
by 4 identity matrix and I because I v
i6<00:13:03.960><c> that</c><00:13:04.589><c> gives</c><00:13:04.800><c> me</c><00:13:04.980><c> a</c><00:13:05.010><c> 6</c><00:13:05.430><c> by</c><00:13:05.610><c> 6</c><00:13:05.640><c> identity</c>

00:13:06.290 --> 00:13:06.300 align:start position:0%
i6 that gives me a 6 by 6 identity
 

00:13:06.300 --> 00:13:09.260 align:start position:0%
i6 that gives me a 6 by 6 identity
matrix<00:13:06.660><c> and</c><00:13:06.930><c> I</c><00:13:07.260><c> 3</c><00:13:07.860><c> is</c><00:13:08.100><c> the</c><00:13:08.460><c> 3</c><00:13:08.880><c> by</c><00:13:09.000><c> 3</c><00:13:09.029><c> identity</c>

00:13:09.260 --> 00:13:09.270 align:start position:0%
matrix and I 3 is the 3 by 3 identity
 

00:13:09.270 --> 00:13:13.070 align:start position:0%
matrix and I 3 is the 3 by 3 identity
matrix<00:13:10.880><c> lastly</c><00:13:11.880><c> to</c><00:13:12.060><c> wrap</c><00:13:12.210><c> up</c><00:13:12.360><c> this</c><00:13:12.480><c> video</c><00:13:12.630><c> as</c>

00:13:13.070 --> 00:13:13.080 align:start position:0%
matrix lastly to wrap up this video as
 

00:13:13.080 --> 00:13:14.660 align:start position:0%
matrix lastly to wrap up this video as
one<00:13:13.440><c> more</c><00:13:13.650><c> useful</c><00:13:13.980><c> command</c><00:13:14.279><c> which</c><00:13:14.430><c> is</c><00:13:14.460><c> the</c>

00:13:14.660 --> 00:13:14.670 align:start position:0%
one more useful command which is the
 

00:13:14.670 --> 00:13:17.060 align:start position:0%
one more useful command which is the
help<00:13:14.940><c> command</c><00:13:15.210><c> so</c><00:13:15.480><c> you</c><00:13:15.570><c> can</c><00:13:15.690><c> type</c><00:13:15.900><c> help</c><00:13:16.230><c> I</c><00:13:16.500><c> and</c>

00:13:17.060 --> 00:13:17.070 align:start position:0%
help command so you can type help I and
 

00:13:17.070 --> 00:13:19.579 align:start position:0%
help command so you can type help I and
this<00:13:17.580><c> brings</c><00:13:17.850><c> up</c><00:13:18.060><c> the</c><00:13:18.240><c> help</c><00:13:18.570><c> function</c><00:13:18.839><c> for</c><00:13:19.410><c> the</c>

00:13:19.579 --> 00:13:19.589 align:start position:0%
this brings up the help function for the
 

00:13:19.589 --> 00:13:22.460 align:start position:0%
this brings up the help function for the
identity<00:13:20.130><c> matrix</c><00:13:20.339><c> hit</c><00:13:21.330><c> Q</c><00:13:21.690><c> to</c><00:13:21.930><c> quit</c><00:13:22.080><c> and</c><00:13:22.410><c> you</c>

00:13:22.460 --> 00:13:22.470 align:start position:0%
identity matrix hit Q to quit and you
 

00:13:22.470 --> 00:13:25.900 align:start position:0%
identity matrix hit Q to quit and you
can<00:13:23.130><c> also</c><00:13:23.250><c> type</c><00:13:23.580><c> help</c><00:13:24.240><c> Rand</c><00:13:24.779><c> brings</c><00:13:25.620><c> up</c>

00:13:25.900 --> 00:13:25.910 align:start position:0%
can also type help Rand brings up
 

00:13:25.910 --> 00:13:28.190 align:start position:0%
can also type help Rand brings up
documentation<00:13:26.910><c> for</c><00:13:27.240><c> the</c><00:13:27.420><c> rand</c><00:13:27.720><c> or</c><00:13:27.930><c> the</c><00:13:28.050><c> random</c>

00:13:28.190 --> 00:13:28.200 align:start position:0%
documentation for the rand or the random
 

00:13:28.200 --> 00:13:30.530 align:start position:0%
documentation for the rand or the random
number<00:13:28.650><c> generation</c><00:13:29.070><c> function</c><00:13:29.610><c> or</c><00:13:30.120><c> even</c>

00:13:30.530 --> 00:13:30.540 align:start position:0%
number generation function or even
 

00:13:30.540 --> 00:13:32.630 align:start position:0%
number generation function or even
though<00:13:30.720><c> help-help</c><00:13:31.470><c> which</c><00:13:31.950><c> shows</c><00:13:32.160><c> you</c><00:13:32.400><c> you</c>

00:13:32.630 --> 00:13:32.640 align:start position:0%
though help-help which shows you you
 

00:13:32.640 --> 00:13:36.230 align:start position:0%
though help-help which shows you you
know<00:13:32.730><c> hope</c><00:13:33.029><c> on</c><00:13:33.300><c> the</c><00:13:33.660><c> hope</c><00:13:33.839><c> function</c>

00:13:36.230 --> 00:13:36.240 align:start position:0%
know hope on the hope function
 

00:13:36.240 --> 00:13:40.410 align:start position:0%
know hope on the hope function
so<00:13:37.240><c> those</c><00:13:38.050><c> are</c><00:13:38.350><c> the</c><00:13:38.589><c> basic</c><00:13:39.399><c> operations</c><00:13:40.180><c> in</c>

00:13:40.410 --> 00:13:40.420 align:start position:0%
so those are the basic operations in
 

00:13:40.420 --> 00:13:42.660 align:start position:0%
so those are the basic operations in
octave<00:13:40.660><c> oh</c><00:13:41.079><c> and</c><00:13:41.589><c> with</c><00:13:41.980><c> this</c><00:13:42.129><c> you</c><00:13:42.339><c> should</c><00:13:42.579><c> be</c>

00:13:42.660 --> 00:13:42.670 align:start position:0%
octave oh and with this you should be
 

00:13:42.670 --> 00:13:45.420 align:start position:0%
octave oh and with this you should be
able<00:13:42.759><c> to</c><00:13:43.120><c> generate</c><00:13:43.839><c> a</c><00:13:44.079><c> few</c><00:13:44.290><c> matrices</c><00:13:44.740><c> multiply</c>

00:13:45.420 --> 00:13:45.430 align:start position:0%
able to generate a few matrices multiply
 

00:13:45.430 --> 00:13:48.540 align:start position:0%
able to generate a few matrices multiply
add<00:13:45.699><c> things</c><00:13:46.060><c> and</c><00:13:46.589><c> and</c><00:13:47.589><c> use</c><00:13:47.980><c> the</c><00:13:48.160><c> basic</c>

00:13:48.540 --> 00:13:48.550 align:start position:0%
add things and and use the basic
 

00:13:48.550 --> 00:13:51.389 align:start position:0%
add things and and use the basic
operations<00:13:49.089><c> in</c><00:13:49.389><c> octave</c><00:13:49.600><c> in</c><00:13:50.589><c> the</c><00:13:50.889><c> next</c><00:13:51.160><c> video</c>

00:13:51.389 --> 00:13:51.399 align:start position:0%
operations in octave in the next video
 

00:13:51.399 --> 00:13:53.699 align:start position:0%
operations in octave in the next video
I'd<00:13:51.699><c> like</c><00:13:51.910><c> to</c><00:13:51.970><c> start</c><00:13:52.180><c> talking</c><00:13:52.990><c> about</c><00:13:53.170><c> more</c>

00:13:53.699 --> 00:13:53.709 align:start position:0%
I'd like to start talking about more
 

00:13:53.709 --> 00:13:56.160 align:start position:0%
I'd like to start talking about more
sophisticated<00:13:53.920><c> commands</c><00:13:54.850><c> and</c><00:13:55.209><c> how</c><00:13:55.689><c> to</c><00:13:55.749><c> move</c>

00:13:56.160 --> 00:13:56.170 align:start position:0%
sophisticated commands and how to move
 

00:13:56.170 --> 00:13:58.290 align:start position:0%
sophisticated commands and how to move
data<00:13:56.470><c> around</c><00:13:56.889><c> and</c><00:13:57.129><c> start</c><00:13:57.399><c> to</c><00:13:57.430><c> process</c><00:13:57.519><c> data</c><00:13:58.149><c> in</c>

00:13:58.290 --> 00:13:58.300 align:start position:0%
data around and start to process data in
 

00:13:58.300 --> 00:14:00.809 align:start position:0%
data around and start to process data in
octave

