WEBVTT
Kind: captions
Language: en

00:00:00.030 --> 00:00:01.969 align:start position:0%
 
in<00:00:00.240><c> this</c><00:00:00.570><c> and</c><00:00:00.840><c> the</c><00:00:01.020><c> next</c><00:00:01.170><c> video</c><00:00:01.380><c> I</c><00:00:01.770><c> want</c><00:00:01.949><c> to</c>

00:00:01.969 --> 00:00:01.979 align:start position:0%
in this and the next video I want to
 

00:00:01.979 --> 00:00:03.949 align:start position:0%
in this and the next video I want to
work<00:00:02.129><c> through</c><00:00:02.370><c> a</c><00:00:02.429><c> detailed</c><00:00:03.000><c> example</c><00:00:03.600><c> showing</c>

00:00:03.949 --> 00:00:03.959 align:start position:0%
work through a detailed example showing
 

00:00:03.959 --> 00:00:06.320 align:start position:0%
work through a detailed example showing
how<00:00:04.290><c> a</c><00:00:04.710><c> neural</c><00:00:05.040><c> network</c><00:00:05.310><c> in</c><00:00:05.700><c> computing</c><00:00:06.150><c> a</c>

00:00:06.320 --> 00:00:06.330 align:start position:0%
how a neural network in computing a
 

00:00:06.330 --> 00:00:08.030 align:start position:0%
how a neural network in computing a
complex<00:00:06.750><c> nonlinear</c><00:00:07.379><c> function</c><00:00:07.799><c> of</c><00:00:07.859><c> the</c><00:00:07.919><c> input</c>

00:00:08.030 --> 00:00:08.040 align:start position:0%
complex nonlinear function of the input
 

00:00:08.040 --> 00:00:10.549 align:start position:0%
complex nonlinear function of the input
and<00:00:08.610><c> hopefully</c><00:00:09.480><c> does</c><00:00:09.870><c> give</c><00:00:10.110><c> you</c><00:00:10.200><c> a</c><00:00:10.230><c> good</c><00:00:10.380><c> sense</c>

00:00:10.549 --> 00:00:10.559 align:start position:0%
and hopefully does give you a good sense
 

00:00:10.559 --> 00:00:12.980 align:start position:0%
and hopefully does give you a good sense
of<00:00:10.860><c> why</c><00:00:11.130><c> neural</c><00:00:11.759><c> networks</c><00:00:12.120><c> can</c><00:00:12.269><c> be</c><00:00:12.480><c> used</c><00:00:12.719><c> to</c>

00:00:12.980 --> 00:00:12.990 align:start position:0%
of why neural networks can be used to
 

00:00:12.990 --> 00:00:16.210 align:start position:0%
of why neural networks can be used to
learn<00:00:13.230><c> complex</c><00:00:14.070><c> nonlinear</c><00:00:14.849><c> hypotheses</c>

00:00:16.210 --> 00:00:16.220 align:start position:0%
learn complex nonlinear hypotheses
 

00:00:16.220 --> 00:00:19.010 align:start position:0%
learn complex nonlinear hypotheses
consider<00:00:17.220><c> the</c><00:00:17.310><c> following</c><00:00:17.460><c> problem</c><00:00:17.760><c> where</c><00:00:18.420><c> we</c>

00:00:19.010 --> 00:00:19.020 align:start position:0%
consider the following problem where we
 

00:00:19.020 --> 00:00:21.859 align:start position:0%
consider the following problem where we
have<00:00:19.320><c> input</c><00:00:19.980><c> features</c><00:00:20.400><c> x1</c><00:00:20.820><c> and</c><00:00:21.060><c> x2</c><00:00:21.300><c> that</c><00:00:21.689><c> are</c>

00:00:21.859 --> 00:00:21.869 align:start position:0%
have input features x1 and x2 that are
 

00:00:21.869 --> 00:00:24.830 align:start position:0%
have input features x1 and x2 that are
binary<00:00:22.289><c> values</c><00:00:22.710><c> so</c><00:00:22.890><c> either</c><00:00:23.100><c> 0</c><00:00:23.609><c> or</c><00:00:23.640><c> 1</c><00:00:23.699><c> so</c><00:00:24.060><c> x1</c><00:00:24.480><c> x2</c>

00:00:24.830 --> 00:00:24.840 align:start position:0%
binary values so either 0 or 1 so x1 x2
 

00:00:24.840 --> 00:00:26.900 align:start position:0%
binary values so either 0 or 1 so x1 x2
can<00:00:25.260><c> each</c><00:00:25.439><c> take</c><00:00:25.470><c> on</c><00:00:25.859><c> only</c><00:00:26.310><c> one</c><00:00:26.519><c> of</c><00:00:26.699><c> two</c>

00:00:26.900 --> 00:00:26.910 align:start position:0%
can each take on only one of two
 

00:00:26.910 --> 00:00:29.660 align:start position:0%
can each take on only one of two
possible<00:00:27.390><c> values</c><00:00:27.710><c> in</c><00:00:28.710><c> this</c><00:00:28.890><c> example</c><00:00:29.250><c> I've</c>

00:00:29.660 --> 00:00:29.670 align:start position:0%
possible values in this example I've
 

00:00:29.670 --> 00:00:31.700 align:start position:0%
possible values in this example I've
drawn<00:00:29.939><c> only</c><00:00:30.150><c> 2</c><00:00:30.480><c> positive</c><00:00:30.929><c> examples</c><00:00:31.380><c> and</c><00:00:31.500><c> two</c>

00:00:31.700 --> 00:00:31.710 align:start position:0%
drawn only 2 positive examples and two
 

00:00:31.710 --> 00:00:33.830 align:start position:0%
drawn only 2 positive examples and two
negative<00:00:32.099><c> examples</c><00:00:32.579><c> but</c><00:00:33.210><c> you</c><00:00:33.360><c> can</c><00:00:33.510><c> think</c><00:00:33.719><c> of</c>

00:00:33.830 --> 00:00:33.840 align:start position:0%
negative examples but you can think of
 

00:00:33.840 --> 00:00:36.229 align:start position:0%
negative examples but you can think of
this<00:00:33.989><c> as</c><00:00:34.050><c> a</c><00:00:34.320><c> simplified</c><00:00:35.130><c> version</c><00:00:35.399><c> of</c><00:00:35.700><c> a</c><00:00:36.210><c> more</c>

00:00:36.229 --> 00:00:36.239 align:start position:0%
this as a simplified version of a more
 

00:00:36.239 --> 00:00:38.479 align:start position:0%
this as a simplified version of a more
complex<00:00:36.809><c> learning</c><00:00:37.020><c> problem</c><00:00:37.649><c> where</c><00:00:37.890><c> we</c><00:00:38.340><c> may</c>

00:00:38.479 --> 00:00:38.489 align:start position:0%
complex learning problem where we may
 

00:00:38.489 --> 00:00:40.130 align:start position:0%
complex learning problem where we may
have<00:00:38.670><c> a</c><00:00:38.730><c> bunch</c><00:00:39.000><c> of</c><00:00:39.120><c> positive</c><00:00:39.329><c> examples</c><00:00:39.960><c> that</c>

00:00:40.130 --> 00:00:40.140 align:start position:0%
have a bunch of positive examples that
 

00:00:40.140 --> 00:00:41.389 align:start position:0%
have a bunch of positive examples that
you<00:00:40.260><c> have</c><00:00:40.379><c> to</c><00:00:40.469><c> write</c><00:00:40.590><c> in</c><00:00:40.800><c> the</c><00:00:40.890><c> lower</c><00:00:41.040><c> left</c><00:00:41.280><c> and</c>

00:00:41.389 --> 00:00:41.399 align:start position:0%
you have to write in the lower left and
 

00:00:41.399 --> 00:00:43.580 align:start position:0%
you have to write in the lower left and
a<00:00:41.520><c> bunch</c><00:00:41.700><c> of</c><00:00:41.790><c> negative</c><00:00:42.180><c> examples</c><00:00:42.660><c> did</c><00:00:43.140><c> notify</c>

00:00:43.580 --> 00:00:43.590 align:start position:0%
a bunch of negative examples did notify
 

00:00:43.590 --> 00:00:46.100 align:start position:0%
a bunch of negative examples did notify
the<00:00:43.649><c> circles</c><00:00:44.219><c> and</c><00:00:44.460><c> what</c><00:00:45.210><c> we'd</c><00:00:45.360><c> like</c><00:00:45.480><c> to</c><00:00:45.539><c> do</c><00:00:45.809><c> is</c>

00:00:46.100 --> 00:00:46.110 align:start position:0%
the circles and what we'd like to do is
 

00:00:46.110 --> 00:00:50.060 align:start position:0%
the circles and what we'd like to do is
learn<00:00:46.440><c> a</c><00:00:46.800><c> nonlinear</c><00:00:47.840><c> decision</c><00:00:48.840><c> boundary</c><00:00:49.350><c> then</c>

00:00:50.060 --> 00:00:50.070 align:start position:0%
learn a nonlinear decision boundary then
 

00:00:50.070 --> 00:00:51.889 align:start position:0%
learn a nonlinear decision boundary then
maybe<00:00:50.280><c> this</c><00:00:50.550><c> separates</c><00:00:51.059><c> the</c><00:00:51.149><c> positive</c><00:00:51.390><c> and</c>

00:00:51.889 --> 00:00:51.899 align:start position:0%
maybe this separates the positive and
 

00:00:51.899 --> 00:00:54.799 align:start position:0%
maybe this separates the positive and
the<00:00:51.930><c> negative</c><00:00:52.199><c> examples</c><00:00:53.010><c> so</c><00:00:53.910><c> how</c><00:00:54.360><c> can</c><00:00:54.420><c> any</c><00:00:54.690><c> row</c>

00:00:54.799 --> 00:00:54.809 align:start position:0%
the negative examples so how can any row
 

00:00:54.809 --> 00:00:57.020 align:start position:0%
the negative examples so how can any row
network<00:00:55.170><c> do</c><00:00:55.320><c> this</c><00:00:55.530><c> and</c><00:00:55.800><c> rather</c><00:00:56.640><c> than</c><00:00:56.879><c> use</c><00:00:57.000><c> the</c>

00:00:57.020 --> 00:00:57.030 align:start position:0%
network do this and rather than use the
 

00:00:57.030 --> 00:00:58.459 align:start position:0%
network do this and rather than use the
example<00:00:57.539><c> they're</c><00:00:57.660><c> very</c><00:00:57.809><c> going</c><00:00:58.020><c> to</c><00:00:58.079><c> use</c><00:00:58.230><c> this</c>

00:00:58.459 --> 00:00:58.469 align:start position:0%
example they're very going to use this
 

00:00:58.469 --> 00:01:01.700 align:start position:0%
example they're very going to use this
may<00:00:58.680><c> be</c><00:00:58.739><c> easier</c><00:00:59.280><c> to</c><00:00:59.899><c> examine</c><00:01:00.899><c> example</c><00:01:01.350><c> on</c><00:01:01.500><c> the</c>

00:01:01.700 --> 00:01:01.710 align:start position:0%
may be easier to examine example on the
 

00:01:01.710 --> 00:01:04.490 align:start position:0%
may be easier to examine example on the
left<00:01:02.449><c> concretely</c><00:01:03.449><c> what</c><00:01:03.719><c> this</c><00:01:03.899><c> is</c><00:01:04.080><c> is</c><00:01:04.290><c> really</c>

00:01:04.490 --> 00:01:04.500 align:start position:0%
left concretely what this is is really
 

00:01:04.500 --> 00:01:08.300 align:start position:0%
left concretely what this is is really
computing<00:01:05.159><c> the</c><00:01:05.610><c> target</c><00:01:06.030><c> label</c><00:01:06.420><c> y</c><00:01:06.930><c> equals</c><00:01:07.470><c> x</c><00:01:07.740><c> 1x</c>

00:01:08.300 --> 00:01:08.310 align:start position:0%
computing the target label y equals x 1x
 

00:01:08.310 --> 00:01:11.359 align:start position:0%
computing the target label y equals x 1x
or<00:01:08.549><c> X</c><00:01:08.760><c> 2</c><00:01:09.240><c> or</c><00:01:09.600><c> actually</c><00:01:10.200><c> on</c><00:01:10.380><c> this</c><00:01:10.890><c> is</c><00:01:11.040><c> actually</c>

00:01:11.359 --> 00:01:11.369 align:start position:0%
or X 2 or actually on this is actually
 

00:01:11.369 --> 00:01:15.380 align:start position:0%
or X 2 or actually on this is actually
the<00:01:11.520><c> X</c><00:01:11.790><c> 1</c><00:01:12.240><c> X</c><00:01:12.510><c> nor</c><00:01:12.869><c> X</c><00:01:13.530><c> 2</c><00:01:13.860><c> function</c><00:01:14.369><c> where</c><00:01:14.850><c> X</c><00:01:15.030><c> nor</c>

00:01:15.380 --> 00:01:15.390 align:start position:0%
the X 1 X nor X 2 function where X nor
 

00:01:15.390 --> 00:01:17.899 align:start position:0%
the X 1 X nor X 2 function where X nor
is<00:01:15.600><c> the</c><00:01:15.780><c> alternative</c><00:01:16.409><c> notation</c><00:01:16.590><c> for</c><00:01:17.220><c> not</c><00:01:17.460><c> x1</c>

00:01:17.899 --> 00:01:17.909 align:start position:0%
is the alternative notation for not x1
 

00:01:17.909 --> 00:01:23.330 align:start position:0%
is the alternative notation for not x1
or<00:01:18.240><c> x2</c><00:01:18.630><c> so</c><00:01:19.560><c> x1</c><00:01:20.189><c> x1</c><00:01:20.820><c> x2</c><00:01:21.270><c> that's</c><00:01:22.110><c> true</c><00:01:22.650><c> only</c><00:01:22.979><c> if</c>

00:01:23.330 --> 00:01:23.340 align:start position:0%
or x2 so x1 x1 x2 that's true only if
 

00:01:23.340 --> 00:01:28.039 align:start position:0%
or x2 so x1 x1 x2 that's true only if
exactly<00:01:23.939><c> one</c><00:01:24.240><c> of</c><00:01:24.869><c> x1</c><00:01:25.530><c> or</c><00:01:25.680><c> x2</c><00:01:26.189><c> is</c><00:01:26.520><c> equal</c><00:01:26.850><c> to</c><00:01:26.909><c> 1</c><00:01:27.119><c> it</c>

00:01:28.039 --> 00:01:28.049 align:start position:0%
exactly one of x1 or x2 is equal to 1 it
 

00:01:28.049 --> 00:01:29.990 align:start position:0%
exactly one of x1 or x2 is equal to 1 it
turns<00:01:28.229><c> out</c><00:01:28.470><c> that</c><00:01:28.680><c> the</c><00:01:29.009><c> specific</c><00:01:29.460><c> example</c><00:01:29.939><c> on</c>

00:01:29.990 --> 00:01:30.000 align:start position:0%
turns out that the specific example on
 

00:01:30.000 --> 00:01:32.170 align:start position:0%
turns out that the specific example on
the<00:01:30.090><c> US</c><00:01:30.270><c> works</c><00:01:30.570><c> out</c><00:01:30.810><c> a</c><00:01:30.930><c> little</c><00:01:31.110><c> bit</c><00:01:31.290><c> better</c><00:01:31.409><c> if</c>

00:01:32.170 --> 00:01:32.180 align:start position:0%
the US works out a little bit better if
 

00:01:32.180 --> 00:01:35.600 align:start position:0%
the US works out a little bit better if
if<00:01:33.180><c> we</c><00:01:33.329><c> use</c><00:01:33.540><c> the</c><00:01:33.689><c> X</c><00:01:33.900><c> nor</c><00:01:34.229><c> examples</c><00:01:35.159><c> that</c><00:01:35.369><c> these</c>

00:01:35.600 --> 00:01:35.610 align:start position:0%
if we use the X nor examples that these
 

00:01:35.610 --> 00:01:37.249 align:start position:0%
if we use the X nor examples that these
two<00:01:35.790><c> are</c><00:01:35.880><c> the</c><00:01:35.970><c> same</c><00:01:36.150><c> of</c><00:01:36.329><c> course</c><00:01:36.360><c> it</c><00:01:36.810><c> means</c><00:01:36.960><c> not</c>

00:01:37.249 --> 00:01:37.259 align:start position:0%
two are the same of course it means not
 

00:01:37.259 --> 00:01:41.929 align:start position:0%
two are the same of course it means not
x1<00:01:37.710><c> X</c><00:01:38.340><c> not</c><00:01:38.880><c> X</c><00:01:39.180><c> 1</c><00:01:39.450><c> X</c><00:01:39.689><c> or</c><00:01:39.930><c> X</c><00:01:40.140><c> 2</c><00:01:40.439><c> and</c><00:01:40.680><c> so</c><00:01:41.490><c> we're</c><00:01:41.790><c> going</c>

00:01:41.929 --> 00:01:41.939 align:start position:0%
x1 X not X 1 X or X 2 and so we're going
 

00:01:41.939 --> 00:01:43.609 align:start position:0%
x1 X not X 1 X or X 2 and so we're going
to<00:01:42.030><c> a</c><00:01:42.119><c> positive</c><00:01:42.509><c> examples</c><00:01:42.930><c> that</c><00:01:43.049><c> either</c><00:01:43.290><c> both</c>

00:01:43.609 --> 00:01:43.619 align:start position:0%
to a positive examples that either both
 

00:01:43.619 --> 00:01:46.609 align:start position:0%
to a positive examples that either both
are<00:01:43.649><c> true</c><00:01:44.040><c> or</c><00:01:44.430><c> both</c><00:01:44.759><c> are</c><00:01:45.000><c> false</c><00:01:45.210><c> and</c><00:01:45.630><c> we'll</c>

00:01:46.609 --> 00:01:46.619 align:start position:0%
are true or both are false and we'll
 

00:01:46.619 --> 00:01:49.080 align:start position:0%
are true or both are false and we'll
have<00:01:46.799><c> that's</c><00:01:47.430><c> y</c><00:01:47.700><c> equals</c><00:01:48.000><c> 1</c><00:01:48.210><c> y</c><00:01:48.600><c> equals</c>

00:01:49.080 --> 00:01:49.090 align:start position:0%
have that's y equals 1 y equals
 

00:01:49.090 --> 00:01:51.510 align:start position:0%
have that's y equals 1 y equals
we're<00:01:49.750><c> going</c><00:01:49.869><c> to</c><00:01:49.960><c> have</c><00:01:50.049><c> y</c><00:01:50.170><c> equals</c><00:01:50.470><c> zero</c><00:01:50.829><c> if</c>

00:01:51.510 --> 00:01:51.520 align:start position:0%
we're going to have y equals zero if
 

00:01:51.520 --> 00:01:54.090 align:start position:0%
we're going to have y equals zero if
only<00:01:52.119><c> one</c><00:01:52.299><c> of</c><00:01:52.450><c> them</c><00:01:52.600><c> is</c><00:01:52.750><c> true</c><00:01:53.020><c> and</c><00:01:53.049><c> we</c><00:01:53.860><c> want</c><00:01:54.040><c> to</c>

00:01:54.090 --> 00:01:54.100 align:start position:0%
only one of them is true and we want to
 

00:01:54.100 --> 00:01:55.260 align:start position:0%
only one of them is true and we want to
figure<00:01:54.250><c> out</c><00:01:54.369><c> if</c><00:01:54.610><c> we</c><00:01:54.729><c> can</c><00:01:54.820><c> get</c><00:01:54.970><c> a</c><00:01:55.030><c> neural</c>

00:01:55.260 --> 00:01:55.270 align:start position:0%
figure out if we can get a neural
 

00:01:55.270 --> 00:01:57.240 align:start position:0%
figure out if we can get a neural
network<00:01:55.509><c> to</c><00:01:55.869><c> fit</c><00:01:56.200><c> to</c><00:01:56.350><c> this</c><00:01:56.530><c> sort</c><00:01:56.799><c> of</c><00:01:56.890><c> training</c>

00:01:57.240 --> 00:01:57.250 align:start position:0%
network to fit to this sort of training
 

00:01:57.250 --> 00:02:01.050 align:start position:0%
network to fit to this sort of training
set<00:01:57.430><c> in</c><00:01:58.710><c> order</c><00:01:59.710><c> to</c><00:01:59.920><c> build</c><00:02:00.100><c> out</c><00:02:00.340><c> to</c><00:02:00.579><c> a</c><00:02:00.610><c> network</c>

00:02:01.050 --> 00:02:01.060 align:start position:0%
set in order to build out to a network
 

00:02:01.060 --> 00:02:05.340 align:start position:0%
set in order to build out to a network
that<00:02:01.270><c> 50</c><00:02:01.720><c> X</c><00:02:02.200><c> norm</c><00:02:02.670><c> example</c><00:02:03.930><c> and</c><00:02:04.930><c> we're</c><00:02:05.200><c> going</c>

00:02:05.340 --> 00:02:05.350 align:start position:0%
that 50 X norm example and we're going
 

00:02:05.350 --> 00:02:07.050 align:start position:0%
that 50 X norm example and we're going
to<00:02:05.409><c> start</c><00:02:05.679><c> to</c><00:02:05.799><c> a</c><00:02:05.830><c> slightly</c><00:02:06.189><c> simpler</c><00:02:06.610><c> one</c><00:02:06.820><c> and</c>

00:02:07.050 --> 00:02:07.060 align:start position:0%
to start to a slightly simpler one and
 

00:02:07.060 --> 00:02:09.389 align:start position:0%
to start to a slightly simpler one and
show<00:02:07.840><c> a</c><00:02:07.869><c> network</c><00:02:08.349><c> that</c><00:02:08.619><c> since</c><00:02:08.890><c> the</c><00:02:09.130><c> end</c>

00:02:09.389 --> 00:02:09.399 align:start position:0%
show a network that since the end
 

00:02:09.399 --> 00:02:12.509 align:start position:0%
show a network that since the end
function<00:02:10.440><c> concretely</c><00:02:11.440><c> let's</c><00:02:11.680><c> say</c><00:02:11.980><c> we</c><00:02:12.280><c> have</c>

00:02:12.509 --> 00:02:12.519 align:start position:0%
function concretely let's say we have
 

00:02:12.519 --> 00:02:15.750 align:start position:0%
function concretely let's say we have
input<00:02:13.120><c> X</c><00:02:13.930><c> 1</c><00:02:14.170><c> and</c><00:02:14.290><c> X</c><00:02:14.380><c> 2</c><00:02:14.530><c> that</c><00:02:14.920><c> are</c><00:02:14.950><c> again</c><00:02:15.430><c> by</c><00:02:15.700><c> no</c>

00:02:15.750 --> 00:02:15.760 align:start position:0%
input X 1 and X 2 that are again by no
 

00:02:15.760 --> 00:02:18.360 align:start position:0%
input X 1 and X 2 that are again by no
means<00:02:16.090><c> this</c><00:02:16.300><c> either</c><00:02:16.569><c> 0</c><00:02:17.019><c> 1</c><00:02:17.080><c> and</c><00:02:17.530><c> let's</c><00:02:18.190><c> say</c><00:02:18.340><c> our</c>

00:02:18.360 --> 00:02:18.370 align:start position:0%
means this either 0 1 and let's say our
 

00:02:18.370 --> 00:02:22.949 align:start position:0%
means this either 0 1 and let's say our
target<00:02:18.610><c> labels</c><00:02:18.970><c> Y</c><00:02:19.450><c> our</c><00:02:19.810><c> Y</c><00:02:20.800><c> is</c><00:02:21.700><c> equal</c><00:02:22.239><c> to</c><00:02:22.450><c> X</c><00:02:22.750><c> 1</c>

00:02:22.949 --> 00:02:22.959 align:start position:0%
target labels Y our Y is equal to X 1
 

00:02:22.959 --> 00:02:31.559 align:start position:0%
target labels Y our Y is equal to X 1
and<00:02:23.170><c> X</c><00:02:23.650><c> 2</c><00:02:23.799><c> this</c><00:02:24.069><c> is</c><00:02:24.220><c> a</c><00:02:24.280><c> logical</c><00:02:24.880><c> end</c><00:02:29.940><c> so</c><00:02:30.940><c> can</c><00:02:31.450><c> we</c>

00:02:31.559 --> 00:02:31.569 align:start position:0%
and X 2 this is a logical end so can we
 

00:02:31.569 --> 00:02:35.220 align:start position:0%
and X 2 this is a logical end so can we
get<00:02:31.750><c> a</c><00:02:31.780><c> 1</c><00:02:32.260><c> unit</c><00:02:32.769><c> network</c><00:02:33.280><c> to</c><00:02:33.730><c> compute</c><00:02:34.599><c> this</c>

00:02:35.220 --> 00:02:35.230 align:start position:0%
get a 1 unit network to compute this
 

00:02:35.230 --> 00:02:38.370 align:start position:0%
get a 1 unit network to compute this
logical<00:02:35.500><c> end</c><00:02:36.069><c> function</c><00:02:36.400><c> in</c><00:02:36.849><c> order</c><00:02:37.750><c> to</c><00:02:37.930><c> do</c><00:02:38.140><c> so</c>

00:02:38.370 --> 00:02:38.380 align:start position:0%
logical end function in order to do so
 

00:02:38.380 --> 00:02:41.100 align:start position:0%
logical end function in order to do so
I'm<00:02:38.650><c> going</c><00:02:38.890><c> to</c><00:02:39.040><c> actually</c><00:02:39.190><c> draw</c><00:02:39.970><c> in</c><00:02:40.209><c> the</c><00:02:40.599><c> bias</c>

00:02:41.100 --> 00:02:41.110 align:start position:0%
I'm going to actually draw in the bias
 

00:02:41.110 --> 00:02:45.630 align:start position:0%
I'm going to actually draw in the bias
units<00:02:41.680><c> as</c><00:02:41.830><c> well</c><00:02:42.010><c> the</c><00:02:42.280><c> plus</c><00:02:42.519><c> 1</c><00:02:42.760><c> unit</c><00:02:44.160><c> now</c><00:02:45.160><c> let</c><00:02:45.549><c> me</c>

00:02:45.630 --> 00:02:45.640 align:start position:0%
units as well the plus 1 unit now let me
 

00:02:45.640 --> 00:02:47.910 align:start position:0%
units as well the plus 1 unit now let me
just<00:02:45.819><c> assign</c><00:02:46.420><c> some</c><00:02:46.750><c> values</c><00:02:47.290><c> to</c><00:02:47.500><c> the</c><00:02:47.680><c> weights</c>

00:02:47.910 --> 00:02:47.920 align:start position:0%
just assign some values to the weights
 

00:02:47.920 --> 00:02:50.160 align:start position:0%
just assign some values to the weights
or<00:02:48.130><c> the</c><00:02:48.160><c> parameters</c><00:02:48.910><c> of</c><00:02:48.940><c> this</c><00:02:49.239><c> network</c><00:02:49.299><c> I'm</c>

00:02:50.160 --> 00:02:50.170 align:start position:0%
or the parameters of this network I'm
 

00:02:50.170 --> 00:02:52.020 align:start position:0%
or the parameters of this network I'm
going<00:02:50.349><c> to</c><00:02:50.410><c> write</c><00:02:50.590><c> down</c><00:02:50.830><c> the</c><00:02:51.220><c> parameters</c><00:02:51.370><c> on</c>

00:02:52.020 --> 00:02:52.030 align:start position:0%
going to write down the parameters on
 

00:02:52.030 --> 00:02:57.120 align:start position:0%
going to write down the parameters on
this<00:02:52.209><c> diagram</c><00:02:52.450><c> drug</c><00:02:52.930><c> minus</c><00:02:53.739><c> 30</c><00:02:53.980><c> here</c><00:02:55.620><c> plus</c><00:02:56.620><c> 20</c>

00:02:57.120 --> 00:02:57.130 align:start position:0%
this diagram drug minus 30 here plus 20
 

00:02:57.130 --> 00:03:00.150 align:start position:0%
this diagram drug minus 30 here plus 20
and<00:02:57.370><c> plus</c><00:02:58.060><c> 20</c><00:02:58.570><c> and</c><00:02:58.840><c> what</c><00:02:59.440><c> this</c><00:02:59.560><c> means</c><00:02:59.739><c> is</c><00:03:00.100><c> that</c>

00:03:00.150 --> 00:03:00.160 align:start position:0%
and plus 20 and what this means is that
 

00:03:00.160 --> 00:03:03.930 align:start position:0%
and plus 20 and what this means is that
I'm<00:03:00.519><c> assigning</c><00:03:00.880><c> a</c><00:03:01.209><c> value</c><00:03:01.510><c> of</c><00:03:01.989><c> minus</c><00:03:02.380><c> 30</c><00:03:02.650><c> to</c><00:03:03.579><c> the</c>

00:03:03.930 --> 00:03:03.940 align:start position:0%
I'm assigning a value of minus 30 to the
 

00:03:03.940 --> 00:03:07.050 align:start position:0%
I'm assigning a value of minus 30 to the
value<00:03:04.600><c> associated</c><00:03:04.959><c> with</c><00:03:05.620><c> X</c><00:03:05.920><c> 0</c><00:03:06.040><c> this</c><00:03:06.489><c> is</c><00:03:06.700><c> plus</c><00:03:06.940><c> 1</c>

00:03:07.050 --> 00:03:07.060 align:start position:0%
value associated with X 0 this is plus 1
 

00:03:07.060 --> 00:03:09.930 align:start position:0%
value associated with X 0 this is plus 1
going<00:03:07.390><c> into</c><00:03:07.690><c> this</c><00:03:07.810><c> unit</c><00:03:08.170><c> and</c><00:03:08.380><c> a</c><00:03:08.950><c> parameter</c>

00:03:09.930 --> 00:03:09.940 align:start position:0%
going into this unit and a parameter
 

00:03:09.940 --> 00:03:12.720 align:start position:0%
going into this unit and a parameter
value<00:03:10.299><c> of</c><00:03:10.450><c> plus</c><00:03:10.690><c> 20</c><00:03:11.140><c> that</c><00:03:11.290><c> multiplies</c><00:03:12.040><c> to</c><00:03:12.220><c> X</c><00:03:12.459><c> 1</c>

00:03:12.720 --> 00:03:12.730 align:start position:0%
value of plus 20 that multiplies to X 1
 

00:03:12.730 --> 00:03:14.699 align:start position:0%
value of plus 20 that multiplies to X 1
and<00:03:12.970><c> the</c><00:03:13.090><c> value</c><00:03:13.450><c> of</c><00:03:13.540><c> plus</c><00:03:13.750><c> 20</c><00:03:14.109><c> for</c><00:03:14.650><c> the</c>

00:03:14.699 --> 00:03:14.709 align:start position:0%
and the value of plus 20 for the
 

00:03:14.709 --> 00:03:17.340 align:start position:0%
and the value of plus 20 for the
parameter<00:03:15.130><c> that</c><00:03:15.220><c> multiplies</c><00:03:15.670><c> into</c><00:03:15.970><c> X</c><00:03:16.180><c> 2</c><00:03:16.480><c> so</c>

00:03:17.340 --> 00:03:17.350 align:start position:0%
parameter that multiplies into X 2 so
 

00:03:17.350 --> 00:03:19.349 align:start position:0%
parameter that multiplies into X 2 so
concretely<00:03:17.829><c> this</c><00:03:18.609><c> is</c><00:03:18.760><c> saying</c><00:03:18.970><c> that</c><00:03:19.120><c> my</c>

00:03:19.349 --> 00:03:19.359 align:start position:0%
concretely this is saying that my
 

00:03:19.359 --> 00:03:24.030 align:start position:0%
concretely this is saying that my
hypothesis<00:03:20.049><c> H</c><00:03:20.319><c> of</c><00:03:20.470><c> X</c><00:03:20.650><c> is</c><00:03:20.950><c> equal</c><00:03:21.760><c> to</c><00:03:21.790><c> G</c><00:03:22.690><c> of</c><00:03:23.040><c> minus</c>

00:03:24.030 --> 00:03:24.040 align:start position:0%
hypothesis H of X is equal to G of minus
 

00:03:24.040 --> 00:03:31.289 align:start position:0%
hypothesis H of X is equal to G of minus
30<00:03:24.750><c> plus</c><00:03:25.769><c> 20</c><00:03:26.769><c> X</c><00:03:26.980><c> 1</c><00:03:27.430><c> plus</c><00:03:28.590><c> 20</c><00:03:29.590><c> X</c><00:03:29.620><c> 2</c><00:03:30.069><c> so</c><00:03:30.880><c> sometimes</c>

00:03:31.289 --> 00:03:31.299 align:start position:0%
30 plus 20 X 1 plus 20 X 2 so sometimes
 

00:03:31.299 --> 00:03:33.300 align:start position:0%
30 plus 20 X 1 plus 20 X 2 so sometimes
it's<00:03:31.510><c> just</c><00:03:31.600><c> convenient</c><00:03:32.230><c> to</c><00:03:32.470><c> draw</c><00:03:32.680><c> these</c>

00:03:33.300 --> 00:03:33.310 align:start position:0%
it's just convenient to draw these
 

00:03:33.310 --> 00:03:35.670 align:start position:0%
it's just convenient to draw these
weights<00:03:34.030><c> that</c><00:03:34.389><c> draw</c><00:03:34.660><c> these</c><00:03:34.840><c> parameters</c><00:03:35.470><c> up</c>

00:03:35.670 --> 00:03:35.680 align:start position:0%
weights that draw these parameters up
 

00:03:35.680 --> 00:03:37.680 align:start position:0%
weights that draw these parameters up
here<00:03:36.280><c> you</c><00:03:36.700><c> know</c><00:03:36.819><c> in</c><00:03:37.000><c> the</c><00:03:37.120><c> diagram</c><00:03:37.540><c> with</c><00:03:37.660><c> a</c>

00:03:37.680 --> 00:03:37.690 align:start position:0%
here you know in the diagram with a
 

00:03:37.690 --> 00:03:38.300 align:start position:0%
here you know in the diagram with a
neural<00:03:37.989><c> net</c>

00:03:38.300 --> 00:03:38.310 align:start position:0%
neural net
 

00:03:38.310 --> 00:03:40.940 align:start position:0%
neural net
and<00:03:38.880><c> of</c><00:03:39.000><c> course</c><00:03:39.240><c> this</c><00:03:39.480><c> minus</c><00:03:40.200><c> 30</c><00:03:40.590><c> this</c><00:03:40.890><c> is</c>

00:03:40.940 --> 00:03:40.950 align:start position:0%
and of course this minus 30 this is
 

00:03:40.950 --> 00:03:47.720 align:start position:0%
and of course this minus 30 this is
actually<00:03:41.460><c> theta</c><00:03:42.080><c> 1</c><00:03:43.080><c> of</c><00:03:43.440><c> 1</c><00:03:44.250><c> 0</c><00:03:44.700><c> this</c><00:03:45.660><c> is</c><00:03:46.070><c> theta</c><00:03:47.070><c> 1</c>

00:03:47.720 --> 00:03:47.730 align:start position:0%
actually theta 1 of 1 0 this is theta 1
 

00:03:47.730 --> 00:03:53.450 align:start position:0%
actually theta 1 of 1 0 this is theta 1
of<00:03:48.060><c> 1</c><00:03:48.390><c> 1</c><00:03:48.660><c> and</c><00:03:48.930><c> that's</c><00:03:49.730><c> theta</c><00:03:50.750><c> 1</c><00:03:51.750><c> of</c><00:03:52.170><c> 1</c><00:03:52.950><c> 2</c><00:03:53.190><c> but</c>

00:03:53.450 --> 00:03:53.460 align:start position:0%
of 1 1 and that's theta 1 of 1 2 but
 

00:03:53.460 --> 00:03:54.890 align:start position:0%
of 1 1 and that's theta 1 of 1 2 but
it's<00:03:53.610><c> just</c><00:03:53.700><c> easier</c><00:03:53.850><c> think</c><00:03:54.360><c> about</c><00:03:54.570><c> it</c><00:03:54.720><c> as</c>

00:03:54.890 --> 00:03:54.900 align:start position:0%
it's just easier think about it as
 

00:03:54.900 --> 00:03:57.680 align:start position:0%
it's just easier think about it as
you're<00:03:55.170><c> associating</c><00:03:56.160><c> these</c><00:03:56.790><c> parameters</c><00:03:57.450><c> with</c>

00:03:57.680 --> 00:03:57.690 align:start position:0%
you're associating these parameters with
 

00:03:57.690 --> 00:04:01.699 align:start position:0%
you're associating these parameters with
the<00:03:57.720><c> edges</c><00:03:58.230><c> of</c><00:03:58.380><c> the</c><00:03:58.470><c> network</c><00:04:00.350><c> let's</c><00:04:01.350><c> look</c><00:04:01.560><c> at</c>

00:04:01.699 --> 00:04:01.709 align:start position:0%
the edges of the network let's look at
 

00:04:01.709 --> 00:04:03.740 align:start position:0%
the edges of the network let's look at
what<00:04:01.860><c> this</c><00:04:02.010><c> little</c><00:04:02.340><c> single</c><00:04:02.940><c> neuron</c><00:04:03.330><c> Network</c>

00:04:03.740 --> 00:04:03.750 align:start position:0%
what this little single neuron Network
 

00:04:03.750 --> 00:04:06.140 align:start position:0%
what this little single neuron Network
will<00:04:03.990><c> compute</c><00:04:04.440><c> just</c><00:04:05.250><c> to</c><00:04:05.340><c> remind</c><00:04:05.580><c> you</c><00:04:05.850><c> the</c>

00:04:06.140 --> 00:04:06.150 align:start position:0%
will compute just to remind you the
 

00:04:06.150 --> 00:04:08.630 align:start position:0%
will compute just to remind you the
sigmoid<00:04:06.660><c> activation</c><00:04:06.870><c> function</c><00:04:07.380><c> G</c><00:04:08.070><c> of</c><00:04:08.190><c> Z</c><00:04:08.370><c> looks</c>

00:04:08.630 --> 00:04:08.640 align:start position:0%
sigmoid activation function G of Z looks
 

00:04:08.640 --> 00:04:11.479 align:start position:0%
sigmoid activation function G of Z looks
like<00:04:08.790><c> this</c><00:04:08.970><c> is</c><00:04:09.240><c> class</c><00:04:09.510><c> from</c><00:04:09.750><c> 0</c><00:04:10.220><c> Rises</c><00:04:11.220><c> smoothly</c>

00:04:11.479 --> 00:04:11.489 align:start position:0%
like this is class from 0 Rises smoothly
 

00:04:11.489 --> 00:04:14.030 align:start position:0%
like this is class from 0 Rises smoothly
across<00:04:12.000><c> the</c><00:04:12.150><c> 0.5</c><00:04:12.780><c> and</c><00:04:13.170><c> then</c><00:04:13.260><c> the</c><00:04:13.380><c> asymptotes</c>

00:04:14.030 --> 00:04:14.040 align:start position:0%
across the 0.5 and then the asymptotes
 

00:04:14.040 --> 00:04:17.810 align:start position:0%
across the 0.5 and then the asymptotes
at<00:04:14.489><c> 1</c><00:04:14.910><c> and</c><00:04:15.239><c> to</c><00:04:16.109><c> give</c><00:04:16.260><c> some</c><00:04:16.470><c> landmarks</c><00:04:17.100><c> if</c><00:04:17.340><c> the</c>

00:04:17.810 --> 00:04:17.820 align:start position:0%
at 1 and to give some landmarks if the
 

00:04:17.820 --> 00:04:21.580 align:start position:0%
at 1 and to give some landmarks if the
horizontal<00:04:18.150><c> axis</c><00:04:18.900><c> values</c><00:04:19.380><c> Z</c><00:04:19.650><c> is</c><00:04:19.890><c> equal</c><00:04:20.220><c> to</c><00:04:20.250><c> 4.6</c>

00:04:21.580 --> 00:04:21.590 align:start position:0%
horizontal axis values Z is equal to 4.6
 

00:04:21.590 --> 00:04:25.880 align:start position:0%
horizontal axis values Z is equal to 4.6
then<00:04:22.970><c> the</c><00:04:23.970><c> sigmoid</c><00:04:24.480><c> function</c><00:04:24.900><c> is</c><00:04:25.350><c> equal</c><00:04:25.710><c> to</c>

00:04:25.880 --> 00:04:25.890 align:start position:0%
then the sigmoid function is equal to
 

00:04:25.890 --> 00:04:29.540 align:start position:0%
then the sigmoid function is equal to
0.99<00:04:26.820><c> this</c><00:04:27.600><c> is</c><00:04:27.720><c> very</c><00:04:27.960><c> close</c><00:04:28.169><c> to</c><00:04:28.200><c> 1</c><00:04:28.470><c> and</c><00:04:28.680><c> kind</c><00:04:29.490><c> of</c>

00:04:29.540 --> 00:04:29.550 align:start position:0%
0.99 this is very close to 1 and kind of
 

00:04:29.550 --> 00:04:33.260 align:start position:0%
0.99 this is very close to 1 and kind of
symmetrically<00:04:30.240><c> it</c><00:04:30.480><c> is</c><00:04:30.720><c> negative</c><00:04:31.650><c> 4.6</c><00:04:32.400><c> then</c>

00:04:33.260 --> 00:04:33.270 align:start position:0%
symmetrically it is negative 4.6 then
 

00:04:33.270 --> 00:04:35.620 align:start position:0%
symmetrically it is negative 4.6 then
the<00:04:33.570><c> sigmoid</c><00:04:34.050><c> function</c><00:04:34.440><c> there</c><00:04:34.710><c> is</c><00:04:35.040><c> equal</c><00:04:35.370><c> to</c>

00:04:35.620 --> 00:04:35.630 align:start position:0%
the sigmoid function there is equal to
 

00:04:35.630 --> 00:04:39.620 align:start position:0%
the sigmoid function there is equal to
0.01<00:04:36.630><c> this</c><00:04:36.960><c> is</c><00:04:37.140><c> very</c><00:04:37.350><c> close</c><00:04:37.560><c> to</c><00:04:37.710><c> 0</c><00:04:38.419><c> let's</c><00:04:39.419><c> look</c>

00:04:39.620 --> 00:04:39.630 align:start position:0%
0.01 this is very close to 0 let's look
 

00:04:39.630 --> 00:04:42.110 align:start position:0%
0.01 this is very close to 0 let's look
at<00:04:39.720><c> the</c><00:04:39.810><c> four</c><00:04:40.020><c> possible</c><00:04:40.470><c> input</c><00:04:41.040><c> values</c><00:04:41.070><c> for</c><00:04:41.730><c> x1</c>

00:04:42.110 --> 00:04:42.120 align:start position:0%
at the four possible input values for x1
 

00:04:42.120 --> 00:04:44.390 align:start position:0%
at the four possible input values for x1
and<00:04:42.510><c> x2</c><00:04:42.750><c> and</c><00:04:42.930><c> look</c><00:04:43.350><c> at</c><00:04:43.500><c> what</c><00:04:43.650><c> the</c><00:04:43.710><c> hypothesis</c>

00:04:44.390 --> 00:04:44.400 align:start position:0%
and x2 and look at what the hypothesis
 

00:04:44.400 --> 00:04:47.390 align:start position:0%
and x2 and look at what the hypothesis
will<00:04:44.550><c> output</c><00:04:44.850><c> in</c><00:04:44.970><c> that</c><00:04:45.150><c> case</c><00:04:45.440><c> if</c><00:04:46.440><c> x1</c><00:04:46.979><c> and</c><00:04:47.130><c> x2</c>

00:04:47.390 --> 00:04:47.400 align:start position:0%
will output in that case if x1 and x2
 

00:04:47.400 --> 00:04:50.390 align:start position:0%
will output in that case if x1 and x2
are<00:04:47.820><c> both</c><00:04:47.850><c> equal</c><00:04:48.450><c> to</c><00:04:48.600><c> 0</c><00:04:48.990><c> if</c><00:04:49.590><c> you</c><00:04:49.770><c> look</c><00:04:49.979><c> at</c><00:04:50.130><c> this</c>

00:04:50.390 --> 00:04:50.400 align:start position:0%
are both equal to 0 if you look at this
 

00:04:50.400 --> 00:04:52.850 align:start position:0%
are both equal to 0 if you look at this
if<00:04:50.669><c> x1</c><00:04:51.060><c> x2</c><00:04:51.300><c> above</c><00:04:51.600><c> equal</c><00:04:51.900><c> to</c><00:04:51.960><c> 0</c><00:04:52.290><c> then</c><00:04:52.710><c> the</c>

00:04:52.850 --> 00:04:52.860 align:start position:0%
if x1 x2 above equal to 0 then the
 

00:04:52.860 --> 00:04:56.540 align:start position:0%
if x1 x2 above equal to 0 then the
hypothesis<00:04:53.430><c> output</c><00:04:53.940><c> G</c><00:04:54.270><c> of</c><00:04:54.510><c> negative</c><00:04:54.870><c> 30</c><00:04:55.710><c> so</c>

00:04:56.540 --> 00:04:56.550 align:start position:0%
hypothesis output G of negative 30 so
 

00:04:56.550 --> 00:04:58.280 align:start position:0%
hypothesis output G of negative 30 so
sorry<00:04:56.820><c> very</c><00:04:57.150><c> far</c><00:04:57.479><c> to</c><00:04:57.690><c> the</c><00:04:57.720><c> left</c><00:04:57.810><c> of</c><00:04:58.169><c> this</c>

00:04:58.280 --> 00:04:58.290 align:start position:0%
sorry very far to the left of this
 

00:04:58.290 --> 00:05:01.580 align:start position:0%
sorry very far to the left of this
diagram<00:04:58.770><c> and</c><00:04:58.950><c> still</c><00:04:59.100><c> be</c><00:04:59.250><c> very</c><00:04:59.430><c> close</c><00:04:59.760><c> to</c><00:04:59.910><c> 0</c><00:05:00.590><c> if</c>

00:05:01.580 --> 00:05:01.590 align:start position:0%
diagram and still be very close to 0 if
 

00:05:01.590 --> 00:05:05.240 align:start position:0%
diagram and still be very close to 0 if
X<00:05:02.010><c> 1</c><00:05:02.190><c> equals</c><00:05:02.490><c> 0</c><00:05:02.850><c> and</c><00:05:03.030><c> x2</c><00:05:03.210><c> equals</c><00:05:03.570><c> 1</c><00:05:03.840><c> then</c><00:05:04.740><c> this</c>

00:05:05.240 --> 00:05:05.250 align:start position:0%
X 1 equals 0 and x2 equals 1 then this
 

00:05:05.250 --> 00:05:09.020 align:start position:0%
X 1 equals 0 and x2 equals 1 then this
formula<00:05:06.120><c> here</c><00:05:06.390><c> evaluates</c><00:05:07.229><c> to</c><00:05:07.770><c> G</c><00:05:08.070><c> the</c><00:05:08.370><c> sigmoid</c>

00:05:09.020 --> 00:05:09.030 align:start position:0%
formula here evaluates to G the sigmoid
 

00:05:09.030 --> 00:05:12.170 align:start position:0%
formula here evaluates to G the sigmoid
function<00:05:09.450><c> applied</c><00:05:09.780><c> to</c><00:05:09.919><c> minus</c><00:05:10.919><c> 10</c><00:05:11.220><c> and</c><00:05:12.000><c> again</c>

00:05:12.170 --> 00:05:12.180 align:start position:0%
function applied to minus 10 and again
 

00:05:12.180 --> 00:05:14.120 align:start position:0%
function applied to minus 10 and again
that's<00:05:12.660><c> you</c><00:05:12.960><c> know</c><00:05:13.050><c> to</c><00:05:13.110><c> the</c><00:05:13.380><c> far</c><00:05:13.590><c> left</c><00:05:13.830><c> of</c><00:05:13.979><c> this</c>

00:05:14.120 --> 00:05:14.130 align:start position:0%
that's you know to the far left of this
 

00:05:14.130 --> 00:05:16.340 align:start position:0%
that's you know to the far left of this
plot<00:05:14.760><c> and</c><00:05:14.790><c> so</c><00:05:15.180><c> that's</c><00:05:15.419><c> again</c><00:05:15.720><c> very</c><00:05:15.780><c> close</c><00:05:16.200><c> to</c>

00:05:16.340 --> 00:05:16.350 align:start position:0%
plot and so that's again very close to
 

00:05:16.350 --> 00:05:20.330 align:start position:0%
plot and so that's again very close to
zero<00:05:17.120><c> this</c><00:05:18.120><c> is</c><00:05:18.180><c> also</c><00:05:18.600><c> G</c><00:05:19.080><c> of</c><00:05:19.200><c> minus</c><00:05:19.350><c> 10</c><00:05:19.770><c> that</c><00:05:20.160><c> is</c>

00:05:20.330 --> 00:05:20.340 align:start position:0%
zero this is also G of minus 10 that is
 

00:05:20.340 --> 00:05:24.469 align:start position:0%
zero this is also G of minus 10 that is
a<00:05:20.370><c> if</c><00:05:20.760><c> x1</c><00:05:21.360><c> is</c><00:05:21.780><c> equal</c><00:05:22.200><c> to</c><00:05:22.410><c> 1</c><00:05:22.740><c> and</c><00:05:23.040><c> X</c><00:05:23.430><c> to</c><00:05:23.700><c> 0</c><00:05:24.090><c> this</c><00:05:24.330><c> is</c>

00:05:24.469 --> 00:05:24.479 align:start position:0%
a if x1 is equal to 1 and X to 0 this is
 

00:05:24.479 --> 00:05:27.090 align:start position:0%
a if x1 is equal to 1 and X to 0 this is
minus<00:05:24.690><c> 30</c><00:05:25.050><c> plus</c><00:05:25.260><c> 20</c><00:05:25.620><c> which</c><00:05:25.919><c> is</c><00:05:26.040><c> minus</c><00:05:26.490><c> 10</c>

00:05:27.090 --> 00:05:27.100 align:start position:0%
minus 30 plus 20 which is minus 10
 

00:05:27.100 --> 00:05:30.630 align:start position:0%
minus 30 plus 20 which is minus 10
and<00:05:27.360><c> finally</c><00:05:28.360><c> if</c><00:05:28.600><c> X</c><00:05:28.780><c> 1</c><00:05:28.930><c> equals</c><00:05:29.200><c> 1</c><00:05:29.350><c> X</c><00:05:29.680><c> 2</c><00:05:30.010><c> equals</c><00:05:30.400><c> 1</c>

00:05:30.630 --> 00:05:30.640 align:start position:0%
and finally if X 1 equals 1 X 2 equals 1
 

00:05:30.640 --> 00:05:34.260 align:start position:0%
and finally if X 1 equals 1 X 2 equals 1
then<00:05:31.000><c> you</c><00:05:31.180><c> have</c><00:05:31.210><c> G</c><00:05:31.780><c> of</c><00:05:32.010><c> minus</c><00:05:33.010><c> 30</c><00:05:33.430><c> plus</c><00:05:33.850><c> 20</c><00:05:34.060><c> plus</c>

00:05:34.260 --> 00:05:34.270 align:start position:0%
then you have G of minus 30 plus 20 plus
 

00:05:34.270 --> 00:05:36.570 align:start position:0%
then you have G of minus 30 plus 20 plus
20<00:05:34.750><c> so</c><00:05:34.990><c> that's</c><00:05:35.170><c> G</c><00:05:35.380><c> a</c><00:05:35.410><c> positive</c><00:05:35.980><c> 10</c><00:05:36.190><c> which</c><00:05:36.460><c> is</c>

00:05:36.570 --> 00:05:36.580 align:start position:0%
20 so that's G a positive 10 which is
 

00:05:36.580 --> 00:05:40.170 align:start position:0%
20 so that's G a positive 10 which is
therefore<00:05:36.760><c> very</c><00:05:37.600><c> close</c><00:05:37.990><c> to</c><00:05:38.170><c> 1</c><00:05:38.350><c> and</c><00:05:39.030><c> if</c><00:05:40.030><c> you</c>

00:05:40.170 --> 00:05:40.180 align:start position:0%
therefore very close to 1 and if you
 

00:05:40.180 --> 00:05:44.280 align:start position:0%
therefore very close to 1 and if you
look<00:05:40.390><c> in</c><00:05:40.630><c> this</c><00:05:40.870><c> column</c><00:05:41.850><c> this</c><00:05:42.850><c> is</c><00:05:43.000><c> exactly</c><00:05:43.570><c> the</c>

00:05:44.280 --> 00:05:44.290 align:start position:0%
look in this column this is exactly the
 

00:05:44.290 --> 00:05:46.290 align:start position:0%
look in this column this is exactly the
logical<00:05:44.890><c> end</c><00:05:45.130><c> function</c><00:05:45.550><c> so</c><00:05:46.000><c> this</c><00:05:46.150><c> is</c>

00:05:46.290 --> 00:05:46.300 align:start position:0%
logical end function so this is
 

00:05:46.300 --> 00:05:49.950 align:start position:0%
logical end function so this is
computing<00:05:46.870><c> H</c><00:05:47.380><c> of</c><00:05:47.860><c> X</c><00:05:48.100><c> is</c><00:05:48.870><c> you</c><00:05:49.870><c> know</c>

00:05:49.950 --> 00:05:49.960 align:start position:0%
computing H of X is you know
 

00:05:49.960 --> 00:05:55.980 align:start position:0%
computing H of X is you know
approximately<00:05:50.610><c> X</c><00:05:51.610><c> 1</c><00:05:52.240><c> and</c><00:05:54.000><c> X</c><00:05:55.000><c> 2</c><00:05:55.150><c> in</c><00:05:55.600><c> other</c><00:05:55.720><c> words</c>

00:05:55.980 --> 00:05:55.990 align:start position:0%
approximately X 1 and X 2 in other words
 

00:05:55.990 --> 00:05:59.790 align:start position:0%
approximately X 1 and X 2 in other words
it<00:05:56.170><c> outputs</c><00:05:56.620><c> 1</c><00:05:56.890><c> if</c><00:05:57.250><c> and</c><00:05:57.820><c> only</c><00:05:58.000><c> if</c><00:05:58.180><c> X</c><00:05:58.630><c> 2</c><00:05:59.050><c> X</c><00:05:59.290><c> 1</c><00:05:59.470><c> and</c>

00:05:59.790 --> 00:05:59.800 align:start position:0%
it outputs 1 if and only if X 2 X 1 and
 

00:05:59.800 --> 00:06:04.320 align:start position:0%
it outputs 1 if and only if X 2 X 1 and
X<00:06:00.160><c> 2</c><00:06:00.280><c> above</c><00:06:01.240><c> equal</c><00:06:01.690><c> to</c><00:06:01.840><c> 1</c><00:06:02.490><c> so</c><00:06:03.490><c> by</c><00:06:03.730><c> writing</c><00:06:03.970><c> out</c>

00:06:04.320 --> 00:06:04.330 align:start position:0%
X 2 above equal to 1 so by writing out
 

00:06:04.330 --> 00:06:07.890 align:start position:0%
X 2 above equal to 1 so by writing out
our<00:06:04.570><c> little</c><00:06:05.020><c> truth</c><00:06:05.680><c> table</c><00:06:06.310><c> like</c><00:06:07.000><c> this</c><00:06:07.270><c> we</c>

00:06:07.890 --> 00:06:07.900 align:start position:0%
our little truth table like this we
 

00:06:07.900 --> 00:06:10.050 align:start position:0%
our little truth table like this we
managed<00:06:08.260><c> to</c><00:06:08.290><c> figure</c><00:06:08.590><c> out</c><00:06:08.830><c> what's</c><00:06:09.280><c> the</c><00:06:09.460><c> logical</c>

00:06:10.050 --> 00:06:10.060 align:start position:0%
managed to figure out what's the logical
 

00:06:10.060 --> 00:06:12.600 align:start position:0%
managed to figure out what's the logical
function<00:06:10.570><c> that</c><00:06:11.050><c> our</c><00:06:11.350><c> little</c><00:06:11.980><c> neural</c><00:06:12.250><c> network</c>

00:06:12.600 --> 00:06:12.610 align:start position:0%
function that our little neural network
 

00:06:12.610 --> 00:06:16.149 align:start position:0%
function that our little neural network
computes

00:06:16.149 --> 00:06:16.159 align:start position:0%
 
 

00:06:16.159 --> 00:06:19.010 align:start position:0%
 
this<00:06:17.159><c> network</c><00:06:17.430><c> is</c><00:06:17.669><c> shown</c><00:06:18.030><c> here</c><00:06:18.270><c> confuse</c><00:06:18.810><c> the</c>

00:06:19.010 --> 00:06:19.020 align:start position:0%
this network is shown here confuse the
 

00:06:19.020 --> 00:06:21.589 align:start position:0%
this network is shown here confuse the
old<00:06:19.319><c> function</c><00:06:19.889><c> just</c><00:06:20.220><c> to</c><00:06:20.340><c> show</c><00:06:20.520><c> you</c><00:06:20.580><c> how</c><00:06:21.030><c> I</c><00:06:21.300><c> work</c>

00:06:21.589 --> 00:06:21.599 align:start position:0%
old function just to show you how I work
 

00:06:21.599 --> 00:06:24.110 align:start position:0%
old function just to show you how I work
that<00:06:21.780><c> out</c><00:06:21.960><c> if</c><00:06:22.259><c> you</c><00:06:22.919><c> are</c><00:06:22.979><c> read</c><00:06:23.849><c> out</c><00:06:23.879><c> the</c>

00:06:24.110 --> 00:06:24.120 align:start position:0%
that out if you are read out the
 

00:06:24.120 --> 00:06:26.059 align:start position:0%
that out if you are read out the
hypothesis<00:06:24.750><c> you</c><00:06:24.780><c> find</c><00:06:25.229><c> that</c><00:06:25.349><c> this</c><00:06:25.500><c> confusing</c>

00:06:26.059 --> 00:06:26.069 align:start position:0%
hypothesis you find that this confusing
 

00:06:26.069 --> 00:06:31.520 align:start position:0%
hypothesis you find that this confusing
G<00:06:26.370><c> of</c><00:06:26.610><c> minus</c><00:06:26.879><c> 10</c><00:06:27.360><c> plus</c><00:06:28.050><c> 20</c><00:06:28.590><c> X</c><00:06:28.620><c> 1</c><00:06:29.330><c> plus</c><00:06:30.330><c> 20</c><00:06:30.870><c> X</c><00:06:31.020><c> 2</c>

00:06:31.520 --> 00:06:31.530 align:start position:0%
G of minus 10 plus 20 X 1 plus 20 X 2
 

00:06:31.530 --> 00:06:33.529 align:start position:0%
G of minus 10 plus 20 X 1 plus 20 X 2
and<00:06:31.860><c> so</c><00:06:32.190><c> you</c><00:06:32.400><c> fill</c><00:06:32.610><c> in</c><00:06:32.699><c> these</c><00:06:32.819><c> values</c><00:06:33.090><c> you</c><00:06:33.509><c> find</c>

00:06:33.529 --> 00:06:33.539 align:start position:0%
and so you fill in these values you find
 

00:06:33.539 --> 00:06:36.680 align:start position:0%
and so you fill in these values you find
that<00:06:34.020><c> that's</c><00:06:34.590><c> G</c><00:06:35.069><c> of</c><00:06:35.159><c> minus</c><00:06:35.520><c> 10</c><00:06:35.819><c> which</c><00:06:36.509><c> should</c>

00:06:36.680 --> 00:06:36.690 align:start position:0%
that that's G of minus 10 which should
 

00:06:36.690 --> 00:06:39.260 align:start position:0%
that that's G of minus 10 which should
also<00:06:36.840><c> be</c><00:06:36.990><c> 0</c><00:06:37.319><c> G</c><00:06:37.979><c> of</c><00:06:38.039><c> 10</c><00:06:38.400><c> which</c><00:06:38.970><c> is</c><00:06:39.090><c> approximately</c>

00:06:39.260 --> 00:06:39.270 align:start position:0%
also be 0 G of 10 which is approximately
 

00:06:39.270 --> 00:06:41.839 align:start position:0%
also be 0 G of 10 which is approximately
1<00:06:39.900><c> and</c><00:06:40.199><c> so</c><00:06:40.440><c> on</c><00:06:40.470><c> these</c><00:06:41.009><c> are</c><00:06:41.220><c> approximately</c><00:06:41.639><c> 1</c>

00:06:41.839 --> 00:06:41.849 align:start position:0%
1 and so on these are approximately 1
 

00:06:41.849 --> 00:06:45.520 align:start position:0%
1 and so on these are approximately 1
and<00:06:42.060><c> approximately</c><00:06:43.020><c> 1</c><00:06:43.259><c> and</c><00:06:43.550><c> these</c><00:06:44.550><c> numbers</c><00:06:44.789><c> is</c>

00:06:45.520 --> 00:06:45.530 align:start position:0%
and approximately 1 and these numbers is
 

00:06:45.530 --> 00:06:50.029 align:start position:0%
and approximately 1 and these numbers is
essentially<00:06:46.530><c> the</c><00:06:46.710><c> logical</c><00:06:47.340><c> or</c><00:06:47.580><c> function</c><00:06:49.039><c> so</c>

00:06:50.029 --> 00:06:50.039 align:start position:0%
essentially the logical or function so
 

00:06:50.039 --> 00:06:51.890 align:start position:0%
essentially the logical or function so
hopefully<00:06:50.610><c> with</c><00:06:50.789><c> this</c><00:06:50.940><c> you</c><00:06:51.210><c> now</c><00:06:51.360><c> understand</c>

00:06:51.890 --> 00:06:51.900 align:start position:0%
hopefully with this you now understand
 

00:06:51.900 --> 00:06:54.499 align:start position:0%
hopefully with this you now understand
how<00:06:52.050><c> single</c><00:06:52.740><c> neurons</c><00:06:53.520><c> in</c><00:06:53.789><c> the</c><00:06:53.879><c> neural</c><00:06:54.060><c> network</c>

00:06:54.499 --> 00:06:54.509 align:start position:0%
how single neurons in the neural network
 

00:06:54.509 --> 00:06:56.839 align:start position:0%
how single neurons in the neural network
can<00:06:54.810><c> be</c><00:06:54.840><c> used</c><00:06:55.169><c> to</c><00:06:55.319><c> compute</c><00:06:55.680><c> logical</c><00:06:56.340><c> functions</c>

00:06:56.839 --> 00:06:56.849 align:start position:0%
can be used to compute logical functions
 

00:06:56.849 --> 00:06:59.749 align:start position:0%
can be used to compute logical functions
like<00:06:57.030><c> ant</c><00:06:57.300><c> and</c><00:06:57.629><c> all</c><00:06:57.810><c> and</c><00:06:58.050><c> so</c><00:06:58.229><c> on</c><00:06:58.409><c> in</c><00:06:58.650><c> the</c><00:06:59.400><c> next</c>

00:06:59.749 --> 00:06:59.759 align:start position:0%
like ant and all and so on in the next
 

00:06:59.759 --> 00:07:01.339 align:start position:0%
like ant and all and so on in the next
video<00:07:00.030><c> we'll</c><00:07:00.300><c> continue</c><00:07:00.539><c> building</c><00:07:00.990><c> on</c><00:07:01.259><c> these</c>

00:07:01.339 --> 00:07:01.349 align:start position:0%
video we'll continue building on these
 

00:07:01.349 --> 00:07:03.860 align:start position:0%
video we'll continue building on these
examples<00:07:01.949><c> and</c><00:07:02.190><c> work</c><00:07:02.639><c> through</c><00:07:02.940><c> a</c><00:07:03.000><c> more</c><00:07:03.389><c> complex</c>

00:07:03.860 --> 00:07:03.870 align:start position:0%
examples and work through a more complex
 

00:07:03.870 --> 00:07:06.110 align:start position:0%
examples and work through a more complex
example<00:07:04.409><c> we'll</c><00:07:04.860><c> get</c><00:07:05.069><c> to</c><00:07:05.190><c> show</c><00:07:05.340><c> you</c><00:07:05.400><c> how</c><00:07:05.849><c> a</c>

00:07:06.110 --> 00:07:06.120 align:start position:0%
example we'll get to show you how a
 

00:07:06.120 --> 00:07:08.480 align:start position:0%
example we'll get to show you how a
neural<00:07:06.690><c> network</c><00:07:06.960><c> now</c><00:07:07.500><c> with</c><00:07:07.770><c> multiple</c><00:07:08.310><c> layers</c>

00:07:08.480 --> 00:07:08.490 align:start position:0%
neural network now with multiple layers
 

00:07:08.490 --> 00:07:10.939 align:start position:0%
neural network now with multiple layers
of<00:07:08.669><c> units</c><00:07:09.150><c> can</c><00:07:09.990><c> be</c><00:07:10.020><c> used</c><00:07:10.319><c> to</c><00:07:10.469><c> compute</c><00:07:10.800><c> more</c>

00:07:10.939 --> 00:07:10.949 align:start position:0%
of units can be used to compute more
 

00:07:10.949 --> 00:07:12.680 align:start position:0%
of units can be used to compute more
complex<00:07:11.460><c> functions</c><00:07:11.580><c> like</c><00:07:12.060><c> your</c><00:07:12.210><c> XOR</c><00:07:12.659><c> function</c>

00:07:12.680 --> 00:07:12.690 align:start position:0%
complex functions like your XOR function
 

00:07:12.690 --> 00:07:16.370 align:start position:0%
complex functions like your XOR function
or<00:07:13.319><c> the</c><00:07:13.469><c> xnor</c><00:07:13.889><c> function</c>

