WEBVTT
Kind: captions
Language: en

00:00:00.060 --> 00:00:02.419 align:start position:0%
 
in<00:00:00.420><c> this</c><00:00:00.750><c> video</c><00:00:01.079><c> I'd</c><00:00:01.380><c> like</c><00:00:01.560><c> to</c><00:00:01.709><c> tell</c><00:00:01.949><c> you</c><00:00:01.979><c> about</c>

00:00:02.419 --> 00:00:02.429 align:start position:0%
in this video I'd like to tell you about
 

00:00:02.429 --> 00:00:04.579 align:start position:0%
in this video I'd like to tell you about
the<00:00:02.820><c> principal</c><00:00:03.389><c> components</c><00:00:04.020><c> analysis</c>

00:00:04.579 --> 00:00:04.589 align:start position:0%
the principal components analysis
 

00:00:04.589 --> 00:00:07.010 align:start position:0%
the principal components analysis
algorithm<00:00:05.069><c> and</c><00:00:05.279><c> by</c><00:00:05.970><c> the</c><00:00:06.029><c> end</c><00:00:06.390><c> of</c><00:00:06.540><c> this</c><00:00:06.690><c> video</c>

00:00:07.010 --> 00:00:07.020 align:start position:0%
algorithm and by the end of this video
 

00:00:07.020 --> 00:00:09.290 align:start position:0%
algorithm and by the end of this video
you<00:00:07.109><c> know</c><00:00:07.470><c> how</c><00:00:07.740><c> to</c><00:00:07.799><c> implement</c><00:00:08.340><c> PCA</c><00:00:08.820><c> for</c>

00:00:09.290 --> 00:00:09.300 align:start position:0%
you know how to implement PCA for
 

00:00:09.300 --> 00:00:11.450 align:start position:0%
you know how to implement PCA for
yourself<00:00:09.660><c> and</c><00:00:09.870><c> use</c><00:00:10.469><c> it</c><00:00:10.650><c> to</c><00:00:10.830><c> reduce</c><00:00:11.010><c> the</c>

00:00:11.450 --> 00:00:11.460 align:start position:0%
yourself and use it to reduce the
 

00:00:11.460 --> 00:00:13.789 align:start position:0%
yourself and use it to reduce the
dimension<00:00:12.000><c> of</c><00:00:12.179><c> your</c><00:00:12.240><c> data</c><00:00:12.630><c> but</c><00:00:13.259><c> for</c><00:00:13.410><c> applying</c>

00:00:13.789 --> 00:00:13.799 align:start position:0%
dimension of your data but for applying
 

00:00:13.799 --> 00:00:16.700 align:start position:0%
dimension of your data but for applying
PCA<00:00:14.040><c> there's</c><00:00:14.759><c> a</c><00:00:14.940><c> data</c><00:00:15.269><c> pre-processing</c><00:00:15.809><c> step</c>

00:00:16.700 --> 00:00:16.710 align:start position:0%
PCA there's a data pre-processing step
 

00:00:16.710 --> 00:00:18.830 align:start position:0%
PCA there's a data pre-processing step
which<00:00:16.949><c> you</c><00:00:17.160><c> should</c><00:00:17.310><c> always</c><00:00:17.490><c> stay</c><00:00:17.880><c> given</c><00:00:18.779><c> a</c>

00:00:18.830 --> 00:00:18.840 align:start position:0%
which you should always stay given a
 

00:00:18.840 --> 00:00:21.500 align:start position:0%
which you should always stay given a
training<00:00:19.020><c> set</c><00:00:19.199><c> of</c><00:00:19.410><c> M</c><00:00:19.770><c> unlabeled</c><00:00:20.670><c> examples</c><00:00:20.730><c> is</c>

00:00:21.500 --> 00:00:21.510 align:start position:0%
training set of M unlabeled examples is
 

00:00:21.510 --> 00:00:23.960 align:start position:0%
training set of M unlabeled examples is
important<00:00:22.109><c> to</c><00:00:22.289><c> always</c><00:00:22.560><c> perform</c><00:00:23.160><c> mean</c>

00:00:23.960 --> 00:00:23.970 align:start position:0%
important to always perform mean
 

00:00:23.970 --> 00:00:26.089 align:start position:0%
important to always perform mean
normalization<00:00:24.449><c> and</c><00:00:25.019><c> then</c><00:00:25.560><c> depending</c><00:00:25.949><c> on</c><00:00:26.039><c> your</c>

00:00:26.089 --> 00:00:26.099 align:start position:0%
normalization and then depending on your
 

00:00:26.099 --> 00:00:28.550 align:start position:0%
normalization and then depending on your
data<00:00:26.220><c> may</c><00:00:27.000><c> be</c><00:00:27.029><c> perform</c><00:00:27.570><c> feature</c><00:00:27.840><c> scaling</c><00:00:28.230><c> as</c>

00:00:28.550 --> 00:00:28.560 align:start position:0%
data may be perform feature scaling as
 

00:00:28.560 --> 00:00:31.820 align:start position:0%
data may be perform feature scaling as
well<00:00:28.740><c> so</c><00:00:29.670><c> this</c><00:00:29.910><c> is</c><00:00:29.970><c> very</c><00:00:30.240><c> similar</c><00:00:30.570><c> to</c><00:00:30.689><c> the</c><00:00:31.080><c> mean</c>

00:00:31.820 --> 00:00:31.830 align:start position:0%
well so this is very similar to the mean
 

00:00:31.830 --> 00:00:33.560 align:start position:0%
well so this is very similar to the mean
normalization<00:00:32.279><c> and</c><00:00:32.880><c> feature</c><00:00:33.210><c> scaling</c>

00:00:33.560 --> 00:00:33.570 align:start position:0%
normalization and feature scaling
 

00:00:33.570 --> 00:00:36.470 align:start position:0%
normalization and feature scaling
process<00:00:34.320><c> that</c><00:00:34.770><c> we</c><00:00:34.860><c> had</c><00:00:35.100><c> for</c><00:00:35.489><c> a</c><00:00:35.790><c> supervised</c>

00:00:36.470 --> 00:00:36.480 align:start position:0%
process that we had for a supervised
 

00:00:36.480 --> 00:00:37.910 align:start position:0%
process that we had for a supervised
learning<00:00:36.510><c> in</c><00:00:37.079><c> fact</c><00:00:37.260><c> it's</c><00:00:37.469><c> actually</c><00:00:37.590><c> exactly</c>

00:00:37.910 --> 00:00:37.920 align:start position:0%
learning in fact it's actually exactly
 

00:00:37.920 --> 00:00:40.310 align:start position:0%
learning in fact it's actually exactly
the<00:00:38.340><c> same</c><00:00:38.550><c> procedure</c><00:00:38.910><c> except</c><00:00:39.510><c> that</c><00:00:39.719><c> we're</c>

00:00:40.310 --> 00:00:40.320 align:start position:0%
the same procedure except that we're
 

00:00:40.320 --> 00:00:42.799 align:start position:0%
the same procedure except that we're
doing<00:00:40.440><c> it</c><00:00:40.649><c> now</c><00:00:40.829><c> to</c><00:00:40.890><c> our</c><00:00:41.280><c> unlabeled</c><00:00:41.940><c> data</c><00:00:41.969><c> x1</c>

00:00:42.799 --> 00:00:42.809 align:start position:0%
doing it now to our unlabeled data x1
 

00:00:42.809 --> 00:00:45.709 align:start position:0%
doing it now to our unlabeled data x1
through<00:00:43.020><c> XM</c><00:00:43.350><c> so</c><00:00:44.280><c> for</c><00:00:44.610><c> me</c><00:00:44.760><c> normalization</c><00:00:45.539><c> we</c>

00:00:45.709 --> 00:00:45.719 align:start position:0%
through XM so for me normalization we
 

00:00:45.719 --> 00:00:47.900 align:start position:0%
through XM so for me normalization we
first<00:00:46.020><c> computes</c><00:00:46.559><c> the</c><00:00:46.800><c> mean</c><00:00:47.010><c> of</c><00:00:47.280><c> each</c><00:00:47.550><c> feature</c>

00:00:47.900 --> 00:00:47.910 align:start position:0%
first computes the mean of each feature
 

00:00:47.910 --> 00:00:51.350 align:start position:0%
first computes the mean of each feature
and<00:00:48.329><c> then</c><00:00:49.230><c> we</c><00:00:49.469><c> replace</c><00:00:49.860><c> each</c><00:00:50.160><c> feature</c><00:00:50.460><c> X</c><00:00:50.940><c> with</c>

00:00:51.350 --> 00:00:51.360 align:start position:0%
and then we replace each feature X with
 

00:00:51.360 --> 00:00:54.020 align:start position:0%
and then we replace each feature X with
X<00:00:51.570><c> minus</c><00:00:51.960><c> this</c><00:00:52.050><c> mean</c><00:00:52.289><c> and</c><00:00:52.530><c> so</c><00:00:52.739><c> this</c><00:00:53.010><c> makes</c><00:00:53.789><c> each</c>

00:00:54.020 --> 00:00:54.030 align:start position:0%
X minus this mean and so this makes each
 

00:00:54.030 --> 00:00:56.569 align:start position:0%
X minus this mean and so this makes each
feature<00:00:54.329><c> now</c><00:00:54.719><c> have</c><00:00:55.050><c> exactly</c><00:00:55.260><c> zero</c><00:00:55.680><c> mean</c><00:00:56.280><c> and</c>

00:00:56.569 --> 00:00:56.579 align:start position:0%
feature now have exactly zero mean and
 

00:00:56.579 --> 00:00:59.299 align:start position:0%
feature now have exactly zero mean and
then<00:00:57.239><c> second</c><00:00:57.660><c> if</c><00:00:57.809><c> the</c><00:00:58.800><c> different</c><00:00:59.129><c> features</c>

00:00:59.299 --> 00:00:59.309 align:start position:0%
then second if the different features
 

00:00:59.309 --> 00:01:02.029 align:start position:0%
then second if the different features
have<00:00:59.879><c> very</c><00:01:00.270><c> different</c><00:01:00.750><c> scales</c><00:01:01.109><c> so</c><00:01:01.649><c> for</c>

00:01:02.029 --> 00:01:02.039 align:start position:0%
have very different scales so for
 

00:01:02.039 --> 00:01:04.189 align:start position:0%
have very different scales so for
example<00:01:02.489><c> if</c><00:01:02.670><c> x1</c><00:01:03.030><c> is</c><00:01:03.180><c> the</c><00:01:03.329><c> size</c><00:01:03.420><c> of</c><00:01:03.719><c> a</c><00:01:03.780><c> house</c><00:01:03.930><c> and</c>

00:01:04.189 --> 00:01:04.199 align:start position:0%
example if x1 is the size of a house and
 

00:01:04.199 --> 00:01:05.960 align:start position:0%
example if x1 is the size of a house and
x2<00:01:04.500><c> is</c><00:01:04.589><c> number</c><00:01:04.920><c> of</c><00:01:04.979><c> bedrooms</c><00:01:05.369><c> to</c><00:01:05.610><c> use</c><00:01:05.760><c> our</c>

00:01:05.960 --> 00:01:05.970 align:start position:0%
x2 is number of bedrooms to use our
 

00:01:05.970 --> 00:01:08.570 align:start position:0%
x2 is number of bedrooms to use our
earlier<00:01:06.270><c> example</c><00:01:06.720><c> we</c><00:01:07.500><c> then</c><00:01:07.650><c> also</c><00:01:07.830><c> scale</c><00:01:08.369><c> each</c>

00:01:08.570 --> 00:01:08.580 align:start position:0%
earlier example we then also scale each
 

00:01:08.580 --> 00:01:10.580 align:start position:0%
earlier example we then also scale each
feature<00:01:09.060><c> to</c><00:01:09.330><c> have</c><00:01:09.510><c> a</c><00:01:09.570><c> comparable</c><00:01:09.659><c> range</c><00:01:10.409><c> of</c>

00:01:10.580 --> 00:01:10.590 align:start position:0%
feature to have a comparable range of
 

00:01:10.590 --> 00:01:12.980 align:start position:0%
feature to have a comparable range of
values<00:01:11.010><c> and</c><00:01:11.250><c> so</c><00:01:11.430><c> similar</c><00:01:12.270><c> to</c><00:01:12.330><c> what</c><00:01:12.659><c> we</c><00:01:12.780><c> had</c>

00:01:12.980 --> 00:01:12.990 align:start position:0%
values and so similar to what we had
 

00:01:12.990 --> 00:01:15.580 align:start position:0%
values and so similar to what we had
with<00:01:13.020><c> supervised</c><00:01:13.710><c> learning</c><00:01:13.740><c> or</c><00:01:14.400><c> tickets</c><00:01:14.820><c> I</c>

00:01:15.580 --> 00:01:15.590 align:start position:0%
with supervised learning or tickets I
 

00:01:15.590 --> 00:01:19.039 align:start position:0%
with supervised learning or tickets I
subscript<00:01:16.590><c> J</c><00:01:16.890><c> that's</c><00:01:17.189><c> the</c><00:01:17.400><c> J</c><00:01:17.610><c> feature</c><00:01:17.909><c> and</c><00:01:18.360><c> so</c>

00:01:19.039 --> 00:01:19.049 align:start position:0%
subscript J that's the J feature and so
 

00:01:19.049 --> 00:01:21.679 align:start position:0%
subscript J that's the J feature and so
we<00:01:19.290><c> would</c><00:01:19.759><c> subtract</c><00:01:20.759><c> off</c><00:01:20.939><c> the</c><00:01:20.970><c> mean</c><00:01:21.119><c> now</c>

00:01:21.679 --> 00:01:21.689 align:start position:0%
we would subtract off the mean now
 

00:01:21.689 --> 00:01:23.420 align:start position:0%
we would subtract off the mean now
that's<00:01:21.900><c> what</c><00:01:22.140><c> we</c><00:01:22.229><c> have</c><00:01:22.380><c> on</c><00:01:22.500><c> top</c><00:01:22.710><c> and</c><00:01:22.979><c> then</c>

00:01:23.420 --> 00:01:23.430 align:start position:0%
that's what we have on top and then
 

00:01:23.430 --> 00:01:26.600 align:start position:0%
that's what we have on top and then
divide<00:01:23.759><c> by</c><00:01:23.790><c> SJ</c><00:01:24.689><c> here</c><00:01:25.140><c> SJ</c><00:01:25.710><c> is</c><00:01:25.920><c> some</c><00:01:26.220><c> measure</c><00:01:26.430><c> of</c>

00:01:26.600 --> 00:01:26.610 align:start position:0%
divide by SJ here SJ is some measure of
 

00:01:26.610 --> 00:01:28.940 align:start position:0%
divide by SJ here SJ is some measure of
their<00:01:27.030><c> range</c><00:01:27.240><c> of</c><00:01:27.450><c> values</c><00:01:27.869><c> of</c><00:01:28.080><c> feature</c><00:01:28.320><c> J</c><00:01:28.650><c> so</c><00:01:28.890><c> it</c>

00:01:28.940 --> 00:01:28.950 align:start position:0%
their range of values of feature J so it
 

00:01:28.950 --> 00:01:31.280 align:start position:0%
their range of values of feature J so it
could<00:01:29.159><c> be</c><00:01:29.280><c> the</c><00:01:29.400><c> max</c><00:01:29.640><c> -</c><00:01:30.060><c> min</c><00:01:30.240><c> value</c><00:01:30.689><c> or</c><00:01:31.020><c> more</c>

00:01:31.280 --> 00:01:31.290 align:start position:0%
could be the max - min value or more
 

00:01:31.290 --> 00:01:33.560 align:start position:0%
could be the max - min value or more
commonly<00:01:31.740><c> it</c><00:01:32.009><c> is</c><00:01:32.040><c> the</c><00:01:32.250><c> standard</c><00:01:32.670><c> deviation</c><00:01:33.420><c> of</c>

00:01:33.560 --> 00:01:33.570 align:start position:0%
commonly it is the standard deviation of
 

00:01:33.570 --> 00:01:34.550 align:start position:0%
commonly it is the standard deviation of
each<00:01:33.900><c> and</c><00:01:34.079><c> J</c>

00:01:34.550 --> 00:01:34.560 align:start position:0%
each and J
 

00:01:34.560 --> 00:01:36.859 align:start position:0%
each and J
having<00:01:35.520><c> done</c><00:01:35.759><c> this</c><00:01:36.360><c> sort</c><00:01:36.600><c> of</c><00:01:36.689><c> data</c>

00:01:36.859 --> 00:01:36.869 align:start position:0%
having done this sort of data
 

00:01:36.869 --> 00:01:38.990 align:start position:0%
having done this sort of data
pre-processing<00:01:37.229><c> here's</c><00:01:38.189><c> what</c><00:01:38.430><c> the</c><00:01:38.610><c> PCA</c>

00:01:38.990 --> 00:01:39.000 align:start position:0%
pre-processing here's what the PCA
 

00:01:39.000 --> 00:01:41.240 align:start position:0%
pre-processing here's what the PCA
algorithm<00:01:39.329><c> does</c><00:01:39.740><c> we</c><00:01:40.740><c> saw</c><00:01:40.950><c> from</c><00:01:41.130><c> the</c><00:01:41.220><c> previous</c>

00:01:41.240 --> 00:01:41.250 align:start position:0%
algorithm does we saw from the previous
 

00:01:41.250 --> 00:01:43.460 align:start position:0%
algorithm does we saw from the previous
video<00:01:41.909><c> that</c><00:01:41.939><c> what</c><00:01:42.270><c> PCA</c><00:01:42.630><c> does</c><00:01:42.689><c> is</c><00:01:43.110><c> it</c><00:01:43.229><c> tries</c><00:01:43.409><c> to</c>

00:01:43.460 --> 00:01:43.470 align:start position:0%
video that what PCA does is it tries to
 

00:01:43.470 --> 00:01:45.920 align:start position:0%
video that what PCA does is it tries to
find<00:01:43.799><c> a</c><00:01:44.130><c> lower</c><00:01:44.670><c> dimensional</c><00:01:44.759><c> subspace</c><00:01:45.390><c> onto</c>

00:01:45.920 --> 00:01:45.930 align:start position:0%
find a lower dimensional subspace onto
 

00:01:45.930 --> 00:01:47.510 align:start position:0%
find a lower dimensional subspace onto
which<00:01:46.079><c> to</c><00:01:46.110><c> project</c><00:01:46.259><c> the</c><00:01:46.619><c> data</c><00:01:46.649><c> so</c><00:01:47.189><c> as</c><00:01:47.399><c> to</c>

00:01:47.510 --> 00:01:47.520 align:start position:0%
which to project the data so as to
 

00:01:47.520 --> 00:01:50.870 align:start position:0%
which to project the data so as to
minimize<00:01:47.640><c> these</c><00:01:48.299><c> squared</c><00:01:49.340><c> projection</c><00:01:50.340><c> errors</c>

00:01:50.870 --> 00:01:50.880 align:start position:0%
minimize these squared projection errors
 

00:01:50.880 --> 00:01:52.730 align:start position:0%
minimize these squared projection errors
to<00:01:51.360><c> some</c><00:01:51.570><c> of</c><00:01:51.720><c> the</c><00:01:51.810><c> square</c><00:01:52.049><c> projection</c><00:01:52.500><c> errors</c>

00:01:52.730 --> 00:01:52.740 align:start position:0%
to some of the square projection errors
 

00:01:52.740 --> 00:01:55.040 align:start position:0%
to some of the square projection errors
as<00:01:52.950><c> the</c><00:01:53.189><c> square</c><00:01:53.790><c> of</c><00:01:53.850><c> the</c><00:01:54.149><c> lengths</c><00:01:54.810><c> of</c>

00:01:55.040 --> 00:01:55.050 align:start position:0%
as the square of the lengths of
 

00:01:55.050 --> 00:01:57.680 align:start position:0%
as the square of the lengths of
provide<00:01:55.500><c> segments</c><00:01:56.100><c> and</c><00:01:56.220><c> so</c><00:01:57.030><c> what</c><00:01:57.300><c> we</c><00:01:57.390><c> wanted</c>

00:01:57.680 --> 00:01:57.690 align:start position:0%
provide segments and so what we wanted
 

00:01:57.690 --> 00:02:02.630 align:start position:0%
provide segments and so what we wanted
to<00:01:57.810><c> do</c><00:01:57.990><c> specifically</c><00:01:58.770><c> is</c><00:01:59.250><c> find</c><00:01:59.640><c> a</c><00:01:59.790><c> vector</c><00:02:01.640><c> u1</c>

00:02:02.630 --> 00:02:02.640 align:start position:0%
to do specifically is find a vector u1
 

00:02:02.640 --> 00:02:05.450 align:start position:0%
to do specifically is find a vector u1
which<00:02:03.330><c> specifies</c><00:02:03.870><c> that</c><00:02:04.170><c> direction</c><00:02:04.530><c> or</c><00:02:04.950><c> in</c><00:02:05.370><c> the</c>

00:02:05.450 --> 00:02:05.460 align:start position:0%
which specifies that direction or in the
 

00:02:05.460 --> 00:02:08.630 align:start position:0%
which specifies that direction or in the
2d<00:02:05.790><c> case</c><00:02:05.820><c> we</c><00:02:06.660><c> want</c><00:02:06.870><c> to</c><00:02:06.960><c> find</c><00:02:07.320><c> two</c><00:02:07.500><c> vectors</c><00:02:07.980><c> u</c><00:02:08.610><c> 1</c>

00:02:08.630 --> 00:02:08.640 align:start position:0%
2d case we want to find two vectors u 1
 

00:02:08.640 --> 00:02:13.910 align:start position:0%
2d case we want to find two vectors u 1
and<00:02:09.240><c> u</c><00:02:10.229><c> 2</c><00:02:10.910><c> to</c><00:02:11.910><c> define</c><00:02:12.270><c> the</c><00:02:12.960><c> surface</c><00:02:13.470><c> onto</c><00:02:13.770><c> which</c>

00:02:13.910 --> 00:02:13.920 align:start position:0%
and u 2 to define the surface onto which
 

00:02:13.920 --> 00:02:18.050 align:start position:0%
and u 2 to define the surface onto which
to<00:02:14.070><c> project</c><00:02:14.220><c> the</c><00:02:14.580><c> data</c><00:02:14.670><c> so</c><00:02:16.550><c> just</c><00:02:17.550><c> as</c><00:02:17.790><c> a</c><00:02:17.880><c> quick</c>

00:02:18.050 --> 00:02:18.060 align:start position:0%
to project the data so just as a quick
 

00:02:18.060 --> 00:02:20.060 align:start position:0%
to project the data so just as a quick
reminder<00:02:18.420><c> of</c><00:02:18.780><c> what</c><00:02:19.110><c> reducing</c><00:02:19.710><c> the</c><00:02:19.860><c> dimension</c>

00:02:20.060 --> 00:02:20.070 align:start position:0%
reminder of what reducing the dimension
 

00:02:20.070 --> 00:02:22.430 align:start position:0%
reminder of what reducing the dimension
of<00:02:20.400><c> the</c><00:02:20.520><c> data</c><00:02:20.640><c> means</c><00:02:21.000><c> for</c><00:02:21.750><c> this</c><00:02:21.900><c> example</c><00:02:22.260><c> on</c>

00:02:22.430 --> 00:02:22.440 align:start position:0%
of the data means for this example on
 

00:02:22.440 --> 00:02:24.770 align:start position:0%
of the data means for this example on
the<00:02:22.470><c> Left</c><00:02:22.740><c> we</c><00:02:23.280><c> were</c><00:02:23.460><c> given</c><00:02:23.760><c> the</c><00:02:23.850><c> examples</c><00:02:24.270><c> X</c><00:02:24.540><c> I</c>

00:02:24.770 --> 00:02:24.780 align:start position:0%
the Left we were given the examples X I
 

00:02:24.780 --> 00:02:29.120 align:start position:0%
the Left we were given the examples X I
which<00:02:25.440><c> are</c><00:02:25.680><c> in</c><00:02:25.890><c> r2</c><00:02:26.190><c> and</c><00:02:27.560><c> what</c><00:02:28.560><c> we'd</c><00:02:28.710><c> like</c><00:02:28.830><c> to</c><00:02:28.890><c> do</c>

00:02:29.120 --> 00:02:29.130 align:start position:0%
which are in r2 and what we'd like to do
 

00:02:29.130 --> 00:02:32.870 align:start position:0%
which are in r2 and what we'd like to do
is<00:02:29.430><c> find</c><00:02:29.850><c> a</c><00:02:30.060><c> set</c><00:02:30.330><c> that</c><00:02:30.420><c> numbers</c><00:02:30.900><c> Zi</c><00:02:31.830><c> in</c><00:02:32.340><c> our</c>

00:02:32.870 --> 00:02:32.880 align:start position:0%
is find a set that numbers Zi in our
 

00:02:32.880 --> 00:02:36.110 align:start position:0%
is find a set that numbers Zi in our
with<00:02:33.810><c> wish</c><00:02:34.050><c> to</c><00:02:34.290><c> represent</c><00:02:34.470><c> our</c><00:02:34.950><c> data</c><00:02:35.130><c> right</c><00:02:35.610><c> so</c>

00:02:36.110 --> 00:02:36.120 align:start position:0%
with wish to represent our data right so
 

00:02:36.120 --> 00:02:37.910 align:start position:0%
with wish to represent our data right so
that's<00:02:36.300><c> what</c><00:02:36.510><c> a</c><00:02:36.540><c> reduction</c><00:02:36.990><c> from</c><00:02:37.290><c> 2d</c><00:02:37.710><c> to</c><00:02:37.740><c> 1d</c>

00:02:37.910 --> 00:02:37.920 align:start position:0%
that's what a reduction from 2d to 1d
 

00:02:37.920 --> 00:02:41.990 align:start position:0%
that's what a reduction from 2d to 1d
means<00:02:38.580><c> and</c><00:02:38.910><c> so</c><00:02:39.690><c> specifically</c><00:02:40.320><c> by</c><00:02:41.070><c> projecting</c>

00:02:41.990 --> 00:02:42.000 align:start position:0%
means and so specifically by projecting
 

00:02:42.000 --> 00:02:44.900 align:start position:0%
means and so specifically by projecting
the<00:02:42.630><c> data</c><00:02:42.870><c> onto</c><00:02:43.410><c> this</c><00:02:43.560><c> red</c><00:02:43.800><c> line</c><00:02:44.040><c> there</c><00:02:44.310><c> we</c>

00:02:44.900 --> 00:02:44.910 align:start position:0%
the data onto this red line there we
 

00:02:44.910 --> 00:02:47.030 align:start position:0%
the data onto this red line there we
need<00:02:45.090><c> only</c><00:02:45.300><c> one</c><00:02:45.450><c> number</c><00:02:45.870><c> to</c><00:02:46.500><c> specify</c><00:02:46.980><c> the</c>

00:02:47.030 --> 00:02:47.040 align:start position:0%
need only one number to specify the
 

00:02:47.040 --> 00:02:48.740 align:start position:0%
need only one number to specify the
position<00:02:47.310><c> of</c><00:02:47.730><c> the</c><00:02:47.820><c> points</c><00:02:48.090><c> on</c><00:02:48.180><c> the</c><00:02:48.270><c> line</c><00:02:48.300><c> so</c>

00:02:48.740 --> 00:02:48.750 align:start position:0%
position of the points on the line so
 

00:02:48.750 --> 00:02:51.980 align:start position:0%
position of the points on the line so
I'm<00:02:48.840><c> going</c><00:02:48.990><c> to</c><00:02:49.050><c> call</c><00:02:49.200><c> that</c><00:02:49.350><c> number</c><00:02:49.560><c> Z</c><00:02:50.040><c> of</c><00:02:50.310><c> Z</c><00:02:50.940><c> 1</c><00:02:51.210><c> Z</c>

00:02:51.980 --> 00:02:51.990 align:start position:0%
I'm going to call that number Z of Z 1 Z
 

00:02:51.990 --> 00:02:53.810 align:start position:0%
I'm going to call that number Z of Z 1 Z
here<00:02:52.320><c> this</c><00:02:52.560><c> is</c><00:02:52.710><c> a</c><00:02:52.860><c> real</c><00:02:53.100><c> number</c><00:02:53.460><c> so</c><00:02:53.670><c> that's</c>

00:02:53.810 --> 00:02:53.820 align:start position:0%
here this is a real number so that's
 

00:02:53.820 --> 00:02:56.180 align:start position:0%
here this is a real number so that's
like<00:02:54.030><c> a</c><00:02:54.060><c> 1</c><00:02:54.390><c> dimensional</c><00:02:54.570><c> vector</c><00:02:54.930><c> so</c><00:02:55.530><c> z1</c><00:02:55.800><c> just</c>

00:02:56.180 --> 00:02:56.190 align:start position:0%
like a 1 dimensional vector so z1 just
 

00:02:56.190 --> 00:02:58.250 align:start position:0%
like a 1 dimensional vector so z1 just
refers<00:02:56.490><c> to</c><00:02:56.520><c> the</c><00:02:56.700><c> first</c><00:02:56.940><c> component</c><00:02:57.600><c> of</c><00:02:57.780><c> this</c>

00:02:58.250 --> 00:02:58.260 align:start position:0%
refers to the first component of this
 

00:02:58.260 --> 00:03:00.290 align:start position:0%
refers to the first component of this
you<00:02:58.440><c> know</c><00:02:58.560><c> 1</c><00:02:58.980><c> by</c><00:02:59.130><c> 1</c><00:02:59.310><c> matrix</c><00:02:59.489><c> where</c><00:02:59.970><c> this</c><00:03:00.120><c> 1</c>

00:03:00.290 --> 00:03:00.300 align:start position:0%
you know 1 by 1 matrix where this 1
 

00:03:00.300 --> 00:03:03.170 align:start position:0%
you know 1 by 1 matrix where this 1
dimensional<00:03:00.660><c> vector</c><00:03:00.720><c> and</c><00:03:01.290><c> so</c><00:03:02.100><c> we</c><00:03:02.820><c> need</c><00:03:03.000><c> only</c>

00:03:03.170 --> 00:03:03.180 align:start position:0%
dimensional vector and so we need only
 

00:03:03.180 --> 00:03:05.540 align:start position:0%
dimensional vector and so we need only
one<00:03:03.690><c> number</c><00:03:03.720><c> to</c><00:03:04.140><c> specify</c><00:03:04.530><c> the</c><00:03:04.590><c> position</c><00:03:04.800><c> of</c><00:03:05.400><c> a</c>

00:03:05.540 --> 00:03:05.550 align:start position:0%
one number to specify the position of a
 

00:03:05.550 --> 00:03:09.500 align:start position:0%
one number to specify the position of a
point<00:03:05.760><c> so</c><00:03:06.570><c> if</c><00:03:06.860><c> this</c><00:03:07.860><c> example</c><00:03:08.310><c> here</c><00:03:08.820><c> was</c><00:03:09.330><c> my</c>

00:03:09.500 --> 00:03:09.510 align:start position:0%
point so if this example here was my
 

00:03:09.510 --> 00:03:12.949 align:start position:0%
point so if this example here was my
example<00:03:09.810><c> x1</c><00:03:10.620><c> then</c><00:03:11.430><c> maybe</c><00:03:11.790><c> that</c><00:03:12.360><c> gets</c><00:03:12.690><c> mapped</c>

00:03:12.949 --> 00:03:12.959 align:start position:0%
example x1 then maybe that gets mapped
 

00:03:12.959 --> 00:03:15.890 align:start position:0%
example x1 then maybe that gets mapped
here<00:03:13.380><c> and</c><00:03:13.620><c> at</c><00:03:14.130><c> this</c><00:03:14.280><c> example</c><00:03:14.670><c> was</c><00:03:15.390><c> next</c><00:03:15.630><c> to</c>

00:03:15.890 --> 00:03:15.900 align:start position:0%
here and at this example was next to
 

00:03:15.900 --> 00:03:18.740 align:start position:0%
here and at this example was next to
maybe<00:03:16.500><c> is</c><00:03:16.770><c> on</c><00:03:16.920><c> this</c><00:03:17.160><c> map</c><00:03:17.400><c> here</c><00:03:17.430><c> and</c><00:03:17.850><c> so</c><00:03:18.450><c> this</c>

00:03:18.740 --> 00:03:18.750 align:start position:0%
maybe is on this map here and so this
 

00:03:18.750 --> 00:03:21.380 align:start position:0%
maybe is on this map here and so this
point<00:03:19.080><c> here</c><00:03:19.350><c> would</c><00:03:19.709><c> be</c><00:03:19.890><c> z1</c><00:03:20.400><c> and</c><00:03:20.670><c> this</c><00:03:21.150><c> point</c>

00:03:21.380 --> 00:03:21.390 align:start position:0%
point here would be z1 and this point
 

00:03:21.390 --> 00:03:24.440 align:start position:0%
point here would be z1 and this point
here<00:03:21.690><c> will</c><00:03:21.959><c> be</c><00:03:22.080><c> Z</c><00:03:22.320><c> 2</c><00:03:22.530><c> and</c><00:03:22.770><c> similarly</c><00:03:23.520><c> you</c><00:03:24.330><c> know</c>

00:03:24.440 --> 00:03:24.450 align:start position:0%
here will be Z 2 and similarly you know
 

00:03:24.450 --> 00:03:27.050 align:start position:0%
here will be Z 2 and similarly you know
we<00:03:24.630><c> would</c><00:03:24.780><c> have</c><00:03:25.100><c> those</c><00:03:26.100><c> other</c><00:03:26.370><c> points</c><00:03:26.790><c> for</c>

00:03:27.050 --> 00:03:27.060 align:start position:0%
we would have those other points for
 

00:03:27.060 --> 00:03:31.340 align:start position:0%
we would have those other points for
these<00:03:27.630><c> are</c><00:03:27.959><c> maybe</c><00:03:28.230><c> Z</c><00:03:28.560><c> X</c><00:03:28.890><c> 3</c><00:03:29.190><c> X</c><00:03:29.430><c> 2</c><00:03:29.520><c> X</c><00:03:29.670><c> X</c><00:03:30.239><c> 3</c><00:03:30.630><c> X</c><00:03:30.840><c> 4</c><00:03:30.989><c> X</c><00:03:31.050><c> 5</c>

00:03:31.340 --> 00:03:31.350 align:start position:0%
these are maybe Z X 3 X 2 X X 3 X 4 X 5
 

00:03:31.350 --> 00:03:35.750 align:start position:0%
these are maybe Z X 3 X 2 X X 3 X 4 X 5
get<00:03:31.650><c> mapped</c><00:03:31.890><c> to</c><00:03:31.980><c> z1</c><00:03:32.310><c> z2</c><00:03:32.670><c> z3</c><00:03:33.530><c> so</c><00:03:34.530><c> what</c><00:03:35.310><c> PCA</c><00:03:35.489><c> has</c>

00:03:35.750 --> 00:03:35.760 align:start position:0%
get mapped to z1 z2 z3 so what PCA has
 

00:03:35.760 --> 00:03:38.270 align:start position:0%
get mapped to z1 z2 z3 so what PCA has
to<00:03:36.060><c> do</c><00:03:36.239><c> is</c><00:03:36.540><c> we</c><00:03:37.110><c> need</c><00:03:37.260><c> to</c><00:03:37.320><c> come</c><00:03:37.739><c> over</c><00:03:37.770><c> a</c><00:03:37.980><c> way</c><00:03:38.220><c> to</c>

00:03:38.270 --> 00:03:38.280 align:start position:0%
to do is we need to come over a way to
 

00:03:38.280 --> 00:03:40.070 align:start position:0%
to do is we need to come over a way to
compute<00:03:38.730><c> two</c><00:03:38.910><c> things</c><00:03:39.209><c> one</c><00:03:39.450><c> is</c><00:03:39.600><c> to</c><00:03:39.630><c> compute</c>

00:03:40.070 --> 00:03:40.080 align:start position:0%
compute two things one is to compute
 

00:03:40.080 --> 00:03:44.510 align:start position:0%
compute two things one is to compute
these<00:03:40.650><c> vectors</c><00:03:41.130><c> u1</c><00:03:42.350><c> and</c><00:03:43.350><c> in</c><00:03:43.530><c> this</c><00:03:43.650><c> case</c><00:03:43.920><c> u</c><00:03:44.310><c> 1</c>

00:03:44.510 --> 00:03:44.520 align:start position:0%
these vectors u1 and in this case u 1
 

00:03:44.520 --> 00:03:47.479 align:start position:0%
these vectors u1 and in this case u 1
and<00:03:44.760><c> u</c><00:03:44.790><c> 2</c><00:03:45.150><c> and</c><00:03:45.570><c> the</c><00:03:46.560><c> other</c><00:03:46.650><c> is</c><00:03:47.040><c> how</c><00:03:47.340><c> do</c><00:03:47.400><c> we</c>

00:03:47.479 --> 00:03:47.489 align:start position:0%
and u 2 and the other is how do we
 

00:03:47.489 --> 00:03:49.110 align:start position:0%
and u 2 and the other is how do we
compute<00:03:47.880><c> these</c><00:03:48.030><c> numbers</c>

00:03:49.110 --> 00:03:49.120 align:start position:0%
compute these numbers
 

00:03:49.120 --> 00:03:52.180 align:start position:0%
compute these numbers
so<00:03:50.120><c> on</c><00:03:51.080><c> the</c><00:03:51.290><c> example</c><00:03:51.650><c> on</c><00:03:51.680><c> the</c><00:03:51.800><c> left</c><00:03:51.980><c> we're</c>

00:03:52.180 --> 00:03:52.190 align:start position:0%
so on the example on the left we're
 

00:03:52.190 --> 00:03:55.600 align:start position:0%
so on the example on the left we're
reducing<00:03:52.489><c> the</c><00:03:52.910><c> data</c><00:03:53.330><c> from</c><00:03:53.690><c> 2d</c><00:03:54.050><c> to</c><00:03:54.080><c> 1d</c><00:03:54.349><c> in</c><00:03:55.250><c> the</c>

00:03:55.600 --> 00:03:55.610 align:start position:0%
reducing the data from 2d to 1d in the
 

00:03:55.610 --> 00:03:57.160 align:start position:0%
reducing the data from 2d to 1d in the
example<00:03:56.000><c> on</c><00:03:56.030><c> the</c><00:03:56.180><c> right</c><00:03:56.209><c> we</c><00:03:56.690><c> will</c><00:03:56.870><c> be</c><00:03:56.959><c> reducing</c>

00:03:57.160 --> 00:03:57.170 align:start position:0%
example on the right we will be reducing
 

00:03:57.170 --> 00:04:00.729 align:start position:0%
example on the right we will be reducing
data<00:03:57.769><c> from</c><00:03:58.400><c> three</c><00:03:59.000><c> dimensional</c><00:03:59.780><c> so</c><00:04:00.080><c> f</c><00:04:00.290><c> size</c><00:04:00.500><c> in</c>

00:04:00.729 --> 00:04:00.739 align:start position:0%
data from three dimensional so f size in
 

00:04:00.739 --> 00:04:05.589 align:start position:0%
data from three dimensional so f size in
r3<00:04:01.060><c> to</c><00:04:02.060><c> Zi</c><00:04:02.440><c> which</c><00:04:03.440><c> is</c><00:04:03.590><c> now</c><00:04:03.819><c> two</c><00:04:04.819><c> dimensional</c><00:04:05.390><c> so</c>

00:04:05.589 --> 00:04:05.599 align:start position:0%
r3 to Zi which is now two dimensional so
 

00:04:05.599 --> 00:04:07.449 align:start position:0%
r3 to Zi which is now two dimensional so
these<00:04:05.810><c> V</c><00:04:06.080><c> Z</c><00:04:06.500><c> vectors</c><00:04:06.890><c> will</c><00:04:07.130><c> now</c><00:04:07.280><c> be</c>

00:04:07.449 --> 00:04:07.459 align:start position:0%
these V Z vectors will now be
 

00:04:07.459 --> 00:04:11.410 align:start position:0%
these V Z vectors will now be
two-dimensional<00:04:07.970><c> so</c><00:04:08.599><c> in</c><00:04:08.750><c> z1</c><00:04:09.340><c> z2</c><00:04:10.340><c> like</c><00:04:10.700><c> so</c><00:04:10.940><c> and</c>

00:04:11.410 --> 00:04:11.420 align:start position:0%
two-dimensional so in z1 z2 like so and
 

00:04:11.420 --> 00:04:13.360 align:start position:0%
two-dimensional so in z1 z2 like so and
so<00:04:11.599><c> we</c><00:04:11.750><c> need</c><00:04:11.900><c> to</c><00:04:12.050><c> give</c><00:04:12.170><c> a</c><00:04:12.200><c> way</c><00:04:12.440><c> to</c><00:04:12.950><c> compute</c>

00:04:13.360 --> 00:04:13.370 align:start position:0%
so we need to give a way to compute
 

00:04:13.370 --> 00:04:16.060 align:start position:0%
so we need to give a way to compute
these<00:04:13.730><c> new</c><00:04:14.330><c> representations</c><00:04:15.170><c> that</c><00:04:15.260><c> z1</c><00:04:15.769><c> and</c><00:04:16.010><c> z2</c>

00:04:16.060 --> 00:04:16.070 align:start position:0%
these new representations that z1 and z2
 

00:04:16.070 --> 00:04:19.300 align:start position:0%
these new representations that z1 and z2
of<00:04:16.729><c> the</c><00:04:16.850><c> data</c><00:04:17.060><c> as</c><00:04:17.299><c> well</c><00:04:17.450><c> so</c><00:04:17.769><c> how</c><00:04:18.769><c> do</c><00:04:18.829><c> we</c><00:04:18.919><c> compute</c>

00:04:19.300 --> 00:04:19.310 align:start position:0%
of the data as well so how do we compute
 

00:04:19.310 --> 00:04:21.009 align:start position:0%
of the data as well so how do we compute
all<00:04:19.519><c> of</c><00:04:19.549><c> these</c><00:04:19.790><c> quantities</c><00:04:20.180><c> it</c><00:04:20.630><c> turns</c><00:04:20.810><c> out</c>

00:04:21.009 --> 00:04:21.019 align:start position:0%
all of these quantities it turns out
 

00:04:21.019 --> 00:04:23.680 align:start position:0%
all of these quantities it turns out
that<00:04:21.290><c> a</c><00:04:21.500><c> mathematical</c><00:04:22.400><c> derivation</c><00:04:22.700><c> also</c><00:04:23.389><c> the</c>

00:04:23.680 --> 00:04:23.690 align:start position:0%
that a mathematical derivation also the
 

00:04:23.690 --> 00:04:26.320 align:start position:0%
that a mathematical derivation also the
mathematical<00:04:24.320><c> proof</c><00:04:24.620><c> for</c><00:04:25.370><c> what</c><00:04:25.880><c> is</c><00:04:26.030><c> the</c><00:04:26.150><c> right</c>

00:04:26.320 --> 00:04:26.330 align:start position:0%
mathematical proof for what is the right
 

00:04:26.330 --> 00:04:29.590 align:start position:0%
mathematical proof for what is the right
value<00:04:26.780><c> for</c><00:04:26.810><c> u</c><00:04:27.260><c> 1</c><00:04:27.470><c> u</c><00:04:27.710><c> 2</c><00:04:27.740><c> Z</c><00:04:28.190><c> 1</c><00:04:28.220><c> Z</c><00:04:28.520><c> 2</c><00:04:28.550><c> and</c><00:04:28.790><c> so</c><00:04:28.910><c> on</c><00:04:28.940><c> that</c>

00:04:29.590 --> 00:04:29.600 align:start position:0%
value for u 1 u 2 Z 1 Z 2 and so on that
 

00:04:29.600 --> 00:04:31.870 align:start position:0%
value for u 1 u 2 Z 1 Z 2 and so on that
mathematical<00:04:30.350><c> proof</c><00:04:30.620><c> is</c><00:04:30.860><c> very</c><00:04:31.430><c> complicated</c>

00:04:31.870 --> 00:04:31.880 align:start position:0%
mathematical proof is very complicated
 

00:04:31.880 --> 00:04:34.600 align:start position:0%
mathematical proof is very complicated
and<00:04:32.450><c> beyond</c><00:04:32.900><c> the</c><00:04:33.020><c> scope</c><00:04:33.139><c> of</c><00:04:33.440><c> the</c><00:04:33.530><c> course</c><00:04:33.770><c> but</c>

00:04:34.600 --> 00:04:34.610 align:start position:0%
and beyond the scope of the course but
 

00:04:34.610 --> 00:04:36.640 align:start position:0%
and beyond the scope of the course but
but<00:04:35.419><c> once</c><00:04:35.600><c> you've</c><00:04:35.780><c> done</c><00:04:35.810><c> all</c><00:04:36.229><c> that</c><00:04:36.380><c> math</c>

00:04:36.640 --> 00:04:36.650 align:start position:0%
but once you've done all that math
 

00:04:36.650 --> 00:04:38.590 align:start position:0%
but once you've done all that math
derivation<00:04:37.370><c> it</c><00:04:37.610><c> turns</c><00:04:37.910><c> out</c><00:04:38.150><c> that</c><00:04:38.360><c> the</c>

00:04:38.590 --> 00:04:38.600 align:start position:0%
derivation it turns out that the
 

00:04:38.600 --> 00:04:41.260 align:start position:0%
derivation it turns out that the
procedure<00:04:39.110><c> to</c><00:04:39.530><c> actually</c><00:04:40.010><c> find</c><00:04:40.370><c> the</c><00:04:40.610><c> value</c><00:04:41.030><c> of</c>

00:04:41.260 --> 00:04:41.270 align:start position:0%
procedure to actually find the value of
 

00:04:41.270 --> 00:04:43.600 align:start position:0%
procedure to actually find the value of
u<00:04:41.510><c> 1</c><00:04:41.720><c> that</c><00:04:42.139><c> you</c><00:04:42.169><c> want</c><00:04:42.500><c> it's</c><00:04:43.040><c> not</c><00:04:43.220><c> that</c><00:04:43.400><c> hard</c>

00:04:43.600 --> 00:04:43.610 align:start position:0%
u 1 that you want it's not that hard
 

00:04:43.610 --> 00:04:45.550 align:start position:0%
u 1 that you want it's not that hard
even<00:04:43.850><c> though</c><00:04:44.000><c> so</c><00:04:44.389><c> the</c><00:04:44.600><c> mathematical</c><00:04:45.229><c> proof</c>

00:04:45.550 --> 00:04:45.560 align:start position:0%
even though so the mathematical proof
 

00:04:45.560 --> 00:04:47.950 align:start position:0%
even though so the mathematical proof
that<00:04:45.770><c> this</c><00:04:45.950><c> value</c><00:04:46.340><c> is</c><00:04:46.729><c> the</c><00:04:47.000><c> correct</c><00:04:47.300><c> value</c><00:04:47.450><c> is</c>

00:04:47.950 --> 00:04:47.960 align:start position:0%
that this value is the correct value is
 

00:04:47.960 --> 00:04:49.719 align:start position:0%
that this value is the correct value is
somewhat<00:04:48.470><c> more</c><00:04:48.650><c> involved</c><00:04:48.889><c> in</c><00:04:49.190><c> more</c><00:04:49.340><c> than</c><00:04:49.400><c> one</c>

00:04:49.719 --> 00:04:49.729 align:start position:0%
somewhat more involved in more than one
 

00:04:49.729 --> 00:04:52.090 align:start position:0%
somewhat more involved in more than one
we<00:04:49.850><c> get</c><00:04:49.970><c> into</c><00:04:50.300><c> but</c><00:04:51.020><c> let</c><00:04:51.169><c> me</c><00:04:51.260><c> just</c><00:04:51.410><c> describe</c><00:04:51.710><c> the</c>

00:04:52.090 --> 00:04:52.100 align:start position:0%
we get into but let me just describe the
 

00:04:52.100 --> 00:04:54.310 align:start position:0%
we get into but let me just describe the
specific<00:04:53.030><c> procedure</c><00:04:53.479><c> that</c><00:04:53.840><c> you</c><00:04:53.960><c> have</c><00:04:54.200><c> to</c>

00:04:54.310 --> 00:04:54.320 align:start position:0%
specific procedure that you have to
 

00:04:54.320 --> 00:04:56.320 align:start position:0%
specific procedure that you have to
implement<00:04:54.440><c> in</c><00:04:55.039><c> order</c><00:04:55.250><c> to</c><00:04:55.669><c> compute</c><00:04:56.030><c> all</c><00:04:56.300><c> of</c>

00:04:56.320 --> 00:04:56.330 align:start position:0%
implement in order to compute all of
 

00:04:56.330 --> 00:04:58.390 align:start position:0%
implement in order to compute all of
these<00:04:56.570><c> things</c><00:04:56.840><c> the</c><00:04:57.050><c> vectors</c><00:04:57.410><c> u</c><00:04:57.590><c> 1</c><00:04:57.620><c> u</c><00:04:57.830><c> 2</c><00:04:58.010><c> and</c>

00:04:58.390 --> 00:04:58.400 align:start position:0%
these things the vectors u 1 u 2 and
 

00:04:58.400 --> 00:05:01.360 align:start position:0%
these things the vectors u 1 u 2 and
these<00:04:59.330><c> vectors</c><00:04:59.990><c> Z</c><00:05:00.200><c> here's</c><00:05:00.889><c> the</c><00:05:01.010><c> procedure</c>

00:05:01.360 --> 00:05:01.370 align:start position:0%
these vectors Z here's the procedure
 

00:05:01.370 --> 00:05:03.460 align:start position:0%
these vectors Z here's the procedure
let's<00:05:02.240><c> say</c><00:05:02.419><c> we</c><00:05:02.539><c> want</c><00:05:02.720><c> to</c><00:05:02.780><c> reduce</c><00:05:03.110><c> the</c><00:05:03.289><c> data</c>

00:05:03.460 --> 00:05:03.470 align:start position:0%
let's say we want to reduce the data
 

00:05:03.470 --> 00:05:06.909 align:start position:0%
let's say we want to reduce the data
from<00:05:03.979><c> n</c><00:05:04.160><c> dimensional</c><00:05:04.700><c> to</c><00:05:05.030><c> K</c><00:05:05.360><c> dimensional</c><00:05:05.930><c> what</c>

00:05:06.909 --> 00:05:06.919 align:start position:0%
from n dimensional to K dimensional what
 

00:05:06.919 --> 00:05:08.379 align:start position:0%
from n dimensional to K dimensional what
we're<00:05:07.039><c> going</c><00:05:07.190><c> to</c><00:05:07.250><c> do</c><00:05:07.400><c> is</c><00:05:07.639><c> first</c><00:05:07.880><c> compute</c>

00:05:08.379 --> 00:05:08.389 align:start position:0%
we're going to do is first compute
 

00:05:08.389 --> 00:05:10.270 align:start position:0%
we're going to do is first compute
something<00:05:08.840><c> called</c><00:05:09.080><c> the</c><00:05:09.289><c> covariance</c><00:05:10.190><c> matrix</c>

00:05:10.270 --> 00:05:10.280 align:start position:0%
something called the covariance matrix
 

00:05:10.280 --> 00:05:12.700 align:start position:0%
something called the covariance matrix
and<00:05:10.880><c> the</c><00:05:11.180><c> covariance</c><00:05:11.210><c> matrix</c><00:05:11.780><c> is</c><00:05:12.260><c> commonly</c>

00:05:12.700 --> 00:05:12.710 align:start position:0%
and the covariance matrix is commonly
 

00:05:12.710 --> 00:05:15.100 align:start position:0%
and the covariance matrix is commonly
denoted<00:05:13.039><c> by</c><00:05:13.460><c> this</c><00:05:13.820><c> Greek</c><00:05:14.300><c> alphabet</c><00:05:14.840><c> which</c><00:05:15.080><c> is</c>

00:05:15.100 --> 00:05:15.110 align:start position:0%
denoted by this Greek alphabet which is
 

00:05:15.110 --> 00:05:18.219 align:start position:0%
denoted by this Greek alphabet which is
a<00:05:15.260><c> capital</c><00:05:16.039><c> Greek</c><00:05:16.310><c> alphabet</c><00:05:16.880><c> Sigma</c><00:05:17.180><c> it's</c><00:05:18.139><c> a</c>

00:05:18.219 --> 00:05:18.229 align:start position:0%
a capital Greek alphabet Sigma it's a
 

00:05:18.229 --> 00:05:19.810 align:start position:0%
a capital Greek alphabet Sigma it's a
bit<00:05:18.380><c> unfortunate</c><00:05:18.740><c> that</c><00:05:19.190><c> the</c><00:05:19.340><c> Greek</c><00:05:19.550><c> alphabet</c>

00:05:19.810 --> 00:05:19.820 align:start position:0%
bit unfortunate that the Greek alphabet
 

00:05:19.820 --> 00:05:22.719 align:start position:0%
bit unfortunate that the Greek alphabet
Sigma<00:05:20.300><c> looks</c><00:05:21.080><c> exactly</c><00:05:21.470><c> like</c><00:05:21.740><c> the</c><00:05:22.070><c> summation</c>

00:05:22.719 --> 00:05:22.729 align:start position:0%
Sigma looks exactly like the summation
 

00:05:22.729 --> 00:05:25.180 align:start position:0%
Sigma looks exactly like the summation
symbol<00:05:23.150><c> so</c><00:05:23.479><c> this</c><00:05:24.110><c> is</c><00:05:24.380><c> the</c><00:05:24.740><c> Greek</c><00:05:24.979><c> alphabet</c>

00:05:25.180 --> 00:05:25.190 align:start position:0%
symbol so this is the Greek alphabet
 

00:05:25.190 --> 00:05:27.790 align:start position:0%
symbol so this is the Greek alphabet
Sigma<00:05:25.820><c> is</c><00:05:26.210><c> used</c><00:05:26.450><c> to</c><00:05:26.570><c> denote</c><00:05:26.750><c> a</c><00:05:27.050><c> matrix</c><00:05:27.590><c> and</c>

00:05:27.790 --> 00:05:27.800 align:start position:0%
Sigma is used to denote a matrix and
 

00:05:27.800 --> 00:05:30.640 align:start position:0%
Sigma is used to denote a matrix and
this<00:05:28.370><c> here</c><00:05:28.700><c> is</c><00:05:28.880><c> a</c><00:05:28.910><c> summation</c><00:05:29.240><c> symbol</c><00:05:30.020><c> so</c>

00:05:30.640 --> 00:05:30.650 align:start position:0%
this here is a summation symbol so
 

00:05:30.650 --> 00:05:33.070 align:start position:0%
this here is a summation symbol so
hopefully<00:05:31.039><c> in</c><00:05:31.520><c> these</c><00:05:32.300><c> slides</c><00:05:32.599><c> there</c><00:05:32.840><c> won't</c><00:05:33.020><c> be</c>

00:05:33.070 --> 00:05:33.080 align:start position:0%
hopefully in these slides there won't be
 

00:05:33.080 --> 00:05:35.560 align:start position:0%
hopefully in these slides there won't be
ambiguity<00:05:33.740><c> about</c><00:05:34.130><c> which</c><00:05:34.370><c> is</c><00:05:34.550><c> Sigma</c><00:05:35.150><c> or</c><00:05:35.270><c> the</c>

00:05:35.560 --> 00:05:35.570 align:start position:0%
ambiguity about which is Sigma or the
 

00:05:35.570 --> 00:05:37.690 align:start position:0%
ambiguity about which is Sigma or the
matrix<00:05:36.110><c> the</c><00:05:36.470><c> covariance</c><00:05:36.919><c> matrix</c><00:05:36.979><c> M</c><00:05:37.490><c> which</c><00:05:37.669><c> is</c>

00:05:37.690 --> 00:05:37.700 align:start position:0%
matrix the covariance matrix M which is
 

00:05:37.700 --> 00:05:38.980 align:start position:0%
matrix the covariance matrix M which is
a<00:05:37.849><c> summation</c><00:05:38.210><c> symbol</c>

00:05:38.980 --> 00:05:38.990 align:start position:0%
a summation symbol
 

00:05:38.990 --> 00:05:40.510 align:start position:0%
a summation symbol
and<00:05:39.080><c> hopefully</c><00:05:39.979><c> you'll</c><00:05:40.069><c> be</c><00:05:40.100><c> clear</c><00:05:40.400><c> from</c>

00:05:40.510 --> 00:05:40.520 align:start position:0%
and hopefully you'll be clear from
 

00:05:40.520 --> 00:05:42.610 align:start position:0%
and hopefully you'll be clear from
context<00:05:41.180><c> you</c><00:05:41.300><c> know</c><00:05:41.449><c> when</c><00:05:41.960><c> I'm</c><00:05:42.080><c> using</c><00:05:42.259><c> each</c><00:05:42.590><c> one</c>

00:05:42.610 --> 00:05:42.620 align:start position:0%
context you know when I'm using each one
 

00:05:42.620 --> 00:05:45.640 align:start position:0%
context you know when I'm using each one
how<00:05:43.610><c> to</c><00:05:43.669><c> compute</c><00:05:44.120><c> this</c><00:05:44.300><c> this</c><00:05:44.569><c> matrix</c><00:05:45.229><c> Sigma</c>

00:05:45.640 --> 00:05:45.650 align:start position:0%
how to compute this this matrix Sigma
 

00:05:45.650 --> 00:05:47.529 align:start position:0%
how to compute this this matrix Sigma
and<00:05:45.860><c> let's</c><00:05:46.039><c> say</c><00:05:46.220><c> we</c><00:05:46.340><c> were</c><00:05:46.490><c> to</c><00:05:46.699><c> store</c><00:05:47.060><c> it</c><00:05:47.210><c> in</c><00:05:47.389><c> an</c>

00:05:47.529 --> 00:05:47.539 align:start position:0%
and let's say we were to store it in an
 

00:05:47.539 --> 00:05:50.980 align:start position:0%
and let's say we were to store it in an
octave<00:05:48.020><c> variable</c><00:05:48.560><c> called</c><00:05:48.860><c> Y</c><00:05:49.009><c> or</c><00:05:49.069><c> f</c><00:05:49.250><c> I</c><00:05:49.460><c> GMA</c><00:05:50.120><c> what</c>

00:05:50.980 --> 00:05:50.990 align:start position:0%
octave variable called Y or f I GMA what
 

00:05:50.990 --> 00:05:53.230 align:start position:0%
octave variable called Y or f I GMA what
we<00:05:51.110><c> need</c><00:05:51.259><c> to</c><00:05:51.380><c> do</c><00:05:51.530><c> is</c><00:05:51.800><c> then</c><00:05:52.069><c> compute</c><00:05:52.550><c> something</c>

00:05:53.230 --> 00:05:53.240 align:start position:0%
we need to do is then compute something
 

00:05:53.240 --> 00:05:55.540 align:start position:0%
we need to do is then compute something
called<00:05:53.539><c> the</c><00:05:53.660><c> eigenvectors</c><00:05:54.500><c> of</c><00:05:54.530><c> a</c><00:05:54.919><c> matrix</c><00:05:54.949><c> of</c>

00:05:55.540 --> 00:05:55.550 align:start position:0%
called the eigenvectors of a matrix of
 

00:05:55.550 --> 00:05:58.450 align:start position:0%
called the eigenvectors of a matrix of
the<00:05:55.669><c> matrix</c><00:05:56.150><c> Sigma</c><00:05:56.720><c> and</c><00:05:56.990><c> in</c><00:05:57.770><c> octave</c><00:05:58.250><c> the</c><00:05:58.370><c> way</c>

00:05:58.450 --> 00:05:58.460 align:start position:0%
the matrix Sigma and in octave the way
 

00:05:58.460 --> 00:06:00.879 align:start position:0%
the matrix Sigma and in octave the way
you<00:05:58.520><c> do</c><00:05:58.759><c> that</c><00:05:58.880><c> is</c><00:05:59.240><c> you</c><00:05:59.449><c> use</c><00:05:59.750><c> this</c><00:05:59.960><c> command</c><00:06:00.289><c> us</c><00:06:00.710><c> V</c>

00:06:00.879 --> 00:06:00.889 align:start position:0%
you do that is you use this command us V
 

00:06:00.889 --> 00:06:04.900 align:start position:0%
you do that is you use this command us V
equals<00:06:01.310><c> ng</c><00:06:01.880><c> of</c><00:06:02.240><c> Sigma</c><00:06:03.099><c> SVD</c><00:06:04.099><c> by</c><00:06:04.340><c> the</c><00:06:04.400><c> way</c><00:06:04.580><c> stands</c>

00:06:04.900 --> 00:06:04.910 align:start position:0%
equals ng of Sigma SVD by the way stands
 

00:06:04.910 --> 00:06:08.650 align:start position:0%
equals ng of Sigma SVD by the way stands
for<00:06:05.180><c> a</c><00:06:05.210><c> singular</c><00:06:05.780><c> value</c><00:06:05.930><c> decomposition</c><00:06:07.660><c> this</c>

00:06:08.650 --> 00:06:08.660 align:start position:0%
for a singular value decomposition this
 

00:06:08.660 --> 00:06:12.969 align:start position:0%
for a singular value decomposition this
is<00:06:08.900><c> a</c><00:06:09.699><c> much</c><00:06:10.699><c> more</c><00:06:10.910><c> advanced</c><00:06:11.720><c> singular</c><00:06:12.710><c> value</c>

00:06:12.969 --> 00:06:12.979 align:start position:0%
is a much more advanced singular value
 

00:06:12.979 --> 00:06:15.400 align:start position:0%
is a much more advanced singular value
decomposition<00:06:13.599><c> this</c><00:06:14.599><c> is</c><00:06:14.750><c> much</c><00:06:14.930><c> more</c><00:06:15.110><c> advanced</c>

00:06:15.400 --> 00:06:15.410 align:start position:0%
decomposition this is much more advanced
 

00:06:15.410 --> 00:06:17.050 align:start position:0%
decomposition this is much more advanced
linear<00:06:15.740><c> algebra</c><00:06:15.919><c> than</c><00:06:16.400><c> you</c><00:06:16.490><c> actually</c><00:06:16.880><c> need</c><00:06:17.030><c> to</c>

00:06:17.050 --> 00:06:17.060 align:start position:0%
linear algebra than you actually need to
 

00:06:17.060 --> 00:06:20.080 align:start position:0%
linear algebra than you actually need to
know<00:06:17.240><c> but</c><00:06:17.720><c> it</c><00:06:18.530><c> turns</c><00:06:18.710><c> out</c><00:06:18.889><c> that</c><00:06:19.099><c> when</c><00:06:19.550><c> Sigma</c><00:06:19.880><c> is</c>

00:06:20.080 --> 00:06:20.090 align:start position:0%
know but it turns out that when Sigma is
 

00:06:20.090 --> 00:06:22.240 align:start position:0%
know but it turns out that when Sigma is
a<00:06:20.270><c> covariance</c><00:06:20.389><c> matrix</c><00:06:20.900><c> there</c><00:06:21.770><c> are</c><00:06:21.860><c> a</c><00:06:21.889><c> few</c><00:06:22.039><c> ways</c>

00:06:22.240 --> 00:06:22.250 align:start position:0%
a covariance matrix there are a few ways
 

00:06:22.250 --> 00:06:25.570 align:start position:0%
a covariance matrix there are a few ways
to<00:06:22.310><c> compute</c><00:06:22.970><c> these</c><00:06:23.330><c> eigenvectors</c><00:06:24.139><c> and</c><00:06:24.590><c> if</c>

00:06:25.570 --> 00:06:25.580 align:start position:0%
to compute these eigenvectors and if
 

00:06:25.580 --> 00:06:27.730 align:start position:0%
to compute these eigenvectors and if
you're<00:06:26.030><c> an</c><00:06:26.240><c> expert</c><00:06:26.630><c> in</c><00:06:26.780><c> linear</c><00:06:27.110><c> algebra</c><00:06:27.259><c> and</c>

00:06:27.730 --> 00:06:27.740 align:start position:0%
you're an expert in linear algebra and
 

00:06:27.740 --> 00:06:29.439 align:start position:0%
you're an expert in linear algebra and
if<00:06:27.919><c> you've</c><00:06:28.070><c> heard</c><00:06:28.280><c> of</c><00:06:28.460><c> eigenvectors</c><00:06:28.910><c> before</c>

00:06:29.439 --> 00:06:29.449 align:start position:0%
if you've heard of eigenvectors before
 

00:06:29.449 --> 00:06:31.659 align:start position:0%
if you've heard of eigenvectors before
you<00:06:30.020><c> may</c><00:06:30.169><c> know</c><00:06:30.349><c> that</c><00:06:30.380><c> there's</c><00:06:30.830><c> another</c><00:06:31.130><c> octave</c>

00:06:31.659 --> 00:06:31.669 align:start position:0%
you may know that there's another octave
 

00:06:31.669 --> 00:06:34.240 align:start position:0%
you may know that there's another octave
function<00:06:32.090><c> called</c><00:06:32.330><c> F</c><00:06:32.479><c> which</c><00:06:33.380><c> can</c><00:06:33.560><c> also</c><00:06:33.710><c> be</c><00:06:33.889><c> used</c>

00:06:34.240 --> 00:06:34.250 align:start position:0%
function called F which can also be used
 

00:06:34.250 --> 00:06:36.969 align:start position:0%
function called F which can also be used
to<00:06:34.310><c> compute</c><00:06:34.610><c> the</c><00:06:34.729><c> same</c><00:06:34.909><c> thing</c><00:06:35.210><c> and</c><00:06:35.800><c> turns</c><00:06:36.800><c> out</c>

00:06:36.969 --> 00:06:36.979 align:start position:0%
to compute the same thing and turns out
 

00:06:36.979 --> 00:06:39.670 align:start position:0%
to compute the same thing and turns out
that<00:06:37.130><c> the</c><00:06:37.490><c> SVD</c><00:06:38.030><c> function</c><00:06:38.060><c> and</c><00:06:38.720><c> the</c><00:06:39.199><c> I</c><00:06:39.229><c> function</c>

00:06:39.670 --> 00:06:39.680 align:start position:0%
that the SVD function and the I function
 

00:06:39.680 --> 00:06:41.950 align:start position:0%
that the SVD function and the I function
will<00:06:40.130><c> give</c><00:06:40.280><c> you</c><00:06:40.430><c> the</c><00:06:40.580><c> same</c><00:06:40.819><c> eigen</c><00:06:41.300><c> vectors</c><00:06:41.659><c> or</c>

00:06:41.950 --> 00:06:41.960 align:start position:0%
will give you the same eigen vectors or
 

00:06:41.960 --> 00:06:44.080 align:start position:0%
will give you the same eigen vectors or
the<00:06:42.020><c> SVD</c><00:06:42.770><c> is</c><00:06:42.800><c> a</c><00:06:43.009><c> little</c><00:06:43.310><c> bit</c><00:06:43.400><c> more</c><00:06:43.580><c> numerically</c>

00:06:44.080 --> 00:06:44.090 align:start position:0%
the SVD is a little bit more numerically
 

00:06:44.090 --> 00:06:46.149 align:start position:0%
the SVD is a little bit more numerically
stable<00:06:44.150><c> so</c><00:06:44.690><c> I</c><00:06:44.720><c> tend</c><00:06:45.050><c> to</c><00:06:45.110><c> use</c><00:06:45.169><c> SVD</c><00:06:45.830><c> although</c><00:06:46.130><c> I</c>

00:06:46.149 --> 00:06:46.159 align:start position:0%
stable so I tend to use SVD although I
 

00:06:46.159 --> 00:06:47.589 align:start position:0%
stable so I tend to use SVD although I
have<00:06:46.370><c> a</c><00:06:46.400><c> few</c><00:06:46.610><c> friends</c><00:06:46.729><c> that</c><00:06:47.030><c> use</c><00:06:47.180><c> the</c><00:06:47.419><c> AI</c>

00:06:47.589 --> 00:06:47.599 align:start position:0%
have a few friends that use the AI
 

00:06:47.599 --> 00:06:50.170 align:start position:0%
have a few friends that use the AI
function<00:06:48.169><c> to</c><00:06:48.740><c> do</c><00:06:48.889><c> this</c><00:06:49.039><c> as</c><00:06:49.220><c> well</c><00:06:49.430><c> but</c><00:06:49.940><c> when</c><00:06:50.090><c> you</c>

00:06:50.170 --> 00:06:50.180 align:start position:0%
function to do this as well but when you
 

00:06:50.180 --> 00:06:52.060 align:start position:0%
function to do this as well but when you
apply<00:06:50.389><c> this</c><00:06:50.449><c> to</c><00:06:50.630><c> a</c><00:06:50.840><c> covariance</c><00:06:51.289><c> matrix</c><00:06:51.710><c> Sigma</c>

00:06:52.060 --> 00:06:52.070 align:start position:0%
apply this to a covariance matrix Sigma
 

00:06:52.070 --> 00:06:54.070 align:start position:0%
apply this to a covariance matrix Sigma
they'll<00:06:52.520><c> give</c><00:06:52.729><c> you</c><00:06:52.820><c> the</c><00:06:52.940><c> same</c><00:06:52.970><c> thing</c><00:06:53.360><c> that's</c>

00:06:54.070 --> 00:06:54.080 align:start position:0%
they'll give you the same thing that's
 

00:06:54.080 --> 00:06:55.689 align:start position:0%
they'll give you the same thing that's
because<00:06:54.409><c> the</c><00:06:54.590><c> covariance</c><00:06:55.070><c> matrix</c><00:06:55.130><c> always</c>

00:06:55.689 --> 00:06:55.699 align:start position:0%
because the covariance matrix always
 

00:06:55.699 --> 00:06:58.839 align:start position:0%
because the covariance matrix always
satisfies<00:06:56.570><c> a</c><00:06:56.949><c> mathematical</c><00:06:57.949><c> property</c><00:06:58.430><c> called</c>

00:06:58.839 --> 00:06:58.849 align:start position:0%
satisfies a mathematical property called
 

00:06:58.849 --> 00:07:01.480 align:start position:0%
satisfies a mathematical property called
a<00:06:59.060><c> symmetric</c><00:06:59.630><c> positive</c><00:07:00.259><c> semi</c><00:07:00.440><c> definite</c><00:07:00.919><c> you</c>

00:07:01.480 --> 00:07:01.490 align:start position:0%
a symmetric positive semi definite you
 

00:07:01.490 --> 00:07:02.469 align:start position:0%
a symmetric positive semi definite you
really<00:07:01.729><c> don't</c><00:07:01.940><c> need</c><00:07:02.060><c> to</c><00:07:02.120><c> know</c><00:07:02.300><c> what</c><00:07:02.449><c> that</c>

00:07:02.469 --> 00:07:02.479 align:start position:0%
really don't need to know what that
 

00:07:02.479 --> 00:07:05.439 align:start position:0%
really don't need to know what that
means<00:07:02.840><c> but</c><00:07:03.169><c> the</c><00:07:03.889><c> SVD</c><00:07:04.400><c> and</c><00:07:04.639><c> the</c><00:07:04.729><c> I</c><00:07:04.759><c> functions</c>

00:07:05.439 --> 00:07:05.449 align:start position:0%
means but the SVD and the I functions
 

00:07:05.449 --> 00:07:07.870 align:start position:0%
means but the SVD and the I functions
are<00:07:05.750><c> different</c><00:07:06.289><c> functions</c><00:07:06.409><c> but</c><00:07:07.219><c> when</c><00:07:07.580><c> they're</c>

00:07:07.870 --> 00:07:07.880 align:start position:0%
are different functions but when they're
 

00:07:07.880 --> 00:07:10.540 align:start position:0%
are different functions but when they're
applied<00:07:08.300><c> to</c><00:07:08.599><c> a</c><00:07:08.630><c> covariance</c><00:07:08.990><c> matrix</c><00:07:09.740><c> which</c><00:07:10.310><c> can</c>

00:07:10.540 --> 00:07:10.550 align:start position:0%
applied to a covariance matrix which can
 

00:07:10.550 --> 00:07:12.580 align:start position:0%
applied to a covariance matrix which can
be<00:07:10.699><c> proved</c><00:07:10.969><c> to</c><00:07:11.120><c> always</c><00:07:11.449><c> satisfy</c><00:07:11.990><c> this</c><00:07:12.259><c> sort</c><00:07:12.500><c> of</c>

00:07:12.580 --> 00:07:12.590 align:start position:0%
be proved to always satisfy this sort of
 

00:07:12.590 --> 00:07:14.620 align:start position:0%
be proved to always satisfy this sort of
a<00:07:12.740><c> mathematical</c><00:07:13.550><c> property</c><00:07:14.030><c> they'll</c><00:07:14.449><c> always</c>

00:07:14.620 --> 00:07:14.630 align:start position:0%
a mathematical property they'll always
 

00:07:14.630 --> 00:07:17.170 align:start position:0%
a mathematical property they'll always
give<00:07:15.020><c> you</c><00:07:15.080><c> the</c><00:07:15.199><c> same</c><00:07:15.380><c> thing</c><00:07:15.759><c> okay</c><00:07:16.759><c> that</c><00:07:17.030><c> was</c>

00:07:17.170 --> 00:07:17.180 align:start position:0%
give you the same thing okay that was
 

00:07:17.180 --> 00:07:18.939 align:start position:0%
give you the same thing okay that was
probably<00:07:17.419><c> much</c><00:07:17.810><c> more</c><00:07:17.990><c> linear</c><00:07:18.320><c> algebra</c><00:07:18.710><c> than</c>

00:07:18.939 --> 00:07:18.949 align:start position:0%
probably much more linear algebra than
 

00:07:18.949 --> 00:07:21.070 align:start position:0%
probably much more linear algebra than
you<00:07:19.099><c> needed</c><00:07:19.280><c> to</c><00:07:19.430><c> know</c><00:07:19.550><c> in</c><00:07:20.330><c> case</c><00:07:20.599><c> none</c><00:07:20.930><c> of</c><00:07:21.050><c> that</c>

00:07:21.070 --> 00:07:21.080 align:start position:0%
you needed to know in case none of that
 

00:07:21.080 --> 00:07:22.839 align:start position:0%
you needed to know in case none of that
made<00:07:21.349><c> sense</c><00:07:21.590><c> don't</c><00:07:21.979><c> worry</c><00:07:22.009><c> about</c><00:07:22.219><c> it</c><00:07:22.520><c> all</c><00:07:22.699><c> you</c>

00:07:22.839 --> 00:07:22.849 align:start position:0%
made sense don't worry about it all you
 

00:07:22.849 --> 00:07:24.879 align:start position:0%
made sense don't worry about it all you
need<00:07:22.969><c> to</c><00:07:23.090><c> know</c><00:07:23.240><c> is</c><00:07:23.509><c> that</c><00:07:23.690><c> this</c><00:07:24.289><c> is</c><00:07:24.349><c> a</c><00:07:24.560><c> command</c>

00:07:24.879 --> 00:07:24.889 align:start position:0%
need to know is that this is a command
 

00:07:24.889 --> 00:07:25.390 align:start position:0%
need to know is that this is a command
you<00:07:25.190><c> should</c>

00:07:25.390 --> 00:07:25.400 align:start position:0%
you should
 

00:07:25.400 --> 00:07:27.999 align:start position:0%
you should
implement<00:07:25.820><c> in</c><00:07:26.120><c> octave</c><00:07:26.389><c> and</c><00:07:26.840><c> if</c><00:07:27.830><c> you're</c>

00:07:27.999 --> 00:07:28.009 align:start position:0%
implement in octave and if you're
 

00:07:28.009 --> 00:07:29.800 align:start position:0%
implement in octave and if you're
looking<00:07:28.310><c> up</c><00:07:28.490><c> if</c><00:07:28.790><c> you're</c><00:07:29.090><c> implementing</c><00:07:29.509><c> this</c>

00:07:29.800 --> 00:07:29.810 align:start position:0%
looking up if you're implementing this
 

00:07:29.810 --> 00:07:31.810 align:start position:0%
looking up if you're implementing this
in<00:07:29.870><c> a</c><00:07:30.139><c> different</c><00:07:30.560><c> language</c><00:07:30.710><c> than</c><00:07:31.009><c> octave</c><00:07:31.669><c> or</c>

00:07:31.810 --> 00:07:31.820 align:start position:0%
in a different language than octave or
 

00:07:31.820 --> 00:07:34.330 align:start position:0%
in a different language than octave or
MATLAB<00:07:31.880><c> what</c><00:07:32.870><c> you</c><00:07:33.050><c> should</c><00:07:33.229><c> do</c><00:07:33.380><c> is</c><00:07:33.680><c> find</c><00:07:33.710><c> it</c><00:07:34.160><c> in</c>

00:07:34.330 --> 00:07:34.340 align:start position:0%
MATLAB what you should do is find it in
 

00:07:34.340 --> 00:07:36.850 align:start position:0%
MATLAB what you should do is find it in
numerical<00:07:34.970><c> linear</c><00:07:35.150><c> algebra</c><00:07:35.389><c> library</c><00:07:36.320><c> that</c>

00:07:36.850 --> 00:07:36.860 align:start position:0%
numerical linear algebra library that
 

00:07:36.860 --> 00:07:39.310 align:start position:0%
numerical linear algebra library that
can<00:07:37.190><c> compute</c><00:07:37.729><c> the</c><00:07:38.030><c> s-video</c><00:07:38.479><c> singular</c><00:07:38.960><c> value</c>

00:07:39.310 --> 00:07:39.320 align:start position:0%
can compute the s-video singular value
 

00:07:39.320 --> 00:07:41.740 align:start position:0%
can compute the s-video singular value
decomposition<00:07:39.350><c> and</c><00:07:40.220><c> there</c><00:07:41.120><c> are</c><00:07:41.240><c> many</c><00:07:41.449><c> such</c>

00:07:41.740 --> 00:07:41.750 align:start position:0%
decomposition and there are many such
 

00:07:41.750 --> 00:07:43.600 align:start position:0%
decomposition and there are many such
libraries<00:07:42.259><c> you</c><00:07:42.590><c> know</c><00:07:42.710><c> for</c><00:07:42.979><c> almost</c><00:07:43.430><c> for</c>

00:07:43.600 --> 00:07:43.610 align:start position:0%
libraries you know for almost for
 

00:07:43.610 --> 00:07:45.370 align:start position:0%
libraries you know for almost for
probably<00:07:43.910><c> all</c><00:07:44.120><c> the</c><00:07:44.330><c> major</c><00:07:44.539><c> burying</c><00:07:44.900><c> languages</c>

00:07:45.370 --> 00:07:45.380 align:start position:0%
probably all the major burying languages
 

00:07:45.380 --> 00:07:47.860 align:start position:0%
probably all the major burying languages
and<00:07:45.710><c> she</c><00:07:45.919><c> will</c><00:07:46.070><c> use</c><00:07:46.130><c> that</c><00:07:46.520><c> to</c><00:07:47.060><c> find</c><00:07:47.240><c> routine</c><00:07:47.720><c> to</c>

00:07:47.860 --> 00:07:47.870 align:start position:0%
and she will use that to find routine to
 

00:07:47.870 --> 00:07:51.550 align:start position:0%
and she will use that to find routine to
compute<00:07:48.259><c> the</c><00:07:48.350><c> matrices</c><00:07:48.650><c> you</c><00:07:49.070><c> snv</c><00:07:50.169><c> given</c><00:07:51.169><c> of</c>

00:07:51.550 --> 00:07:51.560 align:start position:0%
compute the matrices you snv given of
 

00:07:51.560 --> 00:07:53.290 align:start position:0%
compute the matrices you snv given of
the<00:07:52.009><c> covariance</c><00:07:52.280><c> matrix</c><00:07:52.490><c> Sigma</c>

00:07:53.290 --> 00:07:53.300 align:start position:0%
the covariance matrix Sigma
 

00:07:53.300 --> 00:07:55.360 align:start position:0%
the covariance matrix Sigma
so<00:07:53.570><c> just</c><00:07:54.289><c> to</c><00:07:54.380><c> fill</c><00:07:54.590><c> in</c><00:07:54.680><c> some</c><00:07:54.860><c> more</c><00:07:54.979><c> details</c>

00:07:55.360 --> 00:07:55.370 align:start position:0%
so just to fill in some more details
 

00:07:55.370 --> 00:07:58.330 align:start position:0%
so just to fill in some more details
this<00:07:56.060><c> covariance</c><00:07:56.660><c> matrix</c><00:07:57.050><c> Sigma</c><00:07:57.500><c> will</c><00:07:58.070><c> be</c><00:07:58.250><c> an</c>

00:07:58.330 --> 00:07:58.340 align:start position:0%
this covariance matrix Sigma will be an
 

00:07:58.340 --> 00:08:03.430 align:start position:0%
this covariance matrix Sigma will be an
N<00:07:58.699><c> by</c><00:07:59.270><c> n</c><00:07:59.300><c> matrix</c><00:08:01.150><c> and</c><00:08:02.150><c> one</c><00:08:02.810><c> way</c><00:08:02.930><c> to</c><00:08:02.990><c> see</c><00:08:03.229><c> that</c><00:08:03.260><c> is</c>

00:08:03.430 --> 00:08:03.440 align:start position:0%
N by n matrix and one way to see that is
 

00:08:03.440 --> 00:08:05.800 align:start position:0%
N by n matrix and one way to see that is
if<00:08:03.650><c> you</c><00:08:03.949><c> look</c><00:08:04.100><c> at</c><00:08:04.190><c> the</c><00:08:04.250><c> definition</c><00:08:04.430><c> this</c><00:08:05.389><c> is</c><00:08:05.630><c> an</c>

00:08:05.800 --> 00:08:05.810 align:start position:0%
if you look at the definition this is an
 

00:08:05.810 --> 00:08:10.150 align:start position:0%
if you look at the definition this is an
N<00:08:06.050><c> by</c><00:08:06.080><c> 1</c><00:08:06.289><c> vector</c><00:08:06.590><c> and</c><00:08:07.810><c> this</c><00:08:08.810><c> here</c><00:08:09.169><c> X</c><00:08:09.979><c> I</c>

00:08:10.150 --> 00:08:10.160 align:start position:0%
N by 1 vector and this here X I
 

00:08:10.160 --> 00:08:13.900 align:start position:0%
N by 1 vector and this here X I
transpose<00:08:10.729><c> is</c><00:08:10.970><c> 1</c><00:08:11.000><c> by</c><00:08:11.510><c> N</c><00:08:11.840><c> and</c><00:08:12.110><c> so</c><00:08:13.010><c> the</c><00:08:13.400><c> product</c>

00:08:13.900 --> 00:08:13.910 align:start position:0%
transpose is 1 by N and so the product
 

00:08:13.910 --> 00:08:15.969 align:start position:0%
transpose is 1 by N and so the product
of<00:08:14.060><c> these</c><00:08:14.210><c> two</c><00:08:14.270><c> things</c><00:08:14.720><c> is</c><00:08:15.020><c> going</c><00:08:15.289><c> to</c><00:08:15.380><c> be</c><00:08:15.590><c> an</c><00:08:15.680><c> N</c>

00:08:15.969 --> 00:08:15.979 align:start position:0%
of these two things is going to be an N
 

00:08:15.979 --> 00:08:20.050 align:start position:0%
of these two things is going to be an N
by<00:08:16.729><c> n</c><00:08:16.760><c> matrix</c><00:08:17.830><c> right</c><00:08:18.830><c> since</c><00:08:19.130><c> 1</c><00:08:19.340><c> by</c><00:08:19.490><c> NX</c><00:08:19.940><c> I</c>

00:08:20.050 --> 00:08:20.060 align:start position:0%
by n matrix right since 1 by NX I
 

00:08:20.060 --> 00:08:22.810 align:start position:0%
by n matrix right since 1 by NX I
transpose<00:08:20.510><c> 1</c><00:08:20.960><c> 1</c><00:08:21.110><c> is</c><00:08:21.500><c> 1</c><00:08:21.770><c> by</c><00:08:21.800><c> n</c><00:08:22.070><c> so</c><00:08:22.310><c> that's</c><00:08:22.490><c> a</c><00:08:22.639><c> and</c>

00:08:22.810 --> 00:08:22.820 align:start position:0%
transpose 1 1 is 1 by n so that's a and
 

00:08:22.820 --> 00:08:24.730 align:start position:0%
transpose 1 1 is 1 by n so that's a and
by<00:08:23.150><c> n</c><00:08:23.330><c> matrix</c><00:08:23.750><c> and</c><00:08:23.960><c> we</c><00:08:24.050><c> add</c><00:08:24.289><c> up</c><00:08:24.410><c> a</c><00:08:24.500><c> bunch</c><00:08:24.680><c> of</c>

00:08:24.730 --> 00:08:24.740 align:start position:0%
by n matrix and we add up a bunch of
 

00:08:24.740 --> 00:08:26.589 align:start position:0%
by n matrix and we add up a bunch of
these<00:08:24.860><c> you</c><00:08:24.919><c> still</c><00:08:25.310><c> have</c><00:08:25.460><c> an</c><00:08:25.580><c> N</c><00:08:25.759><c> by</c><00:08:25.940><c> n</c><00:08:25.970><c> matrix</c>

00:08:26.589 --> 00:08:26.599 align:start position:0%
these you still have an N by n matrix
 

00:08:26.599 --> 00:08:31.450 align:start position:0%
these you still have an N by n matrix
and<00:08:27.370><c> what</c><00:08:28.370><c> the</c><00:08:28.639><c> SVD</c><00:08:29.090><c> outputs</c><00:08:29.510><c> is</c><00:08:29.780><c> 3</c><00:08:30.500><c> matrices</c><00:08:30.860><c> u</c>

00:08:31.450 --> 00:08:31.460 align:start position:0%
and what the SVD outputs is 3 matrices u
 

00:08:31.460 --> 00:08:33.969 align:start position:0%
and what the SVD outputs is 3 matrices u
s<00:08:31.669><c> and</c><00:08:32.060><c> V</c><00:08:32.089><c> and</c><00:08:32.719><c> the</c><00:08:33.110><c> thing</c><00:08:33.289><c> we</c><00:08:33.380><c> really</c><00:08:33.409><c> need</c><00:08:33.800><c> out</c>

00:08:33.969 --> 00:08:33.979 align:start position:0%
s and V and the thing we really need out
 

00:08:33.979 --> 00:08:37.060 align:start position:0%
s and V and the thing we really need out
of<00:08:34.010><c> the</c><00:08:34.190><c> SVD</c><00:08:34.219><c> is</c><00:08:34.640><c> the</c><00:08:34.940><c> new</c><00:08:35.120><c> matrix</c><00:08:35.349><c> so</c><00:08:36.349><c> the</c><00:08:36.919><c> U</c>

00:08:37.060 --> 00:08:37.070 align:start position:0%
of the SVD is the new matrix so the U
 

00:08:37.070 --> 00:08:41.050 align:start position:0%
of the SVD is the new matrix so the U
matrix<00:08:37.360><c> will</c><00:08:38.360><c> be</c><00:08:38.539><c> also</c><00:08:38.870><c> an</c><00:08:39.500><c> N</c><00:08:39.860><c> by</c><00:08:40.070><c> n</c><00:08:40.310><c> matrix</c><00:08:40.339><c> and</c>

00:08:41.050 --> 00:08:41.060 align:start position:0%
matrix will be also an N by n matrix and
 

00:08:41.060 --> 00:08:43.329 align:start position:0%
matrix will be also an N by n matrix and
if<00:08:41.870><c> we</c><00:08:42.020><c> look</c><00:08:42.200><c> at</c><00:08:42.320><c> the</c><00:08:42.409><c> columns</c><00:08:42.979><c> of</c><00:08:43.190><c> the</c><00:08:43.310><c> U</c>

00:08:43.329 --> 00:08:43.339 align:start position:0%
if we look at the columns of the U
 

00:08:43.339 --> 00:08:47.920 align:start position:0%
if we look at the columns of the U
matrix<00:08:43.700><c> it</c><00:08:44.589><c> turns</c><00:08:45.589><c> out</c><00:08:45.800><c> that</c><00:08:46.100><c> the</c><00:08:46.970><c> columns</c><00:08:47.660><c> of</c>

00:08:47.920 --> 00:08:47.930 align:start position:0%
matrix it turns out that the columns of
 

00:08:47.930 --> 00:08:51.820 align:start position:0%
matrix it turns out that the columns of
the<00:08:48.800><c> U</c><00:08:48.830><c> matrix</c><00:08:49.209><c> will</c><00:08:50.209><c> be</c><00:08:50.330><c> exactly</c><00:08:51.020><c> those</c>

00:08:51.820 --> 00:08:51.830 align:start position:0%
the U matrix will be exactly those
 

00:08:51.830 --> 00:08:56.560 align:start position:0%
the U matrix will be exactly those
vectors<00:08:53.020><c> you</c><00:08:54.020><c> want</c><00:08:54.260><c> u</c><00:08:54.500><c> 2</c><00:08:54.709><c> and</c><00:08:54.980><c> so</c><00:08:55.190><c> on</c><00:08:55.420><c> that</c><00:08:56.420><c> we</c>

00:08:56.560 --> 00:08:56.570 align:start position:0%
vectors you want u 2 and so on that we
 

00:08:56.570 --> 00:08:59.440 align:start position:0%
vectors you want u 2 and so on that we
want<00:08:56.860><c> so</c><00:08:57.860><c> you</c><00:08:57.920><c> will</c><00:08:58.610><c> be</c><00:08:58.760><c> an</c><00:08:58.850><c> invite</c>

00:08:59.440 --> 00:08:59.450 align:start position:0%
want so you will be an invite
 

00:08:59.450 --> 00:09:02.500 align:start position:0%
want so you will be an invite
matrix<00:08:59.960><c> and</c><00:09:00.310><c> if</c><00:09:01.310><c> we</c><00:09:01.490><c> want</c><00:09:01.730><c> to</c><00:09:01.850><c> reduce</c><00:09:02.120><c> the</c><00:09:02.360><c> data</c>

00:09:02.500 --> 00:09:02.510 align:start position:0%
matrix and if we want to reduce the data
 

00:09:02.510 --> 00:09:04.780 align:start position:0%
matrix and if we want to reduce the data
from<00:09:03.050><c> n</c><00:09:03.230><c> dimensions</c><00:09:03.710><c> down</c><00:09:03.920><c> to</c><00:09:04.100><c> K</c><00:09:04.280><c> dimensions</c>

00:09:04.780 --> 00:09:04.790 align:start position:0%
from n dimensions down to K dimensions
 

00:09:04.790 --> 00:09:07.210 align:start position:0%
from n dimensions down to K dimensions
then<00:09:05.360><c> what</c><00:09:05.540><c> we</c><00:09:05.660><c> need</c><00:09:05.780><c> to</c><00:09:05.840><c> do</c><00:09:06.080><c> is</c><00:09:06.410><c> just</c><00:09:06.860><c> take</c><00:09:07.070><c> the</c>

00:09:07.210 --> 00:09:07.220 align:start position:0%
then what we need to do is just take the
 

00:09:07.220 --> 00:09:11.380 align:start position:0%
then what we need to do is just take the
first<00:09:07.400><c> K</c><00:09:07.850><c> vectors</c><00:09:08.450><c> and</c><00:09:09.010><c> that</c><00:09:10.010><c> will</c><00:09:10.130><c> give</c><00:09:10.340><c> us</c><00:09:10.390><c> u1</c>

00:09:11.380 --> 00:09:11.390 align:start position:0%
first K vectors and that will give us u1
 

00:09:11.390 --> 00:09:16.060 align:start position:0%
first K vectors and that will give us u1
up<00:09:11.630><c> to</c><00:09:12.440><c> u</c><00:09:13.330><c> K</c><00:09:14.330><c> which</c><00:09:14.660><c> are</c><00:09:14.810><c> the</c><00:09:14.990><c> K</c><00:09:15.200><c> directions</c>

00:09:16.060 --> 00:09:16.070 align:start position:0%
up to u K which are the K directions
 

00:09:16.070 --> 00:09:18.400 align:start position:0%
up to u K which are the K directions
onto<00:09:16.910><c> which</c><00:09:17.120><c> we</c><00:09:17.330><c> want</c><00:09:17.540><c> to</c><00:09:17.630><c> project</c><00:09:17.900><c> the</c><00:09:18.380><c> data</c>

00:09:18.400 --> 00:09:18.410 align:start position:0%
onto which we want to project the data
 

00:09:18.410 --> 00:09:20.920 align:start position:0%
onto which we want to project the data
so<00:09:19.340><c> to</c><00:09:19.940><c> describe</c><00:09:20.210><c> the</c><00:09:20.450><c> rest</c><00:09:20.630><c> of</c><00:09:20.690><c> the</c><00:09:20.750><c> procedure</c>

00:09:20.920 --> 00:09:20.930 align:start position:0%
so to describe the rest of the procedure
 

00:09:20.930 --> 00:09:24.520 align:start position:0%
so to describe the rest of the procedure
from<00:09:21.890><c> this</c><00:09:22.580><c> SVD</c><00:09:23.390><c> numerical</c><00:09:23.660><c> linear</c><00:09:24.320><c> algebra</c>

00:09:24.520 --> 00:09:24.530 align:start position:0%
from this SVD numerical linear algebra
 

00:09:24.530 --> 00:09:26.980 align:start position:0%
from this SVD numerical linear algebra
routine<00:09:25.190><c> we</c><00:09:25.370><c> get</c><00:09:25.550><c> this</c><00:09:25.670><c> matrix</c><00:09:25.880><c> U</c><00:09:26.390><c> and</c><00:09:26.720><c> I'm</c>

00:09:26.980 --> 00:09:26.990 align:start position:0%
routine we get this matrix U and I'm
 

00:09:26.990 --> 00:09:28.900 align:start position:0%
routine we get this matrix U and I'm
going<00:09:27.170><c> to</c><00:09:27.230><c> call</c><00:09:27.440><c> is</c><00:09:27.710><c> columns</c><00:09:28.310><c> you</c><00:09:28.730><c> want</c>

00:09:28.900 --> 00:09:28.910 align:start position:0%
going to call is columns you want
 

00:09:28.910 --> 00:09:31.750 align:start position:0%
going to call is columns you want
through<00:09:29.270><c> u</c><00:09:29.480><c> n</c><00:09:29.740><c> so</c><00:09:30.740><c> just</c><00:09:31.130><c> to</c><00:09:31.220><c> wrap</c><00:09:31.340><c> up</c><00:09:31.400><c> the</c>

00:09:31.750 --> 00:09:31.760 align:start position:0%
through u n so just to wrap up the
 

00:09:31.760 --> 00:09:34.150 align:start position:0%
through u n so just to wrap up the
description<00:09:32.180><c> of</c><00:09:32.540><c> the</c><00:09:32.600><c> rest</c><00:09:32.780><c> of</c><00:09:32.930><c> seizure</c><00:09:33.230><c> from</c>

00:09:34.150 --> 00:09:34.160 align:start position:0%
description of the rest of seizure from
 

00:09:34.160 --> 00:09:36.700 align:start position:0%
description of the rest of seizure from
the<00:09:34.490><c> SVD</c><00:09:35.240><c> numerical</c><00:09:35.420><c> linear</c><00:09:36.050><c> algebra</c><00:09:36.260><c> routine</c>

00:09:36.700 --> 00:09:36.710 align:start position:0%
the SVD numerical linear algebra routine
 

00:09:36.710 --> 00:09:40.060 align:start position:0%
the SVD numerical linear algebra routine
we<00:09:37.190><c> get</c><00:09:37.460><c> these</c><00:09:37.700><c> matrices</c><00:09:38.150><c> u</c><00:09:38.540><c> s</c><00:09:38.750><c> and</c><00:09:38.990><c> D</c><00:09:39.170><c> and</c><00:09:39.380><c> so</c>

00:09:40.060 --> 00:09:40.070 align:start position:0%
we get these matrices u s and D and so
 

00:09:40.070 --> 00:09:42.070 align:start position:0%
we get these matrices u s and D and so
here's<00:09:40.400><c> the</c><00:09:40.550><c> matrix</c><00:09:40.940><c> U</c><00:09:41.150><c> and</c><00:09:41.480><c> we're</c><00:09:41.750><c> going</c><00:09:41.930><c> to</c>

00:09:42.070 --> 00:09:42.080 align:start position:0%
here's the matrix U and we're going to
 

00:09:42.080 --> 00:09:45.340 align:start position:0%
here's the matrix U and we're going to
use<00:09:42.290><c> the</c><00:09:42.560><c> first</c><00:09:42.830><c> K</c><00:09:43.730><c> columns</c><00:09:44.170><c> of</c><00:09:45.170><c> this</c><00:09:45.290><c> matrix</c>

00:09:45.340 --> 00:09:45.350 align:start position:0%
use the first K columns of this matrix
 

00:09:45.350 --> 00:09:49.210 align:start position:0%
use the first K columns of this matrix
to<00:09:46.010><c> get</c><00:09:46.160><c> u</c><00:09:46.490><c> 1</c><00:09:46.520><c> through</c><00:09:47.030><c> u</c><00:09:47.210><c> K</c><00:09:47.800><c> now</c><00:09:48.800><c> the</c><00:09:48.860><c> other</c>

00:09:49.210 --> 00:09:49.220 align:start position:0%
to get u 1 through u K now the other
 

00:09:49.220 --> 00:09:51.040 align:start position:0%
to get u 1 through u K now the other
thing<00:09:49.430><c> we</c><00:09:49.520><c> need</c><00:09:49.640><c> to</c><00:09:49.700><c> do</c><00:09:49.910><c> is</c><00:09:50.180><c> we</c><00:09:50.420><c> need</c><00:09:50.570><c> to</c><00:09:50.720><c> come</c>

00:09:51.040 --> 00:09:51.050 align:start position:0%
thing we need to do is we need to come
 

00:09:51.050 --> 00:09:54.250 align:start position:0%
thing we need to do is we need to come
up<00:09:51.080><c> with</c><00:09:51.200><c> a</c><00:09:51.410><c> way</c><00:09:51.590><c> to</c><00:09:52.250><c> take</c><00:09:52.790><c> my</c><00:09:53.510><c> original</c><00:09:53.870><c> data</c>

00:09:54.250 --> 00:09:54.260 align:start position:0%
up with a way to take my original data
 

00:09:54.260 --> 00:09:57.400 align:start position:0%
up with a way to take my original data
set<00:09:54.710><c> X</c><00:09:55.070><c> which</c><00:09:55.400><c> is</c><00:09:55.520><c> an</c><00:09:55.640><c> RN</c><00:09:55.730><c> and</c><00:09:56.210><c> find</c><00:09:56.960><c> a</c><00:09:57.170><c> lower</c>

00:09:57.400 --> 00:09:57.410 align:start position:0%
set X which is an RN and find a lower
 

00:09:57.410 --> 00:09:59.680 align:start position:0%
set X which is an RN and find a lower
dimensional<00:09:57.790><c> representation</c><00:09:58.790><c> Z</c><00:09:59.120><c> which</c><00:09:59.390><c> is</c><00:09:59.540><c> in</c>

00:09:59.680 --> 00:09:59.690 align:start position:0%
dimensional representation Z which is in
 

00:09:59.690 --> 00:10:03.070 align:start position:0%
dimensional representation Z which is in
R<00:09:59.930><c> K</c><00:10:00.620><c> for</c><00:10:01.130><c> this</c><00:10:01.280><c> data</c><00:10:01.600><c> so</c><00:10:02.600><c> the</c><00:10:02.750><c> way</c><00:10:02.870><c> I'm</c><00:10:02.930><c> going</c>

00:10:03.070 --> 00:10:03.080 align:start position:0%
R K for this data so the way I'm going
 

00:10:03.080 --> 00:10:04.960 align:start position:0%
R K for this data so the way I'm going
to<00:10:03.140><c> do</c><00:10:03.260><c> that</c><00:10:03.440><c> is</c><00:10:03.680><c> I'm</c><00:10:03.890><c> going</c><00:10:04.070><c> to</c><00:10:04.160><c> take</c><00:10:04.820><c> the</c>

00:10:04.960 --> 00:10:04.970 align:start position:0%
to do that is I'm going to take the
 

00:10:04.970 --> 00:10:07.830 align:start position:0%
to do that is I'm going to take the
first<00:10:05.240><c> K</c><00:10:05.690><c> columns</c><00:10:05.720><c> of</c><00:10:06.440><c> the</c><00:10:06.530><c> U</c><00:10:06.560><c> matrix</c><00:10:06.890><c> simula</c>

00:10:07.830 --> 00:10:07.840 align:start position:0%
first K columns of the U matrix simula
 

00:10:07.840 --> 00:10:11.620 align:start position:0%
first K columns of the U matrix simula
construct<00:10:08.840><c> this</c><00:10:09.620><c> matrix</c><00:10:09.680><c> over</c><00:10:10.580><c> them</c><00:10:10.760><c> stack</c><00:10:11.390><c> up</c>

00:10:11.620 --> 00:10:11.630 align:start position:0%
construct this matrix over them stack up
 

00:10:11.630 --> 00:10:17.200 align:start position:0%
construct this matrix over them stack up
u<00:10:11.900><c> 1</c><00:10:12.170><c> u</c><00:10:13.010><c> 2</c><00:10:13.150><c> and</c><00:10:14.150><c> so</c><00:10:14.420><c> on</c><00:10:14.480><c> up</c><00:10:14.870><c> to</c><00:10:14.930><c> u</c><00:10:15.440><c> K</c><00:10:15.830><c> in</c><00:10:16.210><c> columns</c>

00:10:17.200 --> 00:10:17.210 align:start position:0%
u 1 u 2 and so on up to u K in columns
 

00:10:17.210 --> 00:10:19.060 align:start position:0%
u 1 u 2 and so on up to u K in columns
it's<00:10:17.510><c> really</c><00:10:17.750><c> basically</c><00:10:18.170><c> taking</c><00:10:18.560><c> you</c><00:10:18.980><c> know</c>

00:10:19.060 --> 00:10:19.070 align:start position:0%
it's really basically taking you know
 

00:10:19.070 --> 00:10:20.800 align:start position:0%
it's really basically taking you know
this<00:10:19.370><c> part</c><00:10:19.670><c> of</c><00:10:19.850><c> the</c><00:10:19.940><c> matrix</c><00:10:20.330><c> right</c><00:10:20.480><c> the</c><00:10:20.630><c> first</c>

00:10:20.800 --> 00:10:20.810 align:start position:0%
this part of the matrix right the first
 

00:10:20.810 --> 00:10:25.420 align:start position:0%
this part of the matrix right the first
K<00:10:21.170><c> columns</c><00:10:21.440><c> of</c><00:10:22.160><c> this</c><00:10:22.250><c> matrix</c><00:10:22.310><c> and</c><00:10:23.860><c> so</c><00:10:24.860><c> this</c><00:10:25.160><c> is</c>

00:10:25.420 --> 00:10:25.430 align:start position:0%
K columns of this matrix and so this is
 

00:10:25.430 --> 00:10:29.770 align:start position:0%
K columns of this matrix and so this is
going<00:10:25.850><c> to</c><00:10:25.970><c> be</c><00:10:26.090><c> an</c><00:10:26.360><c> N</c><00:10:27.080><c> by</c><00:10:27.350><c> K</c><00:10:27.770><c> matrix</c><00:10:28.600><c> I'm</c><00:10:29.600><c> going</c>

00:10:29.770 --> 00:10:29.780 align:start position:0%
going to be an N by K matrix I'm going
 

00:10:29.780 --> 00:10:31.300 align:start position:0%
going to be an N by K matrix I'm going
to<00:10:29.840><c> give</c><00:10:29.990><c> this</c><00:10:30.140><c> matrix</c><00:10:30.530><c> a</c><00:10:30.620><c> name</c><00:10:30.830><c> I'm</c><00:10:31.040><c> going</c><00:10:31.220><c> to</c>

00:10:31.300 --> 00:10:31.310 align:start position:0%
to give this matrix a name I'm going to
 

00:10:31.310 --> 00:10:36.010 align:start position:0%
to give this matrix a name I'm going to
call<00:10:31.400><c> this</c><00:10:31.760><c> matrix</c><00:10:32.390><c> u</c><00:10:33.110><c> subscript</c><00:10:34.330><c> reduce</c><00:10:35.330><c> sort</c>

00:10:36.010 --> 00:10:36.020 align:start position:0%
call this matrix u subscript reduce sort
 

00:10:36.020 --> 00:10:38.320 align:start position:0%
call this matrix u subscript reduce sort
of<00:10:36.110><c> a</c><00:10:36.230><c> reduced</c><00:10:37.160><c> version</c><00:10:37.250><c> of</c><00:10:37.820><c> the</c><00:10:37.880><c> u</c><00:10:37.970><c> matrix</c>

00:10:38.320 --> 00:10:38.330 align:start position:0%
of a reduced version of the u matrix
 

00:10:38.330 --> 00:10:40.570 align:start position:0%
of a reduced version of the u matrix
maybe<00:10:38.780><c> until</c><00:10:39.110><c> they</c><00:10:39.230><c> use</c><00:10:39.410><c> B</c><00:10:39.680><c> user</c><00:10:39.920><c> to</c><00:10:40.220><c> reduce</c>

00:10:40.570 --> 00:10:40.580 align:start position:0%
maybe until they use B user to reduce
 

00:10:40.580 --> 00:10:42.790 align:start position:0%
maybe until they use B user to reduce
the<00:10:40.700><c> dimension</c><00:10:41.120><c> of</c><00:10:41.150><c> my</c><00:10:41.270><c> data</c><00:10:41.480><c> and</c><00:10:41.900><c> the</c><00:10:42.620><c> way</c><00:10:42.740><c> I'm</c>

00:10:42.790 --> 00:10:42.800 align:start position:0%
the dimension of my data and the way I'm
 

00:10:42.800 --> 00:10:44.710 align:start position:0%
the dimension of my data and the way I'm
going<00:10:42.950><c> to</c><00:10:42.980><c> compute</c><00:10:43.310><c> Z</c><00:10:43.580><c> is</c><00:10:43.880><c> going</c><00:10:44.180><c> to</c><00:10:44.270><c> let</c><00:10:44.420><c> Z</c><00:10:44.690><c> be</c>

00:10:44.710 --> 00:10:44.720 align:start position:0%
going to compute Z is going to let Z be
 

00:10:44.720 --> 00:10:49.470 align:start position:0%
going to compute Z is going to let Z be
equal<00:10:45.230><c> to</c><00:10:45.410><c> this</c><00:10:46.070><c> u</c><00:10:46.430><c> reduced</c><00:10:46.790><c> matrix</c><00:10:47.350><c> transpose</c>

00:10:49.470 --> 00:10:49.480 align:start position:0%
equal to this u reduced matrix transpose
 

00:10:49.480 --> 00:10:52.620 align:start position:0%
equal to this u reduced matrix transpose
times<00:10:49.810><c> X</c><00:10:50.140><c> or</c><00:10:50.740><c> alternatively</c><00:10:51.700><c> you</c><00:10:52.030><c> know</c><00:10:52.180><c> to</c>

00:10:52.620 --> 00:10:52.630 align:start position:0%
times X or alternatively you know to
 

00:10:52.630 --> 00:10:54.020 align:start position:0%
times X or alternatively you know to
write<00:10:52.810><c> down</c><00:10:52.960><c> what</c><00:10:53.140><c> this</c><00:10:53.260><c> transpose</c><00:10:53.770><c> means</c>

00:10:54.020 --> 00:10:54.030 align:start position:0%
write down what this transpose means
 

00:10:54.030 --> 00:10:56.400 align:start position:0%
write down what this transpose means
when<00:10:55.030><c> I</c><00:10:55.060><c> take</c><00:10:55.270><c> the</c><00:10:55.360><c> transpose</c><00:10:55.750><c> of</c><00:10:55.900><c> this</c><00:10:56.140><c> new</c>

00:10:56.400 --> 00:10:56.410 align:start position:0%
when I take the transpose of this new
 

00:10:56.410 --> 00:10:58.440 align:start position:0%
when I take the transpose of this new
reduce<00:10:56.740><c> matrix</c><00:10:57.220><c> well</c><00:10:57.760><c> I'm</c><00:10:57.850><c> going</c><00:10:58.060><c> to</c><00:10:58.120><c> end</c><00:10:58.300><c> up</c>

00:10:58.440 --> 00:10:58.450 align:start position:0%
reduce matrix well I'm going to end up
 

00:10:58.450 --> 00:11:01.620 align:start position:0%
reduce matrix well I'm going to end up
with<00:10:58.660><c> is</c><00:10:58.960><c> these</c><00:10:59.590><c> vectors</c><00:11:00.160><c> now</c><00:11:00.460><c> in</c><00:11:00.760><c> rows</c><00:11:01.120><c> I</c><00:11:01.480><c> have</c>

00:11:01.620 --> 00:11:01.630 align:start position:0%
with is these vectors now in rows I have
 

00:11:01.630 --> 00:11:07.470 align:start position:0%
with is these vectors now in rows I have
u<00:11:01.870><c> 1</c><00:11:02.170><c> transpose</c><00:11:02.440><c> down</c><00:11:03.250><c> to</c><00:11:03.430><c> UK</c><00:11:04.170><c> transpose</c><00:11:06.480><c> and</c>

00:11:07.470 --> 00:11:07.480 align:start position:0%
u 1 transpose down to UK transpose and
 

00:11:07.480 --> 00:11:10.890 align:start position:0%
u 1 transpose down to UK transpose and
think<00:11:07.720><c> that</c><00:11:07.870><c> times</c><00:11:08.830><c> X</c><00:11:09.070><c> and</c><00:11:09.480><c> that's</c><00:11:10.480><c> how</c><00:11:10.660><c> I</c><00:11:10.690><c> get</c>

00:11:10.890 --> 00:11:10.900 align:start position:0%
think that times X and that's how I get
 

00:11:10.900 --> 00:11:13.230 align:start position:0%
think that times X and that's how I get
my<00:11:10.960><c> vector</c><00:11:11.410><c> Z</c><00:11:11.680><c> just</c><00:11:12.670><c> to</c><00:11:12.730><c> make</c><00:11:12.850><c> sure</c><00:11:12.970><c> that</c><00:11:13.120><c> these</c>

00:11:13.230 --> 00:11:13.240 align:start position:0%
my vector Z just to make sure that these
 

00:11:13.240 --> 00:11:16.230 align:start position:0%
my vector Z just to make sure that these
dimensions<00:11:13.780><c> make</c><00:11:14.230><c> sense</c><00:11:14.560><c> this</c><00:11:15.520><c> matrix</c><00:11:16.000><c> here</c>

00:11:16.230 --> 00:11:16.240 align:start position:0%
dimensions make sense this matrix here
 

00:11:16.240 --> 00:11:19.350 align:start position:0%
dimensions make sense this matrix here
is<00:11:16.300><c> going</c><00:11:16.600><c> to</c><00:11:16.720><c> be</c><00:11:16.810><c> K</c><00:11:17.080><c> by</c><00:11:17.110><c> N</c><00:11:17.590><c> and</c><00:11:17.620><c> X</c><00:11:17.970><c> here</c><00:11:18.970><c> is</c>

00:11:19.350 --> 00:11:19.360 align:start position:0%
is going to be K by N and X here is
 

00:11:19.360 --> 00:11:22.110 align:start position:0%
is going to be K by N and X here is
going<00:11:19.600><c> to</c><00:11:19.690><c> be</c><00:11:19.780><c> n</c><00:11:19.960><c> by</c><00:11:20.380><c> 1</c><00:11:20.830><c> and</c><00:11:21.100><c> so</c><00:11:21.580><c> their</c><00:11:21.820><c> product</c>

00:11:22.110 --> 00:11:22.120 align:start position:0%
going to be n by 1 and so their product
 

00:11:22.120 --> 00:11:28.370 align:start position:0%
going to be n by 1 and so their product
here<00:11:22.600><c> will</c><00:11:23.230><c> be</c><00:11:23.380><c> K</c><00:11:23.770><c> by</c><00:11:24.280><c> 1</c><00:11:24.310><c> and</c><00:11:24.850><c> so</c><00:11:25.150><c> Z</c><00:11:25.960><c> is</c><00:11:27.210><c> K</c>

00:11:28.370 --> 00:11:28.380 align:start position:0%
here will be K by 1 and so Z is K
 

00:11:28.380 --> 00:11:30.750 align:start position:0%
here will be K by 1 and so Z is K
dimensional<00:11:29.380><c> the</c><00:11:29.680><c> K</c><00:11:30.010><c> dimensional</c><00:11:30.400><c> vector</c>

00:11:30.750 --> 00:11:30.760 align:start position:0%
dimensional the K dimensional vector
 

00:11:30.760 --> 00:11:32.970 align:start position:0%
dimensional the K dimensional vector
which<00:11:31.150><c> is</c><00:11:31.180><c> exactly</c><00:11:31.690><c> what</c><00:11:31.930><c> we</c><00:11:32.050><c> wanted</c><00:11:32.350><c> and</c><00:11:32.590><c> of</c>

00:11:32.970 --> 00:11:32.980 align:start position:0%
which is exactly what we wanted and of
 

00:11:32.980 --> 00:11:34.890 align:start position:0%
which is exactly what we wanted and of
course<00:11:33.190><c> these</c><00:11:33.700><c> X's</c><00:11:34.210><c> here</c><00:11:34.360><c> right</c><00:11:34.630><c> can</c><00:11:34.870><c> be</c>

00:11:34.890 --> 00:11:34.900 align:start position:0%
course these X's here right can be
 

00:11:34.900 --> 00:11:36.990 align:start position:0%
course these X's here right can be
examples<00:11:35.890><c> in</c><00:11:36.040><c> our</c><00:11:36.130><c> training</c><00:11:36.190><c> set</c><00:11:36.700><c> can</c><00:11:36.970><c> be</c>

00:11:36.990 --> 00:11:37.000 align:start position:0%
examples in our training set can be
 

00:11:37.000 --> 00:11:38.760 align:start position:0%
examples in our training set can be
examples<00:11:37.090><c> my</c><00:11:37.660><c> cross-validation</c><00:11:38.020><c> set</c><00:11:38.560><c> can</c><00:11:38.740><c> be</c>

00:11:38.760 --> 00:11:38.770 align:start position:0%
examples my cross-validation set can be
 

00:11:38.770 --> 00:11:40.920 align:start position:0%
examples my cross-validation set can be
examples<00:11:38.830><c> on</c><00:11:39.370><c> a</c><00:11:39.400><c> test</c><00:11:39.670><c> set</c><00:11:39.850><c> and</c><00:11:40.060><c> for</c><00:11:40.690><c> example</c>

00:11:40.920 --> 00:11:40.930 align:start position:0%
examples on a test set and for example
 

00:11:40.930 --> 00:11:42.900 align:start position:0%
examples on a test set and for example
if<00:11:41.350><c> you</c><00:11:41.650><c> know</c><00:11:41.740><c> I</c><00:11:41.800><c> want</c><00:11:42.040><c> to</c><00:11:42.100><c> take</c><00:11:42.310><c> training</c>

00:11:42.900 --> 00:11:42.910 align:start position:0%
if you know I want to take training
 

00:11:42.910 --> 00:11:47.430 align:start position:0%
if you know I want to take training
example<00:11:43.390><c> I</c><00:11:43.600><c> I</c><00:11:44.350><c> can</c><00:11:44.650><c> write</c><00:11:44.830><c> this</c><00:11:45.010><c> as</c><00:11:45.220><c> X</c><00:11:45.670><c> I</c><00:11:45.910><c> X</c><00:11:46.810><c> I</c>

00:11:47.430 --> 00:11:47.440 align:start position:0%
example I I can write this as X I X I
 

00:11:47.440 --> 00:11:50.010 align:start position:0%
example I I can write this as X I X I
and<00:11:47.770><c> that's</c><00:11:48.070><c> what</c><00:11:48.310><c> will</c><00:11:48.490><c> give</c><00:11:48.640><c> me</c><00:11:48.880><c> Z</c><00:11:49.450><c> I</c><00:11:49.480><c> over</c>

00:11:50.010 --> 00:11:50.020 align:start position:0%
and that's what will give me Z I over
 

00:11:50.020 --> 00:11:53.580 align:start position:0%
and that's what will give me Z I over
there<00:11:50.260><c> so</c><00:11:51.100><c> to</c><00:11:51.160><c> summarize</c><00:11:51.880><c> here's</c><00:11:52.420><c> the</c><00:11:52.900><c> PCA</c>

00:11:53.580 --> 00:11:53.590 align:start position:0%
there so to summarize here's the PCA
 

00:11:53.590 --> 00:11:56.550 align:start position:0%
there so to summarize here's the PCA
algorithm<00:11:54.100><c> on</c><00:11:54.490><c> one</c><00:11:54.850><c> slide</c><00:11:55.410><c> after</c><00:11:56.410><c> me</c>

00:11:56.550 --> 00:11:56.560 align:start position:0%
algorithm on one slide after me
 

00:11:56.560 --> 00:11:58.830 align:start position:0%
algorithm on one slide after me
normalization<00:11:57.280><c> says</c><00:11:57.670><c> ensure</c><00:11:58.360><c> every</c><00:11:58.630><c> feature</c>

00:11:58.830 --> 00:11:58.840 align:start position:0%
normalization says ensure every feature
 

00:11:58.840 --> 00:12:00.480 align:start position:0%
normalization says ensure every feature
a<00:11:58.990><c> zero</c><00:11:59.260><c> mean</c><00:11:59.410><c> and</c><00:11:59.680><c> optionally</c><00:12:00.280><c> feature</c>

00:12:00.480 --> 00:12:00.490 align:start position:0%
a zero mean and optionally feature
 

00:12:00.490 --> 00:12:02.910 align:start position:0%
a zero mean and optionally feature
scaling<00:12:00.790><c> which</c><00:12:01.570><c> you</c><00:12:02.410><c> really</c><00:12:02.590><c> should</c><00:12:02.800><c> do</c>

00:12:02.910 --> 00:12:02.920 align:start position:0%
scaling which you really should do
 

00:12:02.920 --> 00:12:04.650 align:start position:0%
scaling which you really should do
feature<00:12:03.130><c> scaling</c><00:12:03.460><c> of</c><00:12:03.910><c> your</c><00:12:04.030><c> features</c><00:12:04.210><c> take</c><00:12:04.420><c> on</c>

00:12:04.650 --> 00:12:04.660 align:start position:0%
feature scaling of your features take on
 

00:12:04.660 --> 00:12:06.720 align:start position:0%
feature scaling of your features take on
very<00:12:04.720><c> different</c><00:12:05.170><c> ranges</c><00:12:05.320><c> of</c><00:12:05.740><c> values</c><00:12:06.070><c> this</c>

00:12:06.720 --> 00:12:06.730 align:start position:0%
very different ranges of values this
 

00:12:06.730 --> 00:12:09.270 align:start position:0%
very different ranges of values this
after<00:12:07.090><c> this</c><00:12:07.240><c> pre-processing</c><00:12:08.140><c> we</c><00:12:08.590><c> compute</c><00:12:09.070><c> the</c>

00:12:09.270 --> 00:12:09.280 align:start position:0%
after this pre-processing we compute the
 

00:12:09.280 --> 00:12:14.010 align:start position:0%
after this pre-processing we compute the
covariance<00:12:09.580><c> matrix</c><00:12:09.910><c> Sigma</c><00:12:10.540><c> like</c><00:12:10.900><c> so</c><00:12:11.140><c> and</c><00:12:13.020><c> by</c>

00:12:14.010 --> 00:12:14.020 align:start position:0%
covariance matrix Sigma like so and by
 

00:12:14.020 --> 00:12:17.310 align:start position:0%
covariance matrix Sigma like so and by
the<00:12:14.080><c> way</c><00:12:14.230><c> if</c><00:12:14.560><c> your</c><00:12:15.310><c> data</c><00:12:15.640><c> is</c><00:12:16.060><c> given</c><00:12:16.780><c> you</c><00:12:17.260><c> know</c>

00:12:17.310 --> 00:12:17.320 align:start position:0%
the way if your data is given you know
 

00:12:17.320 --> 00:12:18.990 align:start position:0%
the way if your data is given you know
as<00:12:17.500><c> a</c><00:12:17.530><c> matrix</c><00:12:18.010><c> like</c><00:12:18.100><c> this</c><00:12:18.220><c> if</c><00:12:18.610><c> you</c><00:12:18.730><c> have</c><00:12:18.880><c> your</c>

00:12:18.990 --> 00:12:19.000 align:start position:0%
as a matrix like this if you have your
 

00:12:19.000 --> 00:12:23.070 align:start position:0%
as a matrix like this if you have your
data<00:12:19.200><c> given</c><00:12:20.200><c> in</c><00:12:21.270><c> rows</c><00:12:22.270><c> like</c><00:12:22.390><c> this</c><00:12:22.540><c> to</c><00:12:22.870><c> give</c><00:12:23.050><c> a</c>

00:12:23.070 --> 00:12:23.080 align:start position:0%
data given in rows like this to give a
 

00:12:23.080 --> 00:12:25.830 align:start position:0%
data given in rows like this to give a
matrix<00:12:24.040><c> capital</c><00:12:24.400><c> X</c><00:12:24.700><c> which</c><00:12:24.970><c> is</c><00:12:25.270><c> your</c><00:12:25.510><c> entire</c>

00:12:25.830 --> 00:12:25.840 align:start position:0%
matrix capital X which is your entire
 

00:12:25.840 --> 00:12:29.400 align:start position:0%
matrix capital X which is your entire
training<00:12:26.140><c> set</c><00:12:26.440><c> latenan</c><00:12:27.370><c> rows</c><00:12:28.080><c> X</c><00:12:29.080><c> 1</c><00:12:29.290><c> transpose</c>

00:12:29.400 --> 00:12:29.410 align:start position:0%
training set latenan rows X 1 transpose
 

00:12:29.410 --> 00:12:32.880 align:start position:0%
training set latenan rows X 1 transpose
down<00:12:29.980><c> to</c><00:12:30.130><c> exempt</c><00:12:30.430><c> transpose</c><00:12:30.880><c> this</c><00:12:31.890><c> this</c>

00:12:32.880 --> 00:12:32.890 align:start position:0%
down to exempt transpose this this
 

00:12:32.890 --> 00:12:35.040 align:start position:0%
down to exempt transpose this this
covariance<00:12:33.730><c> matrix</c><00:12:34.090><c> Sigma</c><00:12:34.390><c> actually</c><00:12:34.840><c> has</c><00:12:35.020><c> a</c>

00:12:35.040 --> 00:12:35.050 align:start position:0%
covariance matrix Sigma actually has a
 

00:12:35.050 --> 00:12:37.680 align:start position:0%
covariance matrix Sigma actually has a
nice<00:12:35.350><c> vectorizing</c><00:12:35.580><c> implementation</c><00:12:36.630><c> so</c><00:12:37.630><c> that</c>

00:12:37.680 --> 00:12:37.690 align:start position:0%
nice vectorizing implementation so that
 

00:12:37.690 --> 00:12:39.690 align:start position:0%
nice vectorizing implementation so that
you<00:12:37.870><c> can</c><00:12:38.020><c> implement</c><00:12:38.290><c> in</c><00:12:38.740><c> octave</c><00:12:39.190><c> you</c><00:12:39.580><c> can</c>

00:12:39.690 --> 00:12:39.700 align:start position:0%
you can implement in octave you can
 

00:12:39.700 --> 00:12:43.500 align:start position:0%
you can implement in octave you can
limit<00:12:39.790><c> when</c><00:12:40.060><c> Sigma</c><00:12:40.300><c> equals</c><00:12:41.020><c> 1</c><00:12:41.740><c> over</c><00:12:41.950><c> m</c>

00:12:43.500 --> 00:12:43.510 align:start position:0%
limit when Sigma equals 1 over m
 

00:12:43.510 --> 00:12:46.879 align:start position:0%
limit when Sigma equals 1 over m
times<00:12:44.310><c> X</c><00:12:45.310><c> which</c><00:12:45.699><c> is</c><00:12:45.820><c> this</c><00:12:45.970><c> matrix</c><00:12:46.209><c> up</c><00:12:46.480><c> here</c>

00:12:46.879 --> 00:12:46.889 align:start position:0%
times X which is this matrix up here
 

00:12:46.889 --> 00:12:52.680 align:start position:0%
times X which is this matrix up here
transpose<00:12:47.970><c> times</c><00:12:48.970><c> X</c><00:12:49.350><c> and</c><00:12:50.350><c> this</c><00:12:51.690><c> simple</c>

00:12:52.680 --> 00:12:52.690 align:start position:0%
transpose times X and this simple
 

00:12:52.690 --> 00:12:53.970 align:start position:0%
transpose times X and this simple
expression<00:12:52.990><c> that's</c><00:12:53.529><c> a</c><00:12:53.649><c> vectorized</c>

00:12:53.970 --> 00:12:53.980 align:start position:0%
expression that's a vectorized
 

00:12:53.980 --> 00:12:55.920 align:start position:0%
expression that's a vectorized
implementation<00:12:54.880><c> for</c><00:12:55.060><c> how</c><00:12:55.180><c> to</c><00:12:55.240><c> compute</c><00:12:55.660><c> the</c>

00:12:55.920 --> 00:12:55.930 align:start position:0%
implementation for how to compute the
 

00:12:55.930 --> 00:12:59.040 align:start position:0%
implementation for how to compute the
matrix<00:12:56.800><c> Sigma</c><00:12:57.430><c> I'm</c><00:12:58.060><c> not</c><00:12:58.360><c> going</c><00:12:58.540><c> to</c><00:12:58.600><c> prove</c><00:12:58.810><c> that</c>

00:12:59.040 --> 00:12:59.050 align:start position:0%
matrix Sigma I'm not going to prove that
 

00:12:59.050 --> 00:13:00.689 align:start position:0%
matrix Sigma I'm not going to prove that
this<00:12:59.199><c> is</c><00:12:59.260><c> a</c><00:12:59.380><c> correct</c><00:12:59.649><c> factorization</c><00:13:00.010><c> but</c><00:13:00.610><c> you</c>

00:13:00.689 --> 00:13:00.699 align:start position:0%
this is a correct factorization but you
 

00:13:00.699 --> 00:13:02.460 align:start position:0%
this is a correct factorization but you
want<00:13:00.940><c> you</c><00:13:01.029><c> can</c><00:13:01.209><c> either</c><00:13:01.360><c> you</c><00:13:01.750><c> know</c><00:13:01.839><c> numerically</c>

00:13:02.460 --> 00:13:02.470 align:start position:0%
want you can either you know numerically
 

00:13:02.470 --> 00:13:04.019 align:start position:0%
want you can either you know numerically
test<00:13:02.709><c> this</c><00:13:02.860><c> out</c><00:13:02.980><c> yourself</c><00:13:03.339><c> by</c><00:13:03.490><c> trying</c><00:13:03.699><c> out</c><00:13:03.880><c> an</c>

00:13:04.019 --> 00:13:04.029 align:start position:0%
test this out yourself by trying out an
 

00:13:04.029 --> 00:13:06.360 align:start position:0%
test this out yourself by trying out an
octave<00:13:04.360><c> and</c><00:13:04.540><c> making</c><00:13:04.810><c> sure</c><00:13:04.990><c> that</c><00:13:05.290><c> both</c><00:13:05.980><c> this</c>

00:13:06.360 --> 00:13:06.370 align:start position:0%
octave and making sure that both this
 

00:13:06.370 --> 00:13:08.040 align:start position:0%
octave and making sure that both this
and<00:13:06.610><c> this</c><00:13:06.850><c> implementations</c><00:13:07.630><c> give</c><00:13:07.779><c> the</c><00:13:07.870><c> same</c>

00:13:08.040 --> 00:13:08.050 align:start position:0%
and this implementations give the same
 

00:13:08.050 --> 00:13:09.540 align:start position:0%
and this implementations give the same
answers<00:13:08.380><c> or</c><00:13:08.680><c> you</c><00:13:08.769><c> can</c><00:13:08.889><c> try</c><00:13:09.100><c> to</c><00:13:09.160><c> prove</c><00:13:09.370><c> it</c>

00:13:09.540 --> 00:13:09.550 align:start position:0%
answers or you can try to prove it
 

00:13:09.550 --> 00:13:11.790 align:start position:0%
answers or you can try to prove it
yourself<00:13:09.820><c> mathematically</c><00:13:10.690><c> either</c><00:13:11.350><c> way</c><00:13:11.560><c> but</c>

00:13:11.790 --> 00:13:11.800 align:start position:0%
yourself mathematically either way but
 

00:13:11.800 --> 00:13:13.170 align:start position:0%
yourself mathematically either way but
this<00:13:12.160><c> is</c><00:13:12.220><c> a</c><00:13:12.370><c> correct</c><00:13:12.730><c> vectorized</c>

00:13:13.170 --> 00:13:13.180 align:start position:0%
this is a correct vectorized
 

00:13:13.180 --> 00:13:15.439 align:start position:0%
this is a correct vectorized
implementation<00:13:13.899><c> file</c><00:13:14.589><c> to</c><00:13:14.740><c> compute</c><00:13:15.040><c> Sigma</c>

00:13:15.439 --> 00:13:15.449 align:start position:0%
implementation file to compute Sigma
 

00:13:15.449 --> 00:13:18.689 align:start position:0%
implementation file to compute Sigma
next<00:13:16.449><c> we</c><00:13:16.600><c> can</c><00:13:16.750><c> apply</c><00:13:16.870><c> the</c><00:13:17.290><c> SVD</c><00:13:18.010><c> routine</c><00:13:18.399><c> to</c><00:13:18.550><c> get</c>

00:13:18.689 --> 00:13:18.699 align:start position:0%
next we can apply the SVD routine to get
 

00:13:18.699 --> 00:13:22.980 align:start position:0%
next we can apply the SVD routine to get
us<00:13:19.149><c> n</c><00:13:19.389><c> V</c><00:13:19.600><c> and</c><00:13:19.870><c> then</c><00:13:20.800><c> we</c><00:13:20.829><c> grab</c><00:13:21.430><c> the</c><00:13:22.209><c> first</c><00:13:22.540><c> K</c>

00:13:22.980 --> 00:13:22.990 align:start position:0%
us n V and then we grab the first K
 

00:13:22.990 --> 00:13:25.710 align:start position:0%
us n V and then we grab the first K
columns<00:13:23.019><c> of</c><00:13:23.860><c> the</c><00:13:24.490><c> U</c><00:13:24.519><c> matrix</c><00:13:24.850><c> to</c><00:13:25.180><c> get</c><00:13:25.329><c> u</c><00:13:25.540><c> reduce</c>

00:13:25.710 --> 00:13:25.720 align:start position:0%
columns of the U matrix to get u reduce
 

00:13:25.720 --> 00:13:29.370 align:start position:0%
columns of the U matrix to get u reduce
then<00:13:26.589><c> finally</c><00:13:27.160><c> this</c><00:13:27.820><c> defines</c><00:13:28.269><c> how</c><00:13:28.480><c> we</c><00:13:28.720><c> go</c><00:13:29.110><c> from</c>

00:13:29.370 --> 00:13:29.380 align:start position:0%
then finally this defines how we go from
 

00:13:29.380 --> 00:13:32.250 align:start position:0%
then finally this defines how we go from
a<00:13:29.649><c> feature</c><00:13:30.250><c> vector</c><00:13:30.370><c> X</c><00:13:30.820><c> to</c><00:13:31.600><c> this</c><00:13:31.779><c> reduced</c>

00:13:32.250 --> 00:13:32.260 align:start position:0%
a feature vector X to this reduced
 

00:13:32.260 --> 00:13:34.889 align:start position:0%
a feature vector X to this reduced
dimension<00:13:32.769><c> representation</c><00:13:33.430><c> Z</c><00:13:33.820><c> and</c><00:13:34.060><c> similar</c>

00:13:34.889 --> 00:13:34.899 align:start position:0%
dimension representation Z and similar
 

00:13:34.899 --> 00:13:38.040 align:start position:0%
dimension representation Z and similar
to<00:13:35.139><c> came</c><00:13:35.740><c> in</c><00:13:35.949><c> severe</c><00:13:36.339><c> applying</c><00:13:36.790><c> PCA</c><00:13:37.029><c> the</c><00:13:37.899><c> way</c>

00:13:38.040 --> 00:13:38.050 align:start position:0%
to came in severe applying PCA the way
 

00:13:38.050 --> 00:13:40.530 align:start position:0%
to came in severe applying PCA the way
you'd<00:13:38.199><c> apply</c><00:13:38.500><c> this</c><00:13:38.560><c> is</c><00:13:39.040><c> with</c><00:13:39.220><c> vectors</c><00:13:39.610><c> X</c><00:13:39.970><c> in</c><00:13:40.300><c> RN</c>

00:13:40.530 --> 00:13:40.540 align:start position:0%
you'd apply this is with vectors X in RN
 

00:13:40.540 --> 00:13:44.250 align:start position:0%
you'd apply this is with vectors X in RN
right<00:13:41.079><c> so</c><00:13:41.350><c> this</c><00:13:41.740><c> is</c><00:13:41.800><c> not</c><00:13:42.220><c> done</c><00:13:42.610><c> with</c><00:13:43.180><c> the</c><00:13:43.420><c> X</c><00:13:43.959><c> 0</c>

00:13:44.250 --> 00:13:44.260 align:start position:0%
right so this is not done with the X 0
 

00:13:44.260 --> 00:13:48.480 align:start position:0%
right so this is not done with the X 0
equals<00:13:45.070><c> 1</c><00:13:45.510><c> Convention</c><00:13:46.510><c> so</c><00:13:47.110><c> that</c><00:13:47.529><c> was</c><00:13:47.800><c> a</c><00:13:48.010><c> PCA</c>

00:13:48.480 --> 00:13:48.490 align:start position:0%
equals 1 Convention so that was a PCA
 

00:13:48.490 --> 00:13:51.780 align:start position:0%
equals 1 Convention so that was a PCA
algorithm<00:13:49.319><c> one</c><00:13:50.319><c> thing</c><00:13:50.500><c> I</c><00:13:50.589><c> didn't</c><00:13:50.980><c> do</c><00:13:51.160><c> was</c><00:13:51.190><c> give</c>

00:13:51.780 --> 00:13:51.790 align:start position:0%
algorithm one thing I didn't do was give
 

00:13:51.790 --> 00:13:53.819 align:start position:0%
algorithm one thing I didn't do was give
a<00:13:52.000><c> mathematical</c><00:13:52.839><c> proof</c><00:13:53.079><c> that</c><00:13:53.319><c> this</c><00:13:53.470><c> procedure</c>

00:13:53.819 --> 00:13:53.829 align:start position:0%
a mathematical proof that this procedure
 

00:13:53.829 --> 00:13:55.829 align:start position:0%
a mathematical proof that this procedure
actually<00:13:54.550><c> gives</c><00:13:54.850><c> the</c><00:13:55.089><c> projection</c><00:13:55.600><c> of</c><00:13:55.720><c> the</c>

00:13:55.829 --> 00:13:55.839 align:start position:0%
actually gives the projection of the
 

00:13:55.839 --> 00:13:58.019 align:start position:0%
actually gives the projection of the
data<00:13:55.920><c> onto</c><00:13:56.920><c> you</c><00:13:57.190><c> know</c><00:13:57.279><c> the</c><00:13:57.370><c> K</c><00:13:57.550><c> dimensional</c>

00:13:58.019 --> 00:13:58.029 align:start position:0%
data onto you know the K dimensional
 

00:13:58.029 --> 00:14:00.000 align:start position:0%
data onto you know the K dimensional
subspace<00:13:58.300><c> onto</c><00:13:58.870><c> the</c><00:13:58.930><c> K</c><00:13:59.079><c> dimensional</c><00:13:59.560><c> surface</c>

00:14:00.000 --> 00:14:00.010 align:start position:0%
subspace onto the K dimensional surface
 

00:14:00.010 --> 00:14:02.670 align:start position:0%
subspace onto the K dimensional surface
that<00:14:00.550><c> actually</c><00:14:00.750><c> minimizes</c><00:14:01.750><c> the</c><00:14:02.199><c> square</c>

00:14:02.670 --> 00:14:02.680 align:start position:0%
that actually minimizes the square
 

00:14:02.680 --> 00:14:05.009 align:start position:0%
that actually minimizes the square
projection<00:14:02.889><c> error</c><00:14:03.279><c> the</c><00:14:04.149><c> mathematical</c><00:14:04.839><c> proof</c>

00:14:05.009 --> 00:14:05.019 align:start position:0%
projection error the mathematical proof
 

00:14:05.019 --> 00:14:06.389 align:start position:0%
projection error the mathematical proof
of<00:14:05.230><c> that</c><00:14:05.380><c> is</c><00:14:05.589><c> beyond</c><00:14:05.889><c> the</c><00:14:05.980><c> scope</c><00:14:06.069><c> of</c><00:14:06.279><c> this</c>

00:14:06.389 --> 00:14:06.399 align:start position:0%
of that is beyond the scope of this
 

00:14:06.399 --> 00:14:09.329 align:start position:0%
of that is beyond the scope of this
course<00:14:06.670><c> but</c><00:14:07.170><c> fortunately</c><00:14:08.170><c> the</c><00:14:08.620><c> PCA</c><00:14:08.800><c> algorithm</c>

00:14:09.329 --> 00:14:09.339 align:start position:0%
course but fortunately the PCA algorithm
 

00:14:09.339 --> 00:14:11.490 align:start position:0%
course but fortunately the PCA algorithm
can<00:14:09.699><c> be</c><00:14:09.730><c> implemented</c><00:14:10.180><c> in</c><00:14:10.600><c> you</c><00:14:10.899><c> know</c><00:14:10.990><c> not</c><00:14:11.260><c> too</c>

00:14:11.490 --> 00:14:11.500 align:start position:0%
can be implemented in you know not too
 

00:14:11.500 --> 00:14:13.710 align:start position:0%
can be implemented in you know not too
many<00:14:11.529><c> lines</c><00:14:12.010><c> of</c><00:14:12.220><c> octave</c><00:14:12.550><c> code</c><00:14:12.760><c> and</c><00:14:13.000><c> if</c><00:14:13.569><c> you</c>

00:14:13.710 --> 00:14:13.720 align:start position:0%
many lines of octave code and if you
 

00:14:13.720 --> 00:14:16.470 align:start position:0%
many lines of octave code and if you
implement<00:14:14.050><c> it</c><00:14:14.410><c> in</c><00:14:14.620><c> octave</c><00:14:15.069><c> or</c><00:14:15.250><c> MATLAB</c><00:14:15.480><c> you</c>

00:14:16.470 --> 00:14:16.480 align:start position:0%
implement it in octave or MATLAB you
 

00:14:16.480 --> 00:14:17.670 align:start position:0%
implement it in octave or MATLAB you
actually<00:14:16.870><c> get</c><00:14:17.079><c> a</c><00:14:17.110><c> very</c><00:14:17.440><c> effective</c>

00:14:17.670 --> 00:14:17.680 align:start position:0%
actually get a very effective
 

00:14:17.680 --> 00:14:21.630 align:start position:0%
actually get a very effective
dimensionality<00:14:18.300><c> reduction</c><00:14:19.300><c> algorithm</c>

00:14:21.630 --> 00:14:21.640 align:start position:0%
dimensionality reduction algorithm
 

00:14:21.640 --> 00:14:25.350 align:start position:0%
dimensionality reduction algorithm
so<00:14:22.570><c> that</c><00:14:22.959><c> was</c><00:14:23.140><c> the</c><00:14:23.320><c> PCA</c><00:14:23.769><c> algorithm</c><00:14:24.220><c> one</c><00:14:25.180><c> thing</c>

00:14:25.350 --> 00:14:25.360 align:start position:0%
so that was the PCA algorithm one thing
 

00:14:25.360 --> 00:14:27.360 align:start position:0%
so that was the PCA algorithm one thing
I<00:14:25.480><c> didn't</c><00:14:25.870><c> do</c><00:14:26.050><c> was</c><00:14:26.079><c> give</c><00:14:27.010><c> a</c><00:14:27.130><c> mathematical</c>

00:14:27.360 --> 00:14:27.370 align:start position:0%
I didn't do was give a mathematical
 

00:14:27.370 --> 00:14:30.720 align:start position:0%
I didn't do was give a mathematical
proof<00:14:28.240><c> that</c><00:14:28.570><c> you</c><00:14:29.019><c> know</c><00:14:29.110><c> the</c><00:14:29.320><c> u1</c><00:14:29.769><c> u2</c><00:14:30.010><c> and</c><00:14:30.220><c> so</c><00:14:30.550><c> on</c>

00:14:30.720 --> 00:14:30.730 align:start position:0%
proof that you know the u1 u2 and so on
 

00:14:30.730 --> 00:14:32.250 align:start position:0%
proof that you know the u1 u2 and so on
the<00:14:30.880><c> disease</c><00:14:31.180><c> and</c><00:14:31.540><c> some</c><00:14:31.690><c> one</c><00:14:31.779><c> that</c><00:14:31.930><c> you</c><00:14:32.019><c> get</c>

00:14:32.250 --> 00:14:32.260 align:start position:0%
the disease and some one that you get
 

00:14:32.260 --> 00:14:34.530 align:start position:0%
the disease and some one that you get
out<00:14:32.470><c> of</c><00:14:32.529><c> this</c><00:14:32.950><c> procedure</c><00:14:33.370><c> there's</c><00:14:34.000><c> really</c><00:14:34.209><c> the</c>

00:14:34.530 --> 00:14:34.540 align:start position:0%
out of this procedure there's really the
 

00:14:34.540 --> 00:14:37.110 align:start position:0%
out of this procedure there's really the
choices<00:14:35.230><c> that</c><00:14:35.709><c> will</c><00:14:35.829><c> minimize</c><00:14:36.279><c> the</c><00:14:36.610><c> squared</c>

00:14:37.110 --> 00:14:37.120 align:start position:0%
choices that will minimize the squared
 

00:14:37.120 --> 00:14:39.000 align:start position:0%
choices that will minimize the squared
projection<00:14:37.420><c> error</c><00:14:37.899><c> right</c><00:14:38.260><c> remember</c><00:14:38.560><c> we</c><00:14:38.800><c> said</c>

00:14:39.000 --> 00:14:39.010 align:start position:0%
projection error right remember we said
 

00:14:39.010 --> 00:14:41.280 align:start position:0%
projection error right remember we said
what<00:14:39.519><c> PCA</c><00:14:39.850><c> tries</c><00:14:40.089><c> to</c><00:14:40.209><c> do</c><00:14:40.360><c> is</c><00:14:40.630><c> it</c><00:14:40.660><c> tries</c><00:14:40.959><c> to</c><00:14:40.990><c> find</c>

00:14:41.280 --> 00:14:41.290 align:start position:0%
what PCA tries to do is it tries to find
 

00:14:41.290 --> 00:14:42.990 align:start position:0%
what PCA tries to do is it tries to find
the<00:14:41.440><c> surface</c><00:14:41.649><c> or</c><00:14:42.100><c> a</c><00:14:42.160><c> line</c><00:14:42.190><c> onto</c><00:14:42.730><c> which</c><00:14:42.970><c> to</c>

00:14:42.990 --> 00:14:43.000 align:start position:0%
the surface or a line onto which to
 

00:14:43.000 --> 00:14:45.060 align:start position:0%
the surface or a line onto which to
project<00:14:43.149><c> the</c><00:14:43.540><c> data</c><00:14:43.570><c> so</c><00:14:44.079><c> as</c><00:14:44.440><c> to</c><00:14:44.529><c> minimize</c><00:14:44.829><c> that</c>

00:14:45.060 --> 00:14:45.070 align:start position:0%
project the data so as to minimize that
 

00:14:45.070 --> 00:14:47.370 align:start position:0%
project the data so as to minimize that
squared<00:14:45.760><c> projection</c><00:14:46.000><c> error</c><00:14:46.450><c> so</c><00:14:46.839><c> I</c><00:14:46.870><c> didn't</c>

00:14:47.370 --> 00:14:47.380 align:start position:0%
squared projection error so I didn't
 

00:14:47.380 --> 00:14:49.170 align:start position:0%
squared projection error so I didn't
prove<00:14:47.589><c> that</c><00:14:47.740><c> this</c><00:14:47.920><c> actually</c><00:14:48.730><c> achieves</c><00:14:49.089><c> that</c>

00:14:49.170 --> 00:14:49.180 align:start position:0%
prove that this actually achieves that
 

00:14:49.180 --> 00:14:51.449 align:start position:0%
prove that this actually achieves that
and<00:14:49.630><c> the</c><00:14:49.990><c> mathematical</c><00:14:50.680><c> proof</c><00:14:50.890><c> of</c><00:14:51.100><c> that</c><00:14:51.250><c> is</c>

00:14:51.449 --> 00:14:51.459 align:start position:0%
and the mathematical proof of that is
 

00:14:51.459 --> 00:14:53.550 align:start position:0%
and the mathematical proof of that is
beyond<00:14:51.790><c> the</c><00:14:51.910><c> scope</c><00:14:51.940><c> of</c><00:14:52.269><c> this</c><00:14:52.329><c> course</c><00:14:52.570><c> but</c><00:14:52.839><c> so</c>

00:14:53.550 --> 00:14:53.560 align:start position:0%
beyond the scope of this course but so
 

00:14:53.560 --> 00:14:55.769 align:start position:0%
beyond the scope of this course but so
fortunately<00:14:54.370><c> the</c><00:14:54.610><c> PCA</c><00:14:54.820><c> algorithm</c><00:14:55.329><c> can</c><00:14:55.750><c> be</c>

00:14:55.769 --> 00:14:55.779 align:start position:0%
fortunately the PCA algorithm can be
 

00:14:55.779 --> 00:14:57.720 align:start position:0%
fortunately the PCA algorithm can be
implemented<00:14:56.260><c> in</c><00:14:56.740><c> you</c><00:14:57.100><c> know</c><00:14:57.250><c> not</c><00:14:57.459><c> too</c><00:14:57.700><c> many</c>

00:14:57.720 --> 00:14:57.730 align:start position:0%
implemented in you know not too many
 

00:14:57.730 --> 00:15:00.269 align:start position:0%
implemented in you know not too many
lines<00:14:58.209><c> of</c><00:14:58.480><c> octave</c><00:14:58.930><c> code</c><00:14:59.110><c> and</c><00:14:59.440><c> if</c><00:14:59.890><c> you</c><00:15:00.100><c> just</c>

00:15:00.269 --> 00:15:00.279 align:start position:0%
lines of octave code and if you just
 

00:15:00.279 --> 00:15:02.519 align:start position:0%
lines of octave code and if you just
implement<00:15:00.519><c> this</c><00:15:00.880><c> this</c><00:15:01.600><c> is</c><00:15:01.839><c> actually</c><00:15:02.079><c> what</c>

00:15:02.519 --> 00:15:02.529 align:start position:0%
implement this this is actually what
 

00:15:02.529 --> 00:15:04.170 align:start position:0%
implement this this is actually what
will<00:15:02.740><c> work</c><00:15:02.890><c> what</c><00:15:03.100><c> this</c><00:15:03.250><c> will</c><00:15:03.430><c> work</c><00:15:03.610><c> well</c><00:15:03.940><c> and</c>

00:15:04.170 --> 00:15:04.180 align:start position:0%
will work what this will work well and
 

00:15:04.180 --> 00:15:06.870 align:start position:0%
will work what this will work well and
if<00:15:05.110><c> you</c><00:15:05.320><c> implement</c><00:15:05.649><c> this</c><00:15:05.950><c> algorithm</c><00:15:06.220><c> you</c><00:15:06.640><c> get</c>

00:15:06.870 --> 00:15:06.880 align:start position:0%
if you implement this algorithm you get
 

00:15:06.880 --> 00:15:07.829 align:start position:0%
if you implement this algorithm you get
a<00:15:06.910><c> very</c><00:15:07.209><c> effective</c><00:15:07.420><c> dimensionality</c>

00:15:07.829 --> 00:15:07.839 align:start position:0%
a very effective dimensionality
 

00:15:07.839 --> 00:15:10.470 align:start position:0%
a very effective dimensionality
reduction<00:15:08.680><c> algorithm</c><00:15:09.519><c> that</c><00:15:09.910><c> does</c><00:15:10.149><c> do</c><00:15:10.360><c> the</c>

00:15:10.470 --> 00:15:10.480 align:start position:0%
reduction algorithm that does do the
 

00:15:10.480 --> 00:15:12.960 align:start position:0%
reduction algorithm that does do the
right<00:15:10.660><c> thing</c><00:15:10.930><c> of</c><00:15:11.310><c> minimizing</c><00:15:12.310><c> this</c><00:15:12.519><c> squared</c>

00:15:12.960 --> 00:15:12.970 align:start position:0%
right thing of minimizing this squared
 

00:15:12.970 --> 00:15:15.570 align:start position:0%
right thing of minimizing this squared
projection<00:15:13.149><c> error</c>

