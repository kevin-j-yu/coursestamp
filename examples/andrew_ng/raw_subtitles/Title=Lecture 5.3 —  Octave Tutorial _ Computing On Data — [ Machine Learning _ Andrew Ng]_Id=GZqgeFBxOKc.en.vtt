WEBVTT
Kind: captions
Language: en

00:00:00.030 --> 00:00:01.610 align:start position:0%
 
now<00:00:00.359><c> that</c><00:00:00.570><c> you</c><00:00:00.630><c> know</c><00:00:00.750><c> how</c><00:00:00.930><c> to</c><00:00:00.960><c> load</c><00:00:01.350><c> and</c><00:00:01.530><c> save</c>

00:00:01.610 --> 00:00:01.620 align:start position:0%
now that you know how to load and save
 

00:00:01.620 --> 00:00:03.560 align:start position:0%
now that you know how to load and save
data<00:00:01.829><c> and</c><00:00:02.340><c> alter</c><00:00:02.639><c> put</c><00:00:03.030><c> your</c><00:00:03.149><c> data</c><00:00:03.300><c> into</c>

00:00:03.560 --> 00:00:03.570 align:start position:0%
data and alter put your data into
 

00:00:03.570 --> 00:00:05.840 align:start position:0%
data and alter put your data into
matrices<00:00:03.959><c> and</c><00:00:04.290><c> so</c><00:00:04.410><c> on</c><00:00:04.589><c> in</c><00:00:04.799><c> this</c><00:00:05.400><c> video</c><00:00:05.609><c> I'd</c>

00:00:05.840 --> 00:00:05.850 align:start position:0%
matrices and so on in this video I'd
 

00:00:05.850 --> 00:00:08.210 align:start position:0%
matrices and so on in this video I'd
like<00:00:05.940><c> to</c><00:00:06.150><c> show</c><00:00:06.540><c> you</c><00:00:06.569><c> how</c><00:00:06.960><c> to</c><00:00:06.990><c> do</c><00:00:07.319><c> computational</c>

00:00:08.210 --> 00:00:08.220 align:start position:0%
like to show you how to do computational
 

00:00:08.220 --> 00:00:11.509 align:start position:0%
like to show you how to do computational
operations<00:00:08.400><c> on</c><00:00:09.120><c> data</c><00:00:09.150><c> and</c><00:00:09.769><c> later</c><00:00:10.769><c> on</c><00:00:10.950><c> we'll</c><00:00:11.490><c> be</c>

00:00:11.509 --> 00:00:11.519 align:start position:0%
operations on data and later on we'll be
 

00:00:11.519 --> 00:00:13.490 align:start position:0%
operations on data and later on we'll be
using<00:00:11.790><c> these</c><00:00:12.179><c> sorts</c><00:00:12.599><c> of</c><00:00:12.690><c> computational</c>

00:00:13.490 --> 00:00:13.500 align:start position:0%
using these sorts of computational
 

00:00:13.500 --> 00:00:14.990 align:start position:0%
using these sorts of computational
operations<00:00:13.530><c> to</c><00:00:14.309><c> implement</c><00:00:14.820><c> our</c><00:00:14.940><c> learning</c>

00:00:14.990 --> 00:00:15.000 align:start position:0%
operations to implement our learning
 

00:00:15.000 --> 00:00:19.939 align:start position:0%
operations to implement our learning
algorithms<00:00:16.279><c> let's</c><00:00:17.279><c> get</c><00:00:17.400><c> started</c><00:00:18.770><c> here's</c><00:00:19.770><c> my</c>

00:00:19.939 --> 00:00:19.949 align:start position:0%
algorithms let's get started here's my
 

00:00:19.949 --> 00:00:21.650 align:start position:0%
algorithms let's get started here's my
octave<00:00:20.130><c> window</c><00:00:20.369><c> let</c><00:00:21.180><c> me</c><00:00:21.240><c> just</c><00:00:21.449><c> quickly</c>

00:00:21.650 --> 00:00:21.660 align:start position:0%
octave window let me just quickly
 

00:00:21.660 --> 00:00:25.189 align:start position:0%
octave window let me just quickly
initialize<00:00:22.439><c> some</c><00:00:22.769><c> variables</c><00:00:23.510><c> to</c><00:00:24.510><c> use</c><00:00:24.869><c> for</c><00:00:25.109><c> our</c>

00:00:25.189 --> 00:00:25.199 align:start position:0%
initialize some variables to use for our
 

00:00:25.199 --> 00:00:27.620 align:start position:0%
initialize some variables to use for our
examples<00:00:25.680><c> and</c><00:00:25.830><c> set</c><00:00:26.070><c> a</c><00:00:26.189><c> to</c><00:00:26.880><c> be</c><00:00:26.910><c> a</c><00:00:27.029><c> three</c><00:00:27.420><c> by</c><00:00:27.599><c> two</c>

00:00:27.620 --> 00:00:27.630 align:start position:0%
examples and set a to be a three by two
 

00:00:27.630 --> 00:00:32.330 align:start position:0%
examples and set a to be a three by two
matrix<00:00:27.869><c> and</c><00:00:29.449><c> set</c><00:00:30.449><c> B</c><00:00:30.689><c> to</c><00:00:31.260><c> a</c><00:00:31.289><c> three</c><00:00:32.189><c> by</c><00:00:32.309><c> two</c>

00:00:32.330 --> 00:00:32.340 align:start position:0%
matrix and set B to a three by two
 

00:00:32.340 --> 00:00:36.200 align:start position:0%
matrix and set B to a three by two
matrix<00:00:32.520><c> and</c><00:00:33.120><c> let's</c><00:00:33.360><c> set</c><00:00:33.570><c> C</c><00:00:33.870><c> to</c><00:00:34.110><c> a</c><00:00:35.000><c> two</c><00:00:36.000><c> by</c><00:00:36.180><c> two</c>

00:00:36.200 --> 00:00:36.210 align:start position:0%
matrix and let's set C to a two by two
 

00:00:36.210 --> 00:00:40.520 align:start position:0%
matrix and let's set C to a two by two
matrix<00:00:36.840><c> like</c><00:00:37.620><c> so</c><00:00:38.300><c> now</c><00:00:39.300><c> let's</c><00:00:39.960><c> say</c><00:00:40.170><c> I</c><00:00:40.230><c> want</c><00:00:40.469><c> to</c>

00:00:40.520 --> 00:00:40.530 align:start position:0%
matrix like so now let's say I want to
 

00:00:40.530 --> 00:00:42.770 align:start position:0%
matrix like so now let's say I want to
multiply<00:00:40.800><c> two</c><00:00:41.100><c> of</c><00:00:41.370><c> my</c><00:00:41.460><c> matrices</c><00:00:41.940><c> so</c><00:00:42.360><c> let's</c><00:00:42.719><c> say</c>

00:00:42.770 --> 00:00:42.780 align:start position:0%
multiply two of my matrices so let's say
 

00:00:42.780 --> 00:00:44.510 align:start position:0%
multiply two of my matrices so let's say
I<00:00:42.840><c> want</c><00:00:42.960><c> to</c><00:00:42.989><c> compute</c><00:00:43.260><c> a</c><00:00:43.410><c> times</c><00:00:43.680><c> C</c><00:00:44.040><c> I</c><00:00:44.070><c> just</c><00:00:44.370><c> type</c>

00:00:44.510 --> 00:00:44.520 align:start position:0%
I want to compute a times C I just type
 

00:00:44.520 --> 00:00:46.610 align:start position:0%
I want to compute a times C I just type
a<00:00:44.730><c> times</c><00:00:45.090><c> C</c><00:00:45.450><c> so</c><00:00:45.870><c> it's</c><00:00:45.989><c> a</c><00:00:46.050><c> three</c><00:00:46.260><c> by</c><00:00:46.410><c> two</c><00:00:46.440><c> matrix</c>

00:00:46.610 --> 00:00:46.620 align:start position:0%
a times C so it's a three by two matrix
 

00:00:46.620 --> 00:00:49.400 align:start position:0%
a times C so it's a three by two matrix
times<00:00:47.340><c> the</c><00:00:47.489><c> 2</c><00:00:47.640><c> by</c><00:00:47.789><c> 2</c><00:00:47.850><c> matrix</c><00:00:48.390><c> this</c><00:00:48.989><c> gives</c><00:00:49.260><c> me</c>

00:00:49.400 --> 00:00:49.410 align:start position:0%
times the 2 by 2 matrix this gives me
 

00:00:49.410 --> 00:00:52.910 align:start position:0%
times the 2 by 2 matrix this gives me
this<00:00:49.710><c> 3</c><00:00:50.460><c> by</c><00:00:50.610><c> 2</c><00:00:50.670><c> matrix</c><00:00:51.289><c> you</c><00:00:52.289><c> can</c><00:00:52.320><c> also</c><00:00:52.590><c> do</c>

00:00:52.910 --> 00:00:52.920 align:start position:0%
this 3 by 2 matrix you can also do
 

00:00:52.920 --> 00:00:55.790 align:start position:0%
this 3 by 2 matrix you can also do
element<00:00:53.460><c> wise</c><00:00:53.640><c> operations</c><00:00:54.390><c> into</c><00:00:54.809><c> a</c><00:00:54.840><c> dot</c><00:00:55.440><c> times</c>

00:00:55.790 --> 00:00:55.800 align:start position:0%
element wise operations into a dot times
 

00:00:55.800 --> 00:00:58.069 align:start position:0%
element wise operations into a dot times
B<00:00:56.160><c> and</c><00:00:56.370><c> what</c><00:00:56.910><c> this</c><00:00:57.030><c> will</c><00:00:57.239><c> do</c><00:00:57.360><c> is</c><00:00:57.390><c> though</c><00:00:57.780><c> taking</c>

00:00:58.069 --> 00:00:58.079 align:start position:0%
B and what this will do is though taking
 

00:00:58.079 --> 00:01:00.619 align:start position:0%
B and what this will do is though taking
elements<00:00:58.620><c> of</c><00:00:58.800><c> a</c><00:00:59.010><c> and</c><00:00:59.190><c> multiply</c><00:01:00.180><c> it</c><00:01:00.239><c> by</c><00:01:00.390><c> the</c>

00:01:00.619 --> 00:01:00.629 align:start position:0%
elements of a and multiply it by the
 

00:01:00.629 --> 00:01:03.139 align:start position:0%
elements of a and multiply it by the
corresponding<00:01:00.930><c> elements</c><00:01:01.890><c> of</c><00:01:01.980><c> B</c><00:01:02.250><c> so</c><00:01:02.699><c> that's</c><00:01:02.850><c> a</c>

00:01:03.139 --> 00:01:03.149 align:start position:0%
corresponding elements of B so that's a
 

00:01:03.149 --> 00:01:06.950 align:start position:0%
corresponding elements of B so that's a
does<00:01:03.750><c> B</c><00:01:04.049><c> that's</c><00:01:04.500><c> a</c><00:01:04.739><c> dot</c><00:01:05.010><c> times</c><00:01:05.309><c> B</c><00:01:05.840><c> so</c><00:01:06.840><c> for</c>

00:01:06.950 --> 00:01:06.960 align:start position:0%
does B that's a dot times B so for
 

00:01:06.960 --> 00:01:09.950 align:start position:0%
does B that's a dot times B so for
example<00:01:07.409><c> the</c><00:01:07.979><c> first</c><00:01:08.189><c> out</c><00:01:08.490><c> first</c><00:01:08.850><c> element</c><00:01:09.270><c> is</c><00:01:09.600><c> 1</c>

00:01:09.950 --> 00:01:09.960 align:start position:0%
example the first out first element is 1
 

00:01:09.960 --> 00:01:12.050 align:start position:0%
example the first out first element is 1
times<00:01:10.500><c> 11</c><00:01:10.799><c> which</c><00:01:11.159><c> gives</c><00:01:11.460><c> 11</c>

00:01:12.050 --> 00:01:12.060 align:start position:0%
times 11 which gives 11
 

00:01:12.060 --> 00:01:14.960 align:start position:0%
times 11 which gives 11
the<00:01:12.510><c> second</c><00:01:12.840><c> element</c><00:01:12.960><c> gives</c><00:01:13.470><c> 2</c><00:01:13.830><c> times</c><00:01:14.490><c> 12</c>

00:01:14.960 --> 00:01:14.970 align:start position:0%
the second element gives 2 times 12
 

00:01:14.970 --> 00:01:17.630 align:start position:0%
the second element gives 2 times 12
which<00:01:15.600><c> gives</c><00:01:15.659><c> 24</c><00:01:16.439><c> and</c><00:01:16.680><c> so</c><00:01:16.950><c> on</c><00:01:17.130><c> so</c><00:01:17.340><c> this</c><00:01:17.400><c> is</c><00:01:17.520><c> the</c>

00:01:17.630 --> 00:01:17.640 align:start position:0%
which gives 24 and so on so this is the
 

00:01:17.640 --> 00:01:19.700 align:start position:0%
which gives 24 and so on so this is the
element<00:01:18.150><c> wise</c><00:01:18.299><c> multiplication</c><00:01:18.439><c> of</c><00:01:19.439><c> two</c>

00:01:19.700 --> 00:01:19.710 align:start position:0%
element wise multiplication of two
 

00:01:19.710 --> 00:01:22.730 align:start position:0%
element wise multiplication of two
matrices<00:01:19.740><c> and</c><00:01:20.460><c> in</c><00:01:21.119><c> general</c><00:01:21.509><c> the</c><00:01:21.659><c> period</c><00:01:22.259><c> tends</c>

00:01:22.730 --> 00:01:22.740 align:start position:0%
matrices and in general the period tends
 

00:01:22.740 --> 00:01:25.249 align:start position:0%
matrices and in general the period tends
to<00:01:22.979><c> is</c><00:01:23.280><c> usually</c><00:01:24.150><c> used</c><00:01:24.330><c> to</c><00:01:24.450><c> denote</c><00:01:24.780><c> element</c>

00:01:25.249 --> 00:01:25.259 align:start position:0%
to is usually used to denote element
 

00:01:25.259 --> 00:01:28.399 align:start position:0%
to is usually used to denote element
wise<00:01:25.380><c> operations</c><00:01:26.100><c> in</c><00:01:26.280><c> octave</c><00:01:26.479><c> so</c><00:01:27.479><c> here</c><00:01:28.259><c> is</c><00:01:28.380><c> a</c>

00:01:28.399 --> 00:01:28.409 align:start position:0%
wise operations in octave so here is a
 

00:01:28.409 --> 00:01:31.249 align:start position:0%
wise operations in octave so here is a
matrix<00:01:28.650><c> a</c><00:01:29.040><c> and</c><00:01:29.070><c> if</c><00:01:29.369><c> I</c><00:01:29.460><c> do</c><00:01:29.520><c> a</c><00:01:29.850><c> not</c><00:01:30.329><c> to</c><00:01:30.570><c> carat</c><00:01:31.020><c> 2</c>

00:01:31.249 --> 00:01:31.259 align:start position:0%
matrix a and if I do a not to carat 2
 

00:01:31.259 --> 00:01:34.100 align:start position:0%
matrix a and if I do a not to carat 2
this<00:01:32.009><c> gives</c><00:01:32.250><c> me</c><00:01:32.490><c> the</c><00:01:32.670><c> multiplier</c><00:01:33.540><c> element</c>

00:01:34.100 --> 00:01:34.110 align:start position:0%
this gives me the multiplier element
 

00:01:34.110 --> 00:01:37.550 align:start position:0%
this gives me the multiplier element
wise<00:01:34.259><c> squaring</c><00:01:34.560><c> of</c><00:01:35.310><c> a</c><00:01:35.729><c> so</c><00:01:36.600><c> you</c><00:01:36.659><c> know</c><00:01:36.960><c> 1</c><00:01:37.229><c> squared</c>

00:01:37.550 --> 00:01:37.560 align:start position:0%
wise squaring of a so you know 1 squared
 

00:01:37.560 --> 00:01:40.030 align:start position:0%
wise squaring of a so you know 1 squared
is<00:01:37.619><c> 1</c><00:01:37.680><c> 2</c><00:01:38.009><c> squared</c><00:01:38.130><c> is</c><00:01:38.520><c> 4</c><00:01:38.579><c> and</c><00:01:39.119><c> so</c><00:01:39.450><c> on</c>

00:01:40.030 --> 00:01:40.040 align:start position:0%
is 1 2 squared is 4 and so on
 

00:01:40.040 --> 00:01:43.280 align:start position:0%
is 1 2 squared is 4 and so on
let's<00:01:41.040><c> set</c><00:01:41.220><c> V</c><00:01:41.430><c> to</c><00:01:41.670><c> a</c><00:01:41.700><c> vectors</c><00:01:42.210><c> must</c><00:01:42.479><c> and</c><00:01:42.689><c> B</c><00:01:42.899><c> is</c><00:01:43.020><c> 1</c>

00:01:43.280 --> 00:01:43.290 align:start position:0%
let's set V to a vectors must and B is 1
 

00:01:43.290 --> 00:01:47.060 align:start position:0%
let's set V to a vectors must and B is 1
2<00:01:43.560><c> 3</c><00:01:43.920><c> is</c><00:01:44.340><c> a</c><00:01:44.399><c> column</c><00:01:44.909><c> vector</c><00:01:45.350><c> you</c><00:01:46.350><c> can</c><00:01:46.619><c> also</c><00:01:46.799><c> do</c>

00:01:47.060 --> 00:01:47.070 align:start position:0%
2 3 is a column vector you can also do
 

00:01:47.070 --> 00:01:50.359 align:start position:0%
2 3 is a column vector you can also do
one<00:01:47.369><c> dot</c><00:01:47.850><c> over</c><00:01:48.119><c> B</c><00:01:48.750><c> to</c><00:01:49.170><c> do</c><00:01:49.350><c> the</c><00:01:49.590><c> element</c><00:01:50.250><c> wise</c>

00:01:50.359 --> 00:01:50.369 align:start position:0%
one dot over B to do the element wise
 

00:01:50.369 --> 00:01:53.359 align:start position:0%
one dot over B to do the element wise
reciprocal<00:01:51.270><c> of</c><00:01:51.479><c> V</c><00:01:51.750><c> so</c><00:01:52.110><c> this</c><00:01:52.229><c> gives</c><00:01:52.500><c> me</c><00:01:52.680><c> 1</c><00:01:53.340><c> over</c>

00:01:53.359 --> 00:01:53.369 align:start position:0%
reciprocal of V so this gives me 1 over
 

00:01:53.369 --> 00:01:55.880 align:start position:0%
reciprocal of V so this gives me 1 over
1<00:01:53.729><c> 1</c><00:01:53.880><c> over</c><00:01:54.090><c> 2</c><00:01:54.210><c> and</c><00:01:54.240><c> 1</c><00:01:54.479><c> over</c><00:01:54.689><c> 3</c><00:01:55.049><c> this</c><00:01:55.680><c> were</c><00:01:55.860><c> a</c>

00:01:55.880 --> 00:01:55.890 align:start position:0%
1 1 over 2 and 1 over 3 this were a
 

00:01:55.890 --> 00:01:58.219 align:start position:0%
1 1 over 2 and 1 over 3 this were a
super<00:01:56.280><c> matrices</c><00:01:56.700><c> of</c><00:01:56.909><c> 1</c><00:01:57.090><c> dot</c><00:01:57.329><c> over</c><00:01:57.540><c> a</c><00:01:57.750><c> gives</c><00:01:58.170><c> me</c>

00:01:58.219 --> 00:01:58.229 align:start position:0%
super matrices of 1 dot over a gives me
 

00:01:58.229 --> 00:02:02.319 align:start position:0%
super matrices of 1 dot over a gives me
that<00:01:58.619><c> element</c><00:01:59.070><c> wise</c><00:01:59.219><c> your</c><00:01:59.700><c> inverse</c><00:02:00.149><c> of</c><00:02:00.420><c> a</c><00:02:00.630><c> and</c>

00:02:02.319 --> 00:02:02.329 align:start position:0%
that element wise your inverse of a and
 

00:02:02.329 --> 00:02:04.880 align:start position:0%
that element wise your inverse of a and
once<00:02:03.329><c> again</c><00:02:03.450><c> the</c><00:02:03.810><c> period</c><00:02:04.079><c> here</c><00:02:04.439><c> gives</c><00:02:04.710><c> us</c><00:02:04.860><c> a</c>

00:02:04.880 --> 00:02:04.890 align:start position:0%
once again the period here gives us a
 

00:02:04.890 --> 00:02:06.890 align:start position:0%
once again the period here gives us a
clue<00:02:05.189><c> that</c><00:02:05.369><c> this</c><00:02:05.520><c> is</c><00:02:05.700><c> an</c><00:02:05.850><c> element</c><00:02:06.360><c> wise</c>

00:02:06.890 --> 00:02:06.900 align:start position:0%
clue that this is an element wise
 

00:02:06.900 --> 00:02:09.680 align:start position:0%
clue that this is an element wise
creation<00:02:07.310><c> can</c><00:02:08.310><c> also</c><00:02:08.430><c> do</c><00:02:08.640><c> things</c><00:02:08.820><c> like</c><00:02:08.970><c> log</c><00:02:09.300><c> v</c>

00:02:09.680 --> 00:02:09.690 align:start position:0%
creation can also do things like log v
 

00:02:09.690 --> 00:02:12.770 align:start position:0%
creation can also do things like log v
this<00:02:10.020><c> is</c><00:02:10.080><c> a</c><00:02:10.229><c> element-wise</c><00:02:10.970><c> logarithm</c><00:02:11.970><c> of</c><00:02:12.330><c> the</c>

00:02:12.770 --> 00:02:12.780 align:start position:0%
this is a element-wise logarithm of the
 

00:02:12.780 --> 00:02:16.280 align:start position:0%
this is a element-wise logarithm of the
element<00:02:13.230><c> of</c><00:02:13.290><c> the</c><00:02:13.800><c> the</c><00:02:14.160><c> b</c><00:02:14.370><c> e</c><00:02:14.670><c> to</c><00:02:15.330><c> the</c><00:02:15.450><c> B</c><00:02:15.630><c> is</c><00:02:15.870><c> you</c>

00:02:16.280 --> 00:02:16.290 align:start position:0%
element of the the b e to the B is you
 

00:02:16.290 --> 00:02:19.300 align:start position:0%
element of the the b e to the B is you
know<00:02:16.380><c> base</c><00:02:16.800><c> e</c><00:02:17.120><c> exponentiation</c><00:02:18.120><c> of</c><00:02:18.360><c> these</c>

00:02:19.300 --> 00:02:19.310 align:start position:0%
know base e exponentiation of these
 

00:02:19.310 --> 00:02:21.740 align:start position:0%
know base e exponentiation of these
elements<00:02:20.310><c> so</c><00:02:20.370><c> this</c><00:02:20.550><c> is</c><00:02:20.670><c> e</c><00:02:20.880><c> this</c><00:02:21.120><c> is</c><00:02:21.180><c> e</c><00:02:21.420><c> squared</c>

00:02:21.740 --> 00:02:21.750 align:start position:0%
elements so this is e this is e squared
 

00:02:21.750 --> 00:02:26.270 align:start position:0%
elements so this is e this is e squared
EQ<00:02:22.170><c> because</c><00:02:22.590><c> this</c><00:02:23.010><c> was</c><00:02:23.190><c> B</c><00:02:23.610><c> to</c><00:02:24.000><c> this</c><00:02:24.090><c> and</c><00:02:24.800><c> I</c><00:02:25.800><c> can</c>

00:02:26.270 --> 00:02:26.280 align:start position:0%
EQ because this was B to this and I can
 

00:02:26.280 --> 00:02:29.450 align:start position:0%
EQ because this was B to this and I can
also<00:02:26.430><c> do</c><00:02:26.760><c> ABS</c><00:02:27.060><c> V</c><00:02:27.600><c> to</c><00:02:28.260><c> take</c><00:02:28.470><c> the</c><00:02:28.620><c> element</c><00:02:29.340><c> wise</c>

00:02:29.450 --> 00:02:29.460 align:start position:0%
also do ABS V to take the element wise
 

00:02:29.460 --> 00:02:32.330 align:start position:0%
also do ABS V to take the element wise
absolute<00:02:30.150><c> value</c><00:02:30.480><c> of</c><00:02:30.510><c> V</c><00:02:30.930><c> so</c><00:02:31.230><c> here</c><00:02:31.260><c> you</c><00:02:31.980><c> know</c><00:02:32.070><c> V</c>

00:02:32.330 --> 00:02:32.340 align:start position:0%
absolute value of V so here you know V
 

00:02:32.340 --> 00:02:34.820 align:start position:0%
absolute value of V so here you know V
was<00:02:32.520><c> all</c><00:02:32.670><c> positive</c><00:02:32.880><c> related</c><00:02:33.510><c> apps</c><00:02:33.810><c> say</c><00:02:34.440><c> minus</c>

00:02:34.820 --> 00:02:34.830 align:start position:0%
was all positive related apps say minus
 

00:02:34.830 --> 00:02:37.820 align:start position:0%
was all positive related apps say minus
one<00:02:35.040><c> two</c><00:02:35.340><c> minus</c><00:02:35.370><c> three</c><00:02:35.990><c> the</c><00:02:36.990><c> element</c><00:02:37.710><c> wise</c>

00:02:37.820 --> 00:02:37.830 align:start position:0%
one two minus three the element wise
 

00:02:37.830 --> 00:02:39.980 align:start position:0%
one two minus three the element wise
absolute<00:02:38.490><c> value</c><00:02:38.820><c> just</c><00:02:39.180><c> me</c><00:02:39.300><c> back</c><00:02:39.510><c> these</c><00:02:39.959><c> are</c>

00:02:39.980 --> 00:02:39.990 align:start position:0%
absolute value just me back these are
 

00:02:39.990 --> 00:02:44.480 align:start position:0%
absolute value just me back these are
non<00:02:40.590><c> negative</c><00:02:40.620><c> values</c><00:02:41.340><c> and</c><00:02:42.530><c> negative</c><00:02:43.530><c> V</c><00:02:43.980><c> gives</c>

00:02:44.480 --> 00:02:44.490 align:start position:0%
non negative values and negative V gives
 

00:02:44.490 --> 00:02:46.880 align:start position:0%
non negative values and negative V gives
me<00:02:44.640><c> the</c><00:02:44.820><c> minus</c><00:02:45.420><c> of</c><00:02:45.600><c> V</c><00:02:45.630><c> this</c><00:02:46.050><c> is</c><00:02:46.230><c> the</c><00:02:46.410><c> same</c><00:02:46.620><c> as</c>

00:02:46.880 --> 00:02:46.890 align:start position:0%
me the minus of V this is the same as
 

00:02:46.890 --> 00:02:49.100 align:start position:0%
me the minus of V this is the same as
negative<00:02:47.340><c> 1</c><00:02:47.550><c> times</c><00:02:47.580><c> V</c><00:02:48.270><c> but</c><00:02:48.660><c> usually</c><00:02:49.080><c> just</c>

00:02:49.100 --> 00:02:49.110 align:start position:0%
negative 1 times V but usually just
 

00:02:49.110 --> 00:02:51.500 align:start position:0%
negative 1 times V but usually just
write<00:02:49.500><c> negative</c><00:02:49.650><c> B</c><00:02:50.070><c> instead</c><00:02:50.790><c> of</c><00:02:50.880><c> negative</c><00:02:51.120><c> 1</c>

00:02:51.500 --> 00:02:51.510 align:start position:0%
write negative B instead of negative 1
 

00:02:51.510 --> 00:02:56.210 align:start position:0%
write negative B instead of negative 1
times<00:02:51.810><c> V</c><00:02:52.110><c> and</c><00:02:53.870><c> what</c><00:02:54.870><c> else</c><00:02:55.020><c> can</c><00:02:55.320><c> you</c><00:02:55.350><c> do</c><00:02:55.560><c> here's</c>

00:02:56.210 --> 00:02:56.220 align:start position:0%
times V and what else can you do here's
 

00:02:56.220 --> 00:02:58.490 align:start position:0%
times V and what else can you do here's
another<00:02:56.370><c> neat</c><00:02:56.760><c> trick</c><00:02:56.790><c> so</c><00:02:57.390><c> let's</c><00:02:58.050><c> see</c><00:02:58.200><c> let's</c>

00:02:58.490 --> 00:02:58.500 align:start position:0%
another neat trick so let's see let's
 

00:02:58.500 --> 00:03:00.380 align:start position:0%
another neat trick so let's see let's
say<00:02:58.620><c> I</c><00:02:58.650><c> want</c><00:02:58.830><c> to</c><00:02:58.890><c> take</c><00:02:59.100><c> V</c><00:02:59.310><c> and</c><00:02:59.640><c> increment</c><00:03:00.180><c> each</c>

00:03:00.380 --> 00:03:00.390 align:start position:0%
say I want to take V and increment each
 

00:03:00.390 --> 00:03:02.300 align:start position:0%
say I want to take V and increment each
of<00:03:00.570><c> its</c><00:03:00.690><c> elements</c><00:03:00.840><c> by</c><00:03:01.260><c> one</c><00:03:01.530><c> well</c><00:03:01.890><c> one</c><00:03:02.130><c> way</c><00:03:02.250><c> to</c>

00:03:02.300 --> 00:03:02.310 align:start position:0%
of its elements by one well one way to
 

00:03:02.310 --> 00:03:08.860 align:start position:0%
of its elements by one well one way to
do<00:03:02.520><c> it</c><00:03:02.550><c> is</c><00:03:02.820><c> by</c><00:03:03.150><c> constructing</c><00:03:04.050><c> a</c><00:03:05.540><c> 3</c><00:03:06.540><c> by</c><00:03:06.720><c> 1</c><00:03:06.750><c> vector</c>

00:03:08.860 --> 00:03:08.870 align:start position:0%
do it is by constructing a 3 by 1 vector
 

00:03:08.870 --> 00:03:11.330 align:start position:0%
do it is by constructing a 3 by 1 vector
there's<00:03:09.870><c> all</c><00:03:10.050><c> one's</c><00:03:10.320><c> and</c><00:03:10.620><c> adding</c><00:03:10.890><c> that</c><00:03:11.010><c> to</c><00:03:11.070><c> V</c>

00:03:11.330 --> 00:03:11.340 align:start position:0%
there's all one's and adding that to V
 

00:03:11.340 --> 00:03:13.729 align:start position:0%
there's all one's and adding that to V
so<00:03:11.580><c> if</c><00:03:11.640><c> I</c><00:03:11.700><c> do</c><00:03:11.760><c> that</c><00:03:11.850><c> this</c><00:03:12.720><c> increments</c><00:03:13.380><c> V</c><00:03:13.440><c> by</c>

00:03:13.729 --> 00:03:13.739 align:start position:0%
so if I do that this increments V by
 

00:03:13.739 --> 00:03:16.910 align:start position:0%
so if I do that this increments V by
from<00:03:14.040><c> 1</c><00:03:14.190><c> 2</c><00:03:14.340><c> 3</c><00:03:14.519><c> 2</c><00:03:14.820><c> 2</c><00:03:14.850><c> 3</c><00:03:15.150><c> 4</c><00:03:15.450><c> there</c><00:03:16.110><c> I</c><00:03:16.290><c> did</c><00:03:16.440><c> that</c><00:03:16.620><c> was</c>

00:03:16.910 --> 00:03:16.920 align:start position:0%
from 1 2 3 2 2 3 4 there I did that was
 

00:03:16.920 --> 00:03:24.020 align:start position:0%
from 1 2 3 2 2 3 4 there I did that was
length<00:03:17.730><c> of</c><00:03:18.600><c> V</c><00:03:19.530><c> is</c><00:03:19.800><c> 3</c><00:03:20.989><c> so</c><00:03:21.989><c> once</c><00:03:22.610><c> length</c><00:03:23.610><c> of</c><00:03:23.760><c> V</c><00:03:23.880><c> by</c>

00:03:24.020 --> 00:03:24.030 align:start position:0%
length of V is 3 so once length of V by
 

00:03:24.030 --> 00:03:28.160 align:start position:0%
length of V is 3 so once length of V by
1<00:03:24.239><c> this</c><00:03:24.540><c> is</c><00:03:24.750><c> let</c><00:03:25.140><c> 1</c><00:03:25.470><c> of</c><00:03:25.860><c> 3</c><00:03:26.489><c> by</c><00:03:26.670><c> 1</c><00:03:26.700><c> so</c><00:03:27.239><c> that's</c><00:03:27.420><c> 1</c><00:03:27.600><c> 3</c>

00:03:28.160 --> 00:03:28.170 align:start position:0%
1 this is let 1 of 3 by 1 so that's 1 3
 

00:03:28.170 --> 00:03:32.449 align:start position:0%
1 this is let 1 of 3 by 1 so that's 1 3
by<00:03:28.350><c> 1</c><00:03:28.380><c> all</c><00:03:29.310><c> right</c><00:03:30.030><c> and</c><00:03:30.300><c> what</c><00:03:31.080><c> I</c><00:03:31.110><c> did</c><00:03:31.320><c> was</c><00:03:31.530><c> B</c><00:03:31.950><c> plus</c>

00:03:32.449 --> 00:03:32.459 align:start position:0%
by 1 all right and what I did was B plus
 

00:03:32.459 --> 00:03:36.020 align:start position:0%
by 1 all right and what I did was B plus
1<00:03:32.850><c> 3</c><00:03:33.360><c> by</c><00:03:33.540><c> 1</c><00:03:33.570><c> which</c><00:03:34.170><c> is</c><00:03:34.290><c> adding</c><00:03:34.709><c> this</c><00:03:35.280><c> vector</c><00:03:35.790><c> of</c>

00:03:36.020 --> 00:03:36.030 align:start position:0%
1 3 by 1 which is adding this vector of
 

00:03:36.030 --> 00:03:38.180 align:start position:0%
1 3 by 1 which is adding this vector of
all<00:03:36.150><c> ones</c><00:03:36.209><c> to</c><00:03:36.780><c> be</c><00:03:36.989><c> until</c><00:03:37.440><c> this</c><00:03:37.560><c> increments</c><00:03:38.130><c> V</c>

00:03:38.180 --> 00:03:38.190 align:start position:0%
all ones to be until this increments V
 

00:03:38.190 --> 00:03:42.410 align:start position:0%
all ones to be until this increments V
by<00:03:38.730><c> one</c><00:03:38.940><c> and</c><00:03:40.070><c> you</c><00:03:41.070><c> another</c><00:03:41.550><c> simpler</c><00:03:42.030><c> way</c><00:03:42.150><c> to</c><00:03:42.180><c> do</c>

00:03:42.410 --> 00:03:42.420 align:start position:0%
by one and you another simpler way to do
 

00:03:42.420 --> 00:03:44.930 align:start position:0%
by one and you another simpler way to do
that<00:03:42.660><c> sheets</c><00:03:42.959><c> type</c><00:03:43.200><c> B</c><00:03:43.410><c> plus</c><00:03:43.739><c> 1</c><00:03:44.010><c> right</c><00:03:44.340><c> so</c><00:03:44.519><c> yes</c><00:03:44.730><c> V</c>

00:03:44.930 --> 00:03:44.940 align:start position:0%
that sheets type B plus 1 right so yes V
 

00:03:44.940 --> 00:03:47.509 align:start position:0%
that sheets type B plus 1 right so yes V
and<00:03:45.209><c> V</c><00:03:45.480><c> plus</c><00:03:45.690><c> 1</c><00:03:45.780><c> also</c><00:03:46.200><c> means</c><00:03:46.650><c> to</c><00:03:46.920><c> add</c><00:03:47.070><c> one</c>

00:03:47.509 --> 00:03:47.519 align:start position:0%
and V plus 1 also means to add one
 

00:03:47.519 --> 00:03:51.520 align:start position:0%
and V plus 1 also means to add one
element<00:03:47.820><c> wise</c><00:03:48.330><c> to</c><00:03:48.780><c> each</c><00:03:49.380><c> of</c><00:03:49.620><c> my</c><00:03:49.730><c> elements</c><00:03:50.730><c> of</c><00:03:50.790><c> V</c>

00:03:51.520 --> 00:03:51.530 align:start position:0%
element wise to each of my elements of V
 

00:03:51.530 --> 00:03:55.640 align:start position:0%
element wise to each of my elements of V
now<00:03:52.640><c> let's</c><00:03:53.640><c> talk</c><00:03:53.910><c> about</c><00:03:54.060><c> more</c><00:03:54.870><c> operations</c><00:03:55.440><c> so</c>

00:03:55.640 --> 00:03:55.650 align:start position:0%
now let's talk about more operations so
 

00:03:55.650 --> 00:03:57.890 align:start position:0%
now let's talk about more operations so
here's<00:03:55.890><c> my</c><00:03:56.010><c> matrix</c><00:03:56.160><c> a</c><00:03:56.580><c> if</c><00:03:56.910><c> you</c><00:03:57.450><c> want</c><00:03:57.630><c> to</c><00:03:57.720><c> write</c>

00:03:57.890 --> 00:03:57.900 align:start position:0%
here's my matrix a if you want to write
 

00:03:57.900 --> 00:03:59.720 align:start position:0%
here's my matrix a if you want to write
a<00:03:58.080><c> transpose</c><00:03:58.410><c> the</c><00:03:58.890><c> way</c><00:03:59.010><c> to</c><00:03:59.070><c> do</c><00:03:59.280><c> that</c><00:03:59.430><c> is</c><00:03:59.610><c> to</c>

00:03:59.720 --> 00:03:59.730 align:start position:0%
a transpose the way to do that is to
 

00:03:59.730 --> 00:04:02.570 align:start position:0%
a transpose the way to do that is to
write<00:03:59.910><c> a</c><00:04:00.180><c> prime</c><00:04:00.780><c> that's</c><00:04:01.080><c> be</c><00:04:01.290><c> a</c><00:04:01.320><c> prosody</c><00:04:02.010><c> symbol</c>

00:04:02.570 --> 00:04:02.580 align:start position:0%
write a prime that's be a prosody symbol
 

00:04:02.580 --> 00:04:04.940 align:start position:0%
write a prime that's be a prosody symbol
is<00:04:02.790><c> the</c><00:04:03.000><c> left</c><00:04:03.269><c> quote</c><00:04:03.600><c> so</c><00:04:03.900><c> and</c><00:04:04.230><c> then</c><00:04:04.350><c> on</c><00:04:04.709><c> your</c>

00:04:04.940 --> 00:04:04.950 align:start position:0%
is the left quote so and then on your
 

00:04:04.950 --> 00:04:06.500 align:start position:0%
is the left quote so and then on your
keyboard<00:04:05.370><c> you</c><00:04:05.459><c> probably</c><00:04:05.760><c> have</c><00:04:05.880><c> a</c><00:04:05.910><c> left</c><00:04:06.239><c> quote</c>

00:04:06.500 --> 00:04:06.510 align:start position:0%
keyboard you probably have a left quote
 

00:04:06.510 --> 00:04:09.680 align:start position:0%
keyboard you probably have a left quote
and<00:04:07.320><c> a</c><00:04:07.440><c> right</c><00:04:07.680><c> quote</c><00:04:07.950><c> so</c><00:04:08.250><c> this</c><00:04:08.430><c> is</c><00:04:08.580><c> a</c><00:04:08.690><c> decision</c>

00:04:09.680 --> 00:04:09.690 align:start position:0%
and a right quote so this is a decision
 

00:04:09.690 --> 00:04:12.140 align:start position:0%
and a right quote so this is a decision
of<00:04:09.870><c> the</c><00:04:10.049><c> standard</c><00:04:10.440><c> quotation</c><00:04:10.950><c> mark</c><00:04:11.160><c> ISM</c><00:04:11.580><c> I'll</c>

00:04:12.140 --> 00:04:12.150 align:start position:0%
of the standard quotation mark ISM I'll
 

00:04:12.150 --> 00:04:15.920 align:start position:0%
of the standard quotation mark ISM I'll
just<00:04:12.870><c> type</c><00:04:13.049><c> a</c><00:04:13.230><c> transpose</c><00:04:14.209><c> this</c><00:04:15.209><c> gives</c><00:04:15.540><c> me</c><00:04:15.720><c> the</c>

00:04:15.920 --> 00:04:15.930 align:start position:0%
just type a transpose this gives me the
 

00:04:15.930 --> 00:04:17.819 align:start position:0%
just type a transpose this gives me the
you<00:04:16.230><c> know</c><00:04:16.320><c> transpose</c><00:04:16.950><c> of</c><00:04:17.160><c> my</c><00:04:17.250><c> matrix</c>

00:04:17.819 --> 00:04:17.829 align:start position:0%
you know transpose of my matrix
 

00:04:17.829 --> 00:04:20.249 align:start position:0%
you know transpose of my matrix
and<00:04:18.099><c> of</c><00:04:18.519><c> course</c><00:04:18.759><c> a</c><00:04:18.970><c> transpose</c><00:04:19.539><c> if</c><00:04:19.780><c> I</c><00:04:19.870><c> transpose</c>

00:04:20.249 --> 00:04:20.259 align:start position:0%
and of course a transpose if I transpose
 

00:04:20.259 --> 00:04:22.230 align:start position:0%
and of course a transpose if I transpose
that<00:04:20.560><c> again</c><00:04:20.919><c> then</c><00:04:21.400><c> I</c><00:04:21.430><c> should</c><00:04:21.699><c> get</c><00:04:21.789><c> back</c><00:04:21.849><c> my</c>

00:04:22.230 --> 00:04:22.240 align:start position:0%
that again then I should get back my
 

00:04:22.240 --> 00:04:26.129 align:start position:0%
that again then I should get back my
matrix<00:04:22.720><c> 8</c><00:04:24.300><c> some</c><00:04:25.300><c> more</c><00:04:25.449><c> useful</c><00:04:25.629><c> functions</c>

00:04:26.129 --> 00:04:26.139 align:start position:0%
matrix 8 some more useful functions
 

00:04:26.139 --> 00:04:31.140 align:start position:0%
matrix 8 some more useful functions
let's<00:04:26.979><c> say</c><00:04:27.189><c> lowercase</c><00:04:27.909><c> a</c><00:04:28.180><c> is</c><00:04:28.389><c> 1</c><00:04:28.900><c> 15</c><00:04:29.439><c> to</c><00:04:30.039><c> 0.5</c><00:04:30.759><c> so</c>

00:04:31.140 --> 00:04:31.150 align:start position:0%
let's say lowercase a is 1 15 to 0.5 so
 

00:04:31.150 --> 00:04:34.649 align:start position:0%
let's say lowercase a is 1 15 to 0.5 so
it's<00:04:31.300><c> a</c><00:04:31.449><c> you</c><00:04:31.750><c> know</c><00:04:31.810><c> 1</c><00:04:32.379><c> by</c><00:04:32.409><c> 4</c><00:04:32.889><c> matrix</c><00:04:33.479><c> let's</c><00:04:34.479><c> I</c>

00:04:34.649 --> 00:04:34.659 align:start position:0%
it's a you know 1 by 4 matrix let's I
 

00:04:34.659 --> 00:04:37.589 align:start position:0%
it's a you know 1 by 4 matrix let's I
said<00:04:34.930><c> thou</c><00:04:35.169><c> equals</c><00:04:35.770><c> max</c><00:04:36.129><c> of</c><00:04:36.340><c> a</c><00:04:36.490><c> this</c><00:04:37.210><c> returns</c>

00:04:37.589 --> 00:04:37.599 align:start position:0%
said thou equals max of a this returns
 

00:04:37.599 --> 00:04:39.540 align:start position:0%
said thou equals max of a this returns
the<00:04:37.840><c> maximum</c><00:04:38.020><c> value</c><00:04:38.650><c> of</c><00:04:38.710><c> a</c><00:04:38.979><c> which</c><00:04:39.250><c> in</c><00:04:39.430><c> this</c>

00:04:39.540 --> 00:04:39.550 align:start position:0%
the maximum value of a which in this
 

00:04:39.550 --> 00:04:44.640 align:start position:0%
the maximum value of a which in this
case<00:04:39.819><c> is</c><00:04:40.090><c> 15</c><00:04:40.300><c> and</c><00:04:40.870><c> I</c><00:04:41.620><c> can</c><00:04:41.949><c> do</c><00:04:42.129><c> thou</c><00:04:42.520><c> IND</c><00:04:43.289><c> max</c><00:04:44.289><c> a</c>

00:04:44.640 --> 00:04:44.650 align:start position:0%
case is 15 and I can do thou IND max a
 

00:04:44.650 --> 00:04:48.899 align:start position:0%
case is 15 and I can do thou IND max a
and<00:04:44.949><c> this</c><00:04:45.900><c> returns</c><00:04:46.900><c> now</c><00:04:47.379><c> an</c><00:04:47.680><c> end</c><00:04:47.979><c> which</c><00:04:48.610><c> are</c>

00:04:48.899 --> 00:04:48.909 align:start position:0%
and this returns now an end which are
 

00:04:48.909 --> 00:04:51.420 align:start position:0%
and this returns now an end which are
going<00:04:49.780><c> to</c><00:04:50.050><c> be</c><00:04:50.199><c> the</c><00:04:50.379><c> maximum</c><00:04:50.650><c> value</c><00:04:50.770><c> of</c><00:04:51.069><c> a</c><00:04:51.190><c> which</c>

00:04:51.420 --> 00:04:51.430 align:start position:0%
going to be the maximum value of a which
 

00:04:51.430 --> 00:04:54.180 align:start position:0%
going to be the maximum value of a which
is<00:04:51.460><c> 15</c><00:04:51.879><c> as</c><00:04:52.060><c> was</c><00:04:52.300><c> the</c><00:04:52.449><c> index</c><00:04:52.900><c> o</c><00:04:53.110><c> is</c><00:04:53.229><c> the</c><00:04:53.409><c> element</c>

00:04:54.180 --> 00:04:54.190 align:start position:0%
is 15 as was the index o is the element
 

00:04:54.190 --> 00:04:56.939 align:start position:0%
is 15 as was the index o is the element
number<00:04:54.430><c> 2</c><00:04:54.610><c> of</c><00:04:55.120><c> a</c><00:04:55.330><c> that</c><00:04:55.539><c> was</c><00:04:55.629><c> 15</c><00:04:55.960><c> so</c><00:04:56.229><c> in</c><00:04:56.500><c> since</c><00:04:56.800><c> my</c>

00:04:56.939 --> 00:04:56.949 align:start position:0%
number 2 of a that was 15 so in since my
 

00:04:56.949 --> 00:05:00.149 align:start position:0%
number 2 of a that was 15 so in since my
index<00:04:57.370><c> into</c><00:04:57.699><c> this</c><00:04:58.229><c> just</c><00:04:59.229><c> as</c><00:04:59.349><c> a</c><00:04:59.379><c> warning</c><00:04:59.740><c> if</c><00:05:00.099><c> you</c>

00:05:00.149 --> 00:05:00.159 align:start position:0%
index into this just as a warning if you
 

00:05:00.159 --> 00:05:03.540 align:start position:0%
index into this just as a warning if you
do<00:05:00.430><c> max</c><00:05:00.699><c> a</c><00:05:00.969><c> where</c><00:05:01.930><c> a</c><00:05:01.960><c> is</c><00:05:02.229><c> a</c><00:05:02.259><c> matrix</c><00:05:02.530><c> what</c><00:05:03.340><c> this</c>

00:05:03.540 --> 00:05:03.550 align:start position:0%
do max a where a is a matrix what this
 

00:05:03.550 --> 00:05:05.129 align:start position:0%
do max a where a is a matrix what this
does<00:05:03.759><c> is</c><00:05:04.000><c> this</c><00:05:04.120><c> does</c><00:05:04.509><c> actually</c><00:05:04.659><c> does</c><00:05:04.990><c> the</c>

00:05:05.129 --> 00:05:05.139 align:start position:0%
does is this does actually does the
 

00:05:05.139 --> 00:05:08.850 align:start position:0%
does is this does actually does the
column<00:05:05.590><c> wise</c><00:05:06.180><c> maximum</c><00:05:07.180><c> but</c><00:05:08.050><c> say</c><00:05:08.530><c> a</c><00:05:08.560><c> little</c><00:05:08.770><c> bit</c>

00:05:08.850 --> 00:05:08.860 align:start position:0%
column wise maximum but say a little bit
 

00:05:08.860 --> 00:05:11.969 align:start position:0%
column wise maximum but say a little bit
more<00:05:09.009><c> about</c><00:05:09.159><c> this</c><00:05:09.310><c> in</c><00:05:09.490><c> a</c><00:05:09.550><c> second</c><00:05:10.740><c> so</c><00:05:11.740><c> using</c>

00:05:11.969 --> 00:05:11.979 align:start position:0%
more about this in a second so using
 

00:05:11.979 --> 00:05:14.730 align:start position:0%
more about this in a second so using
this<00:05:12.219><c> example</c><00:05:12.550><c> the</c><00:05:13.300><c> variable</c><00:05:13.599><c> lowercase</c><00:05:14.080><c> a</c><00:05:14.349><c> if</c>

00:05:14.730 --> 00:05:14.740 align:start position:0%
this example the variable lowercase a if
 

00:05:14.740 --> 00:05:18.510 align:start position:0%
this example the variable lowercase a if
I<00:05:15.069><c> do</c><00:05:15.129><c> a</c><00:05:15.490><c> less</c><00:05:15.969><c> than</c><00:05:16.000><c> 3</c><00:05:16.539><c> this</c><00:05:17.110><c> does</c><00:05:17.469><c> the</c><00:05:17.680><c> element</c>

00:05:18.510 --> 00:05:18.520 align:start position:0%
I do a less than 3 this does the element
 

00:05:18.520 --> 00:05:20.879 align:start position:0%
I do a less than 3 this does the element
wise<00:05:18.669><c> operation</c><00:05:19.539><c> element</c><00:05:19.990><c> wise</c><00:05:20.110><c> comparison</c>

00:05:20.879 --> 00:05:20.889 align:start position:0%
wise operation element wise comparison
 

00:05:20.889 --> 00:05:23.580 align:start position:0%
wise operation element wise comparison
so<00:05:21.219><c> the</c><00:05:21.819><c> first</c><00:05:22.029><c> element</c><00:05:22.449><c> of</c><00:05:22.629><c> a</c><00:05:22.960><c> is</c><00:05:23.199><c> less</c><00:05:23.379><c> than</c>

00:05:23.580 --> 00:05:23.590 align:start position:0%
so the first element of a is less than
 

00:05:23.590 --> 00:05:26.159 align:start position:0%
so the first element of a is less than
three<00:05:23.800><c> so</c><00:05:24.039><c> this</c><00:05:24.190><c> one</c><00:05:24.520><c> second</c><00:05:25.240><c> element</c><00:05:25.599><c> of</c><00:05:25.719><c> a</c><00:05:25.900><c> is</c>

00:05:26.159 --> 00:05:26.169 align:start position:0%
three so this one second element of a is
 

00:05:26.169 --> 00:05:28.170 align:start position:0%
three so this one second element of a is
not<00:05:26.500><c> less</c><00:05:26.740><c> than</c><00:05:26.800><c> three</c><00:05:27.099><c> so</c><00:05:27.430><c> this</c><00:05:27.580><c> values</c><00:05:27.969><c> is</c>

00:05:28.170 --> 00:05:28.180 align:start position:0%
not less than three so this values is
 

00:05:28.180 --> 00:05:30.510 align:start position:0%
not less than three so this values is
zero<00:05:28.719><c> because</c><00:05:28.990><c> it's</c><00:05:29.169><c> false</c><00:05:29.440><c> the</c><00:05:30.069><c> third</c><00:05:30.310><c> and</c>

00:05:30.510 --> 00:05:30.520 align:start position:0%
zero because it's false the third and
 

00:05:30.520 --> 00:05:33.300 align:start position:0%
zero because it's false the third and
fourth<00:05:30.729><c> elements</c><00:05:30.879><c> of</c><00:05:31.270><c> a</c><00:05:31.449><c> are</c><00:05:32.009><c> I'm</c><00:05:33.009><c> in</c><00:05:33.159><c> less</c>

00:05:33.300 --> 00:05:33.310 align:start position:0%
fourth elements of a are I'm in less
 

00:05:33.310 --> 00:05:35.040 align:start position:0%
fourth elements of a are I'm in less
than<00:05:33.430><c> three</c><00:05:33.759><c> third</c><00:05:34.210><c> and</c><00:05:34.360><c> fourth</c><00:05:34.509><c> elements</c><00:05:34.930><c> are</c>

00:05:35.040 --> 00:05:35.050 align:start position:0%
than three third and fourth elements are
 

00:05:35.050 --> 00:05:36.839 align:start position:0%
than three third and fourth elements are
less<00:05:35.199><c> than</c><00:05:35.319><c> three</c><00:05:35.560><c> so</c><00:05:35.770><c> this</c><00:05:35.949><c> is</c><00:05:36.129><c> one</c><00:05:36.370><c> one</c><00:05:36.610><c> so</c>

00:05:36.839 --> 00:05:36.849 align:start position:0%
less than three so this is one one so
 

00:05:36.849 --> 00:05:39.390 align:start position:0%
less than three so this is one one so
this<00:05:37.000><c> does</c><00:05:37.210><c> the</c><00:05:37.389><c> element</c><00:05:38.259><c> wise</c><00:05:38.409><c> comparison</c><00:05:39.159><c> of</c>

00:05:39.390 --> 00:05:39.400 align:start position:0%
this does the element wise comparison of
 

00:05:39.400 --> 00:05:41.730 align:start position:0%
this does the element wise comparison of
all<00:05:39.940><c> four</c><00:05:40.270><c> elements</c><00:05:40.419><c> of</c><00:05:40.839><c> the</c><00:05:41.169><c> variable</c><00:05:41.560><c> lower</c>

00:05:41.730 --> 00:05:41.740 align:start position:0%
all four elements of the variable lower
 

00:05:41.740 --> 00:05:43.920 align:start position:0%
all four elements of the variable lower
case<00:05:41.979><c> eight</c><00:05:42.219><c> to</c><00:05:42.400><c> three</c><00:05:42.610><c> and</c><00:05:42.879><c> it</c><00:05:43.300><c> returns</c><00:05:43.629><c> true</c>

00:05:43.920 --> 00:05:43.930 align:start position:0%
case eight to three and it returns true
 

00:05:43.930 --> 00:05:45.749 align:start position:0%
case eight to three and it returns true
or<00:05:44.110><c> false</c><00:05:44.289><c> depending</c><00:05:44.620><c> on</c><00:05:44.979><c> whether</c><00:05:45.039><c> or</c><00:05:45.310><c> not</c><00:05:45.520><c> is</c>

00:05:45.749 --> 00:05:45.759 align:start position:0%
or false depending on whether or not is
 

00:05:45.759 --> 00:05:49.260 align:start position:0%
or false depending on whether or not is
less<00:05:46.000><c> than</c><00:05:46.210><c> three</c><00:05:46.529><c> now</c><00:05:47.529><c> if</c><00:05:48.069><c> I</c><00:05:48.190><c> do</c><00:05:48.250><c> find</c><00:05:48.669><c> a</c><00:05:48.940><c> less</c>

00:05:49.260 --> 00:05:49.270 align:start position:0%
less than three now if I do find a less
 

00:05:49.270 --> 00:05:52.019 align:start position:0%
less than three now if I do find a less
than<00:05:49.300><c> three</c><00:05:49.750><c> this</c><00:05:50.500><c> will</c><00:05:50.710><c> tell</c><00:05:51.039><c> me</c><00:05:51.250><c> which</c><00:05:51.819><c> are</c>

00:05:52.019 --> 00:05:52.029 align:start position:0%
than three this will tell me which are
 

00:05:52.029 --> 00:05:54.420 align:start position:0%
than three this will tell me which are
the<00:05:52.060><c> elements</c><00:05:52.150><c> of</c><00:05:52.750><c> a</c><00:05:52.960><c> the</c><00:05:53.710><c> Devere</c><00:05:54.099><c> for</c><00:05:54.279><c> eight</c>

00:05:54.420 --> 00:05:54.430 align:start position:0%
the elements of a the Devere for eight
 

00:05:54.430 --> 00:05:56.010 align:start position:0%
the elements of a the Devere for eight
or<00:05:54.460><c> less</c><00:05:54.789><c> than</c><00:05:54.969><c> three</c><00:05:55.180><c> and</c><00:05:55.330><c> in</c><00:05:55.449><c> this</c><00:05:55.539><c> case</c><00:05:55.779><c> the</c>

00:05:56.010 --> 00:05:56.020 align:start position:0%
or less than three and in this case the
 

00:05:56.020 --> 00:05:58.499 align:start position:0%
or less than three and in this case the
first<00:05:56.259><c> third</c><00:05:56.830><c> and</c><00:05:56.860><c> fourth</c><00:05:57.400><c> elements</c><00:05:57.909><c> are</c><00:05:58.120><c> less</c>

00:05:58.499 --> 00:05:58.509 align:start position:0%
first third and fourth elements are less
 

00:05:58.509 --> 00:06:01.559 align:start position:0%
first third and fourth elements are less
than<00:05:58.690><c> three</c><00:05:59.400><c> for</c><00:06:00.400><c> my</c><00:06:00.520><c> next</c><00:06:00.759><c> example</c><00:06:01.029><c> let</c><00:06:01.479><c> me</c>

00:06:01.559 --> 00:06:01.569 align:start position:0%
than three for my next example let me
 

00:06:01.569 --> 00:06:05.399 align:start position:0%
than three for my next example let me
set<00:06:01.810><c> a</c><00:06:01.990><c> to</c><00:06:02.080><c> be</c><00:06:02.319><c> equal</c><00:06:02.440><c> to</c><00:06:02.949><c> Magic</c><00:06:03.789><c> three</c><00:06:04.409><c> the</c>

00:06:05.399 --> 00:06:05.409 align:start position:0%
set a to be equal to Magic three the
 

00:06:05.409 --> 00:06:07.920 align:start position:0%
set a to be equal to Magic three the
magic<00:06:05.770><c> function</c><00:06:05.949><c> returns</c><00:06:06.610><c> on</c><00:06:06.969><c> type</c><00:06:07.659><c> help</c>

00:06:07.920 --> 00:06:07.930 align:start position:0%
magic function returns on type help
 

00:06:07.930 --> 00:06:10.589 align:start position:0%
magic function returns on type help
magic<00:06:08.469><c> the</c><00:06:09.069><c> magic</c><00:06:09.099><c> function</c><00:06:09.599><c> returns</c>

00:06:10.589 --> 00:06:10.599 align:start position:0%
magic the magic function returns
 

00:06:10.599 --> 00:06:13.439 align:start position:0%
magic the magic function returns
functions<00:06:11.589><c> called</c><00:06:11.889><c> magics</c><00:06:12.400><c> the</c><00:06:13.000><c> turns</c><00:06:13.240><c> these</c>

00:06:13.439 --> 00:06:13.449 align:start position:0%
functions called magics the turns these
 

00:06:13.449 --> 00:06:15.689 align:start position:0%
functions called magics the turns these
matrices<00:06:13.779><c> called</c><00:06:14.139><c> magic</c><00:06:14.500><c> squares</c><00:06:14.860><c> they</c><00:06:15.460><c> have</c>

00:06:15.689 --> 00:06:15.699 align:start position:0%
matrices called magic squares they have
 

00:06:15.699 --> 00:06:18.930 align:start position:0%
matrices called magic squares they have
this<00:06:15.909><c> um</c><00:06:16.770><c> you</c><00:06:17.770><c> know</c><00:06:17.830><c> mathematical</c><00:06:18.460><c> property</c>

00:06:18.930 --> 00:06:18.940 align:start position:0%
this um you know mathematical property
 

00:06:18.940 --> 00:06:21.540 align:start position:0%
this um you know mathematical property
that<00:06:19.539><c> all</c><00:06:19.900><c> of</c><00:06:20.110><c> their</c><00:06:20.289><c> rows</c><00:06:20.529><c> and</c><00:06:20.860><c> columns</c><00:06:21.310><c> and</c>

00:06:21.540 --> 00:06:21.550 align:start position:0%
that all of their rows and columns and
 

00:06:21.550 --> 00:06:23.939 align:start position:0%
that all of their rows and columns and
diagonals<00:06:21.759><c> sum</c><00:06:22.659><c> up</c><00:06:22.839><c> to</c><00:06:22.990><c> the</c><00:06:23.020><c> same</c><00:06:23.139><c> thing</c><00:06:23.589><c> so</c>

00:06:23.939 --> 00:06:23.949 align:start position:0%
diagonals sum up to the same thing so
 

00:06:23.949 --> 00:06:24.930 align:start position:0%
diagonals sum up to the same thing so
you<00:06:24.250><c> know</c>

00:06:24.930 --> 00:06:24.940 align:start position:0%
you know
 

00:06:24.940 --> 00:06:27.150 align:start position:0%
you know
it's<00:06:25.240><c> not</c><00:06:25.750><c> actually</c><00:06:26.230><c> useful</c><00:06:26.440><c> for</c><00:06:26.950><c> machine</c>

00:06:27.150 --> 00:06:27.160 align:start position:0%
it's not actually useful for machine
 

00:06:27.160 --> 00:06:29.220 align:start position:0%
it's not actually useful for machine
learning<00:06:27.370><c> as</c><00:06:27.880><c> far</c><00:06:28.060><c> as</c><00:06:28.150><c> I</c><00:06:28.240><c> know</c><00:06:28.300><c> but</c><00:06:28.750><c> I'm</c><00:06:28.930><c> just</c>

00:06:29.220 --> 00:06:29.230 align:start position:0%
learning as far as I know but I'm just
 

00:06:29.230 --> 00:06:31.860 align:start position:0%
learning as far as I know but I'm just
using<00:06:29.560><c> this</c><00:06:29.830><c> as</c><00:06:30.070><c> a</c><00:06:30.150><c> convenient</c><00:06:31.150><c> way</c><00:06:31.300><c> you</c><00:06:31.750><c> know</c>

00:06:31.860 --> 00:06:31.870 align:start position:0%
using this as a convenient way you know
 

00:06:31.870 --> 00:06:34.110 align:start position:0%
using this as a convenient way you know
to<00:06:31.930><c> generate</c><00:06:32.470><c> a</c><00:06:32.740><c> three</c><00:06:33.010><c> by</c><00:06:33.160><c> three</c><00:06:33.400><c> matrix</c><00:06:33.880><c> and</c>

00:06:34.110 --> 00:06:34.120 align:start position:0%
to generate a three by three matrix and
 

00:06:34.120 --> 00:06:36.180 align:start position:0%
to generate a three by three matrix and
and<00:06:34.780><c> this</c><00:06:34.930><c> magic</c><00:06:35.350><c> square</c><00:06:35.560><c> screen</c><00:06:35.770><c> right</c><00:06:36.040><c> have</c>

00:06:36.180 --> 00:06:36.190 align:start position:0%
and this magic square screen right have
 

00:06:36.190 --> 00:06:38.850 align:start position:0%
and this magic square screen right have
the<00:06:36.760><c> property</c><00:06:37.120><c> that</c><00:06:37.240><c> each</c><00:06:37.420><c> row</c><00:06:37.720><c> each</c><00:06:38.230><c> column</c>

00:06:38.850 --> 00:06:38.860 align:start position:0%
the property that each row each column
 

00:06:38.860 --> 00:06:41.430 align:start position:0%
the property that each row each column
and<00:06:39.040><c> the</c><00:06:39.610><c> diagonals</c><00:06:40.270><c> all</c><00:06:40.600><c> add</c><00:06:40.870><c> up</c><00:06:40.900><c> to</c><00:06:41.050><c> the</c><00:06:41.200><c> same</c>

00:06:41.430 --> 00:06:41.440 align:start position:0%
and the diagonals all add up to the same
 

00:06:41.440 --> 00:06:42.720 align:start position:0%
and the diagonals all add up to the same
thing<00:06:41.500><c> so</c><00:06:41.890><c> it's</c><00:06:42.010><c> kind</c><00:06:42.190><c> of</c><00:06:42.250><c> a</c><00:06:42.340><c> mathematical</c>

00:06:42.720 --> 00:06:42.730 align:start position:0%
thing so it's kind of a mathematical
 

00:06:42.730 --> 00:06:45.960 align:start position:0%
thing so it's kind of a mathematical
construct<00:06:43.600><c> I</c><00:06:43.920><c> use</c><00:06:44.920><c> magic</c><00:06:45.130><c> I</c><00:06:45.430><c> use</c><00:06:45.610><c> this</c><00:06:45.760><c> magic</c>

00:06:45.960 --> 00:06:45.970 align:start position:0%
construct I use magic I use this magic
 

00:06:45.970 --> 00:06:47.910 align:start position:0%
construct I use magic I use this magic
function<00:06:46.270><c> only</c><00:06:46.690><c> when</c><00:06:46.810><c> I'm</c><00:06:47.050><c> doing</c><00:06:47.350><c> demos</c><00:06:47.710><c> or</c>

00:06:47.910 --> 00:06:47.920 align:start position:0%
function only when I'm doing demos or
 

00:06:47.920 --> 00:06:49.710 align:start position:0%
function only when I'm doing demos or
when<00:06:48.010><c> I'm</c><00:06:48.130><c> teaching</c><00:06:48.310><c> octave</c><00:06:48.880><c> like</c><00:06:49.090><c> this</c><00:06:49.300><c> and</c><00:06:49.510><c> I</c>

00:06:49.710 --> 00:06:49.720 align:start position:0%
when I'm teaching octave like this and I
 

00:06:49.720 --> 00:06:51.480 align:start position:0%
when I'm teaching octave like this and I
don't<00:06:49.840><c> actually</c><00:06:50.140><c> use</c><00:06:50.440><c> it</c><00:06:50.620><c> for</c><00:06:50.650><c> any</c><00:06:50.920><c> you</c><00:06:51.400><c> know</c>

00:06:51.480 --> 00:06:51.490 align:start position:0%
don't actually use it for any you know
 

00:06:51.490 --> 00:06:54.030 align:start position:0%
don't actually use it for any you know
useful<00:06:51.790><c> machine</c><00:06:52.090><c> learning</c><00:06:52.510><c> application</c><00:06:53.050><c> but</c>

00:06:54.030 --> 00:06:54.040 align:start position:0%
useful machine learning application but
 

00:06:54.040 --> 00:06:57.030 align:start position:0%
useful machine learning application but
let's<00:06:54.850><c> see</c><00:06:54.970><c> if</c><00:06:55.090><c> I</c><00:06:55.150><c> type</c><00:06:55.360><c> RC</c><00:06:55.840><c> equals</c><00:06:56.320><c> find</c><00:06:56.800><c> a</c>

00:06:57.030 --> 00:06:57.040 align:start position:0%
let's see if I type RC equals find a
 

00:06:57.040 --> 00:07:00.440 align:start position:0%
let's see if I type RC equals find a
greater<00:06:57.700><c> than</c><00:06:57.820><c> or</c><00:06:57.970><c> equals</c><00:06:58.360><c> seven</c><00:06:58.780><c> this</c><00:06:59.530><c> finds</c>

00:07:00.440 --> 00:07:00.450 align:start position:0%
greater than or equals seven this finds
 

00:07:00.450 --> 00:07:04.050 align:start position:0%
greater than or equals seven this finds
all<00:07:01.450><c> the</c><00:07:01.960><c> elements</c><00:07:02.500><c> of</c><00:07:02.650><c> a</c><00:07:03.010><c> did</c><00:07:03.610><c> I</c><00:07:03.670><c> greater</c><00:07:03.940><c> than</c>

00:07:04.050 --> 00:07:04.060 align:start position:0%
all the elements of a did I greater than
 

00:07:04.060 --> 00:07:06.750 align:start position:0%
all the elements of a did I greater than
equal<00:07:04.360><c> to</c><00:07:04.390><c> seven</c><00:07:04.870><c> and</c><00:07:05.050><c> so</c><00:07:05.470><c> RC</c><00:07:06.070><c> sensor</c><00:07:06.430><c> row</c><00:07:06.610><c> and</c>

00:07:06.750 --> 00:07:06.760 align:start position:0%
equal to seven and so RC sensor row and
 

00:07:06.760 --> 00:07:08.700 align:start position:0%
equal to seven and so RC sensor row and
column<00:07:07.120><c> so</c><00:07:07.300><c> the</c><00:07:07.420><c> one</c><00:07:07.660><c> one</c><00:07:07.900><c> element</c><00:07:08.410><c> is</c><00:07:08.590><c> greater</c>

00:07:08.700 --> 00:07:08.710 align:start position:0%
column so the one one element is greater
 

00:07:08.710 --> 00:07:11.010 align:start position:0%
column so the one one element is greater
than<00:07:08.830><c> 7</c><00:07:08.920><c> the</c><00:07:09.700><c> three</c><00:07:10.000><c> two</c><00:07:10.270><c> elements</c><00:07:10.780><c> is</c><00:07:10.840><c> greater</c>

00:07:11.010 --> 00:07:11.020 align:start position:0%
than 7 the three two elements is greater
 

00:07:11.020 --> 00:07:12.630 align:start position:0%
than 7 the three two elements is greater
than<00:07:11.080><c> 7</c><00:07:11.440><c> and</c><00:07:11.590><c> a</c><00:07:11.770><c> two</c><00:07:11.950><c> three</c><00:07:12.160><c> element</c><00:07:12.580><c> is</c>

00:07:12.630 --> 00:07:12.640 align:start position:0%
than 7 and a two three element is
 

00:07:12.640 --> 00:07:14.760 align:start position:0%
than 7 and a two three element is
greater<00:07:12.730><c> than</c><00:07:12.850><c> 7</c><00:07:12.940><c> so</c><00:07:13.390><c> let's</c><00:07:13.600><c> see</c><00:07:13.690><c> the</c><00:07:14.200><c> to</c><00:07:14.440><c> three</c>

00:07:14.760 --> 00:07:14.770 align:start position:0%
greater than 7 so let's see the to three
 

00:07:14.770 --> 00:07:18.540 align:start position:0%
greater than 7 so let's see the to three
element<00:07:15.190><c> for</c><00:07:15.340><c> example</c><00:07:15.430><c> is</c><00:07:15.940><c> a</c><00:07:16.800><c> two</c><00:07:17.800><c> three</c><00:07:18.160><c> is</c>

00:07:18.540 --> 00:07:18.550 align:start position:0%
element for example is a two three is
 

00:07:18.550 --> 00:07:21.960 align:start position:0%
element for example is a two three is
seven<00:07:19.330><c> is</c><00:07:19.690><c> this</c><00:07:20.170><c> element</c><00:07:20.530><c> out</c><00:07:20.980><c> here</c><00:07:21.040><c> and</c><00:07:21.790><c> that</c>

00:07:21.960 --> 00:07:21.970 align:start position:0%
seven is this element out here and that
 

00:07:21.970 --> 00:07:24.570 align:start position:0%
seven is this element out here and that
is<00:07:22.150><c> indeed</c><00:07:22.510><c> created</c><00:07:22.960><c> equal</c><00:07:23.200><c> seven</c><00:07:23.530><c> by</c><00:07:24.370><c> the</c><00:07:24.460><c> way</c>

00:07:24.570 --> 00:07:24.580 align:start position:0%
is indeed created equal seven by the way
 

00:07:24.580 --> 00:07:27.060 align:start position:0%
is indeed created equal seven by the way
I<00:07:24.610><c> actually</c><00:07:25.120><c> don't</c><00:07:25.570><c> even</c><00:07:25.780><c> memorize</c><00:07:26.470><c> myself</c>

00:07:27.060 --> 00:07:27.070 align:start position:0%
I actually don't even memorize myself
 

00:07:27.070 --> 00:07:28.920 align:start position:0%
I actually don't even memorize myself
what<00:07:27.370><c> these</c><00:07:27.580><c> fine</c><00:07:27.910><c> functions</c><00:07:28.450><c> do</c><00:07:28.660><c> and</c><00:07:28.840><c> what</c>

00:07:28.920 --> 00:07:28.930 align:start position:0%
what these fine functions do and what
 

00:07:28.930 --> 00:07:30.330 align:start position:0%
what these fine functions do and what
all<00:07:29.110><c> of</c><00:07:29.140><c> these</c><00:07:29.380><c> things</c><00:07:29.590><c> to</c><00:07:29.740><c> myself</c><00:07:29.950><c> and</c>

00:07:30.330 --> 00:07:30.340 align:start position:0%
all of these things to myself and
 

00:07:30.340 --> 00:07:31.590 align:start position:0%
all of these things to myself and
whenever<00:07:30.490><c> I</c><00:07:30.670><c> use</c><00:07:31.000><c> the</c><00:07:31.180><c> find</c><00:07:31.420><c> function</c>

00:07:31.590 --> 00:07:31.600 align:start position:0%
whenever I use the find function
 

00:07:31.600 --> 00:07:34.080 align:start position:0%
whenever I use the find function
sometimes<00:07:32.560><c> I</c><00:07:32.740><c> forget</c><00:07:32.920><c> myself</c><00:07:33.250><c> exactly</c><00:07:33.760><c> what</c>

00:07:34.080 --> 00:07:34.090 align:start position:0%
sometimes I forget myself exactly what
 

00:07:34.090 --> 00:07:36.270 align:start position:0%
sometimes I forget myself exactly what
it<00:07:34.210><c> does</c><00:07:34.360><c> and</c><00:07:34.690><c> you</c><00:07:34.900><c> know</c><00:07:35.020><c> I</c><00:07:35.050><c> type</c><00:07:35.500><c> HopeLine</c><00:07:36.010><c> to</c>

00:07:36.270 --> 00:07:36.280 align:start position:0%
it does and you know I type HopeLine to
 

00:07:36.280 --> 00:07:38.910 align:start position:0%
it does and you know I type HopeLine to
look<00:07:36.460><c> up</c><00:07:36.610><c> the</c><00:07:36.700><c> document</c><00:07:37.150><c> okay</c><00:07:38.050><c> just</c><00:07:38.560><c> two</c><00:07:38.770><c> more</c>

00:07:38.910 --> 00:07:38.920 align:start position:0%
look up the document okay just two more
 

00:07:38.920 --> 00:07:40.530 align:start position:0%
look up the document okay just two more
things<00:07:38.980><c> will</c><00:07:39.250><c> quickly</c><00:07:39.550><c> show</c><00:07:39.790><c> you</c><00:07:39.820><c> one</c><00:07:40.210><c> is</c><00:07:40.360><c> the</c>

00:07:40.530 --> 00:07:40.540 align:start position:0%
things will quickly show you one is the
 

00:07:40.540 --> 00:07:43.380 align:start position:0%
things will quickly show you one is the
sum<00:07:40.840><c> function</c><00:07:41.170><c> so</c><00:07:41.710><c> here's</c><00:07:42.010><c> my</c><00:07:42.220><c> a</c><00:07:42.400><c> and</c><00:07:43.180><c> then</c>

00:07:43.380 --> 00:07:43.390 align:start position:0%
sum function so here's my a and then
 

00:07:43.390 --> 00:07:45.600 align:start position:0%
sum function so here's my a and then
type<00:07:43.630><c> sum</c><00:07:43.900><c> a</c><00:07:44.110><c> this</c><00:07:44.470><c> adds</c><00:07:44.710><c> up</c><00:07:44.950><c> all</c><00:07:45.070><c> the</c><00:07:45.250><c> elements</c>

00:07:45.600 --> 00:07:45.610 align:start position:0%
type sum a this adds up all the elements
 

00:07:45.610 --> 00:07:48.030 align:start position:0%
type sum a this adds up all the elements
of<00:07:45.730><c> a</c><00:07:45.880><c> and</c><00:07:46.150><c> if</c><00:07:46.840><c> I</c><00:07:46.930><c> multiply</c><00:07:47.200><c> them</c><00:07:47.650><c> together</c><00:07:47.770><c> I</c>

00:07:48.030 --> 00:07:48.040 align:start position:0%
of a and if I multiply them together I
 

00:07:48.040 --> 00:07:51.090 align:start position:0%
of a and if I multiply them together I
type<00:07:48.400><c> prod</c><00:07:48.700><c> a</c><00:07:49.000><c> process</c><00:07:49.990><c> or</c><00:07:50.170><c> product</c><00:07:50.470><c> and</c><00:07:50.860><c> this</c>

00:07:51.090 --> 00:07:51.100 align:start position:0%
type prod a process or product and this
 

00:07:51.100 --> 00:07:53.520 align:start position:0%
type prod a process or product and this
returns<00:07:51.340><c> the</c><00:07:51.850><c> product</c><00:07:52.390><c> of</c><00:07:52.600><c> these</c><00:07:53.230><c> four</c>

00:07:53.520 --> 00:07:53.530 align:start position:0%
returns the product of these four
 

00:07:53.530 --> 00:07:58.380 align:start position:0%
returns the product of these four
elements<00:07:53.980><c> of</c><00:07:54.070><c> a</c><00:07:55.500><c> floor</c><00:07:56.500><c> a</c><00:07:56.710><c> rounds</c><00:07:57.610><c> down</c><00:07:57.820><c> these</c>

00:07:58.380 --> 00:07:58.390 align:start position:0%
elements of a floor a rounds down these
 

00:07:58.390 --> 00:07:59.910 align:start position:0%
elements of a floor a rounds down these
elements<00:07:58.810><c> of</c><00:07:58.900><c> eight</c><00:07:59.050><c> so</c><00:07:59.290><c> zero</c><00:07:59.560><c> point</c><00:07:59.710><c> five</c>

00:07:59.910 --> 00:07:59.920 align:start position:0%
elements of eight so zero point five
 

00:07:59.920 --> 00:08:02.550 align:start position:0%
elements of eight so zero point five
gets<00:08:00.220><c> rounded</c><00:08:00.550><c> down</c><00:08:00.730><c> to</c><00:08:00.940><c> zero</c><00:08:01.300><c> and</c><00:08:01.480><c> Cu</c><00:08:02.320><c> or</c>

00:08:02.550 --> 00:08:02.560 align:start position:0%
gets rounded down to zero and Cu or
 

00:08:02.560 --> 00:08:04.980 align:start position:0%
gets rounded down to zero and Cu or
ceiling<00:08:03.010><c> a</c><00:08:03.190><c> gets</c><00:08:03.610><c> rounded</c><00:08:03.940><c> up</c><00:08:04.150><c> so</c><00:08:04.570><c> zero</c><00:08:04.870><c> point</c>

00:08:04.980 --> 00:08:04.990 align:start position:0%
ceiling a gets rounded up so zero point
 

00:08:04.990 --> 00:08:06.780 align:start position:0%
ceiling a gets rounded up so zero point
five<00:08:05.200><c> rounded</c><00:08:05.980><c> up</c><00:08:06.130><c> to</c><00:08:06.160><c> the</c><00:08:06.280><c> nearest</c><00:08:06.520><c> integer</c>

00:08:06.780 --> 00:08:06.790 align:start position:0%
five rounded up to the nearest integer
 

00:08:06.790 --> 00:08:08.910 align:start position:0%
five rounded up to the nearest integer
so<00:08:07.270><c> zero</c><00:08:07.480><c> point</c><00:08:07.690><c> five</c><00:08:07.840><c> gets</c><00:08:08.170><c> rounded</c><00:08:08.560><c> up</c><00:08:08.740><c> to</c>

00:08:08.910 --> 00:08:08.920 align:start position:0%
so zero point five gets rounded up to
 

00:08:08.920 --> 00:08:10.010 align:start position:0%
so zero point five gets rounded up to
one

00:08:10.010 --> 00:08:10.020 align:start position:0%
one
 

00:08:10.020 --> 00:08:13.710 align:start position:0%
one
you<00:08:11.020><c> can</c><00:08:11.260><c> also</c><00:08:12.150><c> let's</c><00:08:13.150><c> see</c><00:08:13.240><c> you</c><00:08:13.360><c> let</c><00:08:13.480><c> me</c><00:08:13.540><c> type</c>

00:08:13.710 --> 00:08:13.720 align:start position:0%
you can also let's see you let me type
 

00:08:13.720 --> 00:08:15.810 align:start position:0%
you can also let's see you let me type
ran<00:08:13.990><c> three</c><00:08:14.410><c> the</c><00:08:14.680><c> generator</c><00:08:15.100><c> three</c><00:08:15.430><c> by</c><00:08:15.550><c> three</c>

00:08:15.810 --> 00:08:15.820 align:start position:0%
ran three the generator three by three
 

00:08:15.820 --> 00:08:19.680 align:start position:0%
ran three the generator three by three
matrix<00:08:16.210><c> if</c><00:08:16.720><c> I</c><00:08:16.870><c> type</c><00:08:17.110><c> max</c><00:08:17.410><c> ran</c><00:08:17.980><c> three</c><00:08:18.430><c> R</c><00:08:18.730><c> and</c><00:08:19.390><c> V</c>

00:08:19.680 --> 00:08:19.690 align:start position:0%
matrix if I type max ran three R and V
 

00:08:19.690 --> 00:08:22.260 align:start position:0%
matrix if I type max ran three R and V
what<00:08:20.620><c> this</c><00:08:20.830><c> does</c><00:08:21.070><c> is</c><00:08:21.310><c> it</c><00:08:21.430><c> takes</c><00:08:21.610><c> the</c><00:08:21.880><c> element</c>

00:08:22.260 --> 00:08:22.270 align:start position:0%
what this does is it takes the element
 

00:08:22.270 --> 00:08:25.980 align:start position:0%
what this does is it takes the element
wise<00:08:22.630><c> maximum</c><00:08:23.140><c> of</c><00:08:23.760><c> two</c><00:08:24.760><c> random</c><00:08:25.240><c> three</c><00:08:25.810><c> by</c>

00:08:25.980 --> 00:08:25.990 align:start position:0%
wise maximum of two random three by
 

00:08:25.990 --> 00:08:27.630 align:start position:0%
wise maximum of two random three by
three<00:08:26.320><c> matrices</c><00:08:26.740><c> so</c><00:08:27.100><c> you</c><00:08:27.190><c> know</c><00:08:27.310><c> that</c><00:08:27.490><c> all</c>

00:08:27.630 --> 00:08:27.640 align:start position:0%
three matrices so you know that all
 

00:08:27.640 --> 00:08:29.250 align:start position:0%
three matrices so you know that all
these<00:08:27.880><c> numbers</c><00:08:28.090><c> tend</c><00:08:28.660><c> to</c><00:08:28.750><c> be</c><00:08:28.840><c> a</c><00:08:28.870><c> bit</c><00:08:28.930><c> on</c><00:08:29.140><c> the</c>

00:08:29.250 --> 00:08:29.260 align:start position:0%
these numbers tend to be a bit on the
 

00:08:29.260 --> 00:08:31.290 align:start position:0%
these numbers tend to be a bit on the
large<00:08:29.410><c> side</c><00:08:29.740><c> because</c><00:08:30.100><c> each</c><00:08:30.760><c> of</c><00:08:30.790><c> these</c><00:08:31.060><c> is</c>

00:08:31.290 --> 00:08:31.300 align:start position:0%
large side because each of these is
 

00:08:31.300 --> 00:08:32.519 align:start position:0%
large side because each of these is
actually<00:08:31.480><c> the</c><00:08:31.720><c> max</c>

00:08:32.519 --> 00:08:32.529 align:start position:0%
actually the max
 

00:08:32.529 --> 00:08:35.850 align:start position:0%
actually the max
a<00:08:32.560><c> randomly</c><00:08:33.219><c> of</c><00:08:33.959><c> element-wise</c><00:08:34.959><c> mass</c><00:08:35.289><c> of</c><00:08:35.649><c> two</c>

00:08:35.850 --> 00:08:35.860 align:start position:0%
a randomly of element-wise mass of two
 

00:08:35.860 --> 00:08:38.579 align:start position:0%
a randomly of element-wise mass of two
randomly<00:08:36.430><c> generated</c><00:08:36.939><c> matrices</c><00:08:37.409><c> this</c><00:08:38.409><c> is</c><00:08:38.560><c> a</c>

00:08:38.579 --> 00:08:38.589 align:start position:0%
randomly generated matrices this is a
 

00:08:38.589 --> 00:08:40.259 align:start position:0%
randomly generated matrices this is a
this<00:08:38.979><c> is</c><00:08:39.039><c> my</c><00:08:39.310><c> magic</c><00:08:39.849><c> number</c>

00:08:40.259 --> 00:08:40.269 align:start position:0%
this is my magic number
 

00:08:40.269 --> 00:08:43.170 align:start position:0%
this is my magic number
this<00:08:40.539><c> was</c><00:08:40.659><c> my</c><00:08:40.839><c> a</c><00:08:40.870><c> magic</c><00:08:41.349><c> square</c><00:08:41.560><c> 3x3</c><00:08:42.339><c> a</c><00:08:42.370><c> let's</c>

00:08:43.170 --> 00:08:43.180 align:start position:0%
this was my a magic square 3x3 a let's
 

00:08:43.180 --> 00:08:47.189 align:start position:0%
this was my a magic square 3x3 a let's
say<00:08:43.300><c> I</c><00:08:43.329><c> type</c><00:08:43.569><c> max</c><00:08:43.899><c> a</c><00:08:45.240><c> and</c><00:08:46.240><c> then</c><00:08:46.720><c> this</c><00:08:46.870><c> weird</c>

00:08:47.189 --> 00:08:47.199 align:start position:0%
say I type max a and then this weird
 

00:08:47.199 --> 00:08:50.549 align:start position:0%
say I type max a and then this weird
open<00:08:48.040><c> close</c><00:08:48.249><c> square</c><00:08:48.490><c> bracket</c><00:08:48.970><c> comma</c><00:08:49.300><c> 1</c><00:08:49.660><c> what</c>

00:08:50.549 --> 00:08:50.559 align:start position:0%
open close square bracket comma 1 what
 

00:08:50.559 --> 00:08:52.829 align:start position:0%
open close square bracket comma 1 what
this<00:08:50.769><c> does</c><00:08:51.040><c> is</c><00:08:51.339><c> this</c><00:08:51.639><c> takes</c><00:08:51.939><c> the</c><00:08:52.029><c> column</c><00:08:52.600><c> wise</c>

00:08:52.829 --> 00:08:52.839 align:start position:0%
this does is this takes the column wise
 

00:08:52.839 --> 00:08:55.350 align:start position:0%
this does is this takes the column wise
maximum<00:08:53.230><c> so</c><00:08:53.829><c> the</c><00:08:54.249><c> max</c><00:08:54.490><c> of</c><00:08:54.670><c> the</c><00:08:54.759><c> first</c><00:08:54.970><c> column</c>

00:08:55.350 --> 00:08:55.360 align:start position:0%
maximum so the max of the first column
 

00:08:55.360 --> 00:08:58.679 align:start position:0%
maximum so the max of the first column
is<00:08:55.449><c> 8</c><00:08:55.689><c> max</c><00:08:56.230><c> a</c><00:08:56.410><c> 7</c><00:08:56.769><c> second</c><00:08:57.309><c> column</c><00:08:57.579><c> is</c><00:08:57.699><c> 9</c><00:08:57.939><c> the</c><00:08:58.449><c> max</c>

00:08:58.679 --> 00:08:58.689 align:start position:0%
is 8 max a 7 second column is 9 the max
 

00:08:58.689 --> 00:09:01.470 align:start position:0%
is 8 max a 7 second column is 9 the max
in<00:08:58.839><c> the</c><00:08:58.899><c> third</c><00:08:59.139><c> column</c><00:08:59.410><c> is</c><00:08:59.740><c> 7</c><00:09:00.220><c> this</c><00:09:00.819><c> one</c><00:09:01.149><c> means</c>

00:09:01.470 --> 00:09:01.480 align:start position:0%
in the third column is 7 this one means
 

00:09:01.480 --> 00:09:02.879 align:start position:0%
in the third column is 7 this one means
to<00:09:01.600><c> take</c><00:09:01.839><c> the</c><00:09:01.899><c> max</c><00:09:02.019><c> along</c><00:09:02.559><c> the</c><00:09:02.680><c> first</c>

00:09:02.879 --> 00:09:02.889 align:start position:0%
to take the max along the first
 

00:09:02.889 --> 00:09:06.299 align:start position:0%
to take the max along the first
dimension<00:09:03.249><c> of</c><00:09:03.639><c> a</c><00:09:04.230><c> in</c><00:09:05.230><c> contrast</c><00:09:05.800><c> if</c><00:09:05.980><c> I</c><00:09:06.040><c> were</c><00:09:06.160><c> to</c>

00:09:06.299 --> 00:09:06.309 align:start position:0%
dimension of a in contrast if I were to
 

00:09:06.309 --> 00:09:09.629 align:start position:0%
dimension of a in contrast if I were to
type<00:09:06.519><c> max</c><00:09:06.759><c> a</c><00:09:07.089><c> this</c><00:09:07.899><c> funny</c><00:09:08.110><c> notation</c><00:09:08.319><c> to</c><00:09:09.040><c> then</c>

00:09:09.629 --> 00:09:09.639 align:start position:0%
type max a this funny notation to then
 

00:09:09.639 --> 00:09:12.749 align:start position:0%
type max a this funny notation to then
this<00:09:09.910><c> takes</c><00:09:10.209><c> the</c><00:09:10.389><c> per</c><00:09:11.139><c> row</c><00:09:11.620><c> maximum</c><00:09:12.430><c> so</c><00:09:12.670><c> the</c>

00:09:12.749 --> 00:09:12.759 align:start position:0%
this takes the per row maximum so the
 

00:09:12.759 --> 00:09:14.790 align:start position:0%
this takes the per row maximum so the
max<00:09:12.939><c> to</c><00:09:13.059><c> the</c><00:09:13.120><c> first</c><00:09:13.329><c> row</c><00:09:13.600><c> is</c><00:09:13.749><c> 8</c><00:09:13.930><c> men</c><00:09:14.230><c> so</c><00:09:14.410><c> second</c>

00:09:14.790 --> 00:09:14.800 align:start position:0%
max to the first row is 8 men so second
 

00:09:14.800 --> 00:09:18.600 align:start position:0%
max to the first row is 8 men so second
row<00:09:14.949><c> is</c><00:09:15.430><c> 7</c><00:09:15.939><c> max</c><00:09:16.449><c> of</c><00:09:16.689><c> the</c><00:09:16.779><c> third</c><00:09:17.050><c> row</c><00:09:17.379><c> is</c><00:09:17.620><c> 9</c><00:09:18.220><c> and</c>

00:09:18.600 --> 00:09:18.610 align:start position:0%
row is 7 max of the third row is 9 and
 

00:09:18.610 --> 00:09:21.090 align:start position:0%
row is 7 max of the third row is 9 and
so<00:09:18.790><c> this</c><00:09:19.059><c> allows</c><00:09:19.839><c> you</c><00:09:19.990><c> to</c><00:09:20.019><c> take</c><00:09:20.259><c> max</c><00:09:20.559><c> is</c><00:09:20.769><c> either</c>

00:09:21.090 --> 00:09:21.100 align:start position:0%
so this allows you to take max is either
 

00:09:21.100 --> 00:09:25.290 align:start position:0%
so this allows you to take max is either
you<00:09:21.699><c> know</c><00:09:21.819><c> per</c><00:09:22.120><c> row</c><00:09:22.329><c> or</c><00:09:22.569><c> per</c><00:09:22.990><c> column</c><00:09:23.589><c> and</c><00:09:24.300><c> if</c>

00:09:25.290 --> 00:09:25.300 align:start position:0%
you know per row or per column and if
 

00:09:25.300 --> 00:09:28.470 align:start position:0%
you know per row or per column and if
you<00:09:25.420><c> want</c><00:09:25.600><c> to</c><00:09:25.720><c> and</c><00:09:26.430><c> remember</c><00:09:27.430><c> the</c><00:09:27.699><c> default</c><00:09:27.910><c> to</c>

00:09:28.470 --> 00:09:28.480 align:start position:0%
you want to and remember the default to
 

00:09:28.480 --> 00:09:30.329 align:start position:0%
you want to and remember the default to
a<00:09:28.509><c> column</c><00:09:29.079><c> art</c><00:09:29.259><c> wise</c><00:09:29.499><c> elements</c><00:09:30.069><c> you</c><00:09:30.160><c> won't</c>

00:09:30.329 --> 00:09:30.339 align:start position:0%
a column art wise elements you won't
 

00:09:30.339 --> 00:09:32.639 align:start position:0%
a column art wise elements you won't
find<00:09:30.519><c> if</c><00:09:30.699><c> you</c><00:09:30.790><c> want</c><00:09:30.939><c> to</c><00:09:31.029><c> find</c><00:09:31.209><c> the</c><00:09:31.749><c> maximum</c>

00:09:32.639 --> 00:09:32.649 align:start position:0%
find if you want to find the maximum
 

00:09:32.649 --> 00:09:35.249 align:start position:0%
find if you want to find the maximum
element<00:09:32.949><c> in</c><00:09:33.339><c> the</c><00:09:33.519><c> entire</c><00:09:33.610><c> matrix</c><00:09:33.879><c> a</c><00:09:34.420><c> you</c><00:09:34.660><c> can</c>

00:09:35.249 --> 00:09:35.259 align:start position:0%
element in the entire matrix a you can
 

00:09:35.259 --> 00:09:39.540 align:start position:0%
element in the entire matrix a you can
type<00:09:35.529><c> max</c><00:09:35.860><c> max</c><00:09:36.670><c> of</c><00:09:37.029><c> a</c><00:09:37.740><c> like</c><00:09:38.740><c> so</c><00:09:38.949><c> which</c><00:09:39.129><c> is</c><00:09:39.220><c> 9</c><00:09:39.399><c> or</c>

00:09:39.540 --> 00:09:39.550 align:start position:0%
type max max of a like so which is 9 or
 

00:09:39.550 --> 00:09:42.240 align:start position:0%
type max max of a like so which is 9 or
you<00:09:39.819><c> can</c><00:09:39.970><c> turn</c><00:09:40.209><c> a</c><00:09:40.480><c> into</c><00:09:40.720><c> vector</c><00:09:41.170><c> and</c><00:09:41.410><c> type</c><00:09:42.009><c> max</c>

00:09:42.240 --> 00:09:42.250 align:start position:0%
you can turn a into vector and type max
 

00:09:42.250 --> 00:09:46.139 align:start position:0%
you can turn a into vector and type max
of<00:09:42.610><c> a</c><00:09:43.589><c> colon</c><00:09:44.589><c> like</c><00:09:44.740><c> so</c><00:09:44.949><c> and</c><00:09:45.189><c> this</c><00:09:45.279><c> treats</c><00:09:46.000><c> this</c>

00:09:46.139 --> 00:09:46.149 align:start position:0%
of a colon like so and this treats this
 

00:09:46.149 --> 00:09:49.049 align:start position:0%
of a colon like so and this treats this
as<00:09:46.209><c> a</c><00:09:46.389><c> vector</c><00:09:46.480><c> and</c><00:09:46.839><c> takes</c><00:09:47.230><c> the</c><00:09:47.439><c> max</c><00:09:48.250><c> of</c><00:09:48.519><c> max</c>

00:09:49.049 --> 00:09:49.059 align:start position:0%
as a vector and takes the max of max
 

00:09:49.059 --> 00:09:53.759 align:start position:0%
as a vector and takes the max of max
element<00:09:49.509><c> of</c><00:09:49.660><c> that</c><00:09:49.779><c> vector</c><00:09:51.569><c> finally</c><00:09:52.680><c> let's</c><00:09:53.680><c> set</c>

00:09:53.759 --> 00:09:53.769 align:start position:0%
element of that vector finally let's set
 

00:09:53.769 --> 00:09:56.400 align:start position:0%
element of that vector finally let's set
a<00:09:54.129><c> to</c><00:09:54.189><c> be</c><00:09:54.519><c> a</c><00:09:54.639><c> 9</c><00:09:55.029><c> by</c><00:09:55.209><c> 9</c><00:09:55.240><c> Magic</c><00:09:55.870><c> Square</c><00:09:56.019><c> so</c>

00:09:56.400 --> 00:09:56.410 align:start position:0%
a to be a 9 by 9 Magic Square so
 

00:09:56.410 --> 00:09:58.110 align:start position:0%
a to be a 9 by 9 Magic Square so
remember<00:09:56.860><c> the</c><00:09:57.250><c> Magic</c><00:09:57.579><c> Square</c><00:09:57.730><c> has</c><00:09:58.000><c> this</c>

00:09:58.110 --> 00:09:58.120 align:start position:0%
remember the Magic Square has this
 

00:09:58.120 --> 00:10:01.019 align:start position:0%
remember the Magic Square has this
property<00:09:58.420><c> that</c><00:09:58.649><c> every</c><00:09:59.649><c> column</c><00:10:00.430><c> in</c><00:10:00.550><c> every</c><00:10:00.790><c> row</c>

00:10:01.019 --> 00:10:01.029 align:start position:0%
property that every column in every row
 

00:10:01.029 --> 00:10:02.879 align:start position:0%
property that every column in every row
sums<00:10:01.779><c> the</c><00:10:01.930><c> same</c><00:10:02.139><c> thing</c><00:10:02.379><c> and</c><00:10:02.620><c> also</c><00:10:02.769><c> the</c>

00:10:02.879 --> 00:10:02.889 align:start position:0%
sums the same thing and also the
 

00:10:02.889 --> 00:10:04.519 align:start position:0%
sums the same thing and also the
diagonals<00:10:03.220><c> so</c><00:10:03.639><c> here's</c><00:10:03.819><c> a</c><00:10:03.910><c> 9</c><00:10:04.059><c> by</c><00:10:04.180><c> 9</c><00:10:04.209><c> matrix</c>

00:10:04.519 --> 00:10:04.529 align:start position:0%
diagonals so here's a 9 by 9 matrix
 

00:10:04.529 --> 00:10:08.369 align:start position:0%
diagonals so here's a 9 by 9 matrix
square<00:10:05.529><c> so</c><00:10:06.339><c> let</c><00:10:06.490><c> me</c><00:10:06.579><c> do</c><00:10:06.699><c> some</c><00:10:06.970><c> a1</c><00:10:07.269><c> so</c><00:10:07.899><c> this</c><00:10:08.139><c> does</c>

00:10:08.369 --> 00:10:08.379 align:start position:0%
square so let me do some a1 so this does
 

00:10:08.379 --> 00:10:10.860 align:start position:0%
square so let me do some a1 so this does
a<00:10:08.680><c> per</c><00:10:09.220><c> column</c><00:10:09.759><c> sum</c><00:10:10.120><c> so</c><00:10:10.420><c> I'm</c><00:10:10.509><c> going</c><00:10:10.660><c> to</c><00:10:10.689><c> take</c><00:10:10.809><c> a</c>

00:10:10.860 --> 00:10:10.870 align:start position:0%
a per column sum so I'm going to take a
 

00:10:10.870 --> 00:10:13.710 align:start position:0%
a per column sum so I'm going to take a
column<00:10:11.500><c> of</c><00:10:11.620><c> a</c><00:10:11.740><c> and</c><00:10:11.769><c> add</c><00:10:12.160><c> them</c><00:10:12.339><c> up</c><00:10:12.430><c> and</c><00:10:12.550><c> this</c><00:10:13.509><c> you</c>

00:10:13.710 --> 00:10:13.720 align:start position:0%
column of a and add them up and this you
 

00:10:13.720 --> 00:10:15.869 align:start position:0%
column of a and add them up and this you
know<00:10:13.809><c> lessons</c><00:10:14.199><c> verify</c><00:10:14.559><c> that</c><00:10:14.860><c> indeed</c><00:10:15.160><c> for</c><00:10:15.610><c> a</c><00:10:15.639><c> 9</c>

00:10:15.869 --> 00:10:15.879 align:start position:0%
know lessons verify that indeed for a 9
 

00:10:15.879 --> 00:10:17.999 align:start position:0%
know lessons verify that indeed for a 9
by<00:10:16.029><c> 9</c><00:10:16.059><c> matrix</c><00:10:16.240><c> square</c><00:10:16.870><c> every</c><00:10:17.199><c> column</c><00:10:17.620><c> adds</c><00:10:17.800><c> up</c>

00:10:17.999 --> 00:10:18.009 align:start position:0%
by 9 matrix square every column adds up
 

00:10:18.009 --> 00:10:20.460 align:start position:0%
by 9 matrix square every column adds up
to<00:10:18.040><c> 3</c><00:10:18.399><c> 6</c><00:10:18.610><c> 9</c><00:10:18.639><c> s</c><00:10:18.759><c> of</c><00:10:19.089><c> the</c><00:10:19.209><c> same</c><00:10:19.389><c> thing</c><00:10:19.569><c> now</c><00:10:20.259><c> let's</c>

00:10:20.460 --> 00:10:20.470 align:start position:0%
to 3 6 9 s of the same thing now let's
 

00:10:20.470 --> 00:10:22.769 align:start position:0%
to 3 6 9 s of the same thing now let's
do<00:10:20.620><c> the</c><00:10:20.800><c> row</c><00:10:21.309><c> wise</c><00:10:21.550><c> some</c><00:10:21.879><c> so</c><00:10:22.149><c> there's</c><00:10:22.329><c> some</c><00:10:22.600><c> a</c>

00:10:22.769 --> 00:10:22.779 align:start position:0%
do the row wise some so there's some a
 

00:10:22.779 --> 00:10:28.769 align:start position:0%
do the row wise some so there's some a
calmer<00:10:23.529><c> of</c><00:10:24.269><c> 2</c><00:10:25.269><c> and</c><00:10:26.069><c> this</c><00:10:27.069><c> sums</c><00:10:28.000><c> up</c><00:10:28.179><c> each</c><00:10:28.449><c> row</c><00:10:28.749><c> of</c>

00:10:28.769 --> 00:10:28.779 align:start position:0%
calmer of 2 and this sums up each row of
 

00:10:28.779 --> 00:10:31.410 align:start position:0%
calmer of 2 and this sums up each row of
a<00:10:29.079><c> and</c><00:10:29.350><c> indeed</c><00:10:29.649><c> each</c><00:10:29.860><c> row</c><00:10:30.160><c> of</c><00:10:30.189><c> a</c><00:10:30.429><c> also</c><00:10:30.879><c> sums</c><00:10:31.209><c> up</c>

00:10:31.410 --> 00:10:31.420 align:start position:0%
a and indeed each row of a also sums up
 

00:10:31.420 --> 00:10:32.660 align:start position:0%
a and indeed each row of a also sums up
to<00:10:31.629><c> 3</c><00:10:31.870><c> 6</c><00:10:32.079><c> 9</c>

00:10:32.660 --> 00:10:32.670 align:start position:0%
to 3 6 9
 

00:10:32.670 --> 00:10:35.910 align:start position:0%
to 3 6 9
now<00:10:33.670><c> let's</c><00:10:33.970><c> sum</c><00:10:34.240><c> the</c><00:10:34.449><c> diagonal</c><00:10:35.199><c> elements</c><00:10:35.649><c> of</c><00:10:35.740><c> a</c>

00:10:35.910 --> 00:10:35.920 align:start position:0%
now let's sum the diagonal elements of a
 

00:10:35.920 --> 00:10:37.799 align:start position:0%
now let's sum the diagonal elements of a
and<00:10:35.949><c> make</c><00:10:36.309><c> sure</c><00:10:36.459><c> the</c><00:10:36.639><c> day</c><00:10:36.790><c> that</c><00:10:37.120><c> that</c><00:10:37.509><c> also</c>

00:10:37.799 --> 00:10:37.809 align:start position:0%
and make sure the day that that also
 

00:10:37.809 --> 00:10:40.559 align:start position:0%
and make sure the day that that also
sums<00:10:38.259><c> up</c><00:10:38.410><c> to</c><00:10:38.439><c> the</c><00:10:38.559><c> same</c><00:10:38.649><c> thing</c><00:10:38.860><c> so</c><00:10:39.850><c> what</c><00:10:40.509><c> I'm</c>

00:10:40.559 --> 00:10:40.569 align:start position:0%
sums up to the same thing so what I'm
 

00:10:40.569 --> 00:10:42.749 align:start position:0%
sums up to the same thing so what I'm
going<00:10:40.689><c> to</c><00:10:40.750><c> do</c><00:10:40.899><c> is</c><00:10:41.139><c> construct</c><00:10:42.069><c> a</c><00:10:42.309><c> 9</c><00:10:42.550><c> by</c><00:10:42.730><c> 9</c>

00:10:42.749 --> 00:10:42.759 align:start position:0%
going to do is construct a 9 by 9
 

00:10:42.759 --> 00:10:45.100 align:start position:0%
going to do is construct a 9 by 9
identity<00:10:43.600><c> matrix</c><00:10:43.990><c> that's</c><00:10:44.259><c> a</c><00:10:44.500><c> 9</c>

00:10:45.100 --> 00:10:45.110 align:start position:0%
identity matrix that's a 9
 

00:10:45.110 --> 00:10:47.410 align:start position:0%
identity matrix that's a 9
and<00:10:45.230><c> we're</c><00:10:45.709><c> going</c><00:10:45.830><c> to</c><00:10:45.890><c> take</c><00:10:46.070><c> a</c><00:10:46.310><c> and</c><00:10:46.730><c> construct</c>

00:10:47.410 --> 00:10:47.420 align:start position:0%
and we're going to take a and construct
 

00:10:47.420 --> 00:10:51.610 align:start position:0%
and we're going to take a and construct
your<00:10:48.130><c> multiply</c><00:10:49.130><c> a</c><00:10:49.399><c> element-wise</c><00:10:50.410><c> so</c><00:10:51.410><c> here's</c>

00:10:51.610 --> 00:10:51.620 align:start position:0%
your multiply a element-wise so here's
 

00:10:51.620 --> 00:10:56.500 align:start position:0%
your multiply a element-wise so here's
my<00:10:51.740><c> matrix</c><00:10:51.920><c> a</c><00:10:52.310><c> going</c><00:10:53.000><c> to</c><00:10:53.149><c> 8</c><00:10:53.390><c> times</c><00:10:54.370><c> i9</c><00:10:55.370><c> and</c><00:10:55.760><c> what</c>

00:10:56.500 --> 00:10:56.510 align:start position:0%
my matrix a going to 8 times i9 and what
 

00:10:56.510 --> 00:10:58.540 align:start position:0%
my matrix a going to 8 times i9 and what
this<00:10:56.660><c> will</c><00:10:56.870><c> do</c><00:10:57.019><c> is</c><00:10:57.050><c> take</c><00:10:57.529><c> the</c><00:10:57.950><c> element</c><00:10:58.399><c> wise</c>

00:10:58.540 --> 00:10:58.550 align:start position:0%
this will do is take the element wise
 

00:10:58.550 --> 00:11:00.970 align:start position:0%
this will do is take the element wise
product<00:10:59.360><c> of</c><00:10:59.540><c> these</c><00:10:59.779><c> two</c><00:11:00.050><c> matrices</c><00:11:00.230><c> and</c><00:11:00.800><c> so</c>

00:11:00.970 --> 00:11:00.980 align:start position:0%
product of these two matrices and so
 

00:11:00.980 --> 00:11:02.949 align:start position:0%
product of these two matrices and so
this<00:11:01.160><c> should</c><00:11:01.339><c> wipe</c><00:11:01.850><c> out</c><00:11:02.089><c> everything</c><00:11:02.480><c> in</c><00:11:02.779><c> a</c>

00:11:02.949 --> 00:11:02.959 align:start position:0%
this should wipe out everything in a
 

00:11:02.959 --> 00:11:06.160 align:start position:0%
this should wipe out everything in a
except<00:11:03.649><c> for</c><00:11:03.860><c> the</c><00:11:03.950><c> diagonal</c><00:11:04.550><c> entries</c><00:11:04.970><c> and</c><00:11:05.269><c> now</c>

00:11:06.160 --> 00:11:06.170 align:start position:0%
except for the diagonal entries and now
 

00:11:06.170 --> 00:11:09.730 align:start position:0%
except for the diagonal entries and now
I'm<00:11:06.529><c> going</c><00:11:06.709><c> to</c><00:11:06.800><c> do</c><00:11:06.890><c> some</c><00:11:07.220><c> sum</c><00:11:07.910><c> of</c><00:11:08.180><c> a</c><00:11:08.959><c> of</c><00:11:09.230><c> that</c>

00:11:09.730 --> 00:11:09.740 align:start position:0%
I'm going to do some sum of a of that
 

00:11:09.740 --> 00:11:14.620 align:start position:0%
I'm going to do some sum of a of that
and<00:11:10.100><c> this</c><00:11:11.089><c> gives</c><00:11:11.420><c> me</c><00:11:11.570><c> the</c><00:11:12.640><c> sum</c><00:11:13.640><c> of</c><00:11:13.850><c> this</c><00:11:14.209><c> these</c>

00:11:14.620 --> 00:11:14.630 align:start position:0%
and this gives me the sum of this these
 

00:11:14.630 --> 00:11:17.220 align:start position:0%
and this gives me the sum of this these
diagonal<00:11:15.200><c> elements</c><00:11:15.230><c> and</c><00:11:15.890><c> indeed</c><00:11:16.190><c> it</c><00:11:16.339><c> is</c><00:11:16.459><c> 3</c><00:11:16.670><c> 6</c><00:11:16.880><c> 9</c>

00:11:17.220 --> 00:11:17.230 align:start position:0%
diagonal elements and indeed it is 3 6 9
 

00:11:17.230 --> 00:11:19.990 align:start position:0%
diagonal elements and indeed it is 3 6 9
you<00:11:18.230><c> can</c><00:11:18.380><c> sum</c><00:11:18.620><c> up</c><00:11:18.769><c> the</c><00:11:18.950><c> other</c><00:11:19.220><c> diagonal</c><00:11:19.790><c> as</c>

00:11:19.990 --> 00:11:20.000 align:start position:0%
you can sum up the other diagonal as
 

00:11:20.000 --> 00:11:21.850 align:start position:0%
you can sum up the other diagonal as
well<00:11:20.209><c> so</c><00:11:20.450><c> instead</c><00:11:20.630><c> of</c><00:11:20.810><c> top</c><00:11:21.110><c> left</c><00:11:21.620><c> to</c><00:11:21.829><c> bottom</c>

00:11:21.850 --> 00:11:21.860 align:start position:0%
well so instead of top left to bottom
 

00:11:21.860 --> 00:11:23.650 align:start position:0%
well so instead of top left to bottom
right<00:11:22.190><c> you</c><00:11:22.459><c> can</c><00:11:22.519><c> sum</c><00:11:22.790><c> of</c><00:11:22.910><c> the</c><00:11:23.060><c> opposite</c>

00:11:23.650 --> 00:11:23.660 align:start position:0%
right you can sum of the opposite
 

00:11:23.660 --> 00:11:25.949 align:start position:0%
right you can sum of the opposite
diagonal<00:11:24.019><c> from</c><00:11:24.350><c> bottom</c><00:11:24.769><c> left</c><00:11:25.010><c> to</c><00:11:25.190><c> top</c><00:11:25.220><c> right</c>

00:11:25.949 --> 00:11:25.959 align:start position:0%
diagonal from bottom left to top right
 

00:11:25.959 --> 00:11:28.480 align:start position:0%
diagonal from bottom left to top right
the<00:11:26.959><c> sum</c><00:11:27.170><c> of</c><00:11:27.200><c> the</c><00:11:27.380><c> commands</c><00:11:27.890><c> for</c><00:11:28.100><c> this</c><00:11:28.190><c> is</c><00:11:28.459><c> a</c>

00:11:28.480 --> 00:11:28.490 align:start position:0%
the sum of the commands for this is a
 

00:11:28.490 --> 00:11:30.759 align:start position:0%
the sum of the commands for this is a
somewhat<00:11:29.480><c> more</c><00:11:29.660><c> cryptic</c><00:11:30.110><c> you</c><00:11:30.350><c> don't</c><00:11:30.529><c> really</c>

00:11:30.759 --> 00:11:30.769 align:start position:0%
somewhat more cryptic you don't really
 

00:11:30.769 --> 00:11:32.470 align:start position:0%
somewhat more cryptic you don't really
need<00:11:31.010><c> to</c><00:11:31.070><c> know</c><00:11:31.190><c> this</c><00:11:31.490><c> I'm</c><00:11:31.700><c> just</c><00:11:31.850><c> showing</c><00:11:32.240><c> you</c>

00:11:32.470 --> 00:11:32.480 align:start position:0%
need to know this I'm just showing you
 

00:11:32.480 --> 00:11:34.900 align:start position:0%
need to know this I'm just showing you
this<00:11:32.930><c> in</c><00:11:33.140><c> case</c><00:11:33.320><c> any</c><00:11:33.529><c> of</c><00:11:33.620><c> you</c><00:11:33.740><c> are</c><00:11:33.769><c> curious</c><00:11:34.070><c> but</c>

00:11:34.900 --> 00:11:34.910 align:start position:0%
this in case any of you are curious but
 

00:11:34.910 --> 00:11:38.949 align:start position:0%
this in case any of you are curious but
um<00:11:35.320><c> let's</c><00:11:36.320><c> see</c><00:11:36.790><c> flip</c><00:11:37.790><c> you</c><00:11:38.000><c> flip</c><00:11:38.480><c> you</c><00:11:38.750><c> these</c>

00:11:38.949 --> 00:11:38.959 align:start position:0%
um let's see flip you flip you these
 

00:11:38.959 --> 00:11:41.710 align:start position:0%
um let's see flip you flip you these
tends<00:11:39.260><c> to</c><00:11:39.410><c> flip</c><00:11:39.649><c> up</c><00:11:39.860><c> down</c><00:11:40.070><c> but</c><00:11:40.790><c> if</c><00:11:41.240><c> you</c><00:11:41.329><c> do</c><00:11:41.450><c> that</c>

00:11:41.710 --> 00:11:41.720 align:start position:0%
tends to flip up down but if you do that
 

00:11:41.720 --> 00:11:44.860 align:start position:0%
tends to flip up down but if you do that
that<00:11:42.050><c> turns</c><00:11:42.290><c> out</c><00:11:42.529><c> to</c><00:11:42.560><c> sum</c><00:11:43.519><c> up</c><00:11:43.700><c> the</c><00:11:44.240><c> elements</c>

00:11:44.860 --> 00:11:44.870 align:start position:0%
that turns out to sum up the elements
 

00:11:44.870 --> 00:11:47.290 align:start position:0%
that turns out to sum up the elements
and<00:11:44.990><c> the</c><00:11:45.110><c> opposites</c><00:11:45.769><c> at</c><00:11:45.980><c> the</c><00:11:46.519><c> other</c><00:11:46.670><c> diagram</c>

00:11:47.290 --> 00:11:47.300 align:start position:0%
and the opposites at the other diagram
 

00:11:47.300 --> 00:11:50.170 align:start position:0%
and the opposites at the other diagram
of<00:11:47.360><c> a</c><00:11:47.540><c> and</c><00:11:47.810><c> then</c><00:11:47.990><c> also</c><00:11:48.140><c> sums</c><00:11:48.620><c> up</c><00:11:48.769><c> to</c><00:11:48.800><c> 3</c><00:11:49.520><c> 6</c><00:11:49.730><c> 9</c><00:11:49.790><c> here</c>

00:11:50.170 --> 00:11:50.180 align:start position:0%
of a and then also sums up to 3 6 9 here
 

00:11:50.180 --> 00:11:53.019 align:start position:0%
of a and then also sums up to 3 6 9 here
let<00:11:50.360><c> me</c><00:11:50.390><c> show</c><00:11:50.450><c> you</c><00:11:50.600><c> where</c><00:11:51.290><c> as</c><00:11:51.380><c> I</c><00:11:51.529><c> 9</c><00:11:52.040><c> is</c><00:11:52.700><c> this</c>

00:11:53.019 --> 00:11:53.029 align:start position:0%
let me show you where as I 9 is this
 

00:11:53.029 --> 00:11:58.180 align:start position:0%
let me show you where as I 9 is this
matrix<00:11:53.410><c> flip</c><00:11:54.459><c> up/down</c><00:11:55.459><c> of</c><00:11:55.850><c> I</c><00:11:56.089><c> 9</c><00:11:57.100><c> you</c><00:11:58.100><c> know</c>

00:11:58.180 --> 00:11:58.190 align:start position:0%
matrix flip up/down of I 9 you know
 

00:11:58.190 --> 00:12:00.130 align:start position:0%
matrix flip up/down of I 9 you know
takes<00:11:58.490><c> the</c><00:11:58.550><c> identity</c><00:11:58.730><c> matrix</c><00:11:59.149><c> and</c><00:11:59.570><c> flips</c><00:11:59.930><c> it</c>

00:12:00.130 --> 00:12:00.140 align:start position:0%
takes the identity matrix and flips it
 

00:12:00.140 --> 00:12:02.769 align:start position:0%
takes the identity matrix and flips it
vertically<00:12:00.620><c> so</c><00:12:00.980><c> you</c><00:12:01.070><c> end</c><00:12:01.220><c> up</c><00:12:01.370><c> with</c><00:12:01.630><c> excuse</c><00:12:02.630><c> me</c>

00:12:02.769 --> 00:12:02.779 align:start position:0%
vertically so you end up with excuse me
 

00:12:02.779 --> 00:12:05.769 align:start position:0%
vertically so you end up with excuse me
WD<00:12:03.440><c> end</c><00:12:03.740><c> up</c><00:12:04.399><c> with</c><00:12:04.579><c> ones</c><00:12:04.910><c> on</c><00:12:05.120><c> this</c><00:12:05.240><c> opposite</c>

00:12:05.769 --> 00:12:05.779 align:start position:0%
WD end up with ones on this opposite
 

00:12:05.779 --> 00:12:09.639 align:start position:0%
WD end up with ones on this opposite
diagonal<00:12:06.110><c> as</c><00:12:06.290><c> well</c><00:12:07.959><c> just</c><00:12:08.959><c> one</c><00:12:09.230><c> last</c><00:12:09.440><c> command</c>

00:12:09.639 --> 00:12:09.649 align:start position:0%
diagonal as well just one last command
 

00:12:09.649 --> 00:12:11.590 align:start position:0%
diagonal as well just one last command
and<00:12:10.040><c> they're</c><00:12:10.190><c> not</c><00:12:10.370><c> that's</c><00:12:10.700><c> it</c><00:12:10.940><c> and</c><00:12:11.270><c> then</c><00:12:11.420><c> I'll</c>

00:12:11.590 --> 00:12:11.600 align:start position:0%
and they're not that's it and then I'll
 

00:12:11.600 --> 00:12:13.120 align:start position:0%
and they're not that's it and then I'll
that'll<00:12:11.899><c> be</c><00:12:11.990><c> it</c><00:12:12.079><c> for</c><00:12:12.110><c> this</c><00:12:12.410><c> video</c><00:12:12.560><c> let's</c><00:12:13.010><c> say</c><00:12:13.100><c> a</c>

00:12:13.120 --> 00:12:13.130 align:start position:0%
that'll be it for this video let's say a
 

00:12:13.130 --> 00:12:16.900 align:start position:0%
that'll be it for this video let's say a
to<00:12:13.310><c> be</c><00:12:13.550><c> the</c><00:12:13.700><c> magic</c><00:12:14.540><c> 3x3</c><00:12:15.500><c> magic</c><00:12:15.829><c> square</c><00:12:16.130><c> game</c><00:12:16.370><c> if</c>

00:12:16.900 --> 00:12:16.910 align:start position:0%
to be the magic 3x3 magic square game if
 

00:12:16.910 --> 00:12:18.970 align:start position:0%
to be the magic 3x3 magic square game if
you<00:12:17.029><c> want</c><00:12:17.240><c> to</c><00:12:17.329><c> invert</c><00:12:17.720><c> a</c><00:12:17.779><c> matrix</c><00:12:17.930><c> you</c><00:12:18.500><c> type</c><00:12:18.709><c> P</c>

00:12:18.970 --> 00:12:18.980 align:start position:0%
you want to invert a matrix you type P
 

00:12:18.980 --> 00:12:21.519 align:start position:0%
you want to invert a matrix you type P
in<00:12:19.190><c> a</c><00:12:19.600><c> just</c><00:12:20.600><c> technically</c><00:12:21.140><c> called</c><00:12:21.440><c> the</c>

00:12:21.519 --> 00:12:21.529 align:start position:0%
in a just technically called the
 

00:12:21.529 --> 00:12:23.350 align:start position:0%
in a just technically called the
pseudo-inverse<00:12:21.890><c> but</c><00:12:22.550><c> it</c><00:12:22.610><c> does</c><00:12:22.760><c> matter</c><00:12:22.910><c> just</c>

00:12:23.350 --> 00:12:23.360 align:start position:0%
pseudo-inverse but it does matter just
 

00:12:23.360 --> 00:12:25.269 align:start position:0%
pseudo-inverse but it does matter just
think<00:12:23.870><c> it</c><00:12:23.930><c> is</c><00:12:24.050><c> basically</c><00:12:24.320><c> the</c><00:12:24.560><c> inverse</c><00:12:24.950><c> of</c><00:12:24.980><c> a</c>

00:12:25.269 --> 00:12:25.279 align:start position:0%
think it is basically the inverse of a
 

00:12:25.279 --> 00:12:28.300 align:start position:0%
think it is basically the inverse of a
and<00:12:25.459><c> that's</c><00:12:26.450><c> the</c><00:12:26.690><c> inverse</c><00:12:26.990><c> of</c><00:12:27.500><c> a</c><00:12:27.620><c> and</c><00:12:27.860><c> so</c><00:12:28.100><c> I</c><00:12:28.130><c> can</c>

00:12:28.300 --> 00:12:28.310 align:start position:0%
and that's the inverse of a and so I can
 

00:12:28.310 --> 00:12:32.530 align:start position:0%
and that's the inverse of a and so I can
set<00:12:28.550><c> you</c><00:12:28.579><c> know</c><00:12:28.880><c> 10</c><00:12:29.570><c> equals</c><00:12:30.199><c> P</c><00:12:30.920><c> in</c><00:12:31.160><c> of</c><00:12:31.730><c> a</c><00:12:32.060><c> and</c><00:12:32.329><c> if</c>

00:12:32.530 --> 00:12:32.540 align:start position:0%
set you know 10 equals P in of a and if
 

00:12:32.540 --> 00:12:35.019 align:start position:0%
set you know 10 equals P in of a and if
I<00:12:32.630><c> take</c><00:12:32.779><c> 10</c><00:12:33.050><c> times</c><00:12:33.440><c> a</c><00:12:33.709><c> this</c><00:12:34.250><c> is</c><00:12:34.459><c> indeed</c><00:12:34.790><c> the</c>

00:12:35.019 --> 00:12:35.029 align:start position:0%
I take 10 times a this is indeed the
 

00:12:35.029 --> 00:12:37.389 align:start position:0%
I take 10 times a this is indeed the
identity<00:12:35.630><c> matrix</c><00:12:35.779><c> with</c><00:12:36.500><c> essentially</c><00:12:37.010><c> ones</c><00:12:37.220><c> on</c>

00:12:37.389 --> 00:12:37.399 align:start position:0%
identity matrix with essentially ones on
 

00:12:37.399 --> 00:12:39.010 align:start position:0%
identity matrix with essentially ones on
the<00:12:37.490><c> diagonals</c><00:12:37.970><c> and</c><00:12:38.270><c> zeros</c><00:12:38.600><c> on</c><00:12:38.779><c> the</c><00:12:38.810><c> off</c>

00:12:39.010 --> 00:12:39.020 align:start position:0%
the diagonals and zeros on the off
 

00:12:39.020 --> 00:12:43.440 align:start position:0%
the diagonals and zeros on the off
diagonals<00:12:39.560><c> up</c><00:12:39.740><c> to</c><00:12:40.399><c> a</c><00:12:40.430><c> numerical</c><00:12:40.760><c> roundoff</c>

00:12:43.440 --> 00:12:43.450 align:start position:0%
diagonals up to a numerical roundoff
 

00:12:43.450 --> 00:12:46.710 align:start position:0%
diagonals up to a numerical roundoff
so<00:12:44.320><c> that's</c><00:12:44.770><c> it</c><00:12:45.040><c> for</c><00:12:45.400><c> how</c><00:12:45.700><c> to</c><00:12:45.760><c> do</c><00:12:46.180><c> different</c>

00:12:46.710 --> 00:12:46.720 align:start position:0%
so that's it for how to do different
 

00:12:46.720 --> 00:12:49.740 align:start position:0%
so that's it for how to do different
computational<00:12:47.650><c> operations</c><00:12:47.770><c> on</c><00:12:48.610><c> the</c><00:12:49.150><c> data</c><00:12:49.510><c> and</c>

00:12:49.740 --> 00:12:49.750 align:start position:0%
computational operations on the data and
 

00:12:49.750 --> 00:12:53.250 align:start position:0%
computational operations on the data and
matrices<00:12:50.110><c> and</c><00:12:51.540><c> after</c><00:12:52.540><c> running</c><00:12:52.780><c> a</c><00:12:52.960><c> learning</c>

00:12:53.250 --> 00:12:53.260 align:start position:0%
matrices and after running a learning
 

00:12:53.260 --> 00:12:55.110 align:start position:0%
matrices and after running a learning
algorithm<00:12:53.500><c> often</c><00:12:53.980><c> one</c><00:12:54.370><c> of</c><00:12:54.400><c> the</c><00:12:54.550><c> most</c><00:12:54.610><c> useful</c>

00:12:55.110 --> 00:12:55.120 align:start position:0%
algorithm often one of the most useful
 

00:12:55.120 --> 00:12:57.240 align:start position:0%
algorithm often one of the most useful
things<00:12:55.330><c> is</c><00:12:55.570><c> to</c><00:12:55.840><c> be</c><00:12:55.870><c> able</c><00:12:56.140><c> to</c><00:12:56.470><c> look</c><00:12:56.710><c> at</c><00:12:56.950><c> your</c>

00:12:57.240 --> 00:12:57.250 align:start position:0%
things is to be able to look at your
 

00:12:57.250 --> 00:12:59.160 align:start position:0%
things is to be able to look at your
results<00:12:57.520><c> or</c><00:12:57.820><c> to</c><00:12:57.940><c> plot</c><00:12:58.180><c> or</c><00:12:58.480><c> visualize</c><00:12:58.510><c> your</c>

00:12:59.160 --> 00:12:59.170 align:start position:0%
results or to plot or visualize your
 

00:12:59.170 --> 00:13:01.830 align:start position:0%
results or to plot or visualize your
result<00:12:59.500><c> and</c><00:12:59.710><c> in</c><00:13:00.490><c> the</c><00:13:00.670><c> next</c><00:13:00.880><c> video</c><00:13:01.180><c> I'm</c><00:13:01.420><c> going</c>

00:13:01.830 --> 00:13:01.840 align:start position:0%
result and in the next video I'm going
 

00:13:01.840 --> 00:13:04.080 align:start position:0%
result and in the next video I'm going
to<00:13:01.930><c> very</c><00:13:02.200><c> quickly</c><00:13:02.500><c> show</c><00:13:02.650><c> you</c><00:13:02.920><c> how</c><00:13:03.160><c> again</c><00:13:03.910><c> with</c>

00:13:04.080 --> 00:13:04.090 align:start position:0%
to very quickly show you how again with
 

00:13:04.090 --> 00:13:06.240 align:start position:0%
to very quickly show you how again with
one<00:13:04.270><c> or</c><00:13:04.390><c> two</c><00:13:04.420><c> lines</c><00:13:04.720><c> of</c><00:13:04.840><c> code</c><00:13:05.050><c> using</c><00:13:05.650><c> octave</c>

00:13:06.240 --> 00:13:06.250 align:start position:0%
one or two lines of code using octave
 

00:13:06.250 --> 00:13:08.340 align:start position:0%
one or two lines of code using octave
you<00:13:06.430><c> can</c><00:13:06.610><c> quickly</c><00:13:06.880><c> visualize</c><00:13:07.270><c> your</c><00:13:07.690><c> data</c><00:13:07.930><c> or</c>

00:13:08.340 --> 00:13:08.350 align:start position:0%
you can quickly visualize your data or
 

00:13:08.350 --> 00:13:11.100 align:start position:0%
you can quickly visualize your data or
plot<00:13:08.680><c> your</c><00:13:09.010><c> data</c><00:13:09.070><c> and</c><00:13:09.670><c> use</c><00:13:10.480><c> that</c><00:13:10.660><c> to</c><00:13:10.900><c> better</c>

00:13:11.100 --> 00:13:11.110 align:start position:0%
plot your data and use that to better
 

00:13:11.110 --> 00:13:13.050 align:start position:0%
plot your data and use that to better
understand<00:13:11.650><c> what</c><00:13:12.280><c> your</c><00:13:12.430><c> learning</c><00:13:12.700><c> algorithms</c>

00:13:13.050 --> 00:13:13.060 align:start position:0%
understand what your learning algorithms
 

00:13:13.060 --> 00:13:15.450 align:start position:0%
understand what your learning algorithms
are<00:13:13.150><c> doing</c>

