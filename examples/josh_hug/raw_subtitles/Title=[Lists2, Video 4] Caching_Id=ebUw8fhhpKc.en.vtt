WEBVTT
Kind: captions
Language: en

00:00:00.030 --> 00:00:02.510 align:start position:0%
 
so<00:00:00.960><c> our</c><00:00:01.050><c> s</c><00:00:01.199><c> list</c><00:00:01.469><c> class</c><00:00:01.709><c> now</c><00:00:01.949><c> has</c><00:00:02.159><c> these</c><00:00:02.280><c> new</c>

00:00:02.510 --> 00:00:02.520 align:start position:0%
so our s list class now has these new
 

00:00:02.520 --> 00:00:05.120 align:start position:0%
so our s list class now has these new
fancy<00:00:02.850><c> method</c><00:00:03.360><c> size</c><00:00:03.659><c> and</c><00:00:03.990><c> add</c><00:00:04.080><c> last</c><00:00:04.380><c> but</c>

00:00:05.120 --> 00:00:05.130 align:start position:0%
fancy method size and add last but
 

00:00:05.130 --> 00:00:06.740 align:start position:0%
fancy method size and add last but
there's<00:00:05.310><c> some</c><00:00:05.430><c> issues</c><00:00:05.700><c> both</c><00:00:06.359><c> of</c><00:00:06.509><c> them</c><00:00:06.660><c> are</c>

00:00:06.740 --> 00:00:06.750 align:start position:0%
there's some issues both of them are
 

00:00:06.750 --> 00:00:08.930 align:start position:0%
there's some issues both of them are
pretty<00:00:06.899><c> slow</c><00:00:07.170><c> and</c><00:00:07.950><c> we're</c><00:00:08.069><c> gonna</c><00:00:08.160><c> focus</c><00:00:08.429><c> on</c><00:00:08.760><c> the</c>

00:00:08.930 --> 00:00:08.940 align:start position:0%
pretty slow and we're gonna focus on the
 

00:00:08.940 --> 00:00:11.110 align:start position:0%
pretty slow and we're gonna focus on the
size<00:00:09.120><c> method</c><00:00:09.570><c> in</c><00:00:09.660><c> this</c><00:00:09.750><c> particular</c><00:00:10.260><c> lecture</c>

00:00:11.110 --> 00:00:11.120 align:start position:0%
size method in this particular lecture
 

00:00:11.120 --> 00:00:12.950 align:start position:0%
size method in this particular lecture
and<00:00:12.120><c> discuss</c><00:00:12.420><c> how</c><00:00:12.540><c> to</c><00:00:12.570><c> make</c><00:00:12.719><c> it</c><00:00:12.870><c> more</c>

00:00:12.950 --> 00:00:12.960 align:start position:0%
and discuss how to make it more
 

00:00:12.960 --> 00:00:18.320 align:start position:0%
and discuss how to make it more
efficient<00:00:13.460><c> so</c><00:00:14.460><c> how</c><00:00:14.670><c> slow</c><00:00:14.969><c> is</c><00:00:15.150><c> size</c><00:00:15.440><c> well</c><00:00:17.330><c> to</c>

00:00:18.320 --> 00:00:18.330 align:start position:0%
efficient so how slow is size well to
 

00:00:18.330 --> 00:00:19.910 align:start position:0%
efficient so how slow is size well to
maybe<00:00:18.810><c> bring</c><00:00:19.020><c> this</c><00:00:19.170><c> to</c><00:00:19.320><c> the</c><00:00:19.439><c> form</c><00:00:19.650><c> and</c><00:00:19.770><c> make</c>

00:00:19.910 --> 00:00:19.920 align:start position:0%
maybe bring this to the form and make
 

00:00:19.920 --> 00:00:21.429 align:start position:0%
maybe bring this to the form and make
you<00:00:20.070><c> think</c><00:00:20.100><c> about</c><00:00:20.490><c> it</c><00:00:20.609><c> in</c><00:00:20.670><c> the</c><00:00:20.730><c> following</c><00:00:20.850><c> way</c>

00:00:21.429 --> 00:00:21.439 align:start position:0%
you think about it in the following way
 

00:00:21.439 --> 00:00:24.080 align:start position:0%
you think about it in the following way
let's<00:00:22.439><c> suppose</c><00:00:22.710><c> size</c><00:00:22.980><c> takes</c><00:00:23.310><c> two</c><00:00:23.550><c> seconds</c><00:00:23.970><c> to</c>

00:00:24.080 --> 00:00:24.090 align:start position:0%
let's suppose size takes two seconds to
 

00:00:24.090 --> 00:00:26.810 align:start position:0%
let's suppose size takes two seconds to
process<00:00:24.300><c> a</c><00:00:24.570><c> list</c><00:00:24.930><c> of</c><00:00:25.109><c> size</c><00:00:25.289><c> 1,000</c><00:00:25.920><c> it</c><00:00:26.340><c> is</c><00:00:26.460><c> size</c>

00:00:26.810 --> 00:00:26.820 align:start position:0%
process a list of size 1,000 it is size
 

00:00:26.820 --> 00:00:28.790 align:start position:0%
process a list of size 1,000 it is size
which<00:00:27.210><c> steps</c><00:00:27.480><c> to</c><00:00:27.660><c> the</c><00:00:27.750><c> list</c><00:00:27.960><c> one</c><00:00:28.289><c> item</c><00:00:28.619><c> at</c><00:00:28.740><c> a</c>

00:00:28.790 --> 00:00:28.800 align:start position:0%
which steps to the list one item at a
 

00:00:28.800 --> 00:00:31.460 align:start position:0%
which steps to the list one item at a
time<00:00:28.830><c> until</c><00:00:29.220><c> it</c><00:00:29.340><c> finally</c><00:00:29.609><c> reaches</c><00:00:30.390><c> the</c><00:00:30.510><c> end</c><00:00:30.660><c> is</c>

00:00:31.460 --> 00:00:31.470 align:start position:0%
time until it finally reaches the end is
 

00:00:31.470 --> 00:00:32.780 align:start position:0%
time until it finally reaches the end is
gonna<00:00:31.679><c> take</c><00:00:31.890><c> a</c><00:00:31.920><c> thousand</c><00:00:32.279><c> seconds</c>

00:00:32.780 --> 00:00:32.790 align:start position:0%
gonna take a thousand seconds
 

00:00:32.790 --> 00:00:34.819 align:start position:0%
gonna take a thousand seconds
now<00:00:33.480><c> you</c><00:00:33.540><c> don't</c><00:00:33.719><c> really</c><00:00:34.050><c> know</c><00:00:34.350><c> exactly</c><00:00:34.680><c> how</c>

00:00:34.819 --> 00:00:34.829 align:start position:0%
now you don't really know exactly how
 

00:00:34.829 --> 00:00:36.260 align:start position:0%
now you don't really know exactly how
computer<00:00:35.219><c> works</c><00:00:35.399><c> but</c><00:00:35.610><c> just</c><00:00:35.640><c> using</c><00:00:36.149><c> your</c>

00:00:36.260 --> 00:00:36.270 align:start position:0%
computer works but just using your
 

00:00:36.270 --> 00:00:38.240 align:start position:0%
computer works but just using your
intuition<00:00:36.480><c> how</c><00:00:37.380><c> long</c><00:00:37.620><c> do</c><00:00:37.829><c> you</c><00:00:37.860><c> think</c><00:00:37.950><c> it</c><00:00:38.160><c> will</c>

00:00:38.240 --> 00:00:38.250 align:start position:0%
intuition how long do you think it will
 

00:00:38.250 --> 00:00:39.979 align:start position:0%
intuition how long do you think it will
take<00:00:38.309><c> on</c><00:00:38.579><c> a</c><00:00:38.610><c> list</c><00:00:38.910><c> of</c><00:00:39.059><c> size</c><00:00:39.239><c> and</c><00:00:39.570><c> milli</c>

00:00:39.979 --> 00:00:39.989 align:start position:0%
take on a list of size and milli
 

00:00:39.989 --> 00:00:44.180 align:start position:0%
take on a list of size and milli
it<00:00:40.110><c> so</c><00:00:40.260><c> ponder</c><00:00:40.530><c> that</c><00:00:40.620><c> for</c><00:00:40.680><c> a</c><00:00:40.890><c> moment</c><00:00:42.890><c> so</c><00:00:43.890><c> I</c><00:00:43.920><c> say</c>

00:00:44.180 --> 00:00:44.190 align:start position:0%
it so ponder that for a moment so I say
 

00:00:44.190 --> 00:00:46.580 align:start position:0%
it so ponder that for a moment so I say
the<00:00:44.340><c> answer</c><00:00:44.610><c> is</c><00:00:44.640><c> two</c><00:00:45.120><c> thousand</c><00:00:45.629><c> seconds</c><00:00:46.050><c> and</c>

00:00:46.580 --> 00:00:46.590 align:start position:0%
the answer is two thousand seconds and
 

00:00:46.590 --> 00:00:48.380 align:start position:0%
the answer is two thousand seconds and
if<00:00:46.710><c> I</c><00:00:46.800><c> have</c><00:00:46.890><c> a</c><00:00:46.920><c> list</c><00:00:47.100><c> that's</c><00:00:47.250><c> 1,000</c><00:00:48.000><c> times</c><00:00:48.180><c> as</c>

00:00:48.380 --> 00:00:48.390 align:start position:0%
if I have a list that's 1,000 times as
 

00:00:48.390 --> 00:00:50.090 align:start position:0%
if I have a list that's 1,000 times as
large<00:00:48.600><c> then</c><00:00:49.170><c> whatever</c><00:00:49.379><c> the</c><00:00:49.620><c> computer</c><00:00:50.010><c> is</c>

00:00:50.090 --> 00:00:50.100 align:start position:0%
large then whatever the computer is
 

00:00:50.100 --> 00:00:51.950 align:start position:0%
large then whatever the computer is
doing<00:00:50.219><c> inside</c><00:00:50.700><c> and</c><00:00:51.030><c> is</c><00:00:51.239><c> to</c><00:00:51.390><c> step</c><00:00:51.629><c> through</c><00:00:51.870><c> the</c>

00:00:51.950 --> 00:00:51.960 align:start position:0%
doing inside and is to step through the
 

00:00:51.960 --> 00:00:54.500 align:start position:0%
doing inside and is to step through the
list<00:00:52.170><c> it's</c><00:00:52.770><c> gonna</c><00:00:52.920><c> have</c><00:00:53.100><c> to</c><00:00:53.190><c> do</c><00:00:53.280><c> that</c><00:00:53.510><c> 1,000</c>

00:00:54.500 --> 00:00:54.510 align:start position:0%
list it's gonna have to do that 1,000
 

00:00:54.510 --> 00:00:56.150 align:start position:0%
list it's gonna have to do that 1,000
times<00:00:54.690><c> as</c><00:00:54.870><c> many</c><00:00:54.989><c> times</c><00:00:55.350><c> so</c><00:00:55.800><c> it</c><00:00:55.890><c> should</c><00:00:56.039><c> take</c>

00:00:56.150 --> 00:00:56.160 align:start position:0%
times as many times so it should take
 

00:00:56.160 --> 00:00:58.520 align:start position:0%
times as many times so it should take
1000<00:00:56.969><c> times</c><00:00:57.149><c> as</c><00:00:57.300><c> many</c><00:00:57.390><c> seconds</c><00:00:57.840><c> first</c><00:00:58.170><c> total</c>

00:00:58.520 --> 00:00:58.530 align:start position:0%
1000 times as many seconds first total
 

00:00:58.530 --> 00:01:01.130 align:start position:0%
1000 times as many seconds first total
of<00:00:58.649><c> two</c><00:00:58.829><c> thousand</c><00:00:59.539><c> so</c><00:01:00.539><c> the</c><00:01:00.629><c> more</c><00:01:00.780><c> interesting</c>

00:01:01.130 --> 00:01:01.140 align:start position:0%
of two thousand so the more interesting
 

00:01:01.140 --> 00:01:03.170 align:start position:0%
of two thousand so the more interesting
question<00:01:01.440><c> is</c><00:01:01.500><c> how</c><00:01:01.649><c> do</c><00:01:01.710><c> we</c><00:01:01.770><c> fix</c><00:01:02.010><c> it</c><00:01:02.190><c> and</c><00:01:02.430><c> so</c><00:01:03.090><c> I'm</c>

00:01:03.170 --> 00:01:03.180 align:start position:0%
question is how do we fix it and so I'm
 

00:01:03.180 --> 00:01:04.340 align:start position:0%
question is how do we fix it and so I'm
gonna<00:01:03.270><c> leave</c><00:01:03.420><c> this</c><00:01:03.570><c> as</c><00:01:03.719><c> a</c><00:01:03.750><c> puzzle</c><00:01:03.989><c> for</c><00:01:04.290><c> you</c>

00:01:04.340 --> 00:01:04.350 align:start position:0%
gonna leave this as a puzzle for you
 

00:01:04.350 --> 00:01:06.140 align:start position:0%
gonna leave this as a puzzle for you
that<00:01:04.559><c> I'd</c><00:01:04.650><c> really</c><00:01:04.860><c> like</c><00:01:05.010><c> you</c><00:01:05.159><c> to</c><00:01:05.189><c> ponder</c><00:01:05.460><c> to</c>

00:01:06.140 --> 00:01:06.150 align:start position:0%
that I'd really like you to ponder to
 

00:01:06.150 --> 00:01:07.700 align:start position:0%
that I'd really like you to ponder to
figure<00:01:06.420><c> out</c><00:01:06.570><c> a</c><00:01:06.600><c> way</c><00:01:06.750><c> to</c><00:01:06.780><c> make</c><00:01:07.049><c> size</c><00:01:07.320><c> really</c>

00:01:07.700 --> 00:01:07.710 align:start position:0%
figure out a way to make size really
 

00:01:07.710 --> 00:01:11.390 align:start position:0%
figure out a way to make size really
fast<00:01:08.070><c> no</c><00:01:08.909><c> matter</c><00:01:09.090><c> how</c><00:01:09.689><c> big</c><00:01:10.170><c> the</c><00:01:10.770><c> list</c><00:01:10.979><c> is</c><00:01:11.189><c> I</c>

00:01:11.390 --> 00:01:11.400 align:start position:0%
fast no matter how big the list is I
 

00:01:11.400 --> 00:01:12.770 align:start position:0%
fast no matter how big the list is I
don't<00:01:11.700><c> care</c><00:01:11.790><c> there's</c><00:01:12.000><c> a</c><00:01:12.060><c> billion</c><00:01:12.270><c> items</c><00:01:12.689><c> I</c>

00:01:12.770 --> 00:01:12.780 align:start position:0%
don't care there's a billion items I
 

00:01:12.780 --> 00:01:14.390 align:start position:0%
don't care there's a billion items I
want<00:01:12.960><c> it</c><00:01:13.020><c> quick</c><00:01:13.260><c> so</c><00:01:13.500><c> think</c><00:01:14.070><c> about</c><00:01:14.159><c> how</c><00:01:14.340><c> you</c>

00:01:14.390 --> 00:01:14.400 align:start position:0%
want it quick so think about how you
 

00:01:14.400 --> 00:01:16.820 align:start position:0%
want it quick so think about how you
might<00:01:14.610><c> do</c><00:01:14.850><c> that</c><00:01:15.000><c> and</c><00:01:15.960><c> I'll</c><00:01:16.200><c> wait</c><00:01:16.530><c> here</c>

00:01:16.820 --> 00:01:16.830 align:start position:0%
might do that and I'll wait here
 

00:01:16.830 --> 00:01:25.070 align:start position:0%
might do that and I'll wait here
patiently<00:01:19.880><c> okay</c><00:01:21.380><c> so</c><00:01:22.380><c> what</c><00:01:22.619><c> I</c><00:01:22.740><c> propose</c><00:01:23.490><c> is</c><00:01:24.080><c> that</c>

00:01:25.070 --> 00:01:25.080 align:start position:0%
patiently okay so what I propose is that
 

00:01:25.080 --> 00:01:28.819 align:start position:0%
patiently okay so what I propose is that
we<00:01:26.119><c> instead</c><00:01:27.119><c> of</c><00:01:27.240><c> calculating</c><00:01:27.540><c> the</c><00:01:28.140><c> size</c><00:01:28.350><c> on</c>

00:01:28.819 --> 00:01:28.829 align:start position:0%
we instead of calculating the size on
 

00:01:28.829 --> 00:01:31.069 align:start position:0%
we instead of calculating the size on
the<00:01:29.340><c> fly</c><00:01:29.579><c> every</c><00:01:30.000><c> time</c><00:01:30.180><c> size</c><00:01:30.420><c> is</c><00:01:30.630><c> called</c><00:01:30.869><c> which</c>

00:01:31.069 --> 00:01:31.079 align:start position:0%
the fly every time size is called which
 

00:01:31.079 --> 00:01:32.060 align:start position:0%
the fly every time size is called which
could<00:01:31.290><c> take</c><00:01:31.409><c> a</c><00:01:31.439><c> long</c><00:01:31.680><c> time</c>

00:01:32.060 --> 00:01:32.070 align:start position:0%
could take a long time
 

00:01:32.070 --> 00:01:34.010 align:start position:0%
could take a long time
we're<00:01:32.549><c> gonna</c><00:01:32.640><c> set</c><00:01:32.939><c> aside</c><00:01:33.240><c> some</c><00:01:33.420><c> information</c>

00:01:34.010 --> 00:01:34.020 align:start position:0%
we're gonna set aside some information
 

00:01:34.020 --> 00:01:36.050 align:start position:0%
we're gonna set aside some information
about<00:01:34.140><c> the</c><00:01:34.409><c> size</c><00:01:34.619><c> up</c><00:01:34.860><c> front</c><00:01:35.100><c> so</c><00:01:35.909><c> I'm</c><00:01:35.970><c> gonna</c>

00:01:36.050 --> 00:01:36.060 align:start position:0%
about the size up front so I'm gonna
 

00:01:36.060 --> 00:01:37.999 align:start position:0%
about the size up front so I'm gonna
have<00:01:36.180><c> private</c><00:01:36.600><c> int</c><00:01:36.810><c> size</c><00:01:37.079><c> and</c><00:01:37.500><c> that's</c><00:01:37.890><c> gonna</c>

00:01:37.999 --> 00:01:38.009 align:start position:0%
have private int size and that's gonna
 

00:01:38.009 --> 00:01:39.350 align:start position:0%
have private int size and that's gonna
represent<00:01:38.369><c> the</c><00:01:38.640><c> current</c><00:01:38.820><c> amount</c><00:01:39.270><c> of</c>

00:01:39.350 --> 00:01:39.360 align:start position:0%
represent the current amount of
 

00:01:39.360 --> 00:01:41.780 align:start position:0%
represent the current amount of
information<00:01:39.630><c> in</c><00:01:40.079><c> the</c><00:01:40.439><c> data</c><00:01:40.590><c> structure</c><00:01:40.979><c> so</c>

00:01:41.780 --> 00:01:41.790 align:start position:0%
information in the data structure so
 

00:01:41.790 --> 00:01:44.120 align:start position:0%
information in the data structure so
what's<00:01:41.970><c> the</c><00:01:42.150><c> size</c><00:01:42.329><c> of</c><00:01:42.540><c> a</c><00:01:42.600><c> s</c><00:01:43.259><c> list</c><00:01:43.560><c> of</c><00:01:43.710><c> one</c><00:01:43.860><c> item</c>

00:01:44.120 --> 00:01:44.130 align:start position:0%
what's the size of a s list of one item
 

00:01:44.130 --> 00:01:46.969 align:start position:0%
what's the size of a s list of one item
one<00:01:44.930><c> what</c><00:01:45.930><c> should</c><00:01:45.960><c> I</c><00:01:46.140><c> do</c><00:01:46.200><c> whenever</c><00:01:46.470><c> I</c><00:01:46.619><c> add</c><00:01:46.829><c> an</c>

00:01:46.969 --> 00:01:46.979 align:start position:0%
one what should I do whenever I add an
 

00:01:46.979 --> 00:01:48.770 align:start position:0%
one what should I do whenever I add an
item<00:01:47.070><c> to</c><00:01:47.399><c> the</c><00:01:47.520><c> which</c><00:01:47.790><c> change</c><00:01:48.270><c> about</c><00:01:48.420><c> the</c><00:01:48.600><c> size</c>

00:01:48.770 --> 00:01:48.780 align:start position:0%
item to the which change about the size
 

00:01:48.780 --> 00:01:52.219 align:start position:0%
item to the which change about the size
size<00:01:49.590><c> plus</c><00:01:49.890><c> equals</c><00:01:50.250><c> one</c><00:01:50.570><c> what</c><00:01:51.570><c> if</c><00:01:51.659><c> I</c><00:01:51.720><c> get</c><00:01:51.960><c> first</c>

00:01:52.219 --> 00:01:52.229 align:start position:0%
size plus equals one what if I get first
 

00:01:52.229 --> 00:01:57.469 align:start position:0%
size plus equals one what if I get first
to<00:01:52.409><c> the</c><00:01:52.649><c> size</c><00:01:52.829><c> change</c><00:01:53.220><c> nope</c><00:01:53.850><c> add</c><00:01:54.570><c> last</c><00:01:56.479><c> indeed</c>

00:01:57.469 --> 00:01:57.479 align:start position:0%
to the size change nope add last indeed
 

00:01:57.479 --> 00:01:59.190 align:start position:0%
to the size change nope add last indeed
we<00:01:57.719><c> will</c><00:01:57.869><c> add</c><00:01:58.049><c> one</c><00:01:58.320><c> to</c><00:01:58.439><c> the</c><00:01:58.530><c> science</c>

00:01:59.190 --> 00:01:59.200 align:start position:0%
we will add one to the science
 

00:01:59.200 --> 00:02:03.940 align:start position:0%
we will add one to the science
doesn't<00:02:00.200><c> matter</c><00:02:00.290><c> where</c><00:02:01.450><c> so</c><00:02:02.450><c> that</c><00:02:02.780><c> is</c><00:02:03.680><c> all</c><00:02:03.860><c> we</c>

00:02:03.940 --> 00:02:03.950 align:start position:0%
doesn't matter where so that is all we
 

00:02:03.950 --> 00:02:07.480 align:start position:0%
doesn't matter where so that is all we
need<00:02:04.100><c> for</c><00:02:04.370><c> the</c><00:02:04.580><c> size</c><00:02:04.730><c> to</c><00:02:05.090><c> be</c><00:02:05.620><c> updated</c><00:02:06.620><c> and</c><00:02:06.860><c> so</c>

00:02:07.480 --> 00:02:07.490 align:start position:0%
need for the size to be updated and so
 

00:02:07.490 --> 00:02:09.359 align:start position:0%
need for the size to be updated and so
now<00:02:07.640><c> we</c><00:02:07.700><c> come</c><00:02:07.970><c> to</c><00:02:08.030><c> the</c><00:02:08.450><c> size</c><00:02:08.630><c> method</c>

00:02:09.359 --> 00:02:09.369 align:start position:0%
now we come to the size method
 

00:02:09.369 --> 00:02:11.890 align:start position:0%
now we come to the size method
well<00:02:10.369><c> now</c><00:02:10.550><c> rather</c><00:02:10.820><c> than</c><00:02:10.970><c> calculate</c><00:02:11.570><c> I'm</c><00:02:11.780><c> gonna</c>

00:02:11.890 --> 00:02:11.900 align:start position:0%
well now rather than calculate I'm gonna
 

00:02:11.900 --> 00:02:13.300 align:start position:0%
well now rather than calculate I'm gonna
delete<00:02:12.140><c> all</c><00:02:12.350><c> this</c><00:02:12.500><c> beautiful</c><00:02:12.800><c> code</c><00:02:13.100><c> we</c><00:02:13.280><c> just</c>

00:02:13.300 --> 00:02:13.310 align:start position:0%
delete all this beautiful code we just
 

00:02:13.310 --> 00:02:15.520 align:start position:0%
delete all this beautiful code we just
spent<00:02:13.670><c> so</c><00:02:13.790><c> much</c><00:02:13.910><c> effort</c><00:02:14.350><c> discussing</c><00:02:15.350><c> this</c>

00:02:15.520 --> 00:02:15.530 align:start position:0%
spent so much effort discussing this
 

00:02:15.530 --> 00:02:17.530 align:start position:0%
spent so much effort discussing this
business<00:02:16.190><c> code</c><00:02:16.580><c> that</c><00:02:16.820><c> speaks</c><00:02:17.060><c> the</c><00:02:17.210><c> secret</c>

00:02:17.530 --> 00:02:17.540 align:start position:0%
business code that speaks the secret
 

00:02:17.540 --> 00:02:19.120 align:start position:0%
business code that speaks the secret
language<00:02:17.690><c> of</c><00:02:17.900><c> the</c><00:02:18.020><c> Gods</c><00:02:18.230><c> is</c><00:02:18.440><c> gonna</c><00:02:18.620><c> be</c><00:02:18.770><c> buried</c>

00:02:19.120 --> 00:02:19.130 align:start position:0%
language of the Gods is gonna be buried
 

00:02:19.130 --> 00:02:20.980 align:start position:0%
language of the Gods is gonna be buried
beneath<00:02:19.310><c> the</c><00:02:19.490><c> earth</c><00:02:19.700><c> and</c><00:02:20.210><c> if</c><00:02:20.750><c> then</c><00:02:20.900><c> we're</c>

00:02:20.980 --> 00:02:20.990 align:start position:0%
beneath the earth and if then we're
 

00:02:20.990 --> 00:02:22.690 align:start position:0%
beneath the earth and if then we're
gonna<00:02:21.110><c> return</c><00:02:21.470><c> sighs</c><00:02:21.710><c> it's</c><00:02:22.310><c> pretty</c><00:02:22.490><c> typical</c>

00:02:22.690 --> 00:02:22.700 align:start position:0%
gonna return sighs it's pretty typical
 

00:02:22.700 --> 00:02:24.550 align:start position:0%
gonna return sighs it's pretty typical
right<00:02:23.060><c> like</c><00:02:23.240><c> when</c><00:02:23.360><c> you</c><00:02:23.450><c> write</c><00:02:23.660><c> a</c><00:02:23.900><c> book</c><00:02:24.350><c> of</c>

00:02:24.550 --> 00:02:24.560 align:start position:0%
right like when you write a book of
 

00:02:24.560 --> 00:02:26.830 align:start position:0%
right like when you write a book of
arcane<00:02:25.070><c> evil</c><00:02:25.610><c> from</c><00:02:25.880><c> ancient</c><00:02:26.510><c> gods</c><00:02:26.690><c> or</c>

00:02:26.830 --> 00:02:26.840 align:start position:0%
arcane evil from ancient gods or
 

00:02:26.840 --> 00:02:28.390 align:start position:0%
arcane evil from ancient gods or
whatever<00:02:27.080><c> usually</c><00:02:27.830><c> once</c><00:02:27.980><c> you're</c><00:02:28.130><c> done</c><00:02:28.250><c> with</c>

00:02:28.390 --> 00:02:28.400 align:start position:0%
whatever usually once you're done with
 

00:02:28.400 --> 00:02:30.160 align:start position:0%
whatever usually once you're done with
it<00:02:28.520><c> you</c><00:02:28.550><c> discard</c><00:02:29.030><c> it</c><00:02:29.180><c> to</c><00:02:29.390><c> be</c><00:02:29.510><c> discovered</c><00:02:29.960><c> later</c>

00:02:30.160 --> 00:02:30.170 align:start position:0%
it you discard it to be discovered later
 

00:02:30.170 --> 00:02:32.410 align:start position:0%
it you discard it to be discovered later
at<00:02:30.350><c> some</c><00:02:30.500><c> day</c><00:02:30.800><c> to</c><00:02:30.860><c> destroy</c><00:02:31.190><c> civilization</c><00:02:31.760><c> so</c>

00:02:32.410 --> 00:02:32.420 align:start position:0%
at some day to destroy civilization so
 

00:02:32.420 --> 00:02:33.400 align:start position:0%
at some day to destroy civilization so
we'll<00:02:32.540><c> just</c><00:02:32.660><c> say</c><00:02:32.750><c> that's</c><00:02:32.900><c> what</c><00:02:33.080><c> we're</c><00:02:33.200><c> doing</c>

00:02:33.400 --> 00:02:33.410 align:start position:0%
we'll just say that's what we're doing
 

00:02:33.410 --> 00:02:36.880 align:start position:0%
we'll just say that's what we're doing
but<00:02:34.370><c> we'll</c><00:02:34.550><c> find</c><00:02:34.820><c> that</c><00:02:34.940><c> in</c><00:02:35.150><c> later</c><00:02:35.800><c> parts</c><00:02:36.800><c> of</c>

00:02:36.880 --> 00:02:36.890 align:start position:0%
but we'll find that in later parts of
 

00:02:36.890 --> 00:02:38.680 align:start position:0%
but we'll find that in later parts of
this<00:02:36.980><c> class</c><00:02:37.250><c> and</c><00:02:37.550><c> in</c><00:02:37.640><c> the</c><00:02:37.730><c> projects</c><00:02:38.120><c> you</c><00:02:38.450><c> will</c>

00:02:38.680 --> 00:02:38.690 align:start position:0%
this class and in the projects you will
 

00:02:38.690 --> 00:02:40.330 align:start position:0%
this class and in the projects you will
actually<00:02:38.960><c> be</c><00:02:39.260><c> using</c><00:02:39.470><c> that</c><00:02:39.680><c> pattern</c><00:02:40.070><c> of</c><00:02:40.220><c> having</c>

00:02:40.330 --> 00:02:40.340 align:start position:0%
actually be using that pattern of having
 

00:02:40.340 --> 00:02:42.520 align:start position:0%
actually be using that pattern of having
the<00:02:40.730><c> secret</c><00:02:41.150><c> language</c><00:02:41.270><c> of</c><00:02:41.570><c> the</c><00:02:41.630><c> gods</c><00:02:41.810><c> but</c><00:02:42.290><c> here</c>

00:02:42.520 --> 00:02:42.530 align:start position:0%
the secret language of the gods but here
 

00:02:42.530 --> 00:02:43.840 align:start position:0%
the secret language of the gods but here
it's<00:02:42.650><c> actually</c><00:02:42.770><c> easier</c><00:02:43.220><c> for</c><00:02:43.430><c> us</c><00:02:43.520><c> to</c><00:02:43.550><c> just</c>

00:02:43.840 --> 00:02:43.850 align:start position:0%
it's actually easier for us to just
 

00:02:43.850 --> 00:02:46.390 align:start position:0%
it's actually easier for us to just
compute<00:02:44.240><c> the</c><00:02:44.450><c> size</c><00:02:44.630><c> upfront</c><00:02:45.620><c> and</c><00:02:45.890><c> return</c><00:02:46.280><c> it</c>

00:02:46.390 --> 00:02:46.400 align:start position:0%
compute the size upfront and return it
 

00:02:46.400 --> 00:02:49.600 align:start position:0%
compute the size upfront and return it
whenever<00:02:46.790><c> we're</c><00:02:47.000><c> ready</c><00:02:47.450><c> for</c><00:02:47.510><c> it</c><00:02:48.160><c> so</c><00:02:49.160><c> now</c><00:02:49.370><c> when</c>

00:02:49.600 --> 00:02:49.610 align:start position:0%
whenever we're ready for it so now when
 

00:02:49.610 --> 00:02:51.460 align:start position:0%
whenever we're ready for it so now when
we<00:02:49.640><c> print</c><00:02:50.180><c> out</c><00:02:50.240><c> the</c><00:02:50.390><c> size</c><00:02:50.570><c> we</c><00:02:50.840><c> still</c><00:02:51.080><c> get</c><00:02:51.230><c> four</c>

00:02:51.460 --> 00:02:51.470 align:start position:0%
we print out the size we still get four
 

00:02:51.470 --> 00:02:53.740 align:start position:0%
we print out the size we still get four
but<00:02:52.130><c> it</c><00:02:52.220><c> doesn't</c><00:02:52.520><c> matter</c><00:02:52.700><c> how</c><00:02:53.030><c> big</c><00:02:53.330><c> the</c><00:02:53.540><c> list</c>

00:02:53.740 --> 00:02:53.750 align:start position:0%
but it doesn't matter how big the list
 

00:02:53.750 --> 00:02:58.170 align:start position:0%
but it doesn't matter how big the list
is<00:02:53.960><c> this</c><00:02:54.410><c> will</c><00:02:54.620><c> be</c><00:02:54.710><c> very</c><00:02:54.860><c> fast</c><00:02:55.160><c> we</c><00:02:55.790><c> did</c><00:02:55.970><c> it</c><00:02:56.710><c> okay</c>

00:02:58.170 --> 00:02:58.180 align:start position:0%
is this will be very fast we did it okay
 

00:02:58.180 --> 00:03:00.730 align:start position:0%
is this will be very fast we did it okay
so<00:02:59.180><c> did</c><00:02:59.360><c> it</c><00:02:59.480><c> brief</c><00:02:59.660><c> basically</c><00:03:00.380><c> what</c><00:03:00.500><c> we</c><00:03:00.590><c> just</c>

00:03:00.730 --> 00:03:00.740 align:start position:0%
so did it brief basically what we just
 

00:03:00.740 --> 00:03:03.670 align:start position:0%
so did it brief basically what we just
did<00:03:00.950><c> is</c><00:03:01.160><c> we</c><00:03:01.700><c> maintained</c><00:03:02.600><c> a</c><00:03:02.840><c> special</c><00:03:03.380><c> size</c>

00:03:03.670 --> 00:03:03.680 align:start position:0%
did is we maintained a special size
 

00:03:03.680 --> 00:03:05.920 align:start position:0%
did is we maintained a special size
variable<00:03:04.100><c> that</c><00:03:04.400><c> caches</c><00:03:05.030><c> the</c><00:03:05.450><c> size</c><00:03:05.690><c> of</c><00:03:05.870><c> the</c>

00:03:05.920 --> 00:03:05.930 align:start position:0%
variable that caches the size of the
 

00:03:05.930 --> 00:03:07.810 align:start position:0%
variable that caches the size of the
list<00:03:06.110><c> so</c><00:03:06.590><c> anytime</c><00:03:06.890><c> when</c><00:03:07.220><c> the</c><00:03:07.310><c> size</c><00:03:07.459><c> the</c><00:03:07.610><c> list</c>

00:03:07.810 --> 00:03:07.820 align:start position:0%
list so anytime when the size the list
 

00:03:07.820 --> 00:03:10.330 align:start position:0%
list so anytime when the size the list
changes<00:03:08.110><c> changes</c><00:03:09.110><c> we</c><00:03:09.200><c> update</c><00:03:09.500><c> it</c><00:03:09.620><c> and</c><00:03:09.709><c> caching</c>

00:03:10.330 --> 00:03:10.340 align:start position:0%
changes changes we update it and caching
 

00:03:10.340 --> 00:03:11.920 align:start position:0%
changes changes we update it and caching
is<00:03:10.430><c> just</c><00:03:10.610><c> a</c><00:03:10.700><c> fancy</c><00:03:10.880><c> term</c><00:03:11.150><c> for</c><00:03:11.209><c> putting</c><00:03:11.720><c> aside</c>

00:03:11.920 --> 00:03:11.930 align:start position:0%
is just a fancy term for putting aside
 

00:03:11.930 --> 00:03:13.930 align:start position:0%
is just a fancy term for putting aside
some<00:03:12.170><c> data</c><00:03:12.380><c> to</c><00:03:12.590><c> speed</c><00:03:12.830><c> up</c><00:03:12.950><c> retrieval</c><00:03:13.489><c> at</c><00:03:13.670><c> some</c>

00:03:13.930 --> 00:03:13.940 align:start position:0%
some data to speed up retrieval at some
 

00:03:13.940 --> 00:03:16.420 align:start position:0%
some data to speed up retrieval at some
later<00:03:14.120><c> date</c><00:03:14.239><c> it</c><00:03:14.900><c> is</c><00:03:15.020><c> redundant</c><00:03:15.560><c> but</c><00:03:15.950><c> it</c><00:03:16.250><c> also</c>

00:03:16.420 --> 00:03:16.430 align:start position:0%
later date it is redundant but it also
 

00:03:16.430 --> 00:03:19.240 align:start position:0%
later date it is redundant but it also
speeds<00:03:16.790><c> us</c><00:03:16.970><c> up</c><00:03:17.150><c> now</c><00:03:18.080><c> it</c><00:03:18.500><c> doesn't</c><00:03:18.920><c> come</c><00:03:19.040><c> for</c>

00:03:19.240 --> 00:03:19.250 align:start position:0%
speeds us up now it doesn't come for
 

00:03:19.250 --> 00:03:20.620 align:start position:0%
speeds us up now it doesn't come for
free<00:03:19.280><c> there's</c><00:03:19.760><c> this</c><00:03:19.880><c> old</c><00:03:20.060><c> saying</c><00:03:20.120><c> that</c><00:03:20.540><c> there</c>

00:03:20.620 --> 00:03:20.630 align:start position:0%
free there's this old saying that there
 

00:03:20.630 --> 00:03:22.420 align:start position:0%
free there's this old saying that there
ain't<00:03:20.750><c> no</c><00:03:20.900><c> such</c><00:03:21.110><c> thing</c><00:03:21.350><c> as</c><00:03:21.380><c> a</c><00:03:21.560><c> free</c><00:03:21.709><c> lunch</c><00:03:21.739><c> we</c>

00:03:22.420 --> 00:03:22.430 align:start position:0%
ain't no such thing as a free lunch we
 

00:03:22.430 --> 00:03:24.580 align:start position:0%
ain't no such thing as a free lunch we
did<00:03:22.640><c> have</c><00:03:22.760><c> to</c><00:03:22.880><c> do</c><00:03:23.000><c> some</c><00:03:23.209><c> work</c><00:03:23.390><c> what</c><00:03:24.110><c> we</c><00:03:24.230><c> changed</c>

00:03:24.580 --> 00:03:24.590 align:start position:0%
did have to do some work what we changed
 

00:03:24.590 --> 00:03:26.350 align:start position:0%
did have to do some work what we changed
is<00:03:24.739><c> that</c><00:03:24.890><c> every</c><00:03:25.250><c> time</c><00:03:25.459><c> the</c><00:03:25.760><c> size</c><00:03:25.970><c> of</c><00:03:26.120><c> the</c><00:03:26.180><c> list</c>

00:03:26.350 --> 00:03:26.360 align:start position:0%
is that every time the size of the list
 

00:03:26.360 --> 00:03:28.420 align:start position:0%
is that every time the size of the list
is<00:03:26.540><c> modified</c><00:03:26.959><c> we</c><00:03:27.410><c> have</c><00:03:27.530><c> to</c><00:03:27.680><c> tweak</c><00:03:28.010><c> the</c><00:03:28.220><c> size</c><00:03:28.400><c> a</c>

00:03:28.420 --> 00:03:28.430 align:start position:0%
is modified we have to tweak the size a
 

00:03:28.430 --> 00:03:30.280 align:start position:0%
is modified we have to tweak the size a
little<00:03:28.700><c> bit</c><00:03:29.000><c> but</c><00:03:29.570><c> it</c><00:03:29.630><c> doesn't</c><00:03:29.930><c> really</c><00:03:30.050><c> have</c><00:03:30.230><c> a</c>

00:03:30.280 --> 00:03:30.290 align:start position:0%
little bit but it doesn't really have a
 

00:03:30.290 --> 00:03:32.170 align:start position:0%
little bit but it doesn't really have a
meaningful<00:03:30.650><c> an</c><00:03:31.010><c> impact</c><00:03:31.670><c> on</c><00:03:31.790><c> our</c><00:03:31.910><c> performance</c>

00:03:32.170 --> 00:03:32.180 align:start position:0%
meaningful an impact on our performance
 

00:03:32.180 --> 00:03:34.240 align:start position:0%
meaningful an impact on our performance
and<00:03:32.570><c> for</c><00:03:32.989><c> any</c><00:03:33.110><c> practical</c><00:03:33.530><c> circumstance</c><00:03:34.160><c> that</c>

00:03:34.240 --> 00:03:34.250 align:start position:0%
and for any practical circumstance that
 

00:03:34.250 --> 00:03:36.729 align:start position:0%
and for any practical circumstance that
I<00:03:34.340><c> can</c><00:03:34.580><c> imagine</c><00:03:35.140><c> spreading</c><00:03:36.140><c> that</c><00:03:36.260><c> work</c><00:03:36.500><c> of</c>

00:03:36.729 --> 00:03:36.739 align:start position:0%
I can imagine spreading that work of
 

00:03:36.739 --> 00:03:38.800 align:start position:0%
I can imagine spreading that work of
calculating<00:03:37.430><c> the</c><00:03:37.550><c> size</c><00:03:37.670><c> over</c><00:03:38.090><c> each</c><00:03:38.239><c> ad</c><00:03:38.510><c> called</c>

00:03:38.800 --> 00:03:38.810 align:start position:0%
calculating the size over each ad called
 

00:03:38.810 --> 00:03:41.770 align:start position:0%
calculating the size over each ad called
to<00:03:39.170><c> me</c><00:03:39.290><c> is</c><00:03:39.410><c> a</c><00:03:39.440><c> net</c><00:03:39.680><c> win</c><00:03:39.860><c> in</c><00:03:40.070><c> almost</c><00:03:40.790><c> any</c><00:03:41.090><c> case</c><00:03:41.540><c> I</c>

00:03:41.770 --> 00:03:41.780 align:start position:0%
to me is a net win in almost any case I
 

00:03:41.780 --> 00:03:42.550 align:start position:0%
to me is a net win in almost any case I
can<00:03:41.930><c> even</c><00:03:42.140><c> imagine</c>

00:03:42.550 --> 00:03:42.560 align:start position:0%
can even imagine
 

00:03:42.560 --> 00:03:44.710 align:start position:0%
can even imagine
let's<00:03:43.400><c> look</c><00:03:43.519><c> at</c><00:03:43.670><c> a</c><00:03:43.700><c> visual</c><00:03:43.910><c> that</c><00:03:44.209><c> compares</c><00:03:44.570><c> our</c>

00:03:44.710 --> 00:03:44.720 align:start position:0%
let's look at a visual that compares our
 

00:03:44.720 --> 00:03:46.600 align:start position:0%
let's look at a visual that compares our
naked<00:03:45.019><c> recursive</c><00:03:45.500><c> data</c><00:03:45.650><c> structure</c><00:03:46.160><c> with</c><00:03:46.459><c> our</c>

00:03:46.600 --> 00:03:46.610 align:start position:0%
naked recursive data structure with our
 

00:03:46.610 --> 00:03:49.060 align:start position:0%
naked recursive data structure with our
s<00:03:46.730><c> list</c><00:03:47.030><c> in</c><00:03:47.209><c> the</c><00:03:47.390><c> context</c><00:03:47.840><c> of</c><00:03:47.900><c> caching</c><00:03:48.320><c> so</c>

00:03:49.060 --> 00:03:49.070 align:start position:0%
s list in the context of caching so
 

00:03:49.070 --> 00:03:50.800 align:start position:0%
s list in the context of caching so
before<00:03:49.430><c> we</c><00:03:49.550><c> said</c><00:03:49.760><c> s</c><00:03:49.940><c> lists</c><00:03:50.360><c> have</c><00:03:50.480><c> this</c><00:03:50.600><c> nice</c>

00:03:50.800 --> 00:03:50.810 align:start position:0%
before we said s lists have this nice
 

00:03:50.810 --> 00:03:52.390 align:start position:0%
before we said s lists have this nice
advantage<00:03:51.320><c> that</c><00:03:51.769><c> whenever</c><00:03:52.040><c> you</c><00:03:52.160><c> want</c><00:03:52.340><c> to</c>

00:03:52.390 --> 00:03:52.400 align:start position:0%
advantage that whenever you want to
 

00:03:52.400 --> 00:03:55.810 align:start position:0%
advantage that whenever you want to
manipulate<00:03:52.910><c> the</c><00:03:53.090><c> data</c><00:03:53.209><c> or</c><00:03:54.010><c> see</c><00:03:55.010><c> the</c><00:03:55.190><c> data</c><00:03:55.370><c> you</c>

00:03:55.810 --> 00:03:55.820 align:start position:0%
manipulate the data or see the data you
 

00:03:55.820 --> 00:03:57.370 align:start position:0%
manipulate the data or see the data you
have<00:03:55.850><c> to</c><00:03:56.030><c> go</c><00:03:56.150><c> through</c><00:03:56.330><c> this</c><00:03:56.450><c> middleman</c><00:03:56.870><c> this</c>

00:03:57.370 --> 00:03:57.380 align:start position:0%
have to go through this middleman this
 

00:03:57.380 --> 00:03:59.140 align:start position:0%
have to go through this middleman this
middleman<00:03:57.830><c> provides</c><00:03:58.220><c> you</c><00:03:58.340><c> with</c><00:03:58.430><c> very</c><00:03:58.670><c> easy</c><00:03:58.730><c> to</c>

00:03:59.140 --> 00:03:59.150 align:start position:0%
middleman provides you with very easy to
 

00:03:59.150 --> 00:04:00.729 align:start position:0%
middleman provides you with very easy to
understand<00:03:59.660><c> methods</c><00:04:00.110><c> that</c><00:04:00.260><c> are</c><00:04:00.380><c> guaranteed</c>

00:04:00.729 --> 00:04:00.739 align:start position:0%
understand methods that are guaranteed
 

00:04:00.739 --> 00:04:02.560 align:start position:0%
understand methods that are guaranteed
safe<00:04:01.430><c> and</c><00:04:01.700><c> avoid</c><00:04:02.090><c> you</c><00:04:02.239><c> from</c><00:04:02.269><c> shooting</c>

00:04:02.560 --> 00:04:02.570 align:start position:0%
safe and avoid you from shooting
 

00:04:02.570 --> 00:04:05.170 align:start position:0%
safe and avoid you from shooting
yourself<00:04:02.810><c> in</c><00:04:03.110><c> the</c><00:04:03.170><c> foot</c><00:04:03.230><c> in</c><00:04:03.560><c> various</c><00:04:03.980><c> ways</c><00:04:04.190><c> now</c>

00:04:05.170 --> 00:04:05.180 align:start position:0%
yourself in the foot in various ways now
 

00:04:05.180 --> 00:04:06.520 align:start position:0%
yourself in the foot in various ways now
another<00:04:05.480><c> nice</c><00:04:05.750><c> advantage</c><00:04:06.230><c> of</c><00:04:06.380><c> the</c>

00:04:06.520 --> 00:04:06.530 align:start position:0%
another nice advantage of the
 

00:04:06.530 --> 00:04:08.230 align:start position:0%
another nice advantage of the
guest<00:04:06.680><c> list</c><00:04:06.819><c> structure</c><00:04:07.819><c> to</c><00:04:07.940><c> have</c><00:04:08.090><c> this</c>

00:04:08.230 --> 00:04:08.240 align:start position:0%
guest list structure to have this
 

00:04:08.240 --> 00:04:10.360 align:start position:0%
guest list structure to have this
middleman<00:04:08.630><c> is</c><00:04:08.810><c> that</c><00:04:09.290><c> it</c><00:04:09.380><c> serves</c><00:04:09.800><c> as</c><00:04:10.069><c> a</c><00:04:10.100><c> natural</c>

00:04:10.360 --> 00:04:10.370 align:start position:0%
middleman is that it serves as a natural
 

00:04:10.370 --> 00:04:12.460 align:start position:0%
middleman is that it serves as a natural
place<00:04:10.850><c> to</c><00:04:10.880><c> store</c><00:04:11.240><c> meta</c><00:04:11.510><c> information</c><00:04:11.720><c> about</c>

00:04:12.460 --> 00:04:12.470 align:start position:0%
place to store meta information about
 

00:04:12.470 --> 00:04:15.010 align:start position:0%
place to store meta information about
the<00:04:12.620><c> entire</c><00:04:12.890><c> list</c><00:04:13.220><c> so</c><00:04:13.880><c> for</c><00:04:14.090><c> example</c><00:04:14.480><c> we</c><00:04:14.840><c> can</c>

00:04:15.010 --> 00:04:15.020 align:start position:0%
the entire list so for example we can
 

00:04:15.020 --> 00:04:17.830 align:start position:0%
the entire list so for example we can
store<00:04:15.290><c> the</c><00:04:16.100><c> size</c><00:04:16.340><c> of</c><00:04:16.700><c> the</c><00:04:16.790><c> list</c><00:04:16.940><c> here</c><00:04:17.209><c> it</c><00:04:17.690><c> is</c>

00:04:17.830 --> 00:04:17.840 align:start position:0%
store the size of the list here it is
 

00:04:17.840 --> 00:04:19.750 align:start position:0%
store the size of the list here it is
technically<00:04:18.230><c> redundant</c><00:04:18.799><c> you</c><00:04:19.100><c> can</c><00:04:19.340><c> compute</c>

00:04:19.750 --> 00:04:19.760 align:start position:0%
technically redundant you can compute
 

00:04:19.760 --> 00:04:21.550 align:start position:0%
technically redundant you can compute
the<00:04:19.880><c> size</c><00:04:20.060><c> without</c><00:04:20.419><c> this</c><00:04:20.600><c> variable</c><00:04:21.109><c> but</c><00:04:21.470><c> it</c>

00:04:21.550 --> 00:04:21.560 align:start position:0%
the size without this variable but it
 

00:04:21.560 --> 00:04:23.290 align:start position:0%
the size without this variable but it
speeds<00:04:21.889><c> up</c><00:04:22.130><c> the</c><00:04:22.190><c> computation</c><00:04:23.000><c> of</c><00:04:23.090><c> size</c>

00:04:23.290 --> 00:04:23.300 align:start position:0%
speeds up the computation of size
 

00:04:23.300 --> 00:04:24.550 align:start position:0%
speeds up the computation of size
because<00:04:23.570><c> you</c><00:04:23.660><c> just</c><00:04:23.840><c> need</c><00:04:23.990><c> to</c><00:04:24.110><c> return</c><00:04:24.320><c> this</c>

00:04:24.550 --> 00:04:24.560 align:start position:0%
because you just need to return this
 

00:04:24.560 --> 00:04:26.500 align:start position:0%
because you just need to return this
value<00:04:24.889><c> you</c><00:04:25.100><c> could</c><00:04:25.639><c> also</c><00:04:25.760><c> store</c><00:04:26.090><c> other</c><00:04:26.210><c> things</c>

00:04:26.500 --> 00:04:26.510 align:start position:0%
value you could also store other things
 

00:04:26.510 --> 00:04:27.520 align:start position:0%
value you could also store other things
here<00:04:26.690><c> right</c><00:04:26.840><c> like</c><00:04:26.990><c> you</c><00:04:27.080><c> could</c><00:04:27.110><c> still</c><00:04:27.320><c> like</c><00:04:27.410><c> the</c>

00:04:27.520 --> 00:04:27.530 align:start position:0%
here right like you could still like the
 

00:04:27.530 --> 00:04:29.440 align:start position:0%
here right like you could still like the
maximum<00:04:27.980><c> or</c><00:04:28.460><c> the</c><00:04:28.490><c> minimum</c><00:04:28.610><c> or</c><00:04:29.090><c> the</c><00:04:29.210><c> largest</c>

00:04:29.440 --> 00:04:29.450 align:start position:0%
maximum or the minimum or the largest
 

00:04:29.450 --> 00:04:31.210 align:start position:0%
maximum or the minimum or the largest
value<00:04:29.810><c> that</c><00:04:29.840><c> was</c><00:04:30.080><c> ever</c><00:04:30.200><c> put</c><00:04:30.260><c> in</c><00:04:30.500><c> there</c><00:04:30.650><c> and</c>

00:04:31.210 --> 00:04:31.220 align:start position:0%
value that was ever put in there and
 

00:04:31.220 --> 00:04:34.150 align:start position:0%
value that was ever put in there and
those<00:04:31.430><c> would</c><00:04:31.820><c> also</c><00:04:31.940><c> work</c><00:04:32.290><c> by</c><00:04:33.290><c> contrast</c><00:04:33.889><c> with</c><00:04:34.130><c> a</c>

00:04:34.150 --> 00:04:34.160 align:start position:0%
those would also work by contrast with a
 

00:04:34.160 --> 00:04:35.890 align:start position:0%
those would also work by contrast with a
naked<00:04:34.400><c> recursive</c><00:04:35.000><c> list</c><00:04:35.210><c> it's</c><00:04:35.480><c> not</c><00:04:35.690><c> so</c><00:04:35.870><c> easy</c>

00:04:35.890 --> 00:04:35.900 align:start position:0%
naked recursive list it's not so easy
 

00:04:35.900 --> 00:04:38.560 align:start position:0%
naked recursive list it's not so easy
you<00:04:36.740><c> could</c><00:04:36.980><c> in</c><00:04:37.250><c> principle</c><00:04:37.820><c> do</c><00:04:38.060><c> something</c><00:04:38.419><c> like</c>

00:04:38.560 --> 00:04:38.570 align:start position:0%
you could in principle do something like
 

00:04:38.570 --> 00:04:40.810 align:start position:0%
you could in principle do something like
cache<00:04:38.900><c> the</c><00:04:39.169><c> size</c><00:04:39.380><c> inside</c><00:04:39.830><c> of</c><00:04:39.980><c> each</c><00:04:40.100><c> node</c><00:04:40.370><c> but</c>

00:04:40.810 --> 00:04:40.820 align:start position:0%
cache the size inside of each node but
 

00:04:40.820 --> 00:04:42.640 align:start position:0%
cache the size inside of each node but
even<00:04:41.120><c> then</c><00:04:41.360><c> that</c><00:04:41.780><c> means</c><00:04:41.960><c> that</c><00:04:42.110><c> anytime</c><00:04:42.350><c> you</c>

00:04:42.640 --> 00:04:42.650 align:start position:0%
even then that means that anytime you
 

00:04:42.650 --> 00:04:44.680 align:start position:0%
even then that means that anytime you
change<00:04:42.680><c> something</c><00:04:43.220><c> in</c><00:04:43.700><c> the</c><00:04:43.970><c> list</c><00:04:44.180><c> you</c><00:04:44.480><c> have</c><00:04:44.600><c> to</c>

00:04:44.680 --> 00:04:44.690 align:start position:0%
change something in the list you have to
 

00:04:44.690 --> 00:04:46.840 align:start position:0%
change something in the list you have to
update<00:04:44.840><c> update</c><00:04:45.530><c> a</c><00:04:45.560><c> bunch</c><00:04:45.860><c> of</c><00:04:46.070><c> size</c><00:04:46.280><c> variables</c>

00:04:46.840 --> 00:04:46.850 align:start position:0%
update update a bunch of size variables
 

00:04:46.850 --> 00:04:49.030 align:start position:0%
update update a bunch of size variables
you<00:04:47.330><c> could</c><00:04:47.600><c> also</c><00:04:47.750><c> for</c><00:04:48.110><c> example</c><00:04:48.169><c> somehow</c><00:04:48.919><c> if</c>

00:04:49.030 --> 00:04:49.040 align:start position:0%
you could also for example somehow if
 

00:04:49.040 --> 00:04:51.010 align:start position:0%
you could also for example somehow if
you<00:04:49.130><c> had</c><00:04:49.220><c> a</c><00:04:49.250><c> language</c><00:04:49.610><c> it</c><00:04:49.700><c> allows</c><00:04:49.880><c> it</c><00:04:50.120><c> bind</c><00:04:50.750><c> a</c>

00:04:51.010 --> 00:04:51.020 align:start position:0%
you had a language it allows it bind a
 

00:04:51.020 --> 00:04:52.690 align:start position:0%
you had a language it allows it bind a
variable<00:04:51.560><c> up</c><00:04:51.710><c> here</c><00:04:51.919><c> that</c><00:04:52.100><c> tracks</c><00:04:52.310><c> the</c><00:04:52.520><c> size</c>

00:04:52.690 --> 00:04:52.700 align:start position:0%
variable up here that tracks the size
 

00:04:52.700 --> 00:04:54.640 align:start position:0%
variable up here that tracks the size
and<00:04:52.910><c> the</c><00:04:53.000><c> whole</c><00:04:53.150><c> thing</c><00:04:53.390><c> but</c><00:04:53.870><c> in</c><00:04:53.960><c> Java</c><00:04:54.169><c> there's</c>

00:04:54.640 --> 00:04:54.650 align:start position:0%
and the whole thing but in Java there's
 

00:04:54.650 --> 00:04:56.920 align:start position:0%
and the whole thing but in Java there's
no<00:04:54.800><c> natural</c><00:04:54.980><c> facility</c><00:04:55.640><c> to</c><00:04:55.820><c> do</c><00:04:55.970><c> that</c><00:04:56.180><c> so</c><00:04:56.570><c> in</c>

00:04:56.920 --> 00:04:56.930 align:start position:0%
no natural facility to do that so in
 

00:04:56.930 --> 00:04:58.330 align:start position:0%
no natural facility to do that so in
effect<00:04:57.110><c> what</c><00:04:57.440><c> you'll</c><00:04:57.620><c> end</c><00:04:57.770><c> up</c><00:04:57.890><c> doing</c><00:04:58.070><c> is</c>

00:04:58.330 --> 00:04:58.340 align:start position:0%
effect what you'll end up doing is
 

00:04:58.340 --> 00:04:59.890 align:start position:0%
effect what you'll end up doing is
having<00:04:58.490><c> multiple</c><00:04:58.790><c> variables</c><00:04:59.510><c> that</c><00:04:59.690><c> you</c><00:04:59.780><c> have</c>

00:04:59.890 --> 00:04:59.900 align:start position:0%
having multiple variables that you have
 

00:04:59.900 --> 00:05:01.920 align:start position:0%
having multiple variables that you have
to<00:05:00.020><c> keep</c><00:05:00.169><c> straight</c><00:05:00.530><c> here</c><00:05:01.190><c> this</c>

00:05:01.920 --> 00:05:01.930 align:start position:0%
to keep straight here this
 

00:05:01.930 --> 00:05:03.969 align:start position:0%
to keep straight here this
object-oriented<00:05:02.930><c> programming</c><00:05:03.560><c> approach</c>

00:05:03.969 --> 00:05:03.979 align:start position:0%
object-oriented programming approach
 

00:05:03.979 --> 00:05:06.129 align:start position:0%
object-oriented programming approach
means<00:05:04.520><c> that</c><00:05:04.669><c> we'd</c><00:05:04.880><c> let</c><00:05:05.060><c> the</c><00:05:05.180><c> object</c><00:05:05.330><c> control</c>

00:05:06.129 --> 00:05:06.139 align:start position:0%
means that we'd let the object control
 

00:05:06.139 --> 00:05:09.070 align:start position:0%
means that we'd let the object control
everything<00:05:06.530><c> we</c><00:05:07.100><c> tell</c><00:05:07.280><c> the</c><00:05:07.460><c> object</c><00:05:07.910><c> your</c><00:05:08.780><c> job</c>

00:05:09.070 --> 00:05:09.080 align:start position:0%
everything we tell the object your job
 

00:05:09.080 --> 00:05:11.710 align:start position:0%
everything we tell the object your job
is<00:05:09.320><c> do</c><00:05:09.740><c> not</c><00:05:09.889><c> only</c><00:05:10.070><c> do</c><00:05:10.400><c> all</c><00:05:10.430><c> of</c><00:05:10.790><c> these</c><00:05:10.940><c> tasks</c><00:05:11.390><c> but</c>

00:05:11.710 --> 00:05:11.720 align:start position:0%
is do not only do all of these tasks but
 

00:05:11.720 --> 00:05:14.020 align:start position:0%
is do not only do all of these tasks but
also<00:05:11.900><c> track</c><00:05:12.500><c> the</c><00:05:12.530><c> size</c><00:05:12.890><c> for</c><00:05:13.250><c> me</c><00:05:13.370><c> and</c><00:05:13.610><c> in</c><00:05:14.000><c> that</c>

00:05:14.020 --> 00:05:14.030 align:start position:0%
also track the size for me and in that
 

00:05:14.030 --> 00:05:16.030 align:start position:0%
also track the size for me and in that
way<00:05:14.300><c> it's</c><00:05:14.720><c> just</c><00:05:14.780><c> a</c><00:05:14.930><c> natural</c><00:05:15.350><c> way</c><00:05:15.380><c> to</c><00:05:15.500><c> organize</c>

00:05:16.030 --> 00:05:16.040 align:start position:0%
way it's just a natural way to organize
 

00:05:16.040 --> 00:05:18.219 align:start position:0%
way it's just a natural way to organize
our<00:05:16.220><c> code</c><00:05:16.430><c> so</c><00:05:16.940><c> again</c><00:05:17.180><c> the</c><00:05:17.330><c> int</c><00:05:17.479><c> list</c><00:05:17.690><c> can</c><00:05:18.050><c> do</c>

00:05:18.219 --> 00:05:18.229 align:start position:0%
our code so again the int list can do
 

00:05:18.229 --> 00:05:20.590 align:start position:0%
our code so again the int list can do
all<00:05:18.500><c> the</c><00:05:18.740><c> stuff</c><00:05:18.979><c> that</c><00:05:19.010><c> an</c><00:05:19.340><c> S</c><00:05:19.460><c> list</c><00:05:19.760><c> can</c><00:05:19.970><c> do</c><00:05:20.120><c> but</c>

00:05:20.590 --> 00:05:20.600 align:start position:0%
all the stuff that an S list can do but
 

00:05:20.600 --> 00:05:22.180 align:start position:0%
all the stuff that an S list can do but
an<00:05:20.720><c> S</c><00:05:20.840><c> list</c><00:05:21.110><c> is</c><00:05:21.229><c> going</c><00:05:21.380><c> to</c><00:05:21.440><c> be</c><00:05:21.530><c> a</c><00:05:21.560><c> more</c><00:05:21.830><c> natural</c>

00:05:22.180 --> 00:05:22.190 align:start position:0%
an S list is going to be a more natural
 

00:05:22.190 --> 00:05:25.360 align:start position:0%
an S list is going to be a more natural
approach<00:05:22.370><c> in</c><00:05:22.669><c> nearly</c><00:05:22.940><c> every</c><00:05:23.330><c> way</c>

