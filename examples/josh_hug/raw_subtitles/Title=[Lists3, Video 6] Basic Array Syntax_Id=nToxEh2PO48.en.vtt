WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.500 align:start position:0%
 
super<00:00:01.220><c> now</c><00:00:02.220><c> like</c><00:00:02.370><c> classes</c><00:00:02.790><c> arrays</c><00:00:03.240><c> are</c><00:00:03.389><c> going</c>

00:00:03.500 --> 00:00:03.510 align:start position:0%
super now like classes arrays are going
 

00:00:03.510 --> 00:00:05.900 align:start position:0%
super now like classes arrays are going
to<00:00:03.570><c> be</c><00:00:03.629><c> almost</c><00:00:03.870><c> always</c><00:00:04.549><c> instantiating</c><00:00:05.549><c> using</c>

00:00:05.900 --> 00:00:05.910 align:start position:0%
to be almost always instantiating using
 

00:00:05.910 --> 00:00:07.789 align:start position:0%
to be almost always instantiating using
the<00:00:06.000><c> new</c><00:00:06.120><c> keyword</c><00:00:06.330><c> so</c><00:00:06.960><c> for</c><00:00:07.140><c> Strings</c><00:00:07.379><c> we</c><00:00:07.560><c> call</c>

00:00:07.789 --> 00:00:07.799 align:start position:0%
the new keyword so for Strings we call
 

00:00:07.799 --> 00:00:10.370 align:start position:0%
the new keyword so for Strings we call
you<00:00:08.340><c> don't</c><00:00:08.519><c> have</c><00:00:08.639><c> to</c><00:00:08.760><c> use</c><00:00:08.849><c> new</c><00:00:09.080><c> with</c><00:00:10.080><c> with</c>

00:00:10.370 --> 00:00:10.380 align:start position:0%
you don't have to use new with with
 

00:00:10.380 --> 00:00:13.879 align:start position:0%
you don't have to use new with with
arrays<00:00:10.730><c> it's</c><00:00:11.730><c> going</c><00:00:11.910><c> to</c><00:00:11.969><c> be</c><00:00:12.059><c> new</c><00:00:12.240><c> most</c><00:00:12.889><c> so</c>

00:00:13.879 --> 00:00:13.889 align:start position:0%
arrays it's going to be new most so
 

00:00:13.889 --> 00:00:15.890 align:start position:0%
arrays it's going to be new most so
there's<00:00:14.070><c> three</c><00:00:14.400><c> notations</c><00:00:14.849><c> for</c><00:00:15.150><c> defining</c>

00:00:15.890 --> 00:00:15.900 align:start position:0%
there's three notations for defining
 

00:00:15.900 --> 00:00:18.500 align:start position:0%
there's three notations for defining
arrays<00:00:16.109><c> in</c><00:00:16.320><c> Java</c><00:00:16.640><c> and</c><00:00:17.640><c> the</c><00:00:17.789><c> first</c><00:00:18.000><c> year</c><00:00:18.300><c> is</c>

00:00:18.500 --> 00:00:18.510 align:start position:0%
arrays in Java and the first year is
 

00:00:18.510 --> 00:00:21.230 align:start position:0%
arrays in Java and the first year is
just<00:00:18.960><c> a</c><00:00:19.199><c> simple</c><00:00:19.560><c> creation</c><00:00:20.250><c> of</c><00:00:20.520><c> an</c><00:00:20.609><c> array</c><00:00:20.820><c> but</c>

00:00:21.230 --> 00:00:21.240 align:start position:0%
just a simple creation of an array but
 

00:00:21.240 --> 00:00:22.700 align:start position:0%
just a simple creation of an array but
not<00:00:21.420><c> specifying</c><00:00:21.990><c> the</c><00:00:22.140><c> values</c><00:00:22.500><c> of</c><00:00:22.590><c> the</c>

00:00:22.700 --> 00:00:22.710 align:start position:0%
not specifying the values of the
 

00:00:22.710 --> 00:00:25.730 align:start position:0%
not specifying the values of the
governor<00:00:23.010><c> in</c><00:00:23.189><c> so</c><00:00:23.939><c> this</c><00:00:24.119><c> first</c><00:00:24.390><c> syntax</c><00:00:24.630><c> has</c><00:00:25.050><c> the</c>

00:00:25.730 --> 00:00:25.740 align:start position:0%
governor in so this first syntax has the
 

00:00:25.740 --> 00:00:27.529 align:start position:0%
governor in so this first syntax has the
variable<00:00:26.039><c> Y</c><00:00:26.310><c> which</c><00:00:26.760><c> I'm</c><00:00:26.910><c> assuming</c><00:00:27.029><c> SM</c>

00:00:27.529 --> 00:00:27.539 align:start position:0%
variable Y which I'm assuming SM
 

00:00:27.539 --> 00:00:29.990 align:start position:0%
variable Y which I'm assuming SM
declared<00:00:27.840><c> earlier</c><00:00:27.990><c> I</c><00:00:28.920><c> want</c><00:00:29.490><c> to</c><00:00:29.580><c> put</c><00:00:29.789><c> in</c><00:00:29.880><c> that</c>

00:00:29.990 --> 00:00:30.000 align:start position:0%
declared earlier I want to put in that
 

00:00:30.000 --> 00:00:32.420 align:start position:0%
declared earlier I want to put in that
64<00:00:30.570><c> bit</c><00:00:30.750><c> box</c><00:00:31.019><c> the</c><00:00:31.260><c> addresses</c><00:00:31.890><c> of</c><00:00:31.980><c> an</c><00:00:32.099><c> array</c><00:00:32.309><c> I'm</c>

00:00:32.420 --> 00:00:32.430 align:start position:0%
64 bit box the addresses of an array I'm
 

00:00:32.430 --> 00:00:34.580 align:start position:0%
64 bit box the addresses of an array I'm
now<00:00:32.579><c> creating</c><00:00:32.759><c> that</c><00:00:33.600><c> array</c><00:00:33.870><c> will</c><00:00:34.079><c> consist</c><00:00:34.440><c> of</c>

00:00:34.580 --> 00:00:34.590 align:start position:0%
now creating that array will consist of
 

00:00:34.590 --> 00:00:37.400 align:start position:0%
now creating that array will consist of
three<00:00:35.219><c> boxes</c><00:00:35.460><c> of</c><00:00:35.700><c> 32-bit</c><00:00:36.270><c> Beach</c><00:00:36.660><c> along</c><00:00:37.260><c> with</c>

00:00:37.400 --> 00:00:37.410 align:start position:0%
three boxes of 32-bit Beach along with
 

00:00:37.410 --> 00:00:40.549 align:start position:0%
three boxes of 32-bit Beach along with
the<00:00:37.500><c> links</c><00:00:37.770><c> tree</c><00:00:38.160><c> and</c><00:00:39.090><c> Java</c><00:00:39.899><c> when</c><00:00:40.200><c> you</c><00:00:40.290><c> create</c>

00:00:40.549 --> 00:00:40.559 align:start position:0%
the links tree and Java when you create
 

00:00:40.559 --> 00:00:42.319 align:start position:0%
the links tree and Java when you create
an<00:00:40.620><c> array</c><00:00:40.860><c> it</c><00:00:41.070><c> will</c><00:00:41.190><c> get</c><00:00:41.309><c> a</c><00:00:41.340><c> default</c><00:00:41.579><c> value</c><00:00:42.149><c> and</c>

00:00:42.319 --> 00:00:42.329 align:start position:0%
an array it will get a default value and
 

00:00:42.329 --> 00:00:44.330 align:start position:0%
an array it will get a default value and
we'll<00:00:42.660><c> see</c><00:00:42.780><c> in</c><00:00:42.870><c> the</c><00:00:42.960><c> visualization</c><00:00:43.320><c> what</c><00:00:44.160><c> that</c>

00:00:44.330 --> 00:00:44.340 align:start position:0%
we'll see in the visualization what that
 

00:00:44.340 --> 00:00:47.840 align:start position:0%
we'll see in the visualization what that
means<00:00:44.570><c> and</c><00:00:45.570><c> the</c><00:00:46.200><c> other</c><00:00:46.379><c> kind</c><00:00:46.680><c> of</c><00:00:46.800><c> notation</c><00:00:47.670><c> or</c>

00:00:47.840 --> 00:00:47.850 align:start position:0%
means and the other kind of notation or
 

00:00:47.850 --> 00:00:49.670 align:start position:0%
means and the other kind of notation or
said<00:00:48.000><c> the</c><00:00:48.059><c> second</c><00:00:48.300><c> type</c><00:00:48.420><c> of</c><00:00:48.450><c> notation</c><00:00:48.960><c> is</c><00:00:49.469><c> to</c>

00:00:49.670 --> 00:00:49.680 align:start position:0%
said the second type of notation is to
 

00:00:49.680 --> 00:00:52.520 align:start position:0%
said the second type of notation is to
say<00:00:49.829><c> x</c><00:00:50.100><c> equals</c><00:00:50.340><c> new</c><00:00:50.910><c> int</c><00:00:50.940><c> and</c><00:00:51.870><c> then</c><00:00:52.020><c> here</c><00:00:52.260><c> have</c>

00:00:52.520 --> 00:00:52.530 align:start position:0%
say x equals new int and then here have
 

00:00:52.530 --> 00:00:54.920 align:start position:0%
say x equals new int and then here have
the<00:00:53.340><c> actual</c><00:00:53.789><c> value</c><00:00:54.120><c> you</c><00:00:54.329><c> want</c><00:00:54.449><c> to</c><00:00:54.570><c> put</c><00:00:54.840><c> in</c>

00:00:54.920 --> 00:00:54.930 align:start position:0%
the actual value you want to put in
 

00:00:54.930 --> 00:00:56.990 align:start position:0%
the actual value you want to put in
there<00:00:55.079><c> by</c><00:00:55.230><c> default</c><00:00:55.370><c> so</c><00:00:56.370><c> in</c><00:00:56.489><c> this</c><00:00:56.610><c> case</c><00:00:56.820><c> we're</c>

00:00:56.990 --> 00:00:57.000 align:start position:0%
there by default so in this case we're
 

00:00:57.000 --> 00:00:58.639 align:start position:0%
there by default so in this case we're
not<00:00:57.030><c> explicitly</c><00:00:57.690><c> stating</c><00:00:58.109><c> the</c><00:00:58.199><c> size</c><00:00:58.379><c> of</c><00:00:58.590><c> the</c>

00:00:58.639 --> 00:00:58.649 align:start position:0%
not explicitly stating the size of the
 

00:00:58.649 --> 00:01:00.049 align:start position:0%
not explicitly stating the size of the
array<00:00:58.800><c> but</c><00:00:59.010><c> Java</c><00:00:59.219><c> is</c><00:00:59.340><c> able</c><00:00:59.550><c> it's</c><00:00:59.760><c> pretty</c><00:00:59.940><c> smart</c>

00:01:00.049 --> 00:01:00.059 align:start position:0%
array but Java is able it's pretty smart
 

00:01:00.059 --> 00:01:01.849 align:start position:0%
array but Java is able it's pretty smart
figures<00:01:00.510><c> it</c><00:01:00.629><c> out</c><00:01:00.719><c> it</c><00:01:00.989><c> says</c><00:01:01.109><c> I</c><00:01:01.260><c> you</c><00:01:01.379><c> want</c><00:01:01.770><c> an</c>

00:01:01.849 --> 00:01:01.859 align:start position:0%
figures it out it says I you want an
 

00:01:01.859 --> 00:01:03.290 align:start position:0%
figures it out it says I you want an
array<00:01:02.070><c> of</c><00:01:02.100><c> size</c><00:01:02.309><c> five</c><00:01:02.609><c> and</c><00:01:02.850><c> it</c><00:01:03.030><c> puts</c><00:01:03.180><c> these</c>

00:01:03.290 --> 00:01:03.300 align:start position:0%
array of size five and it puts these
 

00:01:03.300 --> 00:01:04.910 align:start position:0%
array of size five and it puts these
default<00:01:03.690><c> valid</c><00:01:03.930><c> for</c><00:01:04.049><c> try</c><00:01:04.140><c> puts</c><00:01:04.379><c> these</c><00:01:04.500><c> values</c>

00:01:04.910 --> 00:01:04.920 align:start position:0%
default valid for try puts these values
 

00:01:04.920 --> 00:01:07.670 align:start position:0%
default valid for try puts these values
then<00:01:05.070><c> instead</c><00:01:05.670><c> of</c><00:01:05.790><c> the</c><00:01:05.850><c> people</c><00:01:06.150><c> value</c><00:01:06.680><c> now</c>

00:01:07.670 --> 00:01:07.680 align:start position:0%
then instead of the people value now
 

00:01:07.680 --> 00:01:08.870 align:start position:0%
then instead of the people value now
note<00:01:07.950><c> that</c><00:01:07.979><c> when</c><00:01:08.159><c> you</c><00:01:08.220><c> create</c><00:01:08.460><c> an</c><00:01:08.610><c> array</c><00:01:08.790><c> on</c>

00:01:08.870 --> 00:01:08.880 align:start position:0%
note that when you create an array on
 

00:01:08.880 --> 00:01:09.289 align:start position:0%
note that when you create an array on
Java

00:01:09.289 --> 00:01:09.299 align:start position:0%
Java
 

00:01:09.299 --> 00:01:11.510 align:start position:0%
Java
you<00:01:09.360><c> always</c><00:01:09.630><c> get</c><00:01:09.990><c> a</c><00:01:10.049><c> default</c><00:01:10.260><c> value</c><00:01:10.500><c> so</c><00:01:11.400><c> if</c><00:01:11.460><c> you</c>

00:01:11.510 --> 00:01:11.520 align:start position:0%
you always get a default value so if you
 

00:01:11.520 --> 00:01:13.460 align:start position:0%
you always get a default value so if you
say<00:01:11.670><c> new</c><00:01:11.909><c> insulin</c><00:01:12.299><c> million</c><00:01:12.689><c> it's</c><00:01:13.200><c> going</c><00:01:13.409><c> to</c>

00:01:13.460 --> 00:01:13.470 align:start position:0%
say new insulin million it's going to
 

00:01:13.470 --> 00:01:14.929 align:start position:0%
say new insulin million it's going to
make<00:01:13.619><c> it's</c><00:01:13.950><c> going</c><00:01:14.100><c> to</c><00:01:14.159><c> set</c><00:01:14.310><c> aside</c><00:01:14.400><c> a</c><00:01:14.580><c> million</c>

00:01:14.929 --> 00:01:14.939 align:start position:0%
make it's going to set aside a million
 

00:01:14.939 --> 00:01:16.609 align:start position:0%
make it's going to set aside a million
boxes<00:01:15.090><c> and</c><00:01:15.509><c> it's</c><00:01:15.810><c> going</c><00:01:15.930><c> to</c><00:01:16.020><c> write</c><00:01:16.170><c> a</c><00:01:16.200><c> bunch</c><00:01:16.470><c> of</c>

00:01:16.609 --> 00:01:16.619 align:start position:0%
boxes and it's going to write a bunch of
 

00:01:16.619 --> 00:01:21.440 align:start position:0%
boxes and it's going to write a bunch of
zeros<00:01:17.009><c> if</c><00:01:17.250><c> it's</c><00:01:17.430><c> all</c><00:01:17.549><c> in</c><00:01:19.610><c> so</c><00:01:20.610><c> a</c><00:01:20.820><c> little</c><00:01:21.270><c> bit</c><00:01:21.360><c> of</c>

00:01:21.440 --> 00:01:21.450 align:start position:0%
zeros if it's all in so a little bit of
 

00:01:21.450 --> 00:01:22.910 align:start position:0%
zeros if it's all in so a little bit of
overhead<00:01:21.750><c> associated</c><00:01:22.020><c> with</c><00:01:22.409><c> creating</c><00:01:22.799><c> arrays</c>

00:01:22.910 --> 00:01:22.920 align:start position:0%
overhead associated with creating arrays
 

00:01:22.920 --> 00:01:26.149 align:start position:0%
overhead associated with creating arrays
in<00:01:23.130><c> Java</c><00:01:23.420><c> all</c><00:01:24.420><c> right</c><00:01:25.049><c> so</c><00:01:25.229><c> next</c><00:01:25.409><c> up</c><00:01:25.680><c> we</c><00:01:25.950><c> have</c><00:01:25.979><c> our</c>

00:01:26.149 --> 00:01:26.159 align:start position:0%
in Java all right so next up we have our
 

00:01:26.159 --> 00:01:29.929 align:start position:0%
in Java all right so next up we have our
final<00:01:26.790><c> and</c><00:01:27.659><c> somewhat</c><00:01:28.049><c> strange</c><00:01:28.439><c> syntax</c><00:01:28.950><c> this</c>

00:01:29.929 --> 00:01:29.939 align:start position:0%
final and somewhat strange syntax this
 

00:01:29.939 --> 00:01:32.630 align:start position:0%
final and somewhat strange syntax this
one<00:01:30.180><c> is</c><00:01:30.329><c> just</c><00:01:30.750><c> like</c><00:01:30.869><c> the</c><00:01:31.110><c> one</c><00:01:31.259><c> above</c><00:01:31.549><c> except</c><00:01:32.549><c> we</c>

00:01:32.630 --> 00:01:32.640 align:start position:0%
one is just like the one above except we
 

00:01:32.640 --> 00:01:34.340 align:start position:0%
one is just like the one above except we
don't<00:01:32.850><c> do</c><00:01:33.000><c> new</c><00:01:33.180><c> int</c><00:01:33.420><c> and</c><00:01:34.020><c> what's</c><00:01:34.170><c> sort</c><00:01:34.259><c> of</c>

00:01:34.340 --> 00:01:34.350 align:start position:0%
don't do new int and what's sort of
 

00:01:34.350 --> 00:01:36.140 align:start position:0%
don't do new int and what's sort of
funny<00:01:34.560><c> about</c><00:01:34.619><c> this</c><00:01:34.950><c> is</c><00:01:35.189><c> it</c><00:01:35.369><c> only</c><00:01:35.579><c> works</c><00:01:35.970><c> when</c>

00:01:36.140 --> 00:01:36.150 align:start position:0%
funny about this is it only works when
 

00:01:36.150 --> 00:01:37.940 align:start position:0%
funny about this is it only works when
you're<00:01:36.270><c> also</c><00:01:36.600><c> declaring</c><00:01:37.140><c> a</c><00:01:37.380><c> variable</c><00:01:37.409><c> at</c><00:01:37.920><c> the</c>

00:01:37.940 --> 00:01:37.950 align:start position:0%
you're also declaring a variable at the
 

00:01:37.950 --> 00:01:41.539 align:start position:0%
you're also declaring a variable at the
same<00:01:38.220><c> time</c><00:01:38.430><c> so</c><00:01:39.150><c> I</c><00:01:39.180><c> say</c><00:01:39.420><c> int</c><00:01:39.630><c> brackets</c><00:01:40.229><c> W</c><00:01:40.680><c> that</c>

00:01:41.539 --> 00:01:41.549 align:start position:0%
same time so I say int brackets W that
 

00:01:41.549 --> 00:01:43.039 align:start position:0%
same time so I say int brackets W that
allows<00:01:41.909><c> me</c><00:01:42.119><c> because</c><00:01:42.420><c> I'm</c><00:01:42.540><c> declaring</c><00:01:42.810><c> right</c>

00:01:43.039 --> 00:01:43.049 align:start position:0%
allows me because I'm declaring right
 

00:01:43.049 --> 00:01:45.080 align:start position:0%
allows me because I'm declaring right
now<00:01:43.170><c> to</c><00:01:43.409><c> instantiate</c><00:01:43.799><c> without</c><00:01:44.520><c> the</c><00:01:44.700><c> new</c><00:01:44.850><c> end</c>

00:01:45.080 --> 00:01:45.090 align:start position:0%
now to instantiate without the new end
 

00:01:45.090 --> 00:01:47.810 align:start position:0%
now to instantiate without the new end
keyword<00:01:45.479><c> why</c><00:01:46.140><c> is</c><00:01:46.200><c> it</c><00:01:46.409><c> I</c><00:01:46.710><c> don't</c><00:01:46.799><c> know</c><00:01:46.950><c> that's</c>

00:01:47.810 --> 00:01:47.820 align:start position:0%
keyword why is it I don't know that's
 

00:01:47.820 --> 00:01:49.730 align:start position:0%
keyword why is it I don't know that's
need<00:01:48.119><c> to</c><00:01:48.180><c> do</c><00:01:48.270><c> so</c><00:01:48.930><c> if</c><00:01:48.990><c> you</c><00:01:49.079><c> like</c><00:01:49.229><c> this</c><00:01:49.380><c> notation</c>

00:01:49.730 --> 00:01:49.740 align:start position:0%
need to do so if you like this notation
 

00:01:49.740 --> 00:01:52.310 align:start position:0%
need to do so if you like this notation
um<00:01:50.220><c> be</c><00:01:50.909><c> aware</c><00:01:51.119><c> that</c><00:01:51.180><c> you</c><00:01:51.630><c> can't</c><00:01:51.869><c> use</c><00:01:52.020><c> it</c><00:01:52.200><c> with</c>

00:01:52.310 --> 00:01:52.320 align:start position:0%
um be aware that you can't use it with
 

00:01:52.320 --> 00:01:56.300 align:start position:0%
um be aware that you can't use it with
an<00:01:52.439><c> already</c><00:01:52.799><c> declared</c><00:01:53.040><c> group</c><00:01:53.420><c> so</c><00:01:54.420><c> each</c><00:01:54.630><c> of</c><00:01:55.310><c> the</c>

00:01:56.300 --> 00:01:56.310 align:start position:0%
an already declared group so each of the
 

00:01:56.310 --> 00:01:58.370 align:start position:0%
an already declared group so each of the
invitations<00:01:56.630><c> there</c><00:01:57.630><c> all</c><00:01:57.750><c> do</c><00:01:57.899><c> the</c><00:01:57.990><c> same</c><00:01:58.170><c> thing</c>

00:01:58.370 --> 00:01:58.380 align:start position:0%
invitations there all do the same thing
 

00:01:58.380 --> 00:02:00.319 align:start position:0%
invitations there all do the same thing
right<00:01:58.530><c> they</c><00:01:58.920><c> create</c><00:01:59.460><c> an</c><00:01:59.549><c> array</c><00:01:59.790><c> which</c><00:02:00.299><c> has</c>

00:02:00.319 --> 00:02:00.329 align:start position:0%
right they create an array which has
 

00:02:00.329 --> 00:02:03.080 align:start position:0%
right they create an array which has
some<00:02:01.020><c> links</c><00:02:01.350><c> and</c><00:02:01.530><c> it</c><00:02:01.860><c> has</c><00:02:01.979><c> n</c><00:02:02.189><c> boxes</c><00:02:02.369><c> right</c>

00:02:03.080 --> 00:02:03.090 align:start position:0%
some links and it has n boxes right
 

00:02:03.090 --> 00:02:05.780 align:start position:0%
some links and it has n boxes right
we're<00:02:03.329><c> in</c><00:02:03.360><c> Italy</c><00:02:04.100><c> for</c><00:02:05.100><c> those</c><00:02:05.250><c> of</c><00:02:05.369><c> you</c><00:02:05.460><c> curious</c>

00:02:05.780 --> 00:02:05.790 align:start position:0%
we're in Italy for those of you curious
 

00:02:05.790 --> 00:02:07.190 align:start position:0%
we're in Italy for those of you curious
about<00:02:05.939><c> what's</c><00:02:06.210><c> happening</c><00:02:06.600><c> under</c><00:02:06.899><c> the</c><00:02:06.930><c> hood</c>

00:02:07.190 --> 00:02:07.200 align:start position:0%
about what's happening under the hood
 

00:02:07.200 --> 00:02:09.469 align:start position:0%
about what's happening under the hood
you<00:02:07.710><c> might</c><00:02:07.920><c> imagine</c><00:02:08.220><c> that</c><00:02:08.610><c> an</c><00:02:08.700><c> array</c><00:02:08.940><c> is</c><00:02:09.000><c> well</c>

00:02:09.469 --> 00:02:09.479 align:start position:0%
you might imagine that an array is well
 

00:02:09.479 --> 00:02:12.830 align:start position:0%
you might imagine that an array is well
maybe<00:02:09.720><c> 32</c><00:02:10.170><c> bits</c><00:02:10.530><c> to</c><00:02:10.709><c> the</c><00:02:10.800><c> links</c><00:02:11.099><c> plus</c><00:02:11.700><c> K</c><00:02:12.450><c> bits</c>

00:02:12.830 --> 00:02:12.840 align:start position:0%
maybe 32 bits to the links plus K bits
 

00:02:12.840 --> 00:02:13.580 align:start position:0%
maybe 32 bits to the links plus K bits
per<00:02:13.110><c> box</c>

00:02:13.580 --> 00:02:13.590 align:start position:0%
per box
 

00:02:13.590 --> 00:02:16.280 align:start position:0%
per box
for<00:02:13.709><c> a</c><00:02:13.739><c> total</c><00:02:13.890><c> of</c><00:02:14.099><c> 32</c><00:02:14.430><c> plus</c><00:02:14.819><c> K</c><00:02:15.060><c> times</c><00:02:15.269><c> in</c><00:02:15.540><c> this</c>

00:02:16.280 --> 00:02:16.290 align:start position:0%
for a total of 32 plus K times in this
 

00:02:16.290 --> 00:02:18.320 align:start position:0%
for a total of 32 plus K times in this
print<00:02:16.860><c> array</c><00:02:16.980><c> but</c><00:02:17.580><c> it</c><00:02:17.670><c> turns</c><00:02:17.849><c> out</c><00:02:18.000><c> that</c><00:02:18.060><c> n</c>

00:02:18.320 --> 00:02:18.330 align:start position:0%
print array but it turns out that n
 

00:02:18.330 --> 00:02:19.970 align:start position:0%
print array but it turns out that n
typical<00:02:18.660><c> implementations</c><00:02:19.349><c> it's</c><00:02:19.590><c> actually</c><00:02:19.950><c> a</c>

00:02:19.970 --> 00:02:19.980 align:start position:0%
typical implementations it's actually a
 

00:02:19.980 --> 00:02:21.470 align:start position:0%
typical implementations it's actually a
little<00:02:20.129><c> more</c><00:02:20.190><c> have</c><00:02:20.849><c> a</c><00:02:20.879><c> little</c><00:02:21.150><c> note</c><00:02:21.300><c> in</c><00:02:21.390><c> the</c>

00:02:21.470 --> 00:02:21.480 align:start position:0%
little more have a little note in the
 

00:02:21.480 --> 00:02:22.580 align:start position:0%
little more have a little note in the
bottom<00:02:21.690><c> right</c><00:02:21.840><c> corner</c><00:02:22.140><c> and</c><00:02:22.170><c> that's</c><00:02:22.500><c> the</c>

00:02:22.580 --> 00:02:22.590 align:start position:0%
bottom right corner and that's the
 

00:02:22.590 --> 00:02:24.140 align:start position:0%
bottom right corner and that's the
reading<00:02:22.769><c> and</c><00:02:23.129><c> our</c><00:02:23.190><c> optional</c><00:02:23.550><c> textbook</c><00:02:23.940><c> if</c>

00:02:24.140 --> 00:02:24.150 align:start position:0%
reading and our optional textbook if
 

00:02:24.150 --> 00:02:26.390 align:start position:0%
reading and our optional textbook if
you're<00:02:24.420><c> curious</c><00:02:24.599><c> but</c><00:02:25.019><c> not</c><00:02:25.440><c> important</c><00:02:25.830><c> for</c><00:02:25.920><c> 61b</c>

00:02:26.390 --> 00:02:26.400 align:start position:0%
you're curious but not important for 61b
 

00:02:26.400 --> 00:02:30.470 align:start position:0%
you're curious but not important for 61b
okay<00:02:27.620><c> so</c><00:02:28.620><c> this</c><00:02:28.680><c> works</c><00:02:28.920><c> through</c><00:02:29.069><c> an</c><00:02:29.160><c> example</c><00:02:29.480><c> so</c>

00:02:30.470 --> 00:02:30.480 align:start position:0%
okay so this works through an example so
 

00:02:30.480 --> 00:02:31.850 align:start position:0%
okay so this works through an example so
this<00:02:30.599><c> is</c><00:02:30.750><c> an</c><00:02:30.870><c> example</c><00:02:31.140><c> where</c><00:02:31.379><c> I</c><00:02:31.410><c> think</c><00:02:31.500><c> that</c>

00:02:31.850 --> 00:02:31.860 align:start position:0%
this is an example where I think that
 

00:02:31.860 --> 00:02:33.619 align:start position:0%
this is an example where I think that
you<00:02:32.010><c> given</c><00:02:32.549><c> what</c><00:02:32.670><c> you</c><00:02:32.760><c> saw</c><00:02:32.940><c> on</c><00:02:32.970><c> project</c><00:02:33.420><c> zero</c>

00:02:33.619 --> 00:02:33.629 align:start position:0%
you given what you saw on project zero
 

00:02:33.629 --> 00:02:35.210 align:start position:0%
you given what you saw on project zero
and<00:02:33.870><c> in</c><00:02:33.989><c> this</c><00:02:34.080><c> lecture</c><00:02:34.260><c> you</c><00:02:34.650><c> could</c><00:02:34.830><c> do</c><00:02:34.950><c> every</c>

00:02:35.210 --> 00:02:35.220 align:start position:0%
and in this lecture you could do every
 

00:02:35.220 --> 00:02:36.949 align:start position:0%
and in this lecture you could do every
step<00:02:35.430><c> of</c><00:02:35.549><c> this</c><00:02:35.730><c> and</c><00:02:35.970><c> draw</c><00:02:36.209><c> a</c><00:02:36.239><c> nice</c><00:02:36.510><c> box</c><00:02:36.780><c> and</c>

00:02:36.949 --> 00:02:36.959 align:start position:0%
step of this and draw a nice box and
 

00:02:36.959 --> 00:02:39.229 align:start position:0%
step of this and draw a nice box and
pointer<00:02:37.080><c> diagram</c><00:02:37.650><c> except</c><00:02:38.580><c> maybe</c><00:02:38.730><c> this</c><00:02:38.970><c> last</c>

00:02:39.229 --> 00:02:39.239 align:start position:0%
pointer diagram except maybe this last
 

00:02:39.239 --> 00:02:42.820 align:start position:0%
pointer diagram except maybe this last
step<00:02:39.510><c> here</c><00:02:40.190><c> let's</c><00:02:41.190><c> run</c><00:02:41.250><c> through</c><00:02:41.519><c> this</c><00:02:41.640><c> example</c>

00:02:42.820 --> 00:02:42.830 align:start position:0%
step here let's run through this example
 

00:02:42.830 --> 00:02:45.289 align:start position:0%
step here let's run through this example
and<00:02:43.830><c> you</c><00:02:44.010><c> can</c><00:02:44.040><c> follow</c><00:02:44.340><c> along</c><00:02:44.670><c> and</c><00:02:44.940><c> try</c><00:02:45.180><c> and</c>

00:02:45.289 --> 00:02:45.299 align:start position:0%
and you can follow along and try and
 

00:02:45.299 --> 00:02:46.610 align:start position:0%
and you can follow along and try and
guess<00:02:45.420><c> what's</c><00:02:45.630><c> going</c><00:02:45.750><c> to</c><00:02:45.810><c> happen</c><00:02:46.079><c> now</c><00:02:46.530><c> I'm</c>

00:02:46.610 --> 00:02:46.620 align:start position:0%
guess what's going to happen now I'm
 

00:02:46.620 --> 00:02:48.979 align:start position:0%
guess what's going to happen now I'm
going<00:02:46.739><c> to</c><00:02:46.799><c> set</c><00:02:46.920><c> two</c><00:02:47.040><c> options</c><00:02:47.430><c> I</c><00:02:47.610><c> want</c><00:02:48.150><c> this</c><00:02:48.420><c> so</c>

00:02:48.979 --> 00:02:48.989 align:start position:0%
going to set two options I want this so
 

00:02:48.989 --> 00:02:50.539 align:start position:0%
going to set two options I want this so
that<00:02:49.140><c> things</c><00:02:49.349><c> look</c><00:02:49.620><c> nice</c><00:02:49.799><c> and</c><00:02:50.130><c> we</c><00:02:50.190><c> don't</c><00:02:50.340><c> get</c>

00:02:50.539 --> 00:02:50.549 align:start position:0%
that things look nice and we don't get
 

00:02:50.549 --> 00:02:53.270 align:start position:0%
that things look nice and we don't get
weird<00:02:51.140><c> we</c><00:02:52.140><c> did</c><00:02:52.290><c> this</c><00:02:52.380><c> last</c><00:02:52.560><c> time</c><00:02:52.799><c> so</c><00:02:52.950><c> make</c><00:02:53.130><c> sure</c>

00:02:53.270 --> 00:02:53.280 align:start position:0%
weird we did this last time so make sure
 

00:02:53.280 --> 00:02:54.410 align:start position:0%
weird we did this last time so make sure
that<00:02:53.430><c> it</c><00:02:53.519><c> looks</c><00:02:53.670><c> more</c><00:02:53.819><c> like</c><00:02:53.970><c> a</c><00:02:54.000><c> box</c><00:02:54.239><c> and</c>

00:02:54.410 --> 00:02:54.420 align:start position:0%
that it looks more like a box and
 

00:02:54.420 --> 00:02:56.750 align:start position:0%
that it looks more like a box and
pointer<00:02:54.510><c> diagram</c><00:02:54.989><c> I'm</c><00:02:55.170><c> also</c><00:02:55.680><c> going</c><00:02:55.920><c> to</c><00:02:56.010><c> enable</c>

00:02:56.750 --> 00:02:56.760 align:start position:0%
pointer diagram I'm also going to enable
 

00:02:56.760 --> 00:03:00.170 align:start position:0%
pointer diagram I'm also going to enable
this<00:02:57.090><c> option</c><00:02:57.269><c> so</c><00:02:57.930><c> that</c><00:02:57.959><c> strings</c><00:02:59.000><c> show</c><00:03:00.000><c> their</c>

00:03:00.170 --> 00:03:00.180 align:start position:0%
this option so that strings show their
 

00:03:00.180 --> 00:03:01.880 align:start position:0%
this option so that strings show their
true<00:03:00.390><c> nature</c><00:03:00.720><c> okay</c><00:03:01.049><c> so</c><00:03:01.410><c> if</c><00:03:01.470><c> you're</c><00:03:01.680><c> curious</c>

00:03:01.880 --> 00:03:01.890 align:start position:0%
true nature okay so if you're curious
 

00:03:01.890 --> 00:03:05.180 align:start position:0%
true nature okay so if you're curious
what<00:03:03.079><c> so</c><00:03:04.079><c> if</c><00:03:04.140><c> you're</c><00:03:04.260><c> curious</c><00:03:04.410><c> what</c><00:03:04.769><c> these</c><00:03:04.950><c> do</c>

00:03:05.180 --> 00:03:05.190 align:start position:0%
what so if you're curious what these do
 

00:03:05.190 --> 00:03:06.979 align:start position:0%
what so if you're curious what these do
you<00:03:05.700><c> can</c><00:03:05.879><c> take</c><00:03:06.000><c> them</c><00:03:06.209><c> away</c><00:03:06.299><c> and</c><00:03:06.480><c> it</c><00:03:06.840><c> looks</c>

00:03:06.979 --> 00:03:06.989 align:start position:0%
you can take them away and it looks
 

00:03:06.989 --> 00:03:08.360 align:start position:0%
you can take them away and it looks
different<00:03:07.200><c> but</c><00:03:07.440><c> whatever</c><00:03:07.739><c> this</c><00:03:07.890><c> is</c><00:03:07.950><c> just</c><00:03:08.069><c> so</c>

00:03:08.360 --> 00:03:08.370 align:start position:0%
different but whatever this is just so
 

00:03:08.370 --> 00:03:09.740 align:start position:0%
different but whatever this is just so
that<00:03:08.400><c> the</c><00:03:08.670><c> diagram</c><00:03:09.120><c> it</c><00:03:09.269><c> generates</c><00:03:09.629><c> is</c>

00:03:09.740 --> 00:03:09.750 align:start position:0%
that the diagram it generates is
 

00:03:09.750 --> 00:03:11.119 align:start position:0%
that the diagram it generates is
consistent<00:03:10.319><c> with</c><00:03:10.470><c> our</c><00:03:10.530><c> box</c><00:03:10.769><c> and</c><00:03:10.980><c> pointer</c>

00:03:11.119 --> 00:03:11.129 align:start position:0%
consistent with our box and pointer
 

00:03:11.129 --> 00:03:12.350 align:start position:0%
consistent with our box and pointer
notation<00:03:11.370><c> okay</c>

00:03:12.350 --> 00:03:12.360 align:start position:0%
notation okay
 

00:03:12.360 --> 00:03:15.800 align:start position:0%
notation okay
so<00:03:13.349><c> the</c><00:03:13.470><c> code</c><00:03:13.680><c> begins</c><00:03:14.099><c> in</c><00:03:14.610><c> sprechen</c><00:03:15.450><c> zie</c><00:03:15.480><c> what</c>

00:03:15.800 --> 00:03:15.810 align:start position:0%
so the code begins in sprechen zie what
 

00:03:15.810 --> 00:03:17.300 align:start position:0%
so the code begins in sprechen zie what
does<00:03:15.930><c> it</c><00:03:16.019><c> do</c><00:03:16.170><c> well</c><00:03:16.560><c> that's</c><00:03:16.769><c> going</c><00:03:16.980><c> to</c><00:03:17.040><c> create</c><00:03:17.190><c> a</c>

00:03:17.300 --> 00:03:17.310 align:start position:0%
does it do well that's going to create a
 

00:03:17.310 --> 00:03:21.410 align:start position:0%
does it do well that's going to create a
box<00:03:17.489><c> of</c><00:03:17.790><c> how</c><00:03:18.030><c> many</c><00:03:18.239><c> bits</c><00:03:19.310><c> 64</c><00:03:20.310><c> and</c><00:03:20.790><c> what</c><00:03:21.120><c> goes</c><00:03:21.269><c> in</c>

00:03:21.410 --> 00:03:21.420 align:start position:0%
box of how many bits 64 and what goes in
 

00:03:21.420 --> 00:03:23.479 align:start position:0%
box of how many bits 64 and what goes in
there<00:03:21.569><c> and</c><00:03:21.750><c> address</c><00:03:22.310><c> remember</c><00:03:23.310><c> there</c><00:03:23.459><c> are</c>

00:03:23.479 --> 00:03:23.489 align:start position:0%
there and address remember there are
 

00:03:23.489 --> 00:03:26.300 align:start position:0%
there and address remember there are
only<00:03:23.609><c> nine</c><00:03:24.299><c> things</c><00:03:24.720><c> and</c><00:03:25.019><c> Java</c><00:03:25.440><c> types</c><00:03:25.709><c> there</c>

00:03:26.300 --> 00:03:26.310 align:start position:0%
only nine things and Java types there
 

00:03:26.310 --> 00:03:28.069 align:start position:0%
only nine things and Java types there
are<00:03:26.489><c> the</c><00:03:26.609><c> 8</c><00:03:26.819><c> primitive</c><00:03:27.060><c> types</c><00:03:27.450><c> and</c><00:03:27.660><c> then</c>

00:03:28.069 --> 00:03:28.079 align:start position:0%
are the 8 primitive types and then
 

00:03:28.079 --> 00:03:29.960 align:start position:0%
are the 8 primitive types and then
reference<00:03:28.530><c> this</c><00:03:28.650><c> to</c><00:03:28.799><c> anything</c><00:03:29.010><c> this</c><00:03:29.579><c> is</c><00:03:29.940><c> a</c>

00:03:29.960 --> 00:03:29.970 align:start position:0%
reference this to anything this is a
 

00:03:29.970 --> 00:03:32.629 align:start position:0%
reference this to anything this is a
reference<00:03:30.359><c> to</c><00:03:30.480><c> an</c><00:03:30.840><c> enter</c><00:03:31.109><c> in</c><00:03:31.260><c> so</c><00:03:31.889><c> we</c><00:03:31.950><c> get</c><00:03:32.069><c> 64</c>

00:03:32.629 --> 00:03:32.639 align:start position:0%
reference to an enter in so we get 64
 

00:03:32.639 --> 00:03:34.640 align:start position:0%
reference to an enter in so we get 64
bits<00:03:32.849><c> and</c><00:03:33.060><c> into</c><00:03:33.750><c> that</c><00:03:33.900><c> array</c><00:03:34.109><c> we</c><00:03:34.260><c> write</c><00:03:34.470><c> a</c>

00:03:34.640 --> 00:03:34.650 align:start position:0%
bits and into that array we write a
 

00:03:34.650 --> 00:03:36.920 align:start position:0%
bits and into that array we write a
bunch<00:03:34.829><c> of</c><00:03:34.980><c> zeros</c><00:03:35.370><c> in</c><00:03:36.090><c> which</c><00:03:36.269><c> we</c><00:03:36.450><c> call</c><00:03:36.630><c> a</c><00:03:36.660><c> null</c>

00:03:36.920 --> 00:03:36.930 align:start position:0%
bunch of zeros in which we call a null
 

00:03:36.930 --> 00:03:38.960 align:start position:0%
bunch of zeros in which we call a null
for<00:03:37.290><c> short</c><00:03:37.560><c> okay</c><00:03:37.829><c> so</c><00:03:37.889><c> we</c><00:03:38.010><c> have</c><00:03:38.099><c> 64</c><00:03:38.549><c> bits</c><00:03:38.760><c> here</c>

00:03:38.960 --> 00:03:38.970 align:start position:0%
for short okay so we have 64 bits here
 

00:03:38.970 --> 00:03:42.319 align:start position:0%
for short okay so we have 64 bits here
all<00:03:39.180><c> zeros</c><00:03:39.889><c> now</c><00:03:40.889><c> individual</c><00:03:41.310><c> Iser</c><00:03:41.459><c> we</c><00:03:41.819><c> also</c><00:03:42.030><c> at</c>

00:03:42.319 --> 00:03:42.329 align:start position:0%
all zeros now individual Iser we also at
 

00:03:42.329 --> 00:03:44.509 align:start position:0%
all zeros now individual Iser we also at
this<00:03:42.480><c> point</c><00:03:42.599><c> give</c><00:03:42.959><c> two</c><00:03:43.139><c> more</c><00:03:43.319><c> boxes</c><00:03:43.709><c> x</c><00:03:44.069><c> and</c><00:03:44.400><c> y</c>

00:03:44.509 --> 00:03:44.519 align:start position:0%
this point give two more boxes x and y
 

00:03:44.519 --> 00:03:47.150 align:start position:0%
this point give two more boxes x and y
which<00:03:45.120><c> will</c><00:03:45.299><c> be</c><00:03:45.389><c> 64</c><00:03:45.900><c> bits</c><00:03:46.139><c> but</c><00:03:46.620><c> the</c><00:03:46.739><c> visualizer</c>

00:03:47.150 --> 00:03:47.160 align:start position:0%
which will be 64 bits but the visualizer
 

00:03:47.160 --> 00:03:49.069 align:start position:0%
which will be 64 bits but the visualizer
is<00:03:47.400><c> designed</c><00:03:47.730><c> by</c><00:03:47.849><c> philip</c><00:03:48.120><c> glow</c><00:03:48.359><c> does</c><00:03:48.630><c> not</c><00:03:48.810><c> show</c>

00:03:49.069 --> 00:03:49.079 align:start position:0%
is designed by philip glow does not show
 

00:03:49.079 --> 00:03:50.839 align:start position:0%
is designed by philip glow does not show
those<00:03:49.319><c> boxes</c><00:03:49.739><c> but</c><00:03:50.069><c> you</c><00:03:50.190><c> can</c><00:03:50.340><c> imagine</c><00:03:50.519><c> they're</c>

00:03:50.839 --> 00:03:50.849 align:start position:0%
those boxes but you can imagine they're
 

00:03:50.849 --> 00:03:54.229 align:start position:0%
those boxes but you can imagine they're
there<00:03:51.560><c> so</c><00:03:52.560><c> we</c><00:03:52.680><c> do</c><00:03:52.799><c> x</c><00:03:52.980><c> equals</c><00:03:53.310><c> new</c><00:03:53.430><c> int</c><00:03:53.459><c> we</c><00:03:54.060><c> get</c>

00:03:54.229 --> 00:03:54.239 align:start position:0%
there so we do x equals new int we get
 

00:03:54.239 --> 00:03:57.500 align:start position:0%
there so we do x equals new int we get
our<00:03:54.359><c> 64</c><00:03:54.870><c> bits</c><00:03:55.139><c> box</c><00:03:55.470><c> X</c><00:03:55.829><c> and</c><00:03:56.160><c> we</c><00:03:56.400><c> fill</c><00:03:56.639><c> it</c><00:03:56.760><c> with</c><00:03:56.910><c> 64</c>

00:03:57.500 --> 00:03:57.510 align:start position:0%
our 64 bits box X and we fill it with 64
 

00:03:57.510 --> 00:04:00.500 align:start position:0%
our 64 bits box X and we fill it with 64
bits<00:03:57.690><c> what</c><00:03:58.680><c> goes</c><00:03:58.889><c> most</c><00:03:59.160><c> bit</c><00:03:59.310><c> Y</c><00:03:59.639><c> the</c><00:03:59.700><c> address</c><00:04:00.299><c> is</c>

00:04:00.500 --> 00:04:00.510 align:start position:0%
bits what goes most bit Y the address is
 

00:04:00.510 --> 00:04:02.870 align:start position:0%
bits what goes most bit Y the address is
returned<00:04:01.169><c> by</c><00:04:01.380><c> the</c><00:04:01.440><c> new</c><00:04:01.620><c> function</c><00:04:02.010><c> okay</c><00:04:02.400><c> what</c>

00:04:02.870 --> 00:04:02.880 align:start position:0%
returned by the new function okay what
 

00:04:02.880 --> 00:04:04.580 align:start position:0%
returned by the new function okay what
if<00:04:02.970><c> the</c><00:04:03.090><c> new</c><00:04:03.209><c> function</c><00:04:03.599><c> do</c><00:04:03.750><c> well</c><00:04:04.290><c> it's</c><00:04:04.440><c> going</c>

00:04:04.580 --> 00:04:04.590 align:start position:0%
if the new function do well it's going
 

00:04:04.590 --> 00:04:06.680 align:start position:0%
if the new function do well it's going
to<00:04:04.680><c> go</c><00:04:04.829><c> find</c><00:04:05.519><c> someplace</c><00:04:05.849><c> in</c><00:04:06.090><c> memory</c><00:04:06.120><c> for</c><00:04:06.510><c> five</c>

00:04:06.680 --> 00:04:06.690 align:start position:0%
to go find someplace in memory for five
 

00:04:06.690 --> 00:04:10.309 align:start position:0%
to go find someplace in memory for five
integers<00:04:06.989><c> to</c><00:04:07.349><c> live</c><00:04:07.530><c> here</c><00:04:08.340><c> they</c><00:04:08.459><c> are</c><00:04:08.930><c> so</c><00:04:09.930><c> 32</c>

00:04:10.309 --> 00:04:10.319 align:start position:0%
integers to live here they are so 32
 

00:04:10.319 --> 00:04:13.099 align:start position:0%
integers to live here they are so 32
bits<00:04:10.530><c> for</c><00:04:10.590><c> each</c><00:04:10.769><c> one</c><00:04:10.980><c> and</c><00:04:11.510><c> X</c><00:04:12.510><c> is</c><00:04:12.780><c> going</c><00:04:12.989><c> to</c>

00:04:13.099 --> 00:04:13.109 align:start position:0%
bits for each one and X is going to
 

00:04:13.109 --> 00:04:15.140 align:start position:0%
bits for each one and X is going to
record<00:04:13.440><c> the</c><00:04:13.829><c> location</c><00:04:14.340><c> in</c><00:04:14.519><c> memory</c><00:04:14.700><c> of</c><00:04:14.910><c> this</c>

00:04:15.140 --> 00:04:15.150 align:start position:0%
record the location in memory of this
 

00:04:15.150 --> 00:04:17.509 align:start position:0%
record the location in memory of this
whole<00:04:15.299><c> box</c><00:04:15.480><c> now</c><00:04:16.380><c> notice</c><00:04:16.799><c> that</c><00:04:16.829><c> the</c><00:04:17.070><c> visualizer</c>

00:04:17.509 --> 00:04:17.519 align:start position:0%
whole box now notice that the visualizer
 

00:04:17.519 --> 00:04:20.000 align:start position:0%
whole box now notice that the visualizer
does<00:04:17.789><c> not</c><00:04:18.030><c> explicitly</c><00:04:18.720><c> show</c><00:04:19.019><c> the</c><00:04:19.530><c> integer</c>

00:04:20.000 --> 00:04:20.010 align:start position:0%
does not explicitly show the integer
 

00:04:20.010 --> 00:04:22.430 align:start position:0%
does not explicitly show the integer
that<00:04:20.549><c> stores</c><00:04:20.940><c> the</c><00:04:21.180><c> links</c><00:04:21.450><c> of</c><00:04:21.599><c> an</c><00:04:21.750><c> array</c><00:04:21.959><c> so</c><00:04:22.409><c> it</c>

00:04:22.430 --> 00:04:22.440 align:start position:0%
that stores the links of an array so it
 

00:04:22.440 --> 00:04:24.170 align:start position:0%
that stores the links of an array so it
does<00:04:22.680><c> nonetheless</c><00:04:22.890><c> exist</c><00:04:23.520><c> and</c><00:04:23.789><c> we've</c><00:04:23.940><c> done</c><00:04:24.060><c> a</c>

00:04:24.170 --> 00:04:24.180 align:start position:0%
does nonetheless exist and we've done a
 

00:04:24.180 --> 00:04:25.480 align:start position:0%
does nonetheless exist and we've done a
typical<00:04:24.570><c> implementation</c>

00:04:25.480 --> 00:04:25.490 align:start position:0%
typical implementation
 

00:04:25.490 --> 00:04:27.430 align:start position:0%
typical implementation
Java<00:04:25.669><c> you</c><00:04:26.150><c> can</c><00:04:26.210><c> imagine</c><00:04:26.630><c> as</c><00:04:26.750><c> a</c><00:04:26.780><c> little</c><00:04:27.020><c> five</c><00:04:27.199><c> up</c>

00:04:27.430 --> 00:04:27.440 align:start position:0%
Java you can imagine as a little five up
 

00:04:27.440 --> 00:04:29.279 align:start position:0%
Java you can imagine as a little five up
here<00:04:27.620><c> but</c><00:04:27.860><c> not</c><00:04:28.280><c> you</c>

00:04:29.279 --> 00:04:29.289 align:start position:0%
here but not you
 

00:04:29.289 --> 00:04:31.629 align:start position:0%
here but not you
now<00:04:30.289><c> when</c><00:04:30.410><c> I</c><00:04:30.440><c> say</c><00:04:30.590><c> y</c><00:04:30.740><c> equals</c><00:04:31.009><c> x</c><00:04:31.130><c> okay</c><00:04:31.400><c> what</c><00:04:31.580><c> does</c>

00:04:31.629 --> 00:04:31.639 align:start position:0%
now when I say y equals x okay what does
 

00:04:31.639 --> 00:04:33.610 align:start position:0%
now when I say y equals x okay what does
this<00:04:31.819><c> do</c><00:04:32.030><c> well</c><00:04:32.539><c> we</c><00:04:32.660><c> have</c><00:04:32.780><c> this</c><00:04:32.960><c> box</c><00:04:33.199><c> over</c><00:04:33.410><c> here</c>

00:04:33.610 --> 00:04:33.620 align:start position:0%
this do well we have this box over here
 

00:04:33.620 --> 00:04:35.710 align:start position:0%
this do well we have this box over here
that<00:04:33.770><c> a</c><00:04:33.800><c> 64</c><00:04:34.340><c> bits</c><00:04:34.550><c> in</c><00:04:34.699><c> it</c><00:04:34.819><c> and</c><00:04:34.970><c> of</c><00:04:35.360><c> course</c><00:04:35.389><c> the</c>

00:04:35.710 --> 00:04:35.720 align:start position:0%
that a 64 bits in it and of course the
 

00:04:35.720 --> 00:04:37.360 align:start position:0%
that a 64 bits in it and of course the
thing<00:04:35.900><c> you</c><00:04:35.990><c> do</c><00:04:36.169><c> whenever</c><00:04:36.440><c> you</c><00:04:36.560><c> say</c><00:04:36.800><c> y</c><00:04:36.919><c> equals</c><00:04:37.220><c> x</c>

00:04:37.360 --> 00:04:37.370 align:start position:0%
thing you do whenever you say y equals x
 

00:04:37.370 --> 00:04:40.839 align:start position:0%
thing you do whenever you say y equals x
is<00:04:37.580><c> less</c><00:04:37.900><c> copies</c><00:04:38.900><c> the</c><00:04:39.050><c> bits</c><00:04:39.259><c> okay</c><00:04:39.849><c> nothing</c>

00:04:40.839 --> 00:04:40.849 align:start position:0%
is less copies the bits okay nothing
 

00:04:40.849 --> 00:04:43.300 align:start position:0%
is less copies the bits okay nothing
else<00:04:41.319><c> so</c><00:04:42.319><c> when</c><00:04:42.440><c> we</c><00:04:42.530><c> copy</c><00:04:42.740><c> is</c><00:04:42.889><c> a</c><00:04:42.979><c> bit</c>

00:04:43.300 --> 00:04:43.310 align:start position:0%
else so when we copy is a bit
 

00:04:43.310 --> 00:04:45.550 align:start position:0%
else so when we copy is a bit
well<00:04:43.789><c> our</c><00:04:44.240><c> visual</c><00:04:44.660><c> metaphor</c><00:04:45.050><c> says</c><00:04:45.259><c> we</c><00:04:45.410><c> should</c>

00:04:45.550 --> 00:04:45.560 align:start position:0%
well our visual metaphor says we should
 

00:04:45.560 --> 00:04:47.110 align:start position:0%
well our visual metaphor says we should
draw<00:04:45.680><c> an</c><00:04:45.800><c> arrow</c><00:04:45.979><c> to</c><00:04:46.099><c> the</c><00:04:46.280><c> same</c><00:04:46.520><c> object</c><00:04:46.669><c> and</c>

00:04:47.110 --> 00:04:47.120 align:start position:0%
draw an arrow to the same object and
 

00:04:47.120 --> 00:04:49.360 align:start position:0%
draw an arrow to the same object and
there<00:04:47.300><c> you</c><00:04:47.389><c> have</c><00:04:47.539><c> it</c><00:04:47.660><c> now</c><00:04:48.220><c> we're</c><00:04:49.220><c> going</c><00:04:49.310><c> to</c>

00:04:49.360 --> 00:04:49.370 align:start position:0%
there you have it now we're going to
 

00:04:49.370 --> 00:04:51.400 align:start position:0%
there you have it now we're going to
take<00:04:49.580><c> X</c><00:04:49.789><c> and</c><00:04:50.120><c> we're</c><00:04:50.419><c> going</c><00:04:50.449><c> to</c><00:04:50.569><c> replace</c><00:04:51.080><c> these</c>

00:04:51.400 --> 00:04:51.410 align:start position:0%
take X and we're going to replace these
 

00:04:51.410 --> 00:04:53.800 align:start position:0%
take X and we're going to replace these
bits<00:04:51.740><c> here</c><00:04:52.009><c> with</c><00:04:52.460><c> the</c><00:04:52.729><c> address</c><00:04:52.910><c> as</c><00:04:53.419><c> returned</c>

00:04:53.800 --> 00:04:53.810 align:start position:0%
bits here with the address as returned
 

00:04:53.810 --> 00:04:56.170 align:start position:0%
bits here with the address as returned
by<00:04:53.930><c> this</c><00:04:53.990><c> next</c><00:04:54.560><c> call</c><00:04:54.740><c> to</c><00:04:54.770><c> nil</c><00:04:55.099><c> okay</c><00:04:55.310><c> so</c><00:04:55.819><c> this</c><00:04:56.030><c> is</c>

00:04:56.170 --> 00:04:56.180 align:start position:0%
by this next call to nil okay so this is
 

00:04:56.180 --> 00:04:58.450 align:start position:0%
by this next call to nil okay so this is
again<00:04:56.389><c> an</c><00:04:56.539><c> array</c><00:04:56.750><c> of</c><00:04:56.780><c> size</c><00:04:57.020><c> five</c><00:04:57.440><c> and</c><00:04:57.740><c> now</c><00:04:58.220><c> X</c>

00:04:58.450 --> 00:04:58.460 align:start position:0%
again an array of size five and now X
 

00:04:58.460 --> 00:04:59.860 align:start position:0%
again an array of size five and now X
gets<00:04:58.699><c> the</c><00:04:58.849><c> bits</c><00:04:59.060><c> corresponding</c><00:04:59.690><c> to</c><00:04:59.780><c> the</c>

00:04:59.860 --> 00:04:59.870 align:start position:0%
gets the bits corresponding to the
 

00:04:59.870 --> 00:05:04.360 align:start position:0%
gets the bits corresponding to the
address<00:05:00.440><c> of</c><00:05:00.800><c> X</c><00:05:02.199><c> next</c><00:05:03.199><c> we</c><00:05:03.319><c> have</c><00:05:03.500><c> y</c><00:05:03.740><c> equals</c><00:05:04.220><c> new</c>

00:05:04.360 --> 00:05:04.370 align:start position:0%
address of X next we have y equals new
 

00:05:04.370 --> 00:05:06.010 align:start position:0%
address of X next we have y equals new
and<00:05:04.550><c> three</c><00:05:04.789><c> and</c><00:05:04.970><c> so</c><00:05:05.389><c> what</c><00:05:05.509><c> that</c><00:05:05.630><c> means</c><00:05:05.870><c> is</c>

00:05:06.010 --> 00:05:06.020 align:start position:0%
and three and so what that means is
 

00:05:06.020 --> 00:05:07.600 align:start position:0%
and three and so what that means is
we're<00:05:06.169><c> going</c><00:05:06.289><c> to</c><00:05:06.380><c> throw</c><00:05:06.650><c> away</c><00:05:06.770><c> these</c><00:05:07.130><c> bits</c><00:05:07.370><c> and</c>

00:05:07.600 --> 00:05:07.610 align:start position:0%
we're going to throw away these bits and
 

00:05:07.610 --> 00:05:09.760 align:start position:0%
we're going to throw away these bits and
replace<00:05:08.419><c> them</c><00:05:08.659><c> with</c><00:05:08.690><c> the</c><00:05:09.020><c> address</c><00:05:09.169><c> of</c><00:05:09.560><c> a</c><00:05:09.620><c> new</c>

00:05:09.760 --> 00:05:09.770 align:start position:0%
replace them with the address of a new
 

00:05:09.770 --> 00:05:12.670 align:start position:0%
replace them with the address of a new
array<00:05:10.009><c> of</c><00:05:10.159><c> size</c><00:05:10.370><c> three</c><00:05:10.699><c> okay</c><00:05:11.270><c> so</c><00:05:11.650><c> there's</c><00:05:12.650><c> a</c>

00:05:12.670 --> 00:05:12.680 align:start position:0%
array of size three okay so there's a
 

00:05:12.680 --> 00:05:14.890 align:start position:0%
array of size three okay so there's a
couple<00:05:12.710><c> of</c><00:05:12.979><c> interesting</c><00:05:13.130><c> things</c><00:05:13.340><c> here</c><00:05:14.030><c> one</c><00:05:14.750><c> of</c>

00:05:14.890 --> 00:05:14.900 align:start position:0%
couple of interesting things here one of
 

00:05:14.900 --> 00:05:16.779 align:start position:0%
couple of interesting things here one of
them<00:05:14.990><c> is</c><00:05:15.139><c> that</c><00:05:15.349><c> the</c><00:05:15.530><c> visualizer</c><00:05:16.069><c> is</c><00:05:16.220><c> going</c><00:05:16.610><c> to</c>

00:05:16.779 --> 00:05:16.789 align:start position:0%
them is that the visualizer is going to
 

00:05:16.789 --> 00:05:19.330 align:start position:0%
them is that the visualizer is going to
make<00:05:17.090><c> this</c><00:05:17.270><c> disappear</c><00:05:17.509><c> watch</c><00:05:18.050><c> so</c><00:05:19.039><c> it's</c><00:05:19.159><c> gone</c>

00:05:19.330 --> 00:05:19.340 align:start position:0%
make this disappear watch so it's gone
 

00:05:19.340 --> 00:05:20.770 align:start position:0%
make this disappear watch so it's gone
right<00:05:19.699><c> and</c><00:05:19.940><c> it</c><00:05:20.030><c> kind</c><00:05:20.210><c> of</c><00:05:20.240><c> reorganize</c><00:05:20.630><c> this</c>

00:05:20.770 --> 00:05:20.780 align:start position:0%
right and it kind of reorganize this
 

00:05:20.780 --> 00:05:23.439 align:start position:0%
right and it kind of reorganize this
force<00:05:21.020><c> but</c><00:05:21.229><c> the</c><00:05:21.319><c> array</c><00:05:21.500><c> that's</c><00:05:21.710><c> 1</c><00:05:21.949><c> 2</c><00:05:22.130><c> 3</c><00:05:22.310><c> 4</c><00:05:22.580><c> 5</c><00:05:22.729><c> it</c>

00:05:23.439 --> 00:05:23.449 align:start position:0%
force but the array that's 1 2 3 4 5 it
 

00:05:23.449 --> 00:05:25.990 align:start position:0%
force but the array that's 1 2 3 4 5 it
is<00:05:23.479><c> just</c><00:05:23.750><c> gone</c><00:05:23.930><c> forever</c><00:05:24.830><c> we</c><00:05:25.310><c> can</c><00:05:25.460><c> never</c><00:05:25.669><c> get</c><00:05:25.880><c> it</c>

00:05:25.990 --> 00:05:26.000 align:start position:0%
is just gone forever we can never get it
 

00:05:26.000 --> 00:05:27.879 align:start position:0%
is just gone forever we can never get it
back<00:05:26.030><c> that's</c><00:05:26.780><c> what</c><00:05:26.960><c> I</c><00:05:27.020><c> mean</c><00:05:27.139><c> by</c><00:05:27.199><c> an</c><00:05:27.409><c> object</c><00:05:27.770><c> is</c>

00:05:27.879 --> 00:05:27.889 align:start position:0%
back that's what I mean by an object is
 

00:05:27.889 --> 00:05:29.290 align:start position:0%
back that's what I mean by an object is
anonymous<00:05:28.310><c> so</c><00:05:28.430><c> we</c><00:05:28.520><c> lose</c><00:05:28.759><c> the</c><00:05:28.940><c> reference</c>

00:05:29.290 --> 00:05:29.300 align:start position:0%
anonymous so we lose the reference
 

00:05:29.300 --> 00:05:31.060 align:start position:0%
anonymous so we lose the reference
that's<00:05:29.539><c> just</c><00:05:29.750><c> it</c><00:05:29.960><c> we'll</c><00:05:30.620><c> never</c><00:05:30.770><c> see</c><00:05:31.039><c> that</c>

00:05:31.060 --> 00:05:31.070 align:start position:0%
that's just it we'll never see that
 

00:05:31.070 --> 00:05:35.439 align:start position:0%
that's just it we'll never see that
array<00:05:31.340><c> again</c><00:05:31.719><c> garbage</c><00:05:32.719><c> collection</c><00:05:33.169><c> ok</c><00:05:34.449><c> next</c>

00:05:35.439 --> 00:05:35.449 align:start position:0%
array again garbage collection ok next
 

00:05:35.449 --> 00:05:36.730 align:start position:0%
array again garbage collection ok next
step<00:05:35.599><c> then</c><00:05:35.990><c> the</c><00:05:36.020><c> other</c><00:05:36.409><c> thing</c><00:05:36.590><c> that</c><00:05:36.620><c> was</c>

00:05:36.730 --> 00:05:36.740 align:start position:0%
step then the other thing that was
 

00:05:36.740 --> 00:05:37.990 align:start position:0%
step then the other thing that was
interesting<00:05:36.830><c> is</c><00:05:37.219><c> that</c><00:05:37.280><c> we</c><00:05:37.460><c> got</c><00:05:37.610><c> an</c><00:05:37.729><c> array</c><00:05:37.969><c> of</c>

00:05:37.990 --> 00:05:38.000 align:start position:0%
interesting is that we got an array of
 

00:05:38.000 --> 00:05:40.990 align:start position:0%
interesting is that we got an array of
size<00:05:38.419><c> 3</c><00:05:38.810><c> and</c><00:05:38.960><c> in</c><00:05:39.259><c> this</c><00:05:39.349><c> case</c><00:05:39.560><c> it's</c><00:05:39.710><c> all</c><00:05:39.830><c> 0</c><00:05:40.099><c> y</c><00:05:40.969><c> 0</c>

00:05:40.990 --> 00:05:41.000 align:start position:0%
size 3 and in this case it's all 0 y 0
 

00:05:41.000 --> 00:05:43.480 align:start position:0%
size 3 and in this case it's all 0 y 0
well<00:05:41.690><c> in</c><00:05:41.960><c> Java</c><00:05:42.469><c> when</c><00:05:42.650><c> you</c><00:05:42.740><c> create</c><00:05:43.009><c> a</c><00:05:43.039><c> narang</c>

00:05:43.480 --> 00:05:43.490 align:start position:0%
well in Java when you create a narang
 

00:05:43.490 --> 00:05:45.339 align:start position:0%
well in Java when you create a narang
you<00:05:43.849><c> always</c><00:05:44.030><c> get</c><00:05:44.240><c> default</c><00:05:44.599><c> values</c><00:05:44.900><c> much</c><00:05:45.139><c> right</c>

00:05:45.339 --> 00:05:45.349 align:start position:0%
you always get default values much right
 

00:05:45.349 --> 00:05:47.379 align:start position:0%
you always get default values much right
much<00:05:45.620><c> like</c><00:05:45.830><c> how</c><00:05:46.009><c> with</c><00:05:46.190><c> a</c><00:05:46.219><c> class</c><00:05:46.580><c> as</c><00:05:47.060><c> we</c><00:05:47.240><c> saw</c>

00:05:47.379 --> 00:05:47.389 align:start position:0%
much like how with a class as we saw
 

00:05:47.389 --> 00:05:48.999 align:start position:0%
much like how with a class as we saw
before<00:05:47.599><c> you</c><00:05:48.139><c> get</c><00:05:48.289><c> a</c><00:05:48.320><c> bunch</c><00:05:48.530><c> of</c><00:05:48.590><c> default</c><00:05:48.949><c> values</c>

00:05:48.999 --> 00:05:49.009 align:start position:0%
before you get a bunch of default values
 

00:05:49.009 --> 00:05:51.010 align:start position:0%
before you get a bunch of default values
for<00:05:49.460><c> every</c><00:05:49.550><c> instance</c><00:05:50.090><c> variable</c><00:05:50.509><c> ok</c><00:05:50.750><c> so</c><00:05:50.810><c> these</c>

00:05:51.010 --> 00:05:51.020 align:start position:0%
for every instance variable ok so these
 

00:05:51.020 --> 00:05:52.810 align:start position:0%
for every instance variable ok so these
are<00:05:51.259><c> my</c><00:05:51.380><c> default</c><00:05:51.680><c> values</c><00:05:52.039><c> which</c><00:05:52.280><c> for</c><00:05:52.460><c> integer</c>

00:05:52.810 --> 00:05:52.820 align:start position:0%
are my default values which for integer
 

00:05:52.820 --> 00:05:55.089 align:start position:0%
are my default values which for integer
is<00:05:52.940><c> here</c><00:05:53.380><c> this</c><00:05:54.380><c> is</c><00:05:54.560><c> just</c><00:05:54.740><c> for</c><00:05:54.889><c> fun</c>

00:05:55.089 --> 00:05:55.099 align:start position:0%
is here this is just for fun
 

00:05:55.099 --> 00:05:57.459 align:start position:0%
is here this is just for fun
so<00:05:55.969><c> when</c><00:05:56.090><c> I</c><00:05:56.120><c> run</c><00:05:56.300><c> this</c><00:05:56.479><c> line</c><00:05:56.719><c> I</c><00:05:56.900><c> get</c><00:05:57.169><c> an</c><00:05:57.259><c> array</c>

00:05:57.459 --> 00:05:57.469 align:start position:0%
so when I run this line I get an array
 

00:05:57.469 --> 00:06:00.399 align:start position:0%
so when I run this line I get an array
of<00:05:57.500><c> size</c><00:05:57.770><c> 0</c><00:05:57.830><c> so</c><00:05:58.729><c> there</c><00:05:59.030><c> are</c><00:05:59.120><c> no</c><00:05:59.270><c> boxes</c><00:05:59.509><c> and</c><00:05:59.990><c> an</c>

00:06:00.399 --> 00:06:00.409 align:start position:0%
of size 0 so there are no boxes and an
 

00:06:00.409 --> 00:06:03.249 align:start position:0%
of size 0 so there are no boxes and an
INT<00:06:00.590><c> presumably</c><00:06:01.159><c> that</c><00:06:01.340><c> says</c><00:06:01.580><c> 0</c><00:06:01.940><c> somewhere</c><00:06:02.449><c> and</c>

00:06:03.249 --> 00:06:03.259 align:start position:0%
INT presumably that says 0 somewhere and
 

00:06:03.259 --> 00:06:06.430 align:start position:0%
INT presumably that says 0 somewhere and
so<00:06:03.469><c> seeing</c><00:06:03.710><c> just</c><00:06:03.919><c> points</c><00:06:04.130><c> of</c><00:06:04.219><c> distance</c><00:06:05.319><c> if</c><00:06:06.319><c> I</c>

00:06:06.430 --> 00:06:06.440 align:start position:0%
so seeing just points of distance if I
 

00:06:06.440 --> 00:06:09.100 align:start position:0%
so seeing just points of distance if I
want<00:06:06.620><c> to</c><00:06:06.680><c> get</c><00:06:06.740><c> the</c><00:06:06.889><c> links</c><00:06:07.490><c> of</c><00:06:07.639><c> an</c><00:06:07.880><c> array</c><00:06:08.120><c> I</c><00:06:08.389><c> can</c>

00:06:09.100 --> 00:06:09.110 align:start position:0%
want to get the links of an array I can
 

00:06:09.110 --> 00:06:10.990 align:start position:0%
want to get the links of an array I can
actually<00:06:09.259><c> use</c><00:06:09.560><c> dot</c><00:06:09.860><c> links</c><00:06:10.219><c> so</c><00:06:10.639><c> you</c><00:06:10.669><c> can</c><00:06:10.759><c> think</c>

00:06:10.990 --> 00:06:11.000 align:start position:0%
actually use dot links so you can think
 

00:06:11.000 --> 00:06:13.450 align:start position:0%
actually use dot links so you can think
of<00:06:11.180><c> it</c><00:06:11.300><c> as</c><00:06:11.419><c> an</c><00:06:11.750><c> array</c><00:06:12.080><c> is</c><00:06:12.139><c> like</c><00:06:12.770><c> a</c><00:06:12.800><c> class</c><00:06:13.159><c> in</c><00:06:13.400><c> a</c>

00:06:13.450 --> 00:06:13.460 align:start position:0%
of it as an array is like a class in a
 

00:06:13.460 --> 00:06:15.909 align:start position:0%
of it as an array is like a class in a
way<00:06:13.490><c> that</c><00:06:14.000><c> has</c><00:06:14.120><c> an</c><00:06:14.270><c> instance</c><00:06:14.750><c> variable</c><00:06:14.919><c> kind</c>

00:06:15.909 --> 00:06:15.919 align:start position:0%
way that has an instance variable kind
 

00:06:15.919 --> 00:06:18.640 align:start position:0%
way that has an instance variable kind
of<00:06:16.069><c> that</c><00:06:16.969><c> is</c><00:06:17.090><c> called</c><00:06:17.300><c> links</c><00:06:17.599><c> and</c><00:06:17.780><c> so</c><00:06:18.469><c> when</c><00:06:18.590><c> I</c>

00:06:18.640 --> 00:06:18.650 align:start position:0%
of that is called links and so when I
 

00:06:18.650 --> 00:06:20.320 align:start position:0%
of that is called links and so when I
say<00:06:18.800><c> in</c><00:06:18.949><c> excel</c><00:06:19.340><c> equals</c><00:06:19.610><c> x</c><00:06:19.729><c> dot</c><00:06:19.909><c> links</c><00:06:20.180><c> it</c>

00:06:20.320 --> 00:06:20.330 align:start position:0%
say in excel equals x dot links it
 

00:06:20.330 --> 00:06:22.719 align:start position:0%
say in excel equals x dot links it
accesses<00:06:21.169><c> this</c><00:06:21.349><c> together</c><00:06:22.099><c> the</c><00:06:22.250><c> next</c><00:06:22.400><c> it</c>

00:06:22.719 --> 00:06:22.729 align:start position:0%
accesses this together the next it
 

00:06:22.729 --> 00:06:24.820 align:start position:0%
accesses this together the next it
accesses<00:06:23.330><c> the</c><00:06:23.479><c> secret</c><00:06:23.840><c> five</c><00:06:24.080><c> we</c><00:06:24.319><c> cannot</c><00:06:24.560><c> see</c>

00:06:24.820 --> 00:06:24.830 align:start position:0%
accesses the secret five we cannot see
 

00:06:24.830 --> 00:06:27.790 align:start position:0%
accesses the secret five we cannot see
in<00:06:25.159><c> a</c><00:06:25.819><c> copy</c><00:06:26.060><c> of</c><00:06:26.210><c> those</c><00:06:26.330><c> bits</c><00:06:26.599><c> okay</c><00:06:27.020><c> so</c><00:06:27.560><c> I</c><00:06:27.590><c> had</c><00:06:27.770><c> a</c>

00:06:27.790 --> 00:06:27.800 align:start position:0%
in a copy of those bits okay so I had a
 

00:06:27.800 --> 00:06:30.209 align:start position:0%
in a copy of those bits okay so I had a
five<00:06:28.009><c> up</c><00:06:28.190><c> here</c><00:06:28.370><c> we</c><00:06:28.550><c> copy</c><00:06:28.729><c> them</c><00:06:28.969><c> we</c><00:06:29.270><c> have</c><00:06:29.389><c> five</c>

00:06:30.209 --> 00:06:30.219 align:start position:0%
five up here we copy them we have five
 

00:06:30.219 --> 00:06:34.390 align:start position:0%
five up here we copy them we have five
all<00:06:31.219><c> right</c><00:06:31.870><c> now</c><00:06:32.870><c> we</c><00:06:32.930><c> have</c><00:06:33.440><c> creating</c><00:06:34.039><c> a</c><00:06:34.130><c> string</c>

00:06:34.390 --> 00:06:34.400 align:start position:0%
all right now we have creating a string
 

00:06:34.400 --> 00:06:36.159 align:start position:0%
all right now we have creating a string
array<00:06:34.639><c> okay</c><00:06:35.210><c> so</c><00:06:35.270><c> a</c><00:06:35.389><c> challenge</c><00:06:35.630><c> for</c><00:06:35.960><c> you</c><00:06:36.050><c> to</c>

00:06:36.159 --> 00:06:36.169 align:start position:0%
array okay so a challenge for you to
 

00:06:36.169 --> 00:06:39.129 align:start position:0%
array okay so a challenge for you to
ponder<00:06:36.349><c> how</c><00:06:37.190><c> many</c><00:06:37.430><c> boxes</c><00:06:37.820><c> get</c><00:06:38.060><c> made</c><00:06:38.300><c> and</c><00:06:38.719><c> I</c><00:06:38.810><c> was</c>

00:06:39.129 --> 00:06:39.139 align:start position:0%
ponder how many boxes get made and I was
 

00:06:39.139 --> 00:06:41.080 align:start position:0%
ponder how many boxes get made and I was
pretty<00:06:39.379><c> easy</c><00:06:39.530><c> and</c><00:06:39.740><c> how</c><00:06:40.069><c> many</c><00:06:40.249><c> bits</c><00:06:40.550><c> are</c><00:06:40.759><c> in</c>

00:06:41.080 --> 00:06:41.090 align:start position:0%
pretty easy and how many bits are in
 

00:06:41.090 --> 00:06:43.899 align:start position:0%
pretty easy and how many bits are in
each<00:06:41.210><c> box</c><00:06:41.449><c> zero</c><00:06:42.169><c> just</c><00:06:42.949><c> no</c><00:06:43.099><c> strings</c><00:06:43.370><c> no</c><00:06:43.699><c> T's</c>

00:06:43.899 --> 00:06:43.909 align:start position:0%
each box zero just no strings no T's
 

00:06:43.909 --> 00:06:45.939 align:start position:0%
each box zero just no strings no T's
name<00:06:44.169><c> and</c><00:06:45.169><c> you</c><00:06:45.259><c> might</c><00:06:45.379><c> have</c><00:06:45.469><c> managed</c><00:06:45.650><c> try</c><00:06:45.830><c> and</c>

00:06:45.939 --> 00:06:45.949 align:start position:0%
name and you might have managed try and
 

00:06:45.949 --> 00:06:47.230 align:start position:0%
name and you might have managed try and
guess<00:06:46.069><c> what</c><00:06:46.280><c> the</c><00:06:46.370><c> default</c><00:06:46.520><c> value</c><00:06:46.969><c> will</c><00:06:47.090><c> be</c>

00:06:47.230 --> 00:06:47.240 align:start position:0%
guess what the default value will be
 

00:06:47.240 --> 00:06:49.989 align:start position:0%
guess what the default value will be
okay<00:06:47.659><c> well</c><00:06:47.900><c> I'll</c><00:06:48.080><c> spoil</c><00:06:48.439><c> it</c><00:06:48.650><c> for</c><00:06:48.680><c> you</c><00:06:48.909><c> what</c><00:06:49.909><c> you</c>

00:06:49.989 --> 00:06:49.999 align:start position:0%
okay well I'll spoil it for you what you
 

00:06:49.999 --> 00:06:52.149 align:start position:0%
okay well I'll spoil it for you what you
get<00:06:50.120><c> is</c><00:06:50.270><c> six</c><00:06:50.539><c> boxes</c><00:06:50.749><c> and</c><00:06:51.080><c> each</c><00:06:51.199><c> one</c><00:06:51.409><c> 64</c><00:06:51.949><c> bits</c>

00:06:52.149 --> 00:06:52.159 align:start position:0%
get is six boxes and each one 64 bits
 

00:06:52.159 --> 00:06:54.640 align:start position:0%
get is six boxes and each one 64 bits
and<00:06:52.370><c> each</c><00:06:52.819><c> one</c><00:06:53.029><c> can</c><00:06:53.210><c> hold</c><00:06:53.389><c> what</c><00:06:53.659><c> okay</c><00:06:54.139><c> I</c><00:06:54.379><c> want</c>

00:06:54.640 --> 00:06:54.650 align:start position:0%
and each one can hold what okay I want
 

00:06:54.650 --> 00:06:55.800 align:start position:0%
and each one can hold what okay I want
you<00:06:54.710><c> to</c><00:06:54.800><c> answer</c><00:06:54.949><c> that</c><00:06:55.129><c> question</c><00:06:55.460><c> to</c><00:06:55.550><c> yourself</c>

00:06:55.800 --> 00:06:55.810 align:start position:0%
you to answer that question to yourself
 

00:06:55.810 --> 00:06:57.730 align:start position:0%
you to answer that question to yourself
awkwardly<00:06:56.810><c> I</c><00:06:57.020><c> don't</c><00:06:57.199><c> care</c><00:06:57.289><c> if</c><00:06:57.349><c> your</c><00:06:57.499><c> roommates</c>

00:06:57.730 --> 00:06:57.740 align:start position:0%
awkwardly I don't care if your roommates
 

00:06:57.740 --> 00:06:59.050 align:start position:0%
awkwardly I don't care if your roommates
watching<00:06:58.099><c> you</c><00:06:58.189><c> whatever</c><00:06:58.669><c> and</c><00:06:58.819><c> you're</c><00:06:58.909><c> having</c>

00:06:59.050 --> 00:06:59.060 align:start position:0%
watching you whatever and you're having
 

00:06:59.060 --> 00:07:00.279 align:start position:0%
watching you whatever and you're having
earbuds<00:06:59.419><c> on</c><00:06:59.599><c> you're</c><00:06:59.749><c> just</c><00:06:59.840><c> going</c><00:07:00.020><c> to</c><00:07:00.050><c> say</c><00:07:00.199><c> out</c>

00:07:00.279 --> 00:07:00.289 align:start position:0%
earbuds on you're just going to say out
 

00:07:00.289 --> 00:07:01.179 align:start position:0%
earbuds on you're just going to say out
loud<00:07:00.319><c> your</c><00:07:00.650><c> answer</c><00:07:00.949><c> and</c><00:07:01.069><c> they'll</c><00:07:01.159><c> think</c>

00:07:01.179 --> 00:07:01.189 align:start position:0%
loud your answer and they'll think
 

00:07:01.189 --> 00:07:01.779 align:start position:0%
loud your answer and they'll think
you're<00:07:01.430><c> weird</c>

00:07:01.779 --> 00:07:01.789 align:start position:0%
you're weird
 

00:07:01.789 --> 00:07:04.239 align:start position:0%
you're weird
okay<00:07:02.539><c> string</c><00:07:02.870><c> references</c><00:07:03.349><c> that's</c><00:07:03.560><c> correct</c><00:07:04.009><c> or</c>

00:07:04.239 --> 00:07:04.249 align:start position:0%
okay string references that's correct or
 

00:07:04.249 --> 00:07:06.640 align:start position:0%
okay string references that's correct or
not<00:07:04.279><c> correct</c><00:07:04.400><c> if</c><00:07:04.789><c> anymore</c><00:07:05.150><c> you</c><00:07:05.240><c> said</c><00:07:05.529><c> so</c><00:07:06.529><c> what</c>

00:07:06.640 --> 00:07:06.650 align:start position:0%
not correct if anymore you said so what
 

00:07:06.650 --> 00:07:09.219 align:start position:0%
not correct if anymore you said so what
we<00:07:06.740><c> got</c><00:07:06.889><c> here</c><00:07:07.069><c> now</c><00:07:07.279><c> is</c><00:07:07.490><c> six</c><00:07:07.939><c> boxes</c><00:07:08.300><c> 64</c><00:07:09.020><c> bits</c>

00:07:09.219 --> 00:07:09.229 align:start position:0%
we got here now is six boxes 64 bits
 

00:07:09.229 --> 00:07:10.929 align:start position:0%
we got here now is six boxes 64 bits
each<00:07:09.379><c> they</c><00:07:09.620><c> hold</c><00:07:09.800><c> string</c><00:07:10.069><c> references</c><00:07:10.580><c> and</c><00:07:10.759><c> the</c>

00:07:10.929 --> 00:07:10.939 align:start position:0%
each they hold string references and the
 

00:07:10.939 --> 00:07:12.790 align:start position:0%
each they hold string references and the
default<00:07:11.300><c> value</c><00:07:11.389><c> of</c><00:07:11.689><c> all</c><00:07:11.870><c> zeroes</c><00:07:12.259><c> which</c><00:07:12.650><c> is</c>

00:07:12.790 --> 00:07:12.800 align:start position:0%
default value of all zeroes which is
 

00:07:12.800 --> 00:07:16.360 align:start position:0%
default value of all zeroes which is
null<00:07:12.979><c> then</c><00:07:13.689><c> we</c><00:07:14.689><c> go</c><00:07:14.930><c> to</c><00:07:14.990><c> the</c><00:07:15.139><c> box</c><00:07:15.349><c> and</c><00:07:15.560><c> we</c><00:07:15.650><c> say</c><00:07:15.889><c> we</c>

00:07:16.360 --> 00:07:16.370 align:start position:0%
null then we go to the box and we say we
 

00:07:16.370 --> 00:07:19.119 align:start position:0%
null then we go to the box and we say we
go<00:07:16.490><c> to</c><00:07:16.550><c> box</c><00:07:16.759><c> for</c><00:07:17.120><c> of</c><00:07:17.330><c> this</c><00:07:17.689><c> array</c><00:07:17.960><c> ok</c><00:07:18.830><c> so</c><00:07:18.889><c> s</c>

00:07:19.119 --> 00:07:19.129 align:start position:0%
go to box for of this array ok so s
 

00:07:19.129 --> 00:07:21.550 align:start position:0%
go to box for of this array ok so s
points<00:07:19.789><c> up</c><00:07:19.909><c> this</c><00:07:20.029><c> whole</c><00:07:20.210><c> thing</c><00:07:20.449><c> we</c><00:07:20.870><c> say</c><00:07:21.080><c> go</c><00:07:21.259><c> 4</c>

00:07:21.550 --> 00:07:21.560 align:start position:0%
points up this whole thing we say go 4
 

00:07:21.560 --> 00:07:23.830 align:start position:0%
points up this whole thing we say go 4
slots<00:07:21.860><c> over</c><00:07:22.099><c> and</c><00:07:22.430><c> now</c><00:07:23.120><c> are</c><00:07:23.300><c> waiting</c><00:07:23.659><c> and</c>

00:07:23.830 --> 00:07:23.840 align:start position:0%
slots over and now are waiting and
 

00:07:23.840 --> 00:07:25.779 align:start position:0%
slots over and now are waiting and
looking<00:07:24.080><c> at</c><00:07:24.349><c> these</c><00:07:24.469><c> 64</c><00:07:24.979><c> bits</c><00:07:25.189><c> and</c><00:07:25.520><c> we're</c><00:07:25.639><c> going</c>

00:07:25.779 --> 00:07:25.789 align:start position:0%
looking at these 64 bits and we're going
 

00:07:25.789 --> 00:07:27.850 align:start position:0%
looking at these 64 bits and we're going
to<00:07:25.879><c> assign</c><00:07:26.150><c> them</c><00:07:26.389><c> to</c><00:07:26.539><c> catch</c><00:07:26.719><c> up</c><00:07:26.750><c> what</c><00:07:27.560><c> it</c><00:07:27.650><c> catch</c>

00:07:27.850 --> 00:07:27.860 align:start position:0%
to assign them to catch up what it catch
 

00:07:27.860 --> 00:07:28.149 align:start position:0%
to assign them to catch up what it catch
up

00:07:28.149 --> 00:07:28.159 align:start position:0%
up
 

00:07:28.159 --> 00:07:30.820 align:start position:0%
up
well<00:07:28.909><c> this</c><00:07:29.120><c> is</c><00:07:29.360><c> we</c><00:07:29.900><c> saw</c><00:07:30.080><c> before</c><00:07:30.319><c> that</c><00:07:30.560><c> we</c><00:07:30.710><c> can</c>

00:07:30.820 --> 00:07:30.830 align:start position:0%
well this is we saw before that we can
 

00:07:30.830 --> 00:07:33.670 align:start position:0%
well this is we saw before that we can
instantiate<00:07:31.219><c> strings</c><00:07:31.939><c> with</c><00:07:32.360><c> quotes</c><00:07:32.750><c> so</c><00:07:33.589><c> in</c>

00:07:33.670 --> 00:07:33.680 align:start position:0%
instantiate strings with quotes so in
 

00:07:33.680 --> 00:07:35.499 align:start position:0%
instantiate strings with quotes so in
this<00:07:33.740><c> case</c><00:07:33.979><c> we</c><00:07:34.580><c> basically</c><00:07:35.060><c> called</c><00:07:35.300><c> new</c>

00:07:35.499 --> 00:07:35.509 align:start position:0%
this case we basically called new
 

00:07:35.509 --> 00:07:38.110 align:start position:0%
this case we basically called new
secretly<00:07:36.020><c> without</c><00:07:36.409><c> being</c><00:07:36.889><c> a</c><00:07:37.009><c> tease</c><00:07:37.669><c> without</c>

00:07:38.110 --> 00:07:38.120 align:start position:0%
secretly without being a tease without
 

00:07:38.120 --> 00:07:40.450 align:start position:0%
secretly without being a tease without
seeing<00:07:38.389><c> it</c><00:07:38.509><c> so</c><00:07:39.110><c> what</c><00:07:39.229><c> that</c><00:07:39.349><c> will</c><00:07:39.469><c> do</c><00:07:39.650><c> is</c><00:07:39.830><c> a</c><00:07:40.219><c> new</c>

00:07:40.450 --> 00:07:40.460 align:start position:0%
seeing it so what that will do is a new
 

00:07:40.460 --> 00:07:41.829 align:start position:0%
seeing it so what that will do is a new
string<00:07:40.699><c> as</c><00:07:40.819><c> creative</c><00:07:41.210><c> if</c><00:07:41.360><c> that</c><00:07:41.509><c> dress</c><00:07:41.659><c> is</c>

00:07:41.829 --> 00:07:41.839 align:start position:0%
string as creative if that dress is
 

00:07:41.839 --> 00:07:45.100 align:start position:0%
string as creative if that dress is
returned<00:07:42.169><c> in</c><00:07:42.409><c> our</c><00:07:42.650><c> arrow</c><00:07:42.830><c> point</c><00:07:43.240><c> okay</c><00:07:44.240><c> how</c>

00:07:45.100 --> 00:07:45.110 align:start position:0%
returned in our arrow point okay how
 

00:07:45.110 --> 00:07:47.230 align:start position:0%
returned in our arrow point okay how
about<00:07:45.139><c> this</c><00:07:45.349><c> line</c><00:07:45.589><c> so</c><00:07:46.550><c> I</c><00:07:46.580><c> think</c><00:07:46.699><c> that</c><00:07:47.029><c> if</c><00:07:47.120><c> you</c>

00:07:47.230 --> 00:07:47.240 align:start position:0%
about this line so I think that if you
 

00:07:47.240 --> 00:07:49.719 align:start position:0%
about this line so I think that if you
came<00:07:47.479><c> from</c><00:07:47.719><c> 61</c><00:07:48.259><c> 861</c><00:07:48.710><c> s</c><00:07:48.949><c> or</c><00:07:49.219><c> really</c><00:07:49.580><c> any</c>

00:07:49.719 --> 00:07:49.729 align:start position:0%
came from 61 861 s or really any
 

00:07:49.729 --> 00:07:52.029 align:start position:0%
came from 61 861 s or really any
programming<00:07:50.240><c> course</c><00:07:50.449><c> this</c><00:07:50.779><c> I</c><00:07:51.020><c> hope</c><00:07:51.379><c> you</c><00:07:51.830><c> can</c>

00:07:52.029 --> 00:07:52.039 align:start position:0%
programming course this I hope you can
 

00:07:52.039 --> 00:07:53.619 align:start position:0%
programming course this I hope you can
figure<00:07:52.219><c> out</c><00:07:52.339><c> ok</c><00:07:52.909><c> so</c><00:07:52.939><c> trying</c><00:07:53.360><c> to</c><00:07:53.449><c> figure</c><00:07:53.599><c> out</c>

00:07:53.619 --> 00:07:53.629 align:start position:0%
figure out ok so trying to figure out
 

00:07:53.629 --> 00:07:55.899 align:start position:0%
figure out ok so trying to figure out
what's<00:07:53.839><c> going</c><00:07:53.960><c> to</c><00:07:54.020><c> happen</c><00:07:54.319><c> for</c><00:07:54.469><c> this</c><00:07:54.560><c> one</c><00:07:54.879><c> okay</c>

00:07:55.899 --> 00:07:55.909 align:start position:0%
what's going to happen for this one okay
 

00:07:55.909 --> 00:07:58.899 align:start position:0%
what's going to happen for this one okay
so<00:07:56.599><c> Java</c><00:07:56.930><c> what</c><00:07:57.379><c> it</c><00:07:57.500><c> will</c><00:07:57.620><c> do</c><00:07:57.770><c> is</c><00:07:58.039><c> this</c><00:07:58.580><c> is</c><00:07:58.729><c> not</c><00:07:58.879><c> a</c>

00:07:58.899 --> 00:07:58.909 align:start position:0%
so Java what it will do is this is not a
 

00:07:58.909 --> 00:08:00.939 align:start position:0%
so Java what it will do is this is not a
value<00:07:59.149><c> it's</c><00:07:59.870><c> going</c><00:08:00.080><c> to</c><00:08:00.169><c> evaluate</c><00:08:00.439><c> each</c><00:08:00.919><c> of</c>

00:08:00.939 --> 00:08:00.949 align:start position:0%
value it's going to evaluate each of
 

00:08:00.949 --> 00:08:02.529 align:start position:0%
value it's going to evaluate each of
these<00:08:01.250><c> things</c><00:08:01.520><c> it</c><00:08:01.699><c> needs</c><00:08:01.849><c> to</c><00:08:02.000><c> compute</c><00:08:02.389><c> this</c>

00:08:02.529 --> 00:08:02.539 align:start position:0%
these things it needs to compute this
 

00:08:02.539 --> 00:08:04.809 align:start position:0%
these things it needs to compute this
difference<00:08:03.319><c> so</c><00:08:04.159><c> it's</c><00:08:04.250><c> first</c><00:08:04.430><c> going</c><00:08:04.580><c> to</c><00:08:04.610><c> go</c><00:08:04.669><c> to</c>

00:08:04.809 --> 00:08:04.819 align:start position:0%
difference so it's first going to go to
 

00:08:04.819 --> 00:08:11.379 align:start position:0%
difference so it's first going to go to
X<00:08:04.969><c> 3</c><00:08:05.319><c> to</c><00:08:06.319><c> 4</c><00:08:07.189><c> x</c><00:08:07.759><c> 1</c><00:08:08.379><c> to</c><00:08:09.379><c> 2</c><00:08:10.189><c> that's</c><00:08:10.849><c> going</c><00:08:10.969><c> to</c><00:08:11.029><c> say</c><00:08:11.089><c> 4</c>

00:08:11.379 --> 00:08:11.389 align:start position:0%
X 3 to 4 x 1 to 2 that's going to say 4
 

00:08:11.389 --> 00:08:15.129 align:start position:0%
X 3 to 4 x 1 to 2 that's going to say 4
minus<00:08:11.719><c> 2</c><00:08:11.899><c> is</c><00:08:11.930><c> 2</c><00:08:12.520><c> so</c><00:08:13.520><c> it'll</c><00:08:13.639><c> go</c><00:08:13.759><c> to</c><00:08:13.819><c> s</c><00:08:14.000><c> 2</c><00:08:14.330><c> and</c><00:08:14.539><c> it</c>

00:08:15.129 --> 00:08:15.139 align:start position:0%
minus 2 is 2 so it'll go to s 2 and it
 

00:08:15.139 --> 00:08:16.869 align:start position:0%
minus 2 is 2 so it'll go to s 2 and it
will<00:08:15.199><c> set</c><00:08:15.409><c> this</c><00:08:15.560><c> equal</c><00:08:15.860><c> to</c><00:08:15.919><c> the</c><00:08:16.250><c> address</c><00:08:16.639><c> of</c><00:08:16.789><c> a</c>

00:08:16.869 --> 00:08:16.879 align:start position:0%
will set this equal to the address of a
 

00:08:16.879 --> 00:08:19.990 align:start position:0%
will set this equal to the address of a
new<00:08:17.000><c> string</c><00:08:17.270><c> Muppet</c><00:08:18.580><c> next</c><00:08:19.580><c> we'll</c><00:08:19.669><c> create</c><00:08:19.789><c> an</c>

00:08:19.990 --> 00:08:20.000 align:start position:0%
new string Muppet next we'll create an
 

00:08:20.000 --> 00:08:21.459 align:start position:0%
new string Muppet next we'll create an
int<00:08:20.149><c> array</c><00:08:20.270><c> B</c><00:08:20.659><c> now</c><00:08:20.990><c> it's</c><00:08:21.169><c> not</c><00:08:21.289><c> very</c>

00:08:21.459 --> 00:08:21.469 align:start position:0%
int array B now it's not very
 

00:08:21.469 --> 00:08:22.779 align:start position:0%
int array B now it's not very
interesting<00:08:21.710><c> it's</c><00:08:22.069><c> just</c><00:08:22.129><c> the</c><00:08:22.370><c> same</c><00:08:22.520><c> as</c><00:08:22.550><c> we've</c>

00:08:22.779 --> 00:08:22.789 align:start position:0%
interesting it's just the same as we've
 

00:08:22.789 --> 00:08:25.029 align:start position:0%
interesting it's just the same as we've
done<00:08:22.909><c> before</c><00:08:23.110><c> but</c><00:08:24.110><c> now</c><00:08:24.229><c> I</c><00:08:24.259><c> have</c><00:08:24.500><c> this</c><00:08:24.649><c> extra</c>

00:08:25.029 --> 00:08:25.039 align:start position:0%
done before but now I have this extra
 

00:08:25.039 --> 00:08:27.219 align:start position:0%
done before but now I have this extra
little<00:08:25.069><c> call</c><00:08:25.430><c> systems</c><00:08:26.029><c> array</c><00:08:26.479><c> copy</c><00:08:26.689><c> I'll</c><00:08:27.020><c> be</c>

00:08:27.219 --> 00:08:27.229 align:start position:0%
little call systems array copy I'll be
 

00:08:27.229 --> 00:08:29.469 align:start position:0%
little call systems array copy I'll be
explaining<00:08:27.589><c> in</c><00:08:27.860><c> just</c><00:08:28.009><c> a</c><00:08:28.099><c> moment</c><00:08:28.430><c> so</c><00:08:29.360><c> what</c>

00:08:29.469 --> 00:08:29.479 align:start position:0%
explaining in just a moment so what
 

00:08:29.479 --> 00:08:31.420 align:start position:0%
explaining in just a moment so what
systems<00:08:29.810><c> that</c><00:08:29.899><c> array</c><00:08:30.080><c> copy</c><00:08:30.259><c> does</c><00:08:30.979><c> though</c><00:08:31.219><c> is</c>

00:08:31.420 --> 00:08:31.430 align:start position:0%
systems that array copy does though is
 

00:08:31.430 --> 00:08:35.560 align:start position:0%
systems that array copy does though is
it<00:08:31.789><c> copies</c><00:08:32.060><c> from</c><00:08:32.599><c> array</c><00:08:32.959><c> B</c><00:08:33.199><c> to</c><00:08:33.860><c> array</c><00:08:34.159><c> X</c><00:08:34.449><c> and</c><00:08:35.449><c> it</c>

00:08:35.560 --> 00:08:35.570 align:start position:0%
it copies from array B to array X and it
 

00:08:35.570 --> 00:08:38.469 align:start position:0%
it copies from array B to array X and it
starts<00:08:36.019><c> at</c><00:08:36.169><c> position</c><00:08:36.320><c> 0</c><00:08:36.890><c> of</c><00:08:37.099><c> B</c><00:08:37.310><c> and</c><00:08:37.550><c> it</c><00:08:38.149><c> copies</c>

00:08:38.469 --> 00:08:38.479 align:start position:0%
starts at position 0 of B and it copies
 

00:08:38.479 --> 00:08:41.589 align:start position:0%
starts at position 0 of B and it copies
to<00:08:38.779><c> position</c><00:08:39.320><c> 3</c><00:08:39.740><c> of</c><00:08:40.010><c> X</c><00:08:40.610><c> and</c><00:08:40.909><c> I</c><00:08:41.269><c> find</c><00:08:41.479><c> this</c>

00:08:41.589 --> 00:08:41.599 align:start position:0%
to position 3 of X and I find this
 

00:08:41.599 --> 00:08:42.819 align:start position:0%
to position 3 of X and I find this
syntax<00:08:41.899><c> a</c><00:08:42.050><c> little</c><00:08:42.260><c> hard</c><00:08:42.380><c> to</c><00:08:42.469><c> remember</c><00:08:42.529><c> I</c>

00:08:42.819 --> 00:08:42.829 align:start position:0%
syntax a little hard to remember I
 

00:08:42.829 --> 00:08:44.560 align:start position:0%
syntax a little hard to remember I
always<00:08:43.310><c> have</c><00:08:43.430><c> to</c><00:08:43.519><c> read</c><00:08:43.669><c> look</c><00:08:44.089><c> it</c><00:08:44.240><c> up</c><00:08:44.300><c> every</c>

00:08:44.560 --> 00:08:44.570 align:start position:0%
always have to read look it up every
 

00:08:44.570 --> 00:08:46.660 align:start position:0%
always have to read look it up every
semester<00:08:44.870><c> but</c><00:08:45.709><c> basically</c><00:08:46.010><c> it</c><00:08:46.190><c> come</c><00:08:46.339><c> and</c><00:08:46.519><c> it's</c>

00:08:46.660 --> 00:08:46.670 align:start position:0%
semester but basically it come and it's
 

00:08:46.670 --> 00:08:48.309 align:start position:0%
semester but basically it come and it's
going<00:08:46.760><c> to</c><00:08:46.850><c> copy</c><00:08:47.000><c> two</c><00:08:47.300><c> of</c><00:08:47.449><c> those</c><00:08:47.569><c> numbers</c><00:08:47.959><c> in</c>

00:08:48.309 --> 00:08:48.319 align:start position:0%
going to copy two of those numbers in
 

00:08:48.319 --> 00:08:51.490 align:start position:0%
going to copy two of those numbers in
other<00:08:48.440><c> words</c><00:08:48.620><c> starting</c><00:08:49.130><c> from</c><00:08:49.399><c> 0</c><00:08:49.699><c> of</c><00:08:49.970><c> be</c><00:08:50.500><c> going</c>

00:08:51.490 --> 00:08:51.500 align:start position:0%
other words starting from 0 of be going
 

00:08:51.500 --> 00:08:52.750 align:start position:0%
other words starting from 0 of be going
to<00:08:51.680><c> slots</c><00:08:52.010><c> over</c>

00:08:52.750 --> 00:08:52.760 align:start position:0%
to slots over
 

00:08:52.760 --> 00:08:54.010 align:start position:0%
to slots over
these<00:08:52.940><c> are</c><00:08:53.030><c> the</c><00:08:53.090><c> ones</c><00:08:53.240><c> I</c><00:08:53.300><c> want</c><00:08:53.450><c> to</c><00:08:53.480><c> copy</c><00:08:53.660><c> I'm</c>

00:08:54.010 --> 00:08:54.020 align:start position:0%
these are the ones I want to copy I'm
 

00:08:54.020 --> 00:08:56.560 align:start position:0%
these are the ones I want to copy I'm
going<00:08:54.530><c> to</c><00:08:54.590><c> go</c><00:08:54.830><c> to</c><00:08:54.890><c> this</c><00:08:55.520><c> location</c><00:08:55.730><c> and</c><00:08:56.330><c> copy</c>

00:08:56.560 --> 00:08:56.570 align:start position:0%
going to go to this location and copy
 

00:08:56.570 --> 00:08:58.870 align:start position:0%
going to go to this location and copy
them<00:08:56.840><c> here</c><00:08:57.050><c> after</c><00:08:57.800><c> it</c><00:08:57.890><c> on</c><00:08:58.010><c> that</c><00:08:58.220><c> you'll</c><00:08:58.700><c> see</c>

00:08:58.870 --> 00:08:58.880 align:start position:0%
them here after it on that you'll see
 

00:08:58.880 --> 00:09:01.690 align:start position:0%
them here after it on that you'll see
nine<00:08:59.060><c> ten</c><00:08:59.330><c> appear</c><00:08:59.660><c> up</c><00:08:59.960><c> there</c><00:09:00.170><c> okay</c><00:09:00.740><c> so</c><00:09:01.490><c> that's</c>

00:09:01.690 --> 00:09:01.700 align:start position:0%
nine ten appear up there okay so that's
 

00:09:01.700 --> 00:09:03.900 align:start position:0%
nine ten appear up there okay so that's
basic<00:09:02.120><c> array</c><00:09:02.480><c> okay</c>

00:09:03.900 --> 00:09:03.910 align:start position:0%
basic array okay
 

00:09:03.910 --> 00:09:06.160 align:start position:0%
basic array okay
let's<00:09:04.910><c> talk</c><00:09:05.090><c> a</c><00:09:05.120><c> little</c><00:09:05.240><c> bit</c><00:09:05.480><c> more</c><00:09:05.720><c> about</c><00:09:05.870><c> array</c>

00:09:06.160 --> 00:09:06.170 align:start position:0%
let's talk a little bit more about array
 

00:09:06.170 --> 00:09:09.100 align:start position:0%
let's talk a little bit more about array
copy<00:09:07.060><c> so</c><00:09:08.060><c> actually</c><00:09:08.510><c> the</c><00:09:08.570><c> first</c><00:09:08.720><c> question</c><00:09:09.020><c> we</c>

00:09:09.100 --> 00:09:09.110 align:start position:0%
copy so actually the first question we
 

00:09:09.110 --> 00:09:10.810 align:start position:0%
copy so actually the first question we
ask<00:09:09.260><c> ourselves</c><00:09:09.410><c> is</c><00:09:09.860><c> why</c><00:09:10.190><c> would</c><00:09:10.400><c> we</c><00:09:10.430><c> ever</c><00:09:10.550><c> want</c>

00:09:10.810 --> 00:09:10.820 align:start position:0%
ask ourselves is why would we ever want
 

00:09:10.820 --> 00:09:13.420 align:start position:0%
ask ourselves is why would we ever want
to<00:09:11.030><c> make</c><00:09:11.240><c> a</c><00:09:11.270><c> copy</c><00:09:11.480><c> of</c><00:09:11.720><c> an</c><00:09:11.810><c> array</c><00:09:12.250><c> what's</c><00:09:13.250><c> not</c>

00:09:13.420 --> 00:09:13.430 align:start position:0%
to make a copy of an array what's not
 

00:09:13.430 --> 00:09:15.850 align:start position:0%
to make a copy of an array what's not
enough<00:09:13.730><c> just</c><00:09:14.030><c> to</c><00:09:14.150><c> say</c><00:09:14.240><c> for</c><00:09:14.600><c> example</c><00:09:14.990><c> y</c><00:09:15.410><c> equals</c>

00:09:15.850 --> 00:09:15.860 align:start position:0%
enough just to say for example y equals
 

00:09:15.860 --> 00:09:18.400 align:start position:0%
enough just to say for example y equals
x<00:09:16.100><c> right</c><00:09:16.460><c> this</c><00:09:16.730><c> just</c><00:09:17.060><c> says</c><00:09:17.270><c> I'm</c><00:09:17.450><c> copying</c><00:09:18.140><c> the</c>

00:09:18.400 --> 00:09:18.410 align:start position:0%
x right this just says I'm copying the
 

00:09:18.410 --> 00:09:20.950 align:start position:0%
x right this just says I'm copying the
address<00:09:18.980><c> of</c><00:09:19.250><c> an</c><00:09:19.760><c> array</c><00:09:20.000><c> from</c><00:09:20.330><c> one</c><00:09:20.510><c> variable</c><00:09:20.870><c> to</c>

00:09:20.950 --> 00:09:20.960 align:start position:0%
address of an array from one variable to
 

00:09:20.960 --> 00:09:22.900 align:start position:0%
address of an array from one variable to
another<00:09:21.080><c> this</c><00:09:21.410><c> is</c><00:09:21.590><c> two</c><00:09:21.830><c> references</c><00:09:22.610><c> to</c><00:09:22.790><c> the</c>

00:09:22.900 --> 00:09:22.910 align:start position:0%
another this is two references to the
 

00:09:22.910 --> 00:09:25.930 align:start position:0%
another this is two references to the
same<00:09:23.090><c> array</c><00:09:24.190><c> similarly</c><00:09:25.190><c> suppose</c><00:09:25.610><c> we're</c>

00:09:25.930 --> 00:09:25.940 align:start position:0%
same array similarly suppose we're
 

00:09:25.940 --> 00:09:28.470 align:start position:0%
same array similarly suppose we're
trying<00:09:26.150><c> to</c><00:09:26.240><c> write</c><00:09:26.390><c> a</c><00:09:26.420><c> non-destructive</c>

00:09:28.470 --> 00:09:28.480 align:start position:0%
trying to write a non-destructive
 

00:09:28.480 --> 00:09:31.390 align:start position:0%
trying to write a non-destructive
array<00:09:29.480><c> function</c><00:09:30.050><c> that</c><00:09:30.410><c> takes</c><00:09:30.620><c> an</c><00:09:30.860><c> array</c><00:09:30.980><c> and</c>

00:09:31.390 --> 00:09:31.400 align:start position:0%
array function that takes an array and
 

00:09:31.400 --> 00:09:33.870 align:start position:0%
array function that takes an array and
say<00:09:31.700><c> squares</c><00:09:32.510><c> each</c><00:09:32.810><c> of</c><00:09:32.960><c> its</c><00:09:33.050><c> elements</c><00:09:33.200><c> okay</c>

00:09:33.870 --> 00:09:33.880 align:start position:0%
say squares each of its elements okay
 

00:09:33.880 --> 00:09:36.370 align:start position:0%
say squares each of its elements okay
one<00:09:34.880><c> of</c><00:09:34.910><c> you</c><00:09:35.150><c> give</c><00:09:35.390><c> that</c><00:09:35.600><c> function</c><00:09:36.050><c> an</c><00:09:36.140><c> array</c>

00:09:36.370 --> 00:09:36.380 align:start position:0%
one of you give that function an array
 

00:09:36.380 --> 00:09:39.130 align:start position:0%
one of you give that function an array
reference<00:09:36.860><c> it</c><00:09:37.040><c> gets</c><00:09:37.460><c> an</c><00:09:37.610><c> actual</c><00:09:38.090><c> reference</c><00:09:38.930><c> to</c>

00:09:39.130 --> 00:09:39.140 align:start position:0%
reference it gets an actual reference to
 

00:09:39.140 --> 00:09:40.780 align:start position:0%
reference it gets an actual reference to
your<00:09:39.320><c> original</c><00:09:39.440><c> array</c><00:09:39.890><c> okay</c><00:09:40.370><c> so</c><00:09:40.460><c> I</c><00:09:40.580><c> have</c><00:09:40.760><c> a</c>

00:09:40.780 --> 00:09:40.790 align:start position:0%
your original array okay so I have a
 

00:09:40.790 --> 00:09:43.210 align:start position:0%
your original array okay so I have a
main<00:09:41.060><c> you</c><00:09:41.390><c> know</c><00:09:41.770><c> financial</c><00:09:42.770><c> tax</c><00:09:42.980><c> software</c>

00:09:43.210 --> 00:09:43.220 align:start position:0%
main you know financial tax software
 

00:09:43.220 --> 00:09:45.640 align:start position:0%
main you know financial tax software
dadadada<00:09:44.240><c> square</c><00:09:44.840><c> I</c><00:09:45.110><c> don't</c><00:09:45.500><c> why</c><00:09:45.560><c> you're</c>

00:09:45.640 --> 00:09:45.650 align:start position:0%
dadadada square I don't why you're
 

00:09:45.650 --> 00:09:46.870 align:start position:0%
dadadada square I don't why you're
squaring<00:09:45.920><c> numbers</c><00:09:46.040><c> in</c><00:09:46.310><c> tax</c><00:09:46.490><c> software</c>

00:09:46.870 --> 00:09:46.880 align:start position:0%
squaring numbers in tax software
 

00:09:46.880 --> 00:09:49.150 align:start position:0%
squaring numbers in tax software
okay<00:09:47.090><c> I</c><00:09:47.270><c> give</c><00:09:47.840><c> off</c><00:09:48.050><c> the</c><00:09:48.410><c> give</c><00:09:48.710><c> my</c><00:09:48.890><c> precious</c>

00:09:49.150 --> 00:09:49.160 align:start position:0%
okay I give off the give my precious
 

00:09:49.160 --> 00:09:51.310 align:start position:0%
okay I give off the give my precious
array<00:09:49.610><c> me</c><00:09:49.880><c> to</c><00:09:50.360><c> someone</c><00:09:50.630><c> else</c><00:09:50.810><c> to</c><00:09:51.020><c> go</c><00:09:51.140><c> do</c>

00:09:51.310 --> 00:09:51.320 align:start position:0%
array me to someone else to go do
 

00:09:51.320 --> 00:09:52.750 align:start position:0%
array me to someone else to go do
squaring<00:09:51.740><c> and</c><00:09:51.890><c> they</c><00:09:51.950><c> claim</c><00:09:52.190><c> to</c><00:09:52.220><c> be</c><00:09:52.400><c> doing</c><00:09:52.550><c> it</c>

00:09:52.750 --> 00:09:52.760 align:start position:0%
squaring and they claim to be doing it
 

00:09:52.760 --> 00:09:55.390 align:start position:0%
squaring and they claim to be doing it
non-destructively<00:09:53.350><c> they</c><00:09:54.350><c> better</c><00:09:54.770><c> have</c><00:09:55.130><c> some</c>

00:09:55.390 --> 00:09:55.400 align:start position:0%
non-destructively they better have some
 

00:09:55.400 --> 00:09:56.860 align:start position:0%
non-destructively they better have some
way<00:09:55.550><c> to</c><00:09:55.580><c> make</c><00:09:55.760><c> a</c><00:09:55.820><c> copy</c><00:09:56.060><c> of</c><00:09:56.240><c> it</c><00:09:56.330><c> array</c><00:09:56.510><c> otherwise</c>

00:09:56.860 --> 00:09:56.870 align:start position:0%
way to make a copy of it array otherwise
 

00:09:56.870 --> 00:09:59.380 align:start position:0%
way to make a copy of it array otherwise
they're<00:09:57.080><c> breaking</c><00:09:57.410><c> my</c><00:09:57.440><c> array</c><00:09:57.860><c> okay</c><00:09:58.520><c> it</c>

00:09:59.380 --> 00:09:59.390 align:start position:0%
they're breaking my array okay it
 

00:09:59.390 --> 00:10:01.420 align:start position:0%
they're breaking my array okay it
doesn't<00:09:59.630><c> non-destructive</c><00:10:00.200><c> interview</c><00:10:00.560><c> so</c>

00:10:01.420 --> 00:10:01.430 align:start position:0%
doesn't non-destructive interview so
 

00:10:01.430 --> 00:10:03.700 align:start position:0%
doesn't non-destructive interview so
there's<00:10:01.550><c> two</c><00:10:01.700><c> ways</c><00:10:01.910><c> to</c><00:10:01.940><c> make</c><00:10:02.270><c> it</c><00:10:02.420><c> hoppy</c><00:10:02.600><c> one</c><00:10:03.590><c> is</c>

00:10:03.700 --> 00:10:03.710 align:start position:0%
there's two ways to make it hoppy one is
 

00:10:03.710 --> 00:10:05.320 align:start position:0%
there's two ways to make it hoppy one is
do<00:10:03.860><c> an</c><00:10:03.980><c> item-by-item</c><00:10:04.250><c> copy</c><00:10:04.850><c> just</c><00:10:05.120><c> write</c><00:10:05.300><c> a</c>

00:10:05.320 --> 00:10:05.330 align:start position:0%
do an item-by-item copy just write a
 

00:10:05.330 --> 00:10:07.930 align:start position:0%
do an item-by-item copy just write a
loop<00:10:05.480><c> and</c><00:10:05.780><c> while</c><00:10:06.650><c> I</c><00:10:06.890><c> is</c><00:10:07.010><c> less</c><00:10:07.250><c> than</c><00:10:07.460><c> X</c><00:10:07.760><c> dot</c>

00:10:07.930 --> 00:10:07.940 align:start position:0%
loop and while I is less than X dot
 

00:10:07.940 --> 00:10:11.680 align:start position:0%
loop and while I is less than X dot
length<00:10:08.120><c> Y</c><00:10:08.780><c> of</c><00:10:08.960><c> I</c><00:10:09.080><c> equals</c><00:10:09.620><c> XY</c><00:10:10.630><c> now</c><00:10:11.630><c> the</c>

00:10:11.680 --> 00:10:11.690 align:start position:0%
length Y of I equals XY now the
 

00:10:11.690 --> 00:10:13.510 align:start position:0%
length Y of I equals XY now the
alternate<00:10:12.140><c> approach</c><00:10:12.380><c> is</c><00:10:12.590><c> to</c><00:10:12.740><c> use</c><00:10:12.770><c> array</c><00:10:13.250><c> copy</c>

00:10:13.510 --> 00:10:13.520 align:start position:0%
alternate approach is to use array copy
 

00:10:13.520 --> 00:10:16.960 align:start position:0%
alternate approach is to use array copy
and<00:10:13.930><c> this</c><00:10:14.930><c> function</c><00:10:15.170><c> takes</c><00:10:15.590><c> five</c><00:10:15.920><c> parameter</c>

00:10:16.960 --> 00:10:16.970 align:start position:0%
and this function takes five parameter
 

00:10:16.970 --> 00:10:19.180 align:start position:0%
and this function takes five parameter
so<00:10:17.570><c> when</c><00:10:17.660><c> I</c><00:10:17.720><c> see</c><00:10:17.900><c> system</c><00:10:18.320><c> dot</c><00:10:18.500><c> array</c><00:10:18.710><c> copy</c><00:10:18.980><c> it</c>

00:10:19.180 --> 00:10:19.190 align:start position:0%
so when I see system dot array copy it
 

00:10:19.190 --> 00:10:22.180 align:start position:0%
so when I see system dot array copy it
says<00:10:19.400><c> copy</c><00:10:19.880><c> from</c><00:10:20.210><c> the</c><00:10:20.450><c> array</c><00:10:20.690><c> B</c><00:10:21.100><c> starting</c><00:10:22.100><c> at</c>

00:10:22.180 --> 00:10:22.190 align:start position:0%
says copy from the array B starting at
 

00:10:22.190 --> 00:10:26.440 align:start position:0%
says copy from the array B starting at
index<00:10:22.550><c> zero</c><00:10:23.350><c> to</c><00:10:24.350><c> the</c><00:10:25.190><c> destination</c><00:10:26.030><c> array</c><00:10:26.240><c> X</c>

00:10:26.440 --> 00:10:26.450 align:start position:0%
index zero to the destination array X
 

00:10:26.450 --> 00:10:29.170 align:start position:0%
index zero to the destination array X
starting<00:10:27.260><c> at</c><00:10:27.380><c> X</c><00:10:27.620><c> s</c><00:10:27.830><c> position</c><00:10:28.040><c> three</c><00:10:28.550><c> and</c><00:10:28.760><c> by</c>

00:10:29.170 --> 00:10:29.180 align:start position:0%
starting at X s position three and by
 

00:10:29.180 --> 00:10:31.570 align:start position:0%
starting at X s position three and by
the<00:10:29.240><c> way</c><00:10:29.390><c> copy</c><00:10:29.600><c> two</c><00:10:29.840><c> of</c><00:10:29.960><c> this</c><00:10:30.140><c> okay</c><00:10:30.500><c> so</c><00:10:31.460><c> in</c>

00:10:31.570 --> 00:10:31.580 align:start position:0%
the way copy two of this okay so in
 

00:10:31.580 --> 00:10:33.730 align:start position:0%
the way copy two of this okay so in
slice<00:10:31.940><c> notation</c><00:10:32.570><c> if</c><00:10:32.690><c> you</c><00:10:32.780><c> know</c><00:10:32.990><c> Python</c><00:10:33.230><c> it</c>

00:10:33.730 --> 00:10:33.740 align:start position:0%
slice notation if you know Python it
 

00:10:33.740 --> 00:10:35.770 align:start position:0%
slice notation if you know Python it
would<00:10:33.860><c> be</c><00:10:33.950><c> something</c><00:10:34.190><c> like</c><00:10:34.400><c> this</c><00:10:34.940><c> right</c>

00:10:35.770 --> 00:10:35.780 align:start position:0%
would be something like this right
 

00:10:35.780 --> 00:10:37.810 align:start position:0%
would be something like this right
as<00:10:36.020><c> you've</c><00:10:36.200><c> never</c><00:10:36.320><c> seen</c><00:10:36.470><c> slice</c><00:10:36.860><c> notation</c><00:10:37.400><c> to</c>

00:10:37.810 --> 00:10:37.820 align:start position:0%
as you've never seen slice notation to
 

00:10:37.820 --> 00:10:41.110 align:start position:0%
as you've never seen slice notation to
operate<00:10:39.160><c> so</c><00:10:40.160><c> array</c><00:10:40.370><c> copy</c><00:10:40.580><c> what's</c><00:10:40.970><c> the</c>

00:10:41.110 --> 00:10:41.120 align:start position:0%
operate so array copy what's the
 

00:10:41.120 --> 00:10:43.000 align:start position:0%
operate so array copy what's the
advantage<00:10:41.510><c> of</c><00:10:41.810><c> using</c><00:10:42.110><c> it</c><00:10:42.440><c> versus</c><00:10:42.770><c> the</c><00:10:42.860><c> loop</c>

00:10:43.000 --> 00:10:43.010 align:start position:0%
advantage of using it versus the loop
 

00:10:43.010 --> 00:10:45.100 align:start position:0%
advantage of using it versus the loop
well<00:10:43.490><c> it's</c><00:10:44.180><c> probably</c><00:10:44.300><c> going</c><00:10:44.570><c> to</c><00:10:44.660><c> be</c><00:10:44.750><c> faster</c>

00:10:45.100 --> 00:10:45.110 align:start position:0%
well it's probably going to be faster
 

00:10:45.110 --> 00:10:46.900 align:start position:0%
well it's probably going to be faster
particularly<00:10:45.770><c> for</c><00:10:45.980><c> large</c><00:10:46.130><c> arrays</c><00:10:46.430><c> because</c>

00:10:46.900 --> 00:10:46.910 align:start position:0%
particularly for large arrays because
 

00:10:46.910 --> 00:10:48.820 align:start position:0%
particularly for large arrays because
the<00:10:47.450><c> Java</c><00:10:47.720><c> interpreter</c><00:10:47.870><c> is</c><00:10:48.260><c> closer</c><00:10:48.500><c> to</c><00:10:48.650><c> the</c>

00:10:48.820 --> 00:10:48.830 align:start position:0%
the Java interpreter is closer to the
 

00:10:48.830 --> 00:10:50.350 align:start position:0%
the Java interpreter is closer to the
hardware<00:10:49.130><c> so</c><00:10:49.460><c> it</c><00:10:49.490><c> can</c><00:10:49.640><c> take</c><00:10:49.820><c> advantages</c>

00:10:50.350 --> 00:10:50.360 align:start position:0%
hardware so it can take advantages
 

00:10:50.360 --> 00:10:52.330 align:start position:0%
hardware so it can take advantages
advantage<00:10:51.260><c> of</c><00:10:51.410><c> knowledge</c><00:10:51.740><c> about</c><00:10:51.860><c> how</c><00:10:51.980><c> things</c>

00:10:52.330 --> 00:10:52.340 align:start position:0%
advantage of knowledge about how things
 

00:10:52.340 --> 00:10:54.130 align:start position:0%
advantage of knowledge about how things
truly<00:10:52.520><c> works</c><00:10:52.880><c> that</c><00:10:53.120><c> you</c><00:10:53.330><c> as</c><00:10:53.780><c> a</c><00:10:53.840><c> Java</c>

00:10:54.130 --> 00:10:54.140 align:start position:0%
truly works that you as a Java
 

00:10:54.140 --> 00:10:57.430 align:start position:0%
truly works that you as a Java
programmer<00:10:54.590><c> cannot</c><00:10:55.900><c> the</c><00:10:56.900><c> other</c><00:10:56.990><c> reason</c><00:10:57.320><c> is</c>

00:10:57.430 --> 00:10:57.440 align:start position:0%
programmer cannot the other reason is
 

00:10:57.440 --> 00:10:59.740 align:start position:0%
programmer cannot the other reason is
the<00:10:57.680><c> code</c><00:10:57.860><c> is</c><00:10:58.070><c> a</c><00:10:58.100><c> bit</c><00:10:58.280><c> more</c><00:10:58.400><c> compact</c><00:10:58.790><c> and</c><00:10:59.090><c> if</c>

00:10:59.740 --> 00:10:59.750 align:start position:0%
the code is a bit more compact and if
 

00:10:59.750 --> 00:11:01.870 align:start position:0%
the code is a bit more compact and if
somebody<00:11:00.050><c> knows</c><00:11:00.320><c> what</c><00:11:00.560><c> this</c><00:11:00.710><c> means</c><00:11:01.010><c> it</c><00:11:01.640><c> can</c><00:11:01.790><c> be</c>

00:11:01.870 --> 00:11:01.880 align:start position:0%
somebody knows what this means it can be
 

00:11:01.880 --> 00:11:03.280 align:start position:0%
somebody knows what this means it can be
easier<00:11:02.210><c> to</c><00:11:02.330><c> read</c><00:11:02.510><c> than</c><00:11:02.690><c> looking</c><00:11:02.960><c> at</c><00:11:03.050><c> a</c><00:11:03.110><c> loop</c>

00:11:03.280 --> 00:11:03.290 align:start position:0%
easier to read than looking at a loop
 

00:11:03.290 --> 00:11:06.040 align:start position:0%
easier to read than looking at a loop
but<00:11:03.920><c> one</c><00:11:04.490><c> could</c><00:11:04.670><c> also</c><00:11:04.850><c> argue</c><00:11:04.970><c> it's</c><00:11:05.570><c> harder</c><00:11:05.810><c> to</c>

00:11:06.040 --> 00:11:06.050 align:start position:0%
but one could also argue it's harder to
 

00:11:06.050 --> 00:11:06.940 align:start position:0%
but one could also argue it's harder to
because<00:11:06.290><c> you</c><00:11:06.380><c> have</c><00:11:06.470><c> to</c><00:11:06.560><c> remember</c><00:11:06.800><c> what</c><00:11:06.920><c> all</c>

00:11:06.940 --> 00:11:06.950 align:start position:0%
because you have to remember what all
 

00:11:06.950 --> 00:11:09.009 align:start position:0%
because you have to remember what all
these<00:11:07.160><c> parameters</c><00:11:07.640><c> do</c><00:11:07.820><c> so</c><00:11:08.209><c> I'll</c><00:11:08.570><c> leave</c><00:11:08.810><c> it</c><00:11:08.930><c> to</c>

00:11:09.009 --> 00:11:09.019 align:start position:0%
these parameters do so I'll leave it to
 

00:11:09.019 --> 00:11:10.509 align:start position:0%
these parameters do so I'll leave it to
your<00:11:09.080><c> judgment</c><00:11:09.200><c> which</c><00:11:09.740><c> you</c><00:11:09.860><c> think</c><00:11:10.100><c> seems</c>

00:11:10.509 --> 00:11:10.519 align:start position:0%
your judgment which you think seems
 

00:11:10.519 --> 00:11:13.149 align:start position:0%
your judgment which you think seems
easier<00:11:10.910><c> dream</c>

