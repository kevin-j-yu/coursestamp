WEBVTT
Kind: captions
Language: en

00:00:00.140 --> 00:00:02.990 align:start position:0%
 
hi<00:00:01.140><c> there</c><00:00:01.410><c> been</c><00:00:01.920><c> a</c><00:00:01.949><c> while</c><00:00:02.220><c> well</c><00:00:02.669><c> for</c><00:00:02.820><c> me</c><00:00:02.909><c> at</c>

00:00:02.990 --> 00:00:03.000 align:start position:0%
hi there been a while well for me at
 

00:00:03.000 --> 00:00:04.249 align:start position:0%
hi there been a while well for me at
least<00:00:03.060><c> I</c><00:00:03.449><c> know</c><00:00:03.540><c> for</c><00:00:03.780><c> you</c><00:00:03.840><c> maybe</c><00:00:04.020><c> it</c><00:00:04.140><c> was</c><00:00:04.230><c> just</c>

00:00:04.249 --> 00:00:04.259 align:start position:0%
least I know for you maybe it was just
 

00:00:04.259 --> 00:00:05.720 align:start position:0%
least I know for you maybe it was just
one<00:00:04.529><c> click</c><00:00:04.799><c> there's</c><00:00:05.190><c> been</c><00:00:05.310><c> many</c><00:00:05.490><c> days</c><00:00:05.670><c> since</c>

00:00:05.720 --> 00:00:05.730 align:start position:0%
one click there's been many days since
 

00:00:05.730 --> 00:00:07.400 align:start position:0%
one click there's been many days since
I've<00:00:06.120><c> done</c><00:00:06.270><c> one</c><00:00:06.450><c> of</c><00:00:06.480><c> these</c><00:00:06.629><c> in</c><00:00:06.870><c> real</c><00:00:07.379><c> life</c>

00:00:07.400 --> 00:00:07.410 align:start position:0%
I've done one of these in real life
 

00:00:07.410 --> 00:00:12.110 align:start position:0%
I've done one of these in real life
we've<00:00:08.099><c> had</c><00:00:08.250><c> a</c><00:00:08.280><c> midterm</c><00:00:08.780><c> we've</c><00:00:10.759><c> released</c><00:00:11.759><c> a</c><00:00:11.940><c> big</c>

00:00:12.110 --> 00:00:12.120 align:start position:0%
we've had a midterm we've released a big
 

00:00:12.120 --> 00:00:14.959 align:start position:0%
we've had a midterm we've released a big
project<00:00:12.389><c> but</c><00:00:13.049><c> you</c><00:00:13.469><c> know</c><00:00:13.620><c> for</c><00:00:14.160><c> you</c><00:00:14.309><c> who</c><00:00:14.790><c> knows</c>

00:00:14.959 --> 00:00:14.969 align:start position:0%
project but you know for you who knows
 

00:00:14.969 --> 00:00:18.200 align:start position:0%
project but you know for you who knows
how<00:00:15.150><c> time</c><00:00:15.360><c> passes</c><00:00:15.920><c> so</c><00:00:16.920><c> for</c><00:00:17.130><c> the</c><00:00:17.190><c> next</c><00:00:17.369><c> few</c>

00:00:18.200 --> 00:00:18.210 align:start position:0%
how time passes so for the next few
 

00:00:18.210 --> 00:00:20.359 align:start position:0%
how time passes so for the next few
lectures<00:00:18.510><c> we're</c><00:00:19.260><c> gonna</c><00:00:19.380><c> wrap</c><00:00:19.650><c> up</c><00:00:19.830><c> Java</c><00:00:20.100><c> syntax</c>

00:00:20.359 --> 00:00:20.369 align:start position:0%
lectures we're gonna wrap up Java syntax
 

00:00:20.369 --> 00:00:22.519 align:start position:0%
lectures we're gonna wrap up Java syntax
this<00:00:20.789><c> will</c><00:00:20.939><c> be</c><00:00:21.029><c> it</c><00:00:21.150><c> for</c><00:00:21.180><c> Java</c><00:00:21.600><c> stuff</c><00:00:21.930><c> and</c><00:00:22.199><c> then</c>

00:00:22.519 --> 00:00:22.529 align:start position:0%
this will be it for Java stuff and then
 

00:00:22.529 --> 00:00:23.870 align:start position:0%
this will be it for Java stuff and then
after<00:00:22.740><c> that</c><00:00:22.859><c> we're</c><00:00:23.010><c> gonna</c><00:00:23.100><c> move</c><00:00:23.340><c> on</c><00:00:23.519><c> to</c><00:00:23.640><c> data</c>

00:00:23.870 --> 00:00:23.880 align:start position:0%
after that we're gonna move on to data
 

00:00:23.880 --> 00:00:25.759 align:start position:0%
after that we're gonna move on to data
structures<00:00:24.300><c> and</c><00:00:24.449><c> algorithms</c><00:00:24.689><c> and</c><00:00:25.470><c> that</c><00:00:25.619><c> will</c>

00:00:25.759 --> 00:00:25.769 align:start position:0%
structures and algorithms and that will
 

00:00:25.769 --> 00:00:27.380 align:start position:0%
structures and algorithms and that will
be<00:00:25.920><c> the</c><00:00:26.279><c> entirety</c><00:00:26.609><c> of</c><00:00:26.760><c> the</c><00:00:26.910><c> rest</c><00:00:27.119><c> of</c><00:00:27.300><c> the</c>

00:00:27.380 --> 00:00:27.390 align:start position:0%
be the entirety of the rest of the
 

00:00:27.390 --> 00:00:29.330 align:start position:0%
be the entirety of the rest of the
course<00:00:27.570><c> so</c><00:00:28.380><c> these</c><00:00:28.500><c> next</c><00:00:28.680><c> set</c><00:00:28.890><c> of</c><00:00:28.920><c> topics</c><00:00:29.279><c> they</c>

00:00:29.330 --> 00:00:29.340 align:start position:0%
course so these next set of topics they
 

00:00:29.340 --> 00:00:31.460 align:start position:0%
course so these next set of topics they
aren't<00:00:29.699><c> super</c><00:00:30.179><c> exciting</c><00:00:30.779><c> I</c><00:00:30.960><c> mean</c><00:00:31.199><c> you</c><00:00:31.320><c> might</c>

00:00:31.460 --> 00:00:31.470 align:start position:0%
aren't super exciting I mean you might
 

00:00:31.470 --> 00:00:33.200 align:start position:0%
aren't super exciting I mean you might
find<00:00:31.619><c> them</c><00:00:31.830><c> fun</c><00:00:32.009><c> but</c><00:00:32.340><c> they're</c><00:00:32.940><c> they're</c><00:00:33.180><c> not</c>

00:00:33.200 --> 00:00:33.210 align:start position:0%
find them fun but they're they're not
 

00:00:33.210 --> 00:00:35.330 align:start position:0%
find them fun but they're they're not
really<00:00:33.390><c> big</c><00:00:33.630><c> ideas</c><00:00:34.050><c> so</c><00:00:34.380><c> much</c><00:00:34.530><c> as</c><00:00:34.710><c> the</c><00:00:34.920><c> way</c><00:00:35.040><c> Java</c>

00:00:35.330 --> 00:00:35.340 align:start position:0%
really big ideas so much as the way Java
 

00:00:35.340 --> 00:00:37.490 align:start position:0%
really big ideas so much as the way Java
does<00:00:35.610><c> stuff</c><00:00:35.850><c> so</c><00:00:36.719><c> this</c><00:00:36.870><c> is</c><00:00:37.050><c> now</c><00:00:37.170><c> where</c><00:00:37.380><c> we're</c>

00:00:37.490 --> 00:00:37.500 align:start position:0%
does stuff so this is now where we're
 

00:00:37.500 --> 00:00:38.810 align:start position:0%
does stuff so this is now where we're
entering<00:00:37.800><c> the</c><00:00:37.920><c> part</c><00:00:38.100><c> of</c><00:00:38.190><c> the</c><00:00:38.250><c> class</c><00:00:38.460><c> known</c><00:00:38.700><c> as</c>

00:00:38.810 --> 00:00:38.820 align:start position:0%
entering the part of the class known as
 

00:00:38.820 --> 00:00:40.819 align:start position:0%
entering the part of the class known as
advanced<00:00:39.390><c> programming</c><00:00:39.930><c> and</c><00:00:40.079><c> most</c><00:00:40.620><c> of</c><00:00:40.770><c> the</c>

00:00:40.819 --> 00:00:40.829 align:start position:0%
advanced programming and most of the
 

00:00:40.829 --> 00:00:42.139 align:start position:0%
advanced programming and most of the
work<00:00:41.040><c> for</c><00:00:41.070><c> the</c><00:00:41.340><c> course</c><00:00:41.579><c> now</c><00:00:41.640><c> is</c><00:00:41.879><c> going</c><00:00:41.969><c> to</c><00:00:42.030><c> be</c>

00:00:42.139 --> 00:00:42.149 align:start position:0%
work for the course now is going to be
 

00:00:42.149 --> 00:00:44.630 align:start position:0%
work for the course now is going to be
focused<00:00:42.510><c> on</c><00:00:42.600><c> project</c><00:00:43.020><c> 2</c><00:00:43.170><c> and</c><00:00:44.160><c> so</c><00:00:44.370><c> some</c><00:00:44.550><c> of</c>

00:00:44.630 --> 00:00:44.640 align:start position:0%
focused on project 2 and so some of
 

00:00:44.640 --> 00:00:46.040 align:start position:0%
focused on project 2 and so some of
these<00:00:44.730><c> ideas</c><00:00:45.000><c> that</c><00:00:45.390><c> we're</c><00:00:45.480><c> gonna</c><00:00:45.570><c> present</c><00:00:45.989><c> in</c>

00:00:46.040 --> 00:00:46.050 align:start position:0%
these ideas that we're gonna present in
 

00:00:46.050 --> 00:00:47.450 align:start position:0%
these ideas that we're gonna present in
these<00:00:46.110><c> lectures</c><00:00:46.289><c> will</c><00:00:46.500><c> be</c><00:00:46.649><c> handy</c><00:00:47.010><c> to</c><00:00:47.129><c> you</c><00:00:47.250><c> and</c>

00:00:47.450 --> 00:00:47.460 align:start position:0%
these lectures will be handy to you and
 

00:00:47.460 --> 00:00:49.369 align:start position:0%
these lectures will be handy to you and
project<00:00:47.820><c> 2</c><00:00:47.969><c> and</c><00:00:48.660><c> you</c><00:00:48.780><c> may</c><00:00:48.899><c> see</c><00:00:48.960><c> them</c><00:00:49.230><c> in</c><00:00:49.320><c> the</c>

00:00:49.369 --> 00:00:49.379 align:start position:0%
project 2 and you may see them in the
 

00:00:49.379 --> 00:00:50.840 align:start position:0%
project 2 and you may see them in the
future<00:00:49.500><c> now</c><00:00:50.160><c> this</c><00:00:50.309><c> is</c><00:00:50.399><c> not</c><00:00:50.550><c> gonna</c><00:00:50.670><c> be</c><00:00:50.820><c> a</c>

00:00:50.840 --> 00:00:50.850 align:start position:0%
future now this is not gonna be a
 

00:00:50.850 --> 00:00:52.639 align:start position:0%
future now this is not gonna be a
comprehensive<00:00:51.300><c> look</c><00:00:51.780><c> at</c><00:00:51.840><c> Java</c><00:00:52.379><c> syntax</c>

00:00:52.639 --> 00:00:52.649 align:start position:0%
comprehensive look at Java syntax
 

00:00:52.649 --> 00:00:54.350 align:start position:0%
comprehensive look at Java syntax
there's<00:00:53.129><c> actually</c><00:00:53.370><c> lots</c><00:00:53.670><c> of</c><00:00:53.820><c> other</c><00:00:53.969><c> stuff</c><00:00:54.239><c> out</c>

00:00:54.350 --> 00:00:54.360 align:start position:0%
there's actually lots of other stuff out
 

00:00:54.360 --> 00:00:56.360 align:start position:0%
there's actually lots of other stuff out
there<00:00:54.480><c> that</c><00:00:54.539><c> we</c><00:00:54.750><c> won't</c><00:00:54.899><c> cover</c><00:00:55.170><c> ever</c><00:00:55.530><c> and</c>

00:00:56.360 --> 00:00:56.370 align:start position:0%
there that we won't cover ever and
 

00:00:56.370 --> 00:00:57.979 align:start position:0%
there that we won't cover ever and
that's<00:00:56.520><c> just</c><00:00:56.760><c> because</c><00:00:56.910><c> it's</c><00:00:57.360><c> not</c><00:00:57.570><c> a</c><00:00:57.600><c> job</c><00:00:57.840><c> of</c>

00:00:57.979 --> 00:00:57.989 align:start position:0%
that's just because it's not a job of
 

00:00:57.989 --> 00:00:59.660 align:start position:0%
that's just because it's not a job of
class<00:00:58.140><c> right</c><00:00:58.500><c> we've</c><00:00:58.739><c> got</c><00:00:58.890><c> what</c><00:00:59.039><c> we</c><00:00:59.160><c> want</c><00:00:59.340><c> after</c>

00:00:59.660 --> 00:00:59.670 align:start position:0%
class right we've got what we want after
 

00:00:59.670 --> 00:01:01.849 align:start position:0%
class right we've got what we want after
this<00:00:59.820><c> and</c><00:01:00.270><c> we'll</c><00:01:00.359><c> move</c><00:01:00.480><c> on</c><00:01:00.710><c> so</c><00:01:01.710><c> in</c><00:01:01.770><c> this</c>

00:01:01.849 --> 00:01:01.859 align:start position:0%
this and we'll move on so in this
 

00:01:01.859 --> 00:01:03.080 align:start position:0%
this and we'll move on so in this
lecture<00:01:02.039><c> we're</c><00:01:02.340><c> gonna</c><00:01:02.399><c> talk</c><00:01:02.609><c> about</c><00:01:02.640><c> auto</c>

00:01:03.080 --> 00:01:03.090 align:start position:0%
lecture we're gonna talk about auto
 

00:01:03.090 --> 00:01:04.490 align:start position:0%
lecture we're gonna talk about auto
boxing<00:01:03.480><c> promotion</c><00:01:03.750><c> immutability</c><00:01:04.290><c> and</c>

00:01:04.490 --> 00:01:04.500 align:start position:0%
boxing promotion immutability and
 

00:01:04.500 --> 00:01:06.140 align:start position:0%
boxing promotion immutability and
generics<00:01:04.949><c> and</c><00:01:05.309><c> the</c><00:01:05.489><c> next</c><00:01:05.700><c> lectures</c><00:01:05.970><c> we'll</c>

00:01:06.140 --> 00:01:06.150 align:start position:0%
generics and the next lectures we'll
 

00:01:06.150 --> 00:01:09.140 align:start position:0%
generics and the next lectures we'll
talk<00:01:06.270><c> about</c><00:01:06.390><c> some</c><00:01:06.720><c> more</c><00:01:06.750><c> stuff</c><00:01:07.280><c> so</c><00:01:08.280><c> let's</c>

00:01:09.140 --> 00:01:09.150 align:start position:0%
talk about some more stuff so let's
 

00:01:09.150 --> 00:01:11.570 align:start position:0%
talk about some more stuff so let's
start<00:01:09.420><c> by</c><00:01:09.630><c> talking</c><00:01:09.840><c> about</c><00:01:10.049><c> generics</c><00:01:10.830><c> ok</c>

00:01:11.570 --> 00:01:11.580 align:start position:0%
start by talking about generics ok
 

00:01:11.580 --> 00:01:14.000 align:start position:0%
start by talking about generics ok
so<00:01:12.299><c> for</c><00:01:12.450><c> the</c><00:01:12.510><c> most</c><00:01:12.600><c> part</c><00:01:12.689><c> as</c><00:01:12.960><c> you've</c><00:01:13.350><c> seen</c><00:01:13.590><c> in</c><00:01:13.830><c> a</c>

00:01:14.000 --> 00:01:14.010 align:start position:0%
so for the most part as you've seen in a
 

00:01:14.010 --> 00:01:15.499 align:start position:0%
so for the most part as you've seen in a
ray<00:01:14.130><c> deck</c><00:01:14.340><c> and</c><00:01:14.610><c> linked</c><00:01:14.790><c> list</c><00:01:14.970><c> deck</c><00:01:15.119><c> using</c>

00:01:15.499 --> 00:01:15.509 align:start position:0%
ray deck and linked list deck using
 

00:01:15.509 --> 00:01:17.630 align:start position:0%
ray deck and linked list deck using
generics<00:01:16.049><c> is</c><00:01:16.200><c> pretty</c><00:01:16.409><c> straightforward</c><00:01:16.650><c> all</c>

00:01:17.630 --> 00:01:17.640 align:start position:0%
generics is pretty straightforward all
 

00:01:17.640 --> 00:01:20.060 align:start position:0%
generics is pretty straightforward all
you<00:01:17.790><c> need</c><00:01:17.939><c> to</c><00:01:18.060><c> do</c><00:01:18.210><c> in</c><00:01:18.420><c> order</c><00:01:18.659><c> to</c><00:01:18.810><c> use</c><00:01:19.799><c> a</c><00:01:19.830><c> generic</c>

00:01:20.060 --> 00:01:20.070 align:start position:0%
you need to do in order to use a generic
 

00:01:20.070 --> 00:01:21.950 align:start position:0%
you need to do in order to use a generic
class<00:01:20.430><c> is</c><00:01:20.880><c> you</c><00:01:21.119><c> need</c><00:01:21.270><c> to</c><00:01:21.299><c> provide</c><00:01:21.570><c> an</c><00:01:21.750><c> actual</c>

00:01:21.950 --> 00:01:21.960 align:start position:0%
class is you need to provide an actual
 

00:01:21.960 --> 00:01:24.770 align:start position:0%
class is you need to provide an actual
type<00:01:22.439><c> argument</c><00:01:23.009><c> so</c><00:01:23.670><c> if</c><00:01:23.970><c> I</c><00:01:24.210><c> have</c><00:01:24.420><c> for</c><00:01:24.750><c> example</c>

00:01:24.770 --> 00:01:24.780 align:start position:0%
type argument so if I have for example
 

00:01:24.780 --> 00:01:27.710 align:start position:0%
type argument so if I have for example
an<00:01:25.350><c> ArrayList</c><00:01:26.070><c> that</c><00:01:26.430><c> someone</c><00:01:27.000><c> defined</c><00:01:27.330><c> that</c>

00:01:27.710 --> 00:01:27.720 align:start position:0%
an ArrayList that someone defined that
 

00:01:27.720 --> 00:01:29.569 align:start position:0%
an ArrayList that someone defined that
has<00:01:27.900><c> some</c><00:01:28.140><c> type</c><00:01:28.320><c> parameter</c><00:01:28.740><c> then</c><00:01:29.280><c> we</c><00:01:29.460><c> will</c>

00:01:29.569 --> 00:01:29.579 align:start position:0%
has some type parameter then we will
 

00:01:29.579 --> 00:01:32.030 align:start position:0%
has some type parameter then we will
provide<00:01:29.759><c> actual</c><00:01:30.270><c> type</c><00:01:30.479><c> arguments</c><00:01:30.990><c> and</c><00:01:31.140><c> here</c>

00:01:32.030 --> 00:01:32.040 align:start position:0%
provide actual type arguments and here
 

00:01:32.040 --> 00:01:33.560 align:start position:0%
provide actual type arguments and here
I've<00:01:32.250><c> noted</c><00:01:32.640><c> I've</c><00:01:32.759><c> put</c><00:01:32.970><c> it</c><00:01:33.090><c> both</c><00:01:33.270><c> in</c><00:01:33.479><c> the</c>

00:01:33.560 --> 00:01:33.570 align:start position:0%
I've noted I've put it both in the
 

00:01:33.570 --> 00:01:35.420 align:start position:0%
I've noted I've put it both in the
declaration<00:01:34.140><c> and</c><00:01:34.380><c> in</c><00:01:34.710><c> the</c><00:01:34.799><c> instantiation</c>

00:01:35.420 --> 00:01:35.430 align:start position:0%
declaration and in the instantiation
 

00:01:35.430 --> 00:01:37.310 align:start position:0%
declaration and in the instantiation
though<00:01:36.000><c> of</c><00:01:36.119><c> course</c><00:01:36.150><c> we</c><00:01:36.479><c> learned</c><00:01:36.659><c> earlier</c><00:01:36.990><c> kind</c>

00:01:37.310 --> 00:01:37.320 align:start position:0%
though of course we learned earlier kind
 

00:01:37.320 --> 00:01:39.140 align:start position:0%
though of course we learned earlier kind
of<00:01:37.439><c> Java</c><00:01:37.650><c> 8</c><00:01:37.829><c> it's</c><00:01:38.070><c> no</c><00:01:38.220><c> longer</c><00:01:38.460><c> necessary</c><00:01:38.909><c> at</c>

00:01:39.140 --> 00:01:39.150 align:start position:0%
of Java 8 it's no longer necessary at
 

00:01:39.150 --> 00:01:41.450 align:start position:0%
of Java 8 it's no longer necessary at
instantiation<00:01:39.780><c> to</c><00:01:40.020><c> do</c><00:01:40.140><c> so</c><00:01:40.350><c> as</c><00:01:40.770><c> long</c><00:01:40.829><c> as</c><00:01:41.100><c> we're</c>

00:01:41.450 --> 00:01:41.460 align:start position:0%
instantiation to do so as long as we're
 

00:01:41.460 --> 00:01:43.010 align:start position:0%
instantiation to do so as long as we're
declaring<00:01:41.850><c> a</c><00:01:41.939><c> variable</c><00:01:41.970><c> at</c><00:01:42.479><c> the</c><00:01:42.540><c> same</c><00:01:42.780><c> time</c>

00:01:43.010 --> 00:01:43.020 align:start position:0%
declaring a variable at the same time
 

00:01:43.020 --> 00:01:47.330 align:start position:0%
declaring a variable at the same time
because<00:01:43.530><c> Java</c><00:01:43.770><c> will</c><00:01:43.950><c> infer</c><00:01:44.280><c> that</c><00:01:45.259><c> now</c><00:01:46.340><c> one</c>

00:01:47.330 --> 00:01:47.340 align:start position:0%
because Java will infer that now one
 

00:01:47.340 --> 00:01:49.999 align:start position:0%
because Java will infer that now one
thing<00:01:47.490><c> that</c><00:01:47.549><c> we</c><00:01:47.670><c> did</c><00:01:47.939><c> not</c><00:01:48.000><c> talk</c><00:01:48.210><c> about</c><00:01:48.270><c> was</c><00:01:49.170><c> why</c>

00:01:49.999 --> 00:01:50.009 align:start position:0%
thing that we did not talk about was why
 

00:01:50.009 --> 00:01:51.889 align:start position:0%
thing that we did not talk about was why
it<00:01:50.430><c> is</c><00:01:50.700><c> that</c><00:01:50.729><c> when</c><00:01:51.030><c> we</c><00:01:51.090><c> want</c><00:01:51.299><c> to</c><00:01:51.420><c> create</c><00:01:51.689><c> an</c>

00:01:51.889 --> 00:01:51.899 align:start position:0%
it is that when we want to create an
 

00:01:51.899 --> 00:01:53.870 align:start position:0%
it is that when we want to create an
ArrayList<00:01:52.409><c> of</c><00:01:52.560><c> say</c><00:01:52.770><c> integers</c><00:01:53.250><c> I</c><00:01:53.460><c> just</c>

00:01:53.870 --> 00:01:53.880 align:start position:0%
ArrayList of say integers I just
 

00:01:53.880 --> 00:01:55.609 align:start position:0%
ArrayList of say integers I just
mentioned<00:01:54.180><c> in</c><00:01:54.240><c> an</c><00:01:54.360><c> earlier</c><00:01:54.450><c> video</c><00:01:54.750><c> why</c><00:01:55.350><c> it</c><00:01:55.409><c> is</c>

00:01:55.609 --> 00:01:55.619 align:start position:0%
mentioned in an earlier video why it is
 

00:01:55.619 --> 00:01:58.190 align:start position:0%
mentioned in an earlier video why it is
that<00:01:55.770><c> we</c><00:01:55.829><c> don't</c><00:01:56.040><c> do</c><00:01:56.189><c> lowercase</c><00:01:56.969><c> n</c><00:01:57.180><c> and</c><00:01:57.509><c> so</c><00:01:58.110><c> the</c>

00:01:58.190 --> 00:01:58.200 align:start position:0%
that we don't do lowercase n and so the
 

00:01:58.200 --> 00:02:00.050 align:start position:0%
that we don't do lowercase n and so the
answer<00:01:58.469><c> is</c><00:01:58.619><c> simply</c><00:01:58.860><c> that</c><00:01:58.950><c> if</c><00:01:59.310><c> you</c><00:01:59.520><c> try</c><00:01:59.759><c> and</c><00:01:59.909><c> do</c>

00:02:00.050 --> 00:02:00.060 align:start position:0%
answer is simply that if you try and do
 

00:02:00.060 --> 00:02:01.819 align:start position:0%
answer is simply that if you try and do
lowercase<00:02:00.360><c> int</c><00:02:00.750><c> you</c><00:02:01.049><c> get</c><00:02:01.200><c> a</c><00:02:01.229><c> compile</c><00:02:01.560><c> time</c>

00:02:01.819 --> 00:02:01.829 align:start position:0%
lowercase int you get a compile time
 

00:02:01.829 --> 00:02:03.980 align:start position:0%
lowercase int you get a compile time
error<00:02:02.070><c> so</c><00:02:02.700><c> for</c><00:02:02.850><c> example</c><00:02:03.180><c> if</c><00:02:03.509><c> I</c><00:02:03.659><c> were</c><00:02:03.750><c> to</c><00:02:03.780><c> try</c>

00:02:03.980 --> 00:02:03.990 align:start position:0%
error so for example if I were to try
 

00:02:03.990 --> 00:02:06.530 align:start position:0%
error so for example if I were to try
and<00:02:04.049><c> compile</c><00:02:04.590><c> this</c><00:02:04.770><c> at</c><00:02:04.920><c> the</c><00:02:05.180><c> command</c><00:02:06.180><c> line</c><00:02:06.360><c> I</c>

00:02:06.530 --> 00:02:06.540 align:start position:0%
and compile this at the command line I
 

00:02:06.540 --> 00:02:09.350 align:start position:0%
and compile this at the command line I
would<00:02:06.840><c> get</c><00:02:07.049><c> ArrayList</c><00:02:07.560><c> int</c><00:02:08.060><c> yeah</c><00:02:09.060><c> you</c><00:02:09.119><c> gotta</c>

00:02:09.350 --> 00:02:09.360 align:start position:0%
would get ArrayList int yeah you gotta
 

00:02:09.360 --> 00:02:11.540 align:start position:0%
would get ArrayList int yeah you gotta
and<00:02:09.690><c> I</c><00:02:09.840><c> would</c><00:02:10.020><c> the</c><00:02:10.470><c> error</c><00:02:10.709><c> would</c><00:02:10.920><c> be</c><00:02:10.979><c> required</c>

00:02:11.540 --> 00:02:11.550 align:start position:0%
and I would the error would be required
 

00:02:11.550 --> 00:02:13.680 align:start position:0%
and I would the error would be required
reference<00:02:12.030><c> found</c><00:02:12.569><c> int</c><00:02:13.050><c> does</c>

00:02:13.680 --> 00:02:13.690 align:start position:0%
reference found int does
 

00:02:13.690 --> 00:02:15.600 align:start position:0%
reference found int does
like<00:02:13.840><c> it</c><00:02:14.020><c> and</c><00:02:14.200><c> so</c><00:02:14.650><c> what</c><00:02:14.770><c> this</c><00:02:14.890><c> is</c><00:02:14.950><c> saying</c><00:02:15.250><c> is</c><00:02:15.460><c> it</c>

00:02:15.600 --> 00:02:15.610 align:start position:0%
like it and so what this is saying is it
 

00:02:15.610 --> 00:02:17.400 align:start position:0%
like it and so what this is saying is it
expects<00:02:15.970><c> a</c><00:02:16.090><c> reference</c><00:02:16.450><c> type</c><00:02:16.660><c> any</c><00:02:16.960><c> reference</c>

00:02:17.400 --> 00:02:17.410 align:start position:0%
expects a reference type any reference
 

00:02:17.410 --> 00:02:19.830 align:start position:0%
expects a reference type any reference
type<00:02:17.640><c> so</c><00:02:18.640><c> what's</c><00:02:18.790><c> a</c><00:02:18.850><c> reference</c><00:02:19.180><c> type</c><00:02:19.390><c> it's</c>

00:02:19.830 --> 00:02:19.840 align:start position:0%
type so what's a reference type it's
 

00:02:19.840 --> 00:02:21.750 align:start position:0%
type so what's a reference type it's
anything<00:02:20.110><c> that's</c><00:02:20.380><c> not</c><00:02:20.470><c> a</c><00:02:20.530><c> primitive</c><00:02:20.740><c> type</c><00:02:21.070><c> and</c>

00:02:21.750 --> 00:02:21.760 align:start position:0%
anything that's not a primitive type and
 

00:02:21.760 --> 00:02:24.920 align:start position:0%
anything that's not a primitive type and
so<00:02:22.000><c> this</c><00:02:22.120><c> is</c><00:02:22.240><c> a</c><00:02:22.270><c> whole</c><00:02:22.540><c> new</c><00:02:23.220><c> hierarchy</c><00:02:24.220><c> of</c>

00:02:24.920 --> 00:02:24.930 align:start position:0%
so this is a whole new hierarchy of
 

00:02:24.930 --> 00:02:27.690 align:start position:0%
so this is a whole new hierarchy of
reference<00:02:25.930><c> types</c><00:02:26.230><c> that</c><00:02:26.680><c> go</c><00:02:27.160><c> with</c><00:02:27.430><c> the</c>

00:02:27.690 --> 00:02:27.700 align:start position:0%
reference types that go with the
 

00:02:27.700 --> 00:02:29.370 align:start position:0%
reference types that go with the
primitive<00:02:28.030><c> types</c><00:02:28.450><c> that</c><00:02:28.660><c> we've</c><00:02:28.780><c> come</c><00:02:29.080><c> to</c><00:02:29.260><c> know</c>

00:02:29.370 --> 00:02:29.380 align:start position:0%
primitive types that we've come to know
 

00:02:29.380 --> 00:02:31.950 align:start position:0%
primitive types that we've come to know
and<00:02:29.530><c> love</c><00:02:29.590><c> and</c><00:02:30.270><c> double</c><00:02:31.270><c> those</c><00:02:31.630><c> sorts</c><00:02:31.930><c> of</c>

00:02:31.950 --> 00:02:31.960 align:start position:0%
and love and double those sorts of
 

00:02:31.960 --> 00:02:33.840 align:start position:0%
and love and double those sorts of
things<00:02:32.170><c> and</c><00:02:32.380><c> so</c><00:02:33.100><c> for</c><00:02:33.250><c> each</c><00:02:33.370><c> of</c><00:02:33.670><c> those</c>

00:02:33.840 --> 00:02:33.850 align:start position:0%
things and so for each of those
 

00:02:33.850 --> 00:02:35.490 align:start position:0%
things and so for each of those
primitive<00:02:34.300><c> types</c><00:02:34.510><c> there's</c><00:02:35.050><c> a</c><00:02:35.140><c> so</c><00:02:35.350><c> called</c>

00:02:35.490 --> 00:02:35.500 align:start position:0%
primitive types there's a so called
 

00:02:35.500 --> 00:02:38.970 align:start position:0%
primitive types there's a so called
wrapper<00:02:35.890><c> type</c><00:02:36.510><c> that</c><00:02:37.710><c> represents</c><00:02:38.710><c> the</c>

00:02:38.970 --> 00:02:38.980 align:start position:0%
wrapper type that represents the
 

00:02:38.980 --> 00:02:42.150 align:start position:0%
wrapper type that represents the
reference<00:02:39.520><c> version</c><00:02:39.850><c> of</c><00:02:39.970><c> the</c><00:02:40.060><c> same</c><00:02:40.240><c> idea</c><00:02:41.160><c> and</c>

00:02:42.150 --> 00:02:42.160 align:start position:0%
reference version of the same idea and
 

00:02:42.160 --> 00:02:44.100 align:start position:0%
reference version of the same idea and
so<00:02:42.370><c> this</c><00:02:42.550><c> right</c><00:02:42.730><c> here</c><00:02:42.790><c> we</c><00:02:43.300><c> have</c><00:02:43.450><c> byte</c><00:02:43.690><c> short</c>

00:02:44.100 --> 00:02:44.110 align:start position:0%
so this right here we have byte short
 

00:02:44.110 --> 00:02:45.960 align:start position:0%
so this right here we have byte short
integer<00:02:44.380><c> long</c><00:02:44.770><c> float</c><00:02:45.100><c> and</c><00:02:45.280><c> double</c><00:02:45.310><c> and</c><00:02:45.880><c> it</c>

00:02:45.960 --> 00:02:45.970 align:start position:0%
integer long float and double and it
 

00:02:45.970 --> 00:02:47.160 align:start position:0%
integer long float and double and it
turns<00:02:46.150><c> out</c><00:02:46.360><c> that</c><00:02:46.450><c> actually</c><00:02:46.630><c> all</c><00:02:46.900><c> of</c><00:02:46.930><c> these</c>

00:02:47.160 --> 00:02:47.170 align:start position:0%
turns out that actually all of these
 

00:02:47.170 --> 00:02:49.080 align:start position:0%
turns out that actually all of these
implement<00:02:47.890><c> an</c><00:02:47.980><c> interface</c><00:02:48.280><c> known</c><00:02:48.640><c> as</c><00:02:48.790><c> number</c>

00:02:49.080 --> 00:02:49.090 align:start position:0%
implement an interface known as number
 

00:02:49.090 --> 00:02:50.850 align:start position:0%
implement an interface known as number
you're<00:02:49.510><c> not</c><00:02:49.660><c> likely</c><00:02:49.870><c> to</c><00:02:50.050><c> interface</c><00:02:50.440><c> with</c><00:02:50.500><c> this</c>

00:02:50.850 --> 00:02:50.860 align:start position:0%
you're not likely to interface with this
 

00:02:50.860 --> 00:02:53.880 align:start position:0%
you're not likely to interface with this
number<00:02:51.340><c> class</c><00:02:51.730><c> or</c><00:02:52.180><c> interface</c><00:02:52.510><c> directly</c><00:02:53.200><c> so</c><00:02:53.620><c> it</c>

00:02:53.880 --> 00:02:53.890 align:start position:0%
number class or interface directly so it
 

00:02:53.890 --> 00:02:56.100 align:start position:0%
number class or interface directly so it
can't<00:02:54.100><c> happen</c><00:02:54.390><c> we</c><00:02:55.390><c> also</c><00:02:55.540><c> have</c><00:02:55.660><c> boolean</c><00:02:56.020><c> and</c>

00:02:56.100 --> 00:02:56.110 align:start position:0%
can't happen we also have boolean and
 

00:02:56.110 --> 00:02:59.280 align:start position:0%
can't happen we also have boolean and
characters<00:02:56.530><c> which</c><00:02:56.980><c> are</c><00:02:57.160><c> not</c><00:02:57.400><c> numbers</c><00:02:57.990><c> and</c><00:02:58.990><c> but</c>

00:02:59.280 --> 00:02:59.290 align:start position:0%
characters which are not numbers and but
 

00:02:59.290 --> 00:03:01.800 align:start position:0%
characters which are not numbers and but
all<00:02:59.380><c> of</c><00:02:59.500><c> them</c><00:02:59.620><c> are</c><00:02:59.680><c> objects</c><00:03:00.040><c> of</c><00:03:00.130><c> course</c><00:03:00.630><c> and</c><00:03:01.630><c> so</c>

00:03:01.800 --> 00:03:01.810 align:start position:0%
all of them are objects of course and so
 

00:03:01.810 --> 00:03:03.240 align:start position:0%
all of them are objects of course and so
it's<00:03:01.930><c> these</c><00:03:02.140><c> reference</c><00:03:02.650><c> types</c><00:03:02.890><c> that</c><00:03:03.130><c> we're</c>

00:03:03.240 --> 00:03:03.250 align:start position:0%
it's these reference types that we're
 

00:03:03.250 --> 00:03:07.320 align:start position:0%
it's these reference types that we're
gonna<00:03:03.370><c> be</c><00:03:03.580><c> looking</c><00:03:04.210><c> at</c><00:03:04.540><c> and</c><00:03:04.810><c> using</c><00:03:06.120><c> so</c><00:03:07.120><c> as</c>

00:03:07.320 --> 00:03:07.330 align:start position:0%
gonna be looking at and using so as
 

00:03:07.330 --> 00:03:10.470 align:start position:0%
gonna be looking at and using so as
we've<00:03:07.840><c> seen</c><00:03:08.050><c> before</c><00:03:08.410><c> we</c><00:03:09.010><c> can</c><00:03:09.280><c> say</c><00:03:10.060><c> new</c>

00:03:10.470 --> 00:03:10.480 align:start position:0%
we've seen before we can say new
 

00:03:10.480 --> 00:03:13.380 align:start position:0%
we've seen before we can say new
ArrayList<00:03:10.720><c> integer</c><00:03:11.290><c> and</c><00:03:11.880><c> naively</c><00:03:12.880><c> if</c><00:03:13.030><c> we</c><00:03:13.180><c> did</c>

00:03:13.380 --> 00:03:13.390 align:start position:0%
ArrayList integer and naively if we did
 

00:03:13.390 --> 00:03:15.360 align:start position:0%
ArrayList integer and naively if we did
that<00:03:13.570><c> then</c><00:03:14.080><c> when</c><00:03:14.230><c> we</c><00:03:14.320><c> wanted</c><00:03:14.590><c> to</c><00:03:14.650><c> add</c><00:03:14.860><c> if</c><00:03:15.190><c> we</c>

00:03:15.360 --> 00:03:15.370 align:start position:0%
that then when we wanted to add if we
 

00:03:15.370 --> 00:03:17.160 align:start position:0%
that then when we wanted to add if we
wanted<00:03:15.610><c> to</c><00:03:15.670><c> add</c><00:03:15.850><c> a</c><00:03:15.880><c> number</c><00:03:16.210><c> to</c><00:03:16.540><c> an</c><00:03:16.720><c> ArrayList</c>

00:03:17.160 --> 00:03:17.170 align:start position:0%
wanted to add a number to an ArrayList
 

00:03:17.170 --> 00:03:18.960 align:start position:0%
wanted to add a number to an ArrayList
we'd<00:03:17.410><c> have</c><00:03:17.500><c> to</c><00:03:17.590><c> do</c><00:03:17.680><c> something</c><00:03:17.890><c> like</c><00:03:18.160><c> elda</c><00:03:18.820><c> add</c>

00:03:18.960 --> 00:03:18.970 align:start position:0%
we'd have to do something like elda add
 

00:03:18.970 --> 00:03:21.870 align:start position:0%
we'd have to do something like elda add
new<00:03:19.570><c> integer</c><00:03:19.840><c> five</c><00:03:20.140><c> Elda</c><00:03:21.130><c> add</c><00:03:21.280><c> new</c><00:03:21.520><c> manager</c>

00:03:21.870 --> 00:03:21.880 align:start position:0%
new integer five Elda add new manager
 

00:03:21.880 --> 00:03:23.940 align:start position:0%
new integer five Elda add new manager
sex<00:03:22.060><c> because</c><00:03:22.810><c> if</c><00:03:23.050><c> this</c><00:03:23.290><c> thing's</c><00:03:23.500><c> expecting</c>

00:03:23.940 --> 00:03:23.950 align:start position:0%
sex because if this thing's expecting
 

00:03:23.950 --> 00:03:25.500 align:start position:0%
sex because if this thing's expecting
integers<00:03:24.310><c> I</c><00:03:24.489><c> probably</c><00:03:24.820><c> should</c><00:03:25.060><c> be</c><00:03:25.150><c> giving</c><00:03:25.420><c> it</c>

00:03:25.500 --> 00:03:25.510 align:start position:0%
integers I probably should be giving it
 

00:03:25.510 --> 00:03:28.050 align:start position:0%
integers I probably should be giving it
integers<00:03:25.959><c> and</c><00:03:26.739><c> likewise</c><00:03:27.130><c> when</c><00:03:27.550><c> I</c><00:03:27.580><c> get</c><00:03:27.790><c> back</c><00:03:28.030><c> a</c>

00:03:28.050 --> 00:03:28.060 align:start position:0%
integers and likewise when I get back a
 

00:03:28.060 --> 00:03:30.449 align:start position:0%
integers and likewise when I get back a
value<00:03:28.360><c> from</c><00:03:28.930><c> an</c><00:03:29.080><c> ArrayList</c><00:03:29.500><c> well</c><00:03:30.010><c> when</c><00:03:30.250><c> I</c><00:03:30.280><c> say</c>

00:03:30.449 --> 00:03:30.459 align:start position:0%
value from an ArrayList well when I say
 

00:03:30.459 --> 00:03:33.630 align:start position:0%
value from an ArrayList well when I say
L<00:03:30.610><c> dot</c><00:03:30.820><c> get</c><00:03:31.030><c> zero</c><00:03:31.270><c> it</c><00:03:31.900><c> turns</c><00:03:32.110><c> out</c><00:03:32.290><c> that</c><00:03:32.530><c> I</c><00:03:32.800><c> want</c>

00:03:33.630 --> 00:03:33.640 align:start position:0%
L dot get zero it turns out that I want
 

00:03:33.640 --> 00:03:36.870 align:start position:0%
L dot get zero it turns out that I want
to<00:03:33.700><c> put</c><00:03:33.850><c> it</c><00:03:33.940><c> into</c><00:03:34.180><c> an</c><00:03:34.300><c> int</c><00:03:34.630><c> variable</c><00:03:35.670><c> and</c><00:03:36.670><c> so</c><00:03:36.790><c> to</c>

00:03:36.870 --> 00:03:36.880 align:start position:0%
to put it into an int variable and so to
 

00:03:36.880 --> 00:03:38.760 align:start position:0%
to put it into an int variable and so to
get<00:03:37.060><c> that</c><00:03:37.209><c> value</c><00:03:37.390><c> back</c><00:03:37.750><c> I</c><00:03:37.930><c> can</c><00:03:38.170><c> use</c><00:03:38.290><c> the</c><00:03:38.440><c> value</c>

00:03:38.760 --> 00:03:38.770 align:start position:0%
get that value back I can use the value
 

00:03:38.770 --> 00:03:40.290 align:start position:0%
get that value back I can use the value
of<00:03:38.950><c> method</c><00:03:39.310><c> that's</c><00:03:39.580><c> part</c><00:03:39.790><c> of</c><00:03:39.820><c> the</c><00:03:39.910><c> integer</c>

00:03:40.290 --> 00:03:40.300 align:start position:0%
of method that's part of the integer
 

00:03:40.300 --> 00:03:42.690 align:start position:0%
of method that's part of the integer
class<00:03:40.600><c> that</c><00:03:41.260><c> I</c><00:03:41.290><c> won't</c><00:03:41.590><c> show</c><00:03:41.800><c> quite</c><00:03:42.070><c> yet</c><00:03:42.310><c> okay</c>

00:03:42.690 --> 00:03:42.700 align:start position:0%
class that I won't show quite yet okay
 

00:03:42.700 --> 00:03:45.030 align:start position:0%
class that I won't show quite yet okay
now<00:03:43.600><c> doing</c><00:03:44.050><c> something</c><00:03:44.350><c> like</c><00:03:44.500><c> this</c><00:03:44.800><c> would</c><00:03:45.010><c> be</c>

00:03:45.030 --> 00:03:45.040 align:start position:0%
now doing something like this would be
 

00:03:45.040 --> 00:03:46.770 align:start position:0%
now doing something like this would be
super<00:03:45.370><c> annoying</c><00:03:45.580><c> if</c><00:03:46.030><c> you</c><00:03:46.209><c> had</c><00:03:46.300><c> to</c><00:03:46.390><c> manually</c>

00:03:46.770 --> 00:03:46.780 align:start position:0%
super annoying if you had to manually
 

00:03:46.780 --> 00:03:50.040 align:start position:0%
super annoying if you had to manually
create<00:03:47.290><c> an</c><00:03:47.500><c> integer</c><00:03:48.280><c> wrapper</c><00:03:48.880><c> around</c><00:03:49.570><c> each</c><00:03:49.900><c> of</c>

00:03:50.040 --> 00:03:50.050 align:start position:0%
create an integer wrapper around each of
 

00:03:50.050 --> 00:03:51.150 align:start position:0%
create an integer wrapper around each of
your<00:03:50.140><c> numbers</c><00:03:50.440><c> you</c><00:03:50.590><c> wanted</c><00:03:50.800><c> to</c><00:03:50.860><c> put</c><00:03:51.010><c> in</c><00:03:51.100><c> an</c>

00:03:51.150 --> 00:03:51.160 align:start position:0%
your numbers you wanted to put in an
 

00:03:51.160 --> 00:03:52.770 align:start position:0%
your numbers you wanted to put in an
ArrayList<00:03:51.580><c> that</c><00:03:51.940><c> wouldn't</c><00:03:52.180><c> be</c><00:03:52.239><c> so</c><00:03:52.420><c> great</c><00:03:52.540><c> and</c>

00:03:52.770 --> 00:03:52.780 align:start position:0%
ArrayList that wouldn't be so great and
 

00:03:52.780 --> 00:03:54.660 align:start position:0%
ArrayList that wouldn't be so great and
likewise<00:03:53.410><c> it</c><00:03:53.650><c> seems</c><00:03:53.860><c> annoying</c><00:03:54.220><c> to</c><00:03:54.370><c> have</c><00:03:54.489><c> to</c>

00:03:54.660 --> 00:03:54.670 align:start position:0%
likewise it seems annoying to have to
 

00:03:54.670 --> 00:03:57.930 align:start position:0%
likewise it seems annoying to have to
unwrap<00:03:55.120><c> them</c><00:03:55.510><c> and</c><00:03:55.810><c> so</c><00:03:56.500><c> at</c><00:03:56.620><c> the</c><00:03:56.739><c> same</c><00:03:57.070><c> time</c><00:03:57.550><c> they</c>

00:03:57.930 --> 00:03:57.940 align:start position:0%
unwrap them and so at the same time they
 

00:03:57.940 --> 00:03:59.640 align:start position:0%
unwrap them and so at the same time they
released<00:03:58.300><c> generics</c><00:03:58.930><c> when</c><00:03:59.170><c> they</c><00:03:59.260><c> added</c><00:03:59.410><c> it</c><00:03:59.620><c> to</c>

00:03:59.640 --> 00:03:59.650 align:start position:0%
released generics when they added it to
 

00:03:59.650 --> 00:04:01.979 align:start position:0%
released generics when they added it to
the<00:03:59.860><c> language</c><00:04:00.100><c> they</c><00:04:00.850><c> also</c><00:04:01.090><c> introduced</c><00:04:01.600><c> this</c>

00:04:01.979 --> 00:04:01.989 align:start position:0%
the language they also introduced this
 

00:04:01.989 --> 00:04:04.259 align:start position:0%
the language they also introduced this
neat<00:04:02.290><c> feature</c><00:04:02.530><c> which</c><00:04:03.010><c> is</c><00:04:03.160><c> auto</c><00:04:03.340><c> boxing</c><00:04:03.790><c> and</c>

00:04:04.259 --> 00:04:04.269 align:start position:0%
neat feature which is auto boxing and
 

00:04:04.269 --> 00:04:07.400 align:start position:0%
neat feature which is auto boxing and
its<00:04:04.480><c> counterpart</c><00:04:04.660><c> auto</c><00:04:05.170><c> unboxing</c><00:04:05.769><c> so</c><00:04:06.580><c> in</c><00:04:06.820><c> Java</c>

00:04:07.400 --> 00:04:07.410 align:start position:0%
its counterpart auto unboxing so in Java
 

00:04:07.410 --> 00:04:09.479 align:start position:0%
its counterpart auto unboxing so in Java
you<00:04:08.410><c> will</c><00:04:08.530><c> always</c><00:04:08.739><c> get</c><00:04:09.070><c> an</c><00:04:09.190><c> implicit</c>

00:04:09.479 --> 00:04:09.489 align:start position:0%
you will always get an implicit
 

00:04:09.489 --> 00:04:12.120 align:start position:0%
you will always get an implicit
conversion<00:04:10.120><c> between</c><00:04:10.630><c> the</c><00:04:10.930><c> wrapper</c><00:04:11.440><c> type</c><00:04:11.800><c> that</c>

00:04:12.120 --> 00:04:12.130 align:start position:0%
conversion between the wrapper type that
 

00:04:12.130 --> 00:04:13.680 align:start position:0%
conversion between the wrapper type that
goes<00:04:12.250><c> to</c><00:04:12.370><c> the</c><00:04:12.459><c> primitive</c><00:04:12.820><c> type</c><00:04:13.000><c> and</c>

00:04:13.680 --> 00:04:13.690 align:start position:0%
goes to the primitive type and
 

00:04:13.690 --> 00:04:16.020 align:start position:0%
goes to the primitive type and
vice-versa<00:04:14.170><c> when</c><00:04:14.500><c> needed</c><00:04:14.800><c> and</c><00:04:15.760><c> so</c><00:04:15.880><c> for</c>

00:04:16.020 --> 00:04:16.030 align:start position:0%
vice-versa when needed and so for
 

00:04:16.030 --> 00:04:18.539 align:start position:0%
vice-versa when needed and so for
example<00:04:16.390><c> if</c><00:04:16.780><c> I</c><00:04:16.900><c> say</c><00:04:17.080><c> if</c><00:04:17.350><c> I</c><00:04:17.440><c> say</c><00:04:17.680><c> Elda</c><00:04:18.070><c> add</c><00:04:18.220><c> five</c>

00:04:18.539 --> 00:04:18.549 align:start position:0%
example if I say if I say Elda add five
 

00:04:18.549 --> 00:04:21.020 align:start position:0%
example if I say if I say Elda add five
then<00:04:19.180><c> the</c><00:04:19.209><c> int</c><00:04:19.510><c> even</c><00:04:19.750><c> though</c><00:04:20.080><c> is</c><00:04:20.350><c> just</c><00:04:20.680><c> a</c><00:04:20.799><c> raw</c>

00:04:21.020 --> 00:04:21.030 align:start position:0%
then the int even though is just a raw
 

00:04:21.030 --> 00:04:25.110 align:start position:0%
then the int even though is just a raw
primitive<00:04:22.030><c> 32</c><00:04:23.020><c> bits</c><00:04:23.550><c> that</c><00:04:24.550><c> represent</c><00:04:24.700><c> the</c>

00:04:25.110 --> 00:04:25.120 align:start position:0%
primitive 32 bits that represent the
 

00:04:25.120 --> 00:04:26.820 align:start position:0%
primitive 32 bits that represent the
number<00:04:25.330><c> five</c><00:04:25.510><c> it</c><00:04:25.900><c> will</c><00:04:26.050><c> get</c><00:04:26.169><c> wrapped</c><00:04:26.440><c> up</c><00:04:26.620><c> out</c>

00:04:26.820 --> 00:04:26.830 align:start position:0%
number five it will get wrapped up out
 

00:04:26.830 --> 00:04:26.940 align:start position:0%
number five it will get wrapped up out
of

00:04:26.940 --> 00:04:26.950 align:start position:0%
of
 

00:04:26.950 --> 00:04:28.590 align:start position:0%
of
matically<00:04:27.220><c> and</c><00:04:27.490><c> so</c><00:04:28.000><c> this</c><00:04:28.210><c> code</c><00:04:28.390><c> right</c><00:04:28.540><c> here</c>

00:04:28.590 --> 00:04:28.600 align:start position:0%
matically and so this code right here
 

00:04:28.600 --> 00:04:30.420 align:start position:0%
matically and so this code right here
works<00:04:29.080><c> beautifully</c><00:04:29.680><c> and</c><00:04:29.890><c> you</c><00:04:30.190><c> didn't</c><00:04:30.370><c> even</c>

00:04:30.420 --> 00:04:30.430 align:start position:0%
works beautifully and you didn't even
 

00:04:30.430 --> 00:04:31.920 align:start position:0%
works beautifully and you didn't even
have<00:04:30.580><c> to</c><00:04:30.670><c> know</c><00:04:30.820><c> about</c><00:04:30.940><c> this</c><00:04:31.210><c> in</c><00:04:31.420><c> order</c><00:04:31.630><c> to</c><00:04:31.750><c> use</c>

00:04:31.920 --> 00:04:31.930 align:start position:0%
have to know about this in order to use
 

00:04:31.930 --> 00:04:34.470 align:start position:0%
have to know about this in order to use
arraylists<00:04:32.410><c> however</c><00:04:33.370><c> it</c><00:04:33.790><c> is</c><00:04:34.000><c> nice</c><00:04:34.240><c> to</c><00:04:34.450><c> know</c>

00:04:34.470 --> 00:04:34.480 align:start position:0%
arraylists however it is nice to know
 

00:04:34.480 --> 00:04:37.350 align:start position:0%
arraylists however it is nice to know
that<00:04:34.630><c> this</c><00:04:34.930><c> exists</c><00:04:35.440><c> because</c><00:04:36.070><c> if</c><00:04:36.250><c> you</c><00:04:36.490><c> naively</c>

00:04:37.350 --> 00:04:37.360 align:start position:0%
that this exists because if you naively
 

00:04:37.360 --> 00:04:39.240 align:start position:0%
that this exists because if you naively
proceed<00:04:37.780><c> you</c><00:04:38.080><c> can</c><00:04:38.230><c> occasionally</c><00:04:38.470><c> take</c><00:04:38.950><c> some</c>

00:04:39.240 --> 00:04:39.250 align:start position:0%
proceed you can occasionally take some
 

00:04:39.250 --> 00:04:41.370 align:start position:0%
proceed you can occasionally take some
significant<00:04:39.790><c> performance</c><00:04:39.940><c> sets</c><00:04:40.420><c> so</c><00:04:41.260><c> let's</c>

00:04:41.370 --> 00:04:41.380 align:start position:0%
significant performance sets so let's
 

00:04:41.380 --> 00:04:43.010 align:start position:0%
significant performance sets so let's
get<00:04:41.470><c> a</c><00:04:41.530><c> sense</c><00:04:41.770><c> of</c><00:04:41.890><c> what's</c><00:04:42.040><c> going</c><00:04:42.280><c> on</c><00:04:42.400><c> here</c>

00:04:43.010 --> 00:04:43.020 align:start position:0%
get a sense of what's going on here
 

00:04:43.020 --> 00:04:45.840 align:start position:0%
get a sense of what's going on here
whenever<00:04:44.020><c> you</c><00:04:44.260><c> have</c><00:04:44.530><c> code</c><00:04:44.800><c> that</c><00:04:45.040><c> expects</c><00:04:45.700><c> a</c>

00:04:45.840 --> 00:04:45.850 align:start position:0%
whenever you have code that expects a
 

00:04:45.850 --> 00:04:48.000 align:start position:0%
whenever you have code that expects a
wrapper<00:04:46.090><c> type</c><00:04:46.420><c> but</c><00:04:47.110><c> you</c><00:04:47.200><c> give</c><00:04:47.410><c> it</c><00:04:47.440><c> a</c><00:04:47.590><c> primitive</c>

00:04:48.000 --> 00:04:48.010 align:start position:0%
wrapper type but you give it a primitive
 

00:04:48.010 --> 00:04:50.130 align:start position:0%
wrapper type but you give it a primitive
it<00:04:48.490><c> will</c><00:04:48.610><c> automatically</c><00:04:49.090><c> box</c><00:04:49.480><c> up</c><00:04:49.690><c> the</c><00:04:49.840><c> number</c>

00:04:50.130 --> 00:04:50.140 align:start position:0%
it will automatically box up the number
 

00:04:50.140 --> 00:04:52.470 align:start position:0%
it will automatically box up the number
so<00:04:50.860><c> here</c><00:04:51.100><c> for</c><00:04:51.250><c> example</c><00:04:51.310><c> is</c><00:04:51.790><c> a</c><00:04:51.850><c> method</c><00:04:52.270><c> called</c>

00:04:52.470 --> 00:04:52.480 align:start position:0%
so here for example is a method called
 

00:04:52.480 --> 00:04:54.600 align:start position:0%
so here for example is a method called
blah<00:04:52.690><c> it</c><00:04:53.230><c> accepts</c><00:04:53.650><c> integers</c><00:04:54.160><c> the</c><00:04:54.430><c> wrapper</c>

00:04:54.600 --> 00:04:54.610 align:start position:0%
blah it accepts integers the wrapper
 

00:04:54.610 --> 00:04:57.000 align:start position:0%
blah it accepts integers the wrapper
class<00:04:54.910><c> and</c><00:04:55.210><c> then</c><00:04:55.540><c> prints</c><00:04:55.780><c> them</c><00:04:55.900><c> out</c><00:04:56.050><c> however</c>

00:04:57.000 --> 00:04:57.010 align:start position:0%
class and then prints them out however
 

00:04:57.010 --> 00:04:59.100 align:start position:0%
class and then prints them out however
if<00:04:57.370><c> we</c><00:04:57.460><c> call</c><00:04:57.640><c> blah</c><00:04:57.880><c> with</c><00:04:58.150><c> a</c><00:04:58.330><c> lower</c><00:04:58.570><c> case</c><00:04:58.810><c> int</c>

00:04:59.100 --> 00:04:59.110 align:start position:0%
if we call blah with a lower case int
 

00:04:59.110 --> 00:05:01.380 align:start position:0%
if we call blah with a lower case int
then<00:04:59.590><c> in</c><00:04:59.830><c> that</c><00:05:00.010><c> case</c><00:05:00.250><c> it</c><00:05:00.550><c> gets</c><00:05:00.760><c> automatically</c>

00:05:01.380 --> 00:05:01.390 align:start position:0%
then in that case it gets automatically
 

00:05:01.390 --> 00:05:03.510 align:start position:0%
then in that case it gets automatically
boxed<00:05:01.840><c> up</c><00:05:01.960><c> when</c><00:05:02.350><c> this</c><00:05:02.560><c> call</c><00:05:02.770><c> happens</c><00:05:03.220><c> it</c><00:05:03.460><c> just</c>

00:05:03.510 --> 00:05:03.520 align:start position:0%
boxed up when this call happens it just
 

00:05:03.520 --> 00:05:05.960 align:start position:0%
boxed up when this call happens it just
happens<00:05:03.700><c> without</c><00:05:04.090><c> you</c><00:05:04.510><c> doing</c><00:05:05.290><c> anything</c>

00:05:05.960 --> 00:05:05.970 align:start position:0%
happens without you doing anything
 

00:05:05.970 --> 00:05:07.890 align:start position:0%
happens without you doing anything
likewise<00:05:06.970><c> if</c><00:05:07.300><c> we</c><00:05:07.360><c> have</c><00:05:07.510><c> a</c><00:05:07.540><c> method</c><00:05:07.870><c> that</c>

00:05:07.890 --> 00:05:07.900 align:start position:0%
likewise if we have a method that
 

00:05:07.900 --> 00:05:10.140 align:start position:0%
likewise if we have a method that
expects<00:05:08.350><c> a</c><00:05:08.470><c> primitive</c><00:05:08.890><c> and</c><00:05:09.070><c> you</c><00:05:09.580><c> instead</c><00:05:09.940><c> give</c>

00:05:10.140 --> 00:05:10.150 align:start position:0%
expects a primitive and you instead give
 

00:05:10.150 --> 00:05:12.780 align:start position:0%
expects a primitive and you instead give
it<00:05:10.300><c> a</c><00:05:10.420><c> reference</c><00:05:10.810><c> type</c><00:05:11.230><c> then</c><00:05:11.740><c> or</c><00:05:12.070><c> a</c><00:05:12.130><c> wrapper</c>

00:05:12.780 --> 00:05:12.790 align:start position:0%
it a reference type then or a wrapper
 

00:05:12.790 --> 00:05:14.820 align:start position:0%
it a reference type then or a wrapper
type<00:05:13.120><c> around</c><00:05:13.480><c> that</c><00:05:13.660><c> primitive</c><00:05:13.840><c> then</c><00:05:14.620><c> it</c><00:05:14.710><c> will</c>

00:05:14.820 --> 00:05:14.830 align:start position:0%
type around that primitive then it will
 

00:05:14.830 --> 00:05:17.640 align:start position:0%
type around that primitive then it will
automatically<00:05:15.400><c> unbox</c><00:05:15.820><c> it</c><00:05:15.970><c> for</c><00:05:16.210><c> you</c><00:05:16.300><c> okay</c><00:05:16.720><c> now</c>

00:05:17.640 --> 00:05:17.650 align:start position:0%
automatically unbox it for you okay now
 

00:05:17.650 --> 00:05:19.740 align:start position:0%
automatically unbox it for you okay now
a<00:05:17.680><c> couple</c><00:05:17.890><c> little</c><00:05:18.160><c> tiny</c><00:05:18.460><c> notes</c><00:05:18.730><c> one</c><00:05:19.240><c> is</c><00:05:19.390><c> if</c><00:05:19.600><c> you</c>

00:05:19.740 --> 00:05:19.750 align:start position:0%
a couple little tiny notes one is if you
 

00:05:19.750 --> 00:05:22.710 align:start position:0%
a couple little tiny notes one is if you
have<00:05:19.900><c> an</c><00:05:19.990><c> array</c><00:05:20.290><c> events</c><00:05:20.830><c> if</c><00:05:21.730><c> you</c><00:05:22.060><c> cannot</c><00:05:22.420><c> box</c>

00:05:22.710 --> 00:05:22.720 align:start position:0%
have an array events if you cannot box
 

00:05:22.720 --> 00:05:24.600 align:start position:0%
have an array events if you cannot box
it<00:05:22.930><c> into</c><00:05:23.260><c> an</c><00:05:23.380><c> array</c><00:05:23.560><c> of</c><00:05:23.590><c> integers</c><00:05:24.130><c> and</c><00:05:24.370><c> vice</c>

00:05:24.600 --> 00:05:24.610 align:start position:0%
it into an array of integers and vice
 

00:05:24.610 --> 00:05:26.220 align:start position:0%
it into an array of integers and vice
versa<00:05:24.880><c> if</c><00:05:25.180><c> you</c><00:05:25.480><c> actually</c><00:05:25.660><c> need</c><00:05:25.900><c> to</c><00:05:25.960><c> make</c><00:05:26.200><c> a</c>

00:05:26.220 --> 00:05:26.230 align:start position:0%
versa if you actually need to make a
 

00:05:26.230 --> 00:05:27.810 align:start position:0%
versa if you actually need to make a
copy<00:05:26.500><c> for</c><00:05:26.650><c> some</c><00:05:26.920><c> reason</c><00:05:27.220><c> which</c><00:05:27.460><c> can</c><00:05:27.670><c> happen</c>

00:05:27.810 --> 00:05:27.820 align:start position:0%
copy for some reason which can happen
 

00:05:27.820 --> 00:05:29.670 align:start position:0%
copy for some reason which can happen
sometimes<00:05:28.120><c> then</c><00:05:28.930><c> you</c><00:05:29.020><c> actually</c><00:05:29.170><c> need</c><00:05:29.410><c> to</c><00:05:29.530><c> make</c>

00:05:29.670 --> 00:05:29.680 align:start position:0%
sometimes then you actually need to make
 

00:05:29.680 --> 00:05:32.250 align:start position:0%
sometimes then you actually need to make
a<00:05:29.710><c> manual</c><00:05:29.980><c> copy</c><00:05:30.480><c> another</c><00:05:31.480><c> is</c><00:05:31.720><c> that</c><00:05:31.930><c> the</c>

00:05:32.250 --> 00:05:32.260 align:start position:0%
a manual copy another is that the
 

00:05:32.260 --> 00:05:33.840 align:start position:0%
a manual copy another is that the
process<00:05:32.920><c> of</c><00:05:33.010><c> auto</c><00:05:33.220><c> boxing</c><00:05:33.670><c> and</c><00:05:33.790><c> unboxing</c>

00:05:33.840 --> 00:05:33.850 align:start position:0%
process of auto boxing and unboxing
 

00:05:33.850 --> 00:05:36.660 align:start position:0%
process of auto boxing and unboxing
actually<00:05:34.690><c> incurs</c><00:05:35.050><c> a</c><00:05:35.290><c> measurable</c><00:05:36.100><c> performance</c>

00:05:36.660 --> 00:05:36.670 align:start position:0%
actually incurs a measurable performance
 

00:05:36.670 --> 00:05:38.730 align:start position:0%
actually incurs a measurable performance
impact<00:05:37.000><c> so</c><00:05:37.540><c> the</c><00:05:37.900><c> very</c><00:05:38.080><c> fact</c><00:05:38.350><c> that</c><00:05:38.530><c> the</c>

00:05:38.730 --> 00:05:38.740 align:start position:0%
impact so the very fact that the
 

00:05:38.740 --> 00:05:41.010 align:start position:0%
impact so the very fact that the
ArrayList<00:05:39.220><c> class</c><00:05:39.280><c> takes</c><00:05:39.970><c> capital</c><00:05:40.210><c> I</c><00:05:40.540><c> integers</c>

00:05:41.010 --> 00:05:41.020 align:start position:0%
ArrayList class takes capital I integers
 

00:05:41.020 --> 00:05:42.810 align:start position:0%
ArrayList class takes capital I integers
means<00:05:41.470><c> if</c><00:05:41.590><c> it</c><00:05:41.680><c> performance</c><00:05:42.160><c> won't</c><00:05:42.400><c> be</c><00:05:42.550><c> quite</c>

00:05:42.810 --> 00:05:42.820 align:start position:0%
means if it performance won't be quite
 

00:05:42.820 --> 00:05:45.270 align:start position:0%
means if it performance won't be quite
as<00:05:42.850><c> good</c><00:05:43.180><c> as</c><00:05:43.390><c> a</c><00:05:44.080><c> version</c><00:05:44.440><c> of</c><00:05:44.650><c> ArrayList</c><00:05:44.920><c> that</c>

00:05:45.270 --> 00:05:45.280 align:start position:0%
as good as a version of ArrayList that
 

00:05:45.280 --> 00:05:48.000 align:start position:0%
as good as a version of ArrayList that
is<00:05:45.370><c> hard</c><00:05:45.670><c> to</c><00:05:45.760><c> hardwired</c><00:05:46.660><c> to</c><00:05:47.290><c> handle</c><00:05:47.740><c> the</c><00:05:47.830><c> int</c>

00:05:48.000 --> 00:05:48.010 align:start position:0%
is hard to hardwired to handle the int
 

00:05:48.010 --> 00:05:51.120 align:start position:0%
is hard to hardwired to handle the int
primitive<00:05:48.550><c> type</c><00:05:49.170><c> another</c><00:05:50.170><c> big</c><00:05:50.380><c> issue</c><00:05:50.410><c> is</c><00:05:50.890><c> that</c>

00:05:51.120 --> 00:05:51.130 align:start position:0%
primitive type another big issue is that
 

00:05:51.130 --> 00:05:52.860 align:start position:0%
primitive type another big issue is that
wrapper<00:05:51.460><c> types</c><00:05:51.790><c> actually</c><00:05:52.090><c> use</c><00:05:52.180><c> much</c><00:05:52.630><c> more</c>

00:05:52.860 --> 00:05:52.870 align:start position:0%
wrapper types actually use much more
 

00:05:52.870 --> 00:05:54.840 align:start position:0%
wrapper types actually use much more
memory<00:05:53.170><c> than</c><00:05:53.380><c> primitive</c><00:05:54.040><c> types</c><00:05:54.250><c> and</c><00:05:54.700><c> we'll</c>

00:05:54.840 --> 00:05:54.850 align:start position:0%
memory than primitive types and we'll
 

00:05:54.850 --> 00:05:57.420 align:start position:0%
memory than primitive types and we'll
see<00:05:55.000><c> just</c><00:05:55.210><c> how</c><00:05:55.330><c> much</c><00:05:55.480><c> in</c><00:05:55.720><c> a</c><00:05:55.810><c> moment</c><00:05:56.190><c> now</c><00:05:57.190><c> I</c><00:05:57.220><c> want</c>

00:05:57.420 --> 00:05:57.430 align:start position:0%
see just how much in a moment now I want
 

00:05:57.430 --> 00:05:58.650 align:start position:0%
see just how much in a moment now I want
to<00:05:57.490><c> mention</c><00:05:57.730><c> that</c><00:05:57.820><c> wrapper</c><00:05:58.060><c> types</c><00:05:58.390><c> are</c><00:05:58.540><c> not</c>

00:05:58.650 --> 00:05:58.660 align:start position:0%
to mention that wrapper types are not
 

00:05:58.660 --> 00:05:59.070 align:start position:0%
to mention that wrapper types are not
magic

00:05:59.070 --> 00:05:59.080 align:start position:0%
magic
 

00:05:59.080 --> 00:06:00.420 align:start position:0%
magic
they<00:05:59.290><c> don't</c><00:05:59.440><c> do</c><00:05:59.590><c> anything</c><00:05:59.800><c> that</c><00:06:00.070><c> your</c><00:06:00.190><c> classes</c>

00:06:00.420 --> 00:06:00.430 align:start position:0%
they don't do anything that your classes
 

00:06:00.430 --> 00:06:02.190 align:start position:0%
they don't do anything that your classes
don't<00:06:00.670><c> do</c><00:06:00.910><c> for</c><00:06:01.090><c> the</c><00:06:01.180><c> most</c><00:06:01.300><c> part</c><00:06:01.540><c> and</c><00:06:01.960><c> in</c><00:06:02.050><c> fact</c>

00:06:02.190 --> 00:06:02.200 align:start position:0%
don't do for the most part and in fact
 

00:06:02.200 --> 00:06:04.260 align:start position:0%
don't do for the most part and in fact
we<00:06:02.320><c> can</c><00:06:02.440><c> click</c><00:06:02.620><c> right</c><00:06:02.800><c> here</c><00:06:03.040><c> oh</c><00:06:03.160><c> it's</c><00:06:03.370><c> me</c><00:06:03.520><c> we</c>

00:06:04.260 --> 00:06:04.270 align:start position:0%
we can click right here oh it's me we
 

00:06:04.270 --> 00:06:06.570 align:start position:0%
we can click right here oh it's me we
can<00:06:04.390><c> click</c><00:06:04.540><c> right</c><00:06:04.660><c> here</c><00:06:04.720><c> and</c><00:06:05.020><c> we</c><00:06:05.680><c> can</c><00:06:05.920><c> see</c><00:06:06.190><c> the</c>

00:06:06.570 --> 00:06:06.580 align:start position:0%
can click right here and we can see the
 

00:06:06.580 --> 00:06:08.700 align:start position:0%
can click right here and we can see the
code<00:06:06.820><c> for</c><00:06:07.090><c> the</c><00:06:07.180><c> integer</c><00:06:07.540><c> class</c><00:06:07.720><c> it's</c><00:06:08.110><c> long</c><00:06:08.320><c> has</c>

00:06:08.700 --> 00:06:08.710 align:start position:0%
code for the integer class it's long has
 

00:06:08.710 --> 00:06:10.620 align:start position:0%
code for the integer class it's long has
lots<00:06:08.920><c> of</c><00:06:09.040><c> stuff</c><00:06:09.220><c> in</c><00:06:09.370><c> it</c><00:06:09.520><c> I'm</c><00:06:10.210><c> not</c><00:06:10.330><c> gonna</c><00:06:10.450><c> go</c>

00:06:10.620 --> 00:06:10.630 align:start position:0%
lots of stuff in it I'm not gonna go
 

00:06:10.630 --> 00:06:12.390 align:start position:0%
lots of stuff in it I'm not gonna go
through<00:06:10.780><c> this</c><00:06:10.870><c> in</c><00:06:11.080><c> detail</c><00:06:11.110><c> although</c><00:06:12.100><c> I</c><00:06:12.220><c> won't</c>

00:06:12.390 --> 00:06:12.400 align:start position:0%
through this in detail although I won't
 

00:06:12.400 --> 00:06:16.640 align:start position:0%
through this in detail although I won't
note<00:06:12.730><c> that</c><00:06:12.970><c> it</c><00:06:13.150><c> has</c><00:06:13.300><c> a</c><00:06:13.330><c> private</c><00:06:14.430><c> int</c><00:06:15.510><c> privates</c>

00:06:16.640 --> 00:06:16.650 align:start position:0%
note that it has a private int privates
 

00:06:16.650 --> 00:06:19.890 align:start position:0%
note that it has a private int privates
final<00:06:17.650><c> and</c><00:06:18.040><c> yes</c><00:06:18.430><c> one</c><00:06:19.240><c> of</c><00:06:19.270><c> the</c><00:06:19.420><c> things</c><00:06:19.600><c> that</c><00:06:19.750><c> has</c>

00:06:19.890 --> 00:06:19.900 align:start position:0%
final and yes one of the things that has
 

00:06:19.900 --> 00:06:23.040 align:start position:0%
final and yes one of the things that has
is<00:06:20.140><c> on</c><00:06:20.320><c> line</c><00:06:20.800><c> 840</c><00:06:21.790><c> it</c><00:06:22.330><c> has</c><00:06:22.480><c> an</c><00:06:22.630><c> instance</c>

00:06:23.040 --> 00:06:23.050 align:start position:0%
is on line 840 it has an instance
 

00:06:23.050 --> 00:06:24.990 align:start position:0%
is on line 840 it has an instance
variable<00:06:23.140><c> which</c><00:06:23.890><c> is</c><00:06:24.040><c> called</c><00:06:24.220><c> private</c><00:06:24.640><c> final</c>

00:06:24.990 --> 00:06:25.000 align:start position:0%
variable which is called private final
 

00:06:25.000 --> 00:06:27.780 align:start position:0%
variable which is called private final
int<00:06:25.210><c> value</c><00:06:25.720><c> and</c><00:06:25.990><c> that</c><00:06:26.530><c> you</c><00:06:27.070><c> might</c><00:06:27.220><c> imagine</c><00:06:27.430><c> try</c>

00:06:27.780 --> 00:06:27.790 align:start position:0%
int value and that you might imagine try
 

00:06:27.790 --> 00:06:30.180 align:start position:0%
int value and that you might imagine try
and<00:06:27.910><c> guess</c><00:06:28.060><c> what</c><00:06:28.150><c> that</c><00:06:28.270><c> is</c><00:06:28.860><c> this</c><00:06:29.860><c> is</c><00:06:29.920><c> the</c><00:06:30.040><c> value</c>

00:06:30.180 --> 00:06:30.190 align:start position:0%
and guess what that is this is the value
 

00:06:30.190 --> 00:06:32.040 align:start position:0%
and guess what that is this is the value
that<00:06:30.490><c> when</c><00:06:30.610><c> you</c><00:06:30.700><c> create</c><00:06:30.940><c> an</c><00:06:31.060><c> integer</c><00:06:31.330><c> that</c><00:06:31.900><c> you</c>

00:06:32.040 --> 00:06:32.050 align:start position:0%
that when you create an integer that you
 

00:06:32.050 --> 00:06:34.170 align:start position:0%
that when you create an integer that you
wrap<00:06:32.590><c> the</c><00:06:32.980><c> thing</c><00:06:33.130><c> that</c><00:06:33.280><c> gets</c><00:06:33.370><c> boxed</c><00:06:33.760><c> up</c><00:06:33.910><c> gets</c>

00:06:34.170 --> 00:06:34.180 align:start position:0%
wrap the thing that gets boxed up gets
 

00:06:34.180 --> 00:06:36.540 align:start position:0%
wrap the thing that gets boxed up gets
put<00:06:34.390><c> in</c><00:06:34.480><c> this</c><00:06:34.600><c> variable</c><00:06:34.960><c> ultimately</c><00:06:35.470><c> and</c><00:06:36.370><c> so</c>

00:06:36.540 --> 00:06:36.550 align:start position:0%
put in this variable ultimately and so
 

00:06:36.550 --> 00:06:38.100 align:start position:0%
put in this variable ultimately and so
you<00:06:36.970><c> can</c><00:06:37.120><c> see</c><00:06:37.240><c> that</c><00:06:37.390><c> happening</c><00:06:37.690><c> right</c><00:06:37.840><c> here</c><00:06:37.900><c> in</c>

00:06:38.100 --> 00:06:38.110 align:start position:0%
you can see that happening right here in
 

00:06:38.110 --> 00:06:40.140 align:start position:0%
you can see that happening right here in
the<00:06:38.200><c> constructor</c><00:06:38.770><c> we</c><00:06:39.460><c> can</c><00:06:39.580><c> also</c><00:06:39.700><c> see</c><00:06:39.970><c> for</c>

00:06:40.140 --> 00:06:40.150 align:start position:0%
the constructor we can also see for
 

00:06:40.150 --> 00:06:40.810 align:start position:0%
the constructor we can also see for
example<00:06:40.540><c> the</c>

00:06:40.810 --> 00:06:40.820 align:start position:0%
example the
 

00:06:40.820 --> 00:06:43.990 align:start position:0%
example the
valueof<00:06:41.060><c> method</c><00:06:41.410><c> where</c><00:06:42.410><c> is</c><00:06:42.620><c> that</c><00:06:42.950><c> value</c><00:06:43.820><c> of</c>

00:06:43.990 --> 00:06:44.000 align:start position:0%
valueof method where is that value of
 

00:06:44.000 --> 00:06:46.330 align:start position:0%
valueof method where is that value of
okay<00:06:44.420><c> so</c><00:06:44.450><c> what</c><00:06:45.170><c> is</c><00:06:45.260><c> value</c><00:06:45.530><c> of</c><00:06:45.710><c> do</c><00:06:45.920><c> well</c><00:06:46.220><c> it's</c>

00:06:46.330 --> 00:06:46.340 align:start position:0%
okay so what is value of do well it's
 

00:06:46.340 --> 00:06:47.500 align:start position:0%
okay so what is value of do well it's
actually<00:06:46.430><c> a</c><00:06:46.610><c> little</c><00:06:46.730><c> more</c><00:06:46.790><c> complicated</c><00:06:47.420><c> than</c>

00:06:47.500 --> 00:06:47.510 align:start position:0%
actually a little more complicated than
 

00:06:47.510 --> 00:06:49.630 align:start position:0%
actually a little more complicated than
you<00:06:47.570><c> might</c><00:06:47.780><c> have</c><00:06:47.810><c> guessed</c><00:06:48.080><c> I</c><00:06:48.920><c> won't</c><00:06:49.370><c> go</c><00:06:49.490><c> into</c>

00:06:49.630 --> 00:06:49.640 align:start position:0%
you might have guessed I won't go into
 

00:06:49.640 --> 00:06:51.670 align:start position:0%
you might have guessed I won't go into
why<00:06:49.850><c> that</c><00:06:50.060><c> is</c><00:06:50.210><c> okay</c><00:06:50.660><c> now</c><00:06:51.410><c> you've</c><00:06:51.560><c> actually</c>

00:06:51.670 --> 00:06:51.680 align:start position:0%
why that is okay now you've actually
 

00:06:51.680 --> 00:06:53.650 align:start position:0%
why that is okay now you've actually
used<00:06:52.010><c> the</c><00:06:52.160><c> integer</c><00:06:52.490><c> class</c><00:06:52.670><c> before</c><00:06:53.120><c> in</c>

00:06:53.650 --> 00:06:53.660 align:start position:0%
used the integer class before in
 

00:06:53.660 --> 00:06:56.620 align:start position:0%
used the integer class before in
particular<00:06:54.170><c> you</c><00:06:54.440><c> used</c><00:06:54.710><c> the</c><00:06:55.100><c> parse</c><00:06:55.520><c> int</c><00:06:55.790><c> method</c>

00:06:56.620 --> 00:06:56.630 align:start position:0%
particular you used the parse int method
 

00:06:56.630 --> 00:06:58.660 align:start position:0%
particular you used the parse int method
and<00:06:57.230><c> so</c><00:06:57.380><c> the</c><00:06:57.650><c> point</c><00:06:57.860><c> here</c><00:06:57.920><c> is</c><00:06:58.070><c> simply</c><00:06:58.400><c> to</c><00:06:58.490><c> say</c>

00:06:58.660 --> 00:06:58.670 align:start position:0%
and so the point here is simply to say
 

00:06:58.670 --> 00:07:00.580 align:start position:0%
and so the point here is simply to say
this<00:06:59.030><c> integer</c><00:06:59.480><c> class</c><00:06:59.690><c> is</c><00:06:59.960><c> a</c><00:06:59.990><c> lot</c><00:07:00.230><c> like</c><00:07:00.440><c> the</c>

00:07:00.580 --> 00:07:00.590 align:start position:0%
this integer class is a lot like the
 

00:07:00.590 --> 00:07:01.690 align:start position:0%
this integer class is a lot like the
ones<00:07:00.770><c> that</c><00:07:01.100><c> you've</c><00:07:01.220><c> written</c><00:07:01.400><c> in</c><00:07:01.580><c> the</c><00:07:01.610><c> past</c>

00:07:01.690 --> 00:07:01.700 align:start position:0%
ones that you've written in the past
 

00:07:01.700 --> 00:07:03.880 align:start position:0%
ones that you've written in the past
this<00:07:02.180><c> one</c><00:07:02.360><c> happens</c><00:07:02.600><c> to</c><00:07:02.660><c> be</c><00:07:02.750><c> 1600</c><00:07:03.410><c> lines</c><00:07:03.620><c> long</c>

00:07:03.880 --> 00:07:03.890 align:start position:0%
this one happens to be 1600 lines long
 

00:07:03.890 --> 00:07:06.250 align:start position:0%
this one happens to be 1600 lines long
and<00:07:04.190><c> it</c><00:07:04.550><c> does</c><00:07:04.670><c> integer</c><00:07:05.060><c> stuff</c><00:07:05.330><c> only</c><00:07:05.510><c> but</c>

00:07:06.250 --> 00:07:06.260 align:start position:0%
and it does integer stuff only but
 

00:07:06.260 --> 00:07:07.930 align:start position:0%
and it does integer stuff only but
that's<00:07:06.410><c> what</c><00:07:06.560><c> it's</c><00:07:06.680><c> all</c><00:07:06.770><c> about</c><00:07:06.800><c> and</c><00:07:07.610><c> you</c><00:07:07.640><c> can</c>

00:07:07.930 --> 00:07:07.940 align:start position:0%
that's what it's all about and you can
 

00:07:07.940 --> 00:07:09.330 align:start position:0%
that's what it's all about and you can
actually<00:07:08.060><c> see</c><00:07:08.300><c> the</c><00:07:08.420><c> authors</c><00:07:08.750><c> of</c><00:07:08.780><c> this</c><00:07:09.080><c> class</c>

00:07:09.330 --> 00:07:09.340 align:start position:0%
actually see the authors of this class
 

00:07:09.340 --> 00:07:13.480 align:start position:0%
actually see the authors of this class
including<00:07:10.340><c> Josh</c><00:07:10.850><c> blue</c><00:07:11.320><c> who</c><00:07:12.320><c> wrote</c><00:07:12.650><c> some</c>

00:07:13.480 --> 00:07:13.490 align:start position:0%
including Josh blue who wrote some
 

00:07:13.490 --> 00:07:15.760 align:start position:0%
including Josh blue who wrote some
really<00:07:13.520><c> lovely</c><00:07:14.030><c> books</c><00:07:14.450><c> and</c><00:07:14.750><c> I</c><00:07:14.990><c> encourage</c><00:07:15.680><c> you</c>

00:07:15.760 --> 00:07:15.770 align:start position:0%
really lovely books and I encourage you
 

00:07:15.770 --> 00:07:17.260 align:start position:0%
really lovely books and I encourage you
if<00:07:15.800><c> we</c><00:07:15.950><c> actually</c><00:07:16.100><c> end</c><00:07:16.340><c> up</c><00:07:16.430><c> going</c><00:07:16.880><c> forward</c><00:07:17.090><c> with</c>

00:07:17.260 --> 00:07:17.270 align:start position:0%
if we actually end up going forward with
 

00:07:17.270 --> 00:07:19.300 align:start position:0%
if we actually end up going forward with
Java<00:07:17.510><c> to</c><00:07:17.960><c> check</c><00:07:18.110><c> out</c><00:07:18.260><c> his</c><00:07:18.410><c> effective</c><00:07:19.010><c> Java</c>

00:07:19.300 --> 00:07:19.310 align:start position:0%
Java to check out his effective Java
 

00:07:19.310 --> 00:07:23.200 align:start position:0%
Java to check out his effective Java
which<00:07:19.670><c> is</c><00:07:19.790><c> quite</c><00:07:20.030><c> good</c><00:07:20.650><c> okay</c><00:07:21.680><c> so</c><00:07:22.030><c> the</c><00:07:23.030><c> only</c>

00:07:23.200 --> 00:07:23.210 align:start position:0%
which is quite good okay so the only
 

00:07:23.210 --> 00:07:25.240 align:start position:0%
which is quite good okay so the only
thing<00:07:23.510><c> that's</c><00:07:23.720><c> special</c><00:07:23.840><c> about</c><00:07:24.530><c> the</c><00:07:24.800><c> integer</c>

00:07:25.240 --> 00:07:25.250 align:start position:0%
thing that's special about the integer
 

00:07:25.250 --> 00:07:27.190 align:start position:0%
thing that's special about the integer
class<00:07:25.370><c> capital</c><00:07:26.030><c> i</c><00:07:26.120><c> integer</c><00:07:26.510><c> that</c><00:07:27.140><c> is</c>

00:07:27.190 --> 00:07:27.200 align:start position:0%
class capital i integer that is
 

00:07:27.200 --> 00:07:28.660 align:start position:0%
class capital i integer that is
different<00:07:27.710><c> from</c><00:07:27.770><c> what</c><00:07:27.980><c> you</c><00:07:28.010><c> can</c><00:07:28.310><c> build</c><00:07:28.430><c> in</c>

00:07:28.660 --> 00:07:28.670 align:start position:0%
different from what you can build in
 

00:07:28.670 --> 00:07:31.510 align:start position:0%
different from what you can build in
java<00:07:28.850><c> is</c><00:07:29.300><c> auto</c><00:07:29.960><c> boxing</c><00:07:30.440><c> and</c><00:07:30.590><c> unboxing</c><00:07:30.650><c> you</c>

00:07:31.510 --> 00:07:31.520 align:start position:0%
java is auto boxing and unboxing you
 

00:07:31.520 --> 00:07:34.090 align:start position:0%
java is auto boxing and unboxing you
cannot<00:07:31.820><c> change</c><00:07:32.240><c> the</c><00:07:32.930><c> behavior</c><00:07:33.380><c> of</c><00:07:33.410><c> java</c><00:07:33.740><c> in</c><00:07:33.980><c> a</c>

00:07:34.090 --> 00:07:34.100 align:start position:0%
cannot change the behavior of java in a
 

00:07:34.100 --> 00:07:35.650 align:start position:0%
cannot change the behavior of java in a
way<00:07:34.250><c> that</c><00:07:34.460><c> will</c><00:07:34.580><c> allow</c><00:07:34.610><c> you</c><00:07:34.850><c> to</c><00:07:35.150><c> do</c><00:07:35.270><c> something</c>

00:07:35.650 --> 00:07:35.660 align:start position:0%
way that will allow you to do something
 

00:07:35.660 --> 00:07:37.420 align:start position:0%
way that will allow you to do something
like<00:07:35.810><c> boxing</c><00:07:36.320><c> and</c><00:07:36.440><c> auto</c><00:07:36.530><c> boxing</c><00:07:36.950><c> but</c><00:07:37.250><c> other</c>

00:07:37.420 --> 00:07:37.430 align:start position:0%
like boxing and auto boxing but other
 

00:07:37.430 --> 00:07:39.550 align:start position:0%
like boxing and auto boxing but other
than<00:07:37.610><c> that</c><00:07:37.670><c> single</c><00:07:38.210><c> superpower</c><00:07:38.690><c> of</c><00:07:38.960><c> integer</c>

00:07:39.550 --> 00:07:39.560 align:start position:0%
than that single superpower of integer
 

00:07:39.560 --> 00:07:42.880 align:start position:0%
than that single superpower of integer
it's<00:07:39.830><c> just</c><00:07:40.010><c> like</c><00:07:40.160><c> any</c><00:07:40.310><c> other</c><00:07:40.490><c> class</c><00:07:41.020><c> so</c><00:07:42.020><c> the</c>

00:07:42.880 --> 00:07:42.890 align:start position:0%
it's just like any other class so the
 

00:07:42.890 --> 00:07:44.320 align:start position:0%
it's just like any other class so the
last<00:07:43.190><c> little</c><00:07:43.400><c> thing</c><00:07:43.610><c> I</c><00:07:43.700><c> want</c><00:07:43.880><c> to</c><00:07:43.940><c> say</c><00:07:44.090><c> about</c>

00:07:44.320 --> 00:07:44.330 align:start position:0%
last little thing I want to say about
 

00:07:44.330 --> 00:07:46.090 align:start position:0%
last little thing I want to say about
wrapper<00:07:44.690><c> types</c><00:07:44.990><c> is</c><00:07:45.200><c> the</c><00:07:45.590><c> amount</c><00:07:45.770><c> of</c><00:07:45.920><c> memory</c>

00:07:46.090 --> 00:07:46.100 align:start position:0%
wrapper types is the amount of memory
 

00:07:46.100 --> 00:07:49.030 align:start position:0%
wrapper types is the amount of memory
that<00:07:46.430><c> they</c><00:07:46.550><c> take</c><00:07:46.730><c> up</c><00:07:47.140><c> so</c><00:07:48.140><c> let's</c><00:07:48.500><c> assume</c><00:07:48.830><c> just</c>

00:07:49.030 --> 00:07:49.040 align:start position:0%
that they take up so let's assume just
 

00:07:49.040 --> 00:07:50.830 align:start position:0%
that they take up so let's assume just
to<00:07:49.250><c> get</c><00:07:49.370><c> a</c><00:07:49.400><c> sense</c><00:07:49.640><c> of</c><00:07:49.760><c> why</c><00:07:49.910><c> let's</c><00:07:50.510><c> assume</c><00:07:50.780><c> that</c>

00:07:50.830 --> 00:07:50.840 align:start position:0%
to get a sense of why let's assume that
 

00:07:50.840 --> 00:07:53.410 align:start position:0%
to get a sense of why let's assume that
in<00:07:51.110><c> Java</c><00:07:51.320><c> all</c><00:07:51.560><c> of</c><00:07:51.920><c> our</c><00:07:52.010><c> addresses</c><00:07:52.580><c> are</c><00:07:52.760><c> 64</c><00:07:53.390><c> bits</c>

00:07:53.410 --> 00:07:53.420 align:start position:0%
in Java all of our addresses are 64 bits
 

00:07:53.420 --> 00:07:56.650 align:start position:0%
in Java all of our addresses are 64 bits
that<00:07:54.320><c> all</c><00:07:54.560><c> of</c><00:07:54.710><c> our</c><00:07:54.830><c> in</c><00:07:55.010><c> are</c><00:07:55.310><c> 32</c><00:07:55.760><c> bits</c><00:07:55.970><c> and</c><00:07:56.210><c> all</c>

00:07:56.650 --> 00:07:56.660 align:start position:0%
that all of our in are 32 bits and all
 

00:07:56.660 --> 00:07:59.200 align:start position:0%
that all of our in are 32 bits and all
Java<00:07:56.960><c> objects</c><00:07:57.500><c> take</c><00:07:57.740><c> 64</c><00:07:58.220><c> bits</c><00:07:58.460><c> plus</c><00:07:58.760><c> their</c>

00:07:59.200 --> 00:07:59.210 align:start position:0%
Java objects take 64 bits plus their
 

00:07:59.210 --> 00:08:01.900 align:start position:0%
Java objects take 64 bits plus their
fields<00:07:59.630><c> okay</c><00:08:00.080><c> and</c><00:08:00.980><c> let's</c><00:08:01.160><c> imagine</c><00:08:01.280><c> here</c><00:08:01.760><c> we</c>

00:08:01.900 --> 00:08:01.910 align:start position:0%
fields okay and let's imagine here we
 

00:08:01.910 --> 00:08:04.150 align:start position:0%
fields okay and let's imagine here we
have<00:08:02.150><c> the</c><00:08:02.480><c> method</c><00:08:02.840><c> of</c><00:08:03.050><c> bleep</c><00:08:03.290><c> blorp</c><00:08:03.620><c> which</c>

00:08:04.150 --> 00:08:04.160 align:start position:0%
have the method of bleep blorp which
 

00:08:04.160 --> 00:08:06.790 align:start position:0%
have the method of bleep blorp which
takes<00:08:04.460><c> no</c><00:08:05.420><c> arguments</c><00:08:05.750><c> creates</c><00:08:06.410><c> an</c><00:08:06.560><c> integer</c>

00:08:06.790 --> 00:08:06.800 align:start position:0%
takes no arguments creates an integer
 

00:08:06.800 --> 00:08:08.680 align:start position:0%
takes no arguments creates an integer
and<00:08:07.100><c> then</c><00:08:07.280><c> prints</c><00:08:07.550><c> it</c><00:08:07.610><c> out</c><00:08:07.700><c> so</c><00:08:08.420><c> what</c><00:08:08.480><c> I</c><00:08:08.540><c> want</c>

00:08:08.680 --> 00:08:08.690 align:start position:0%
and then prints it out so what I want
 

00:08:08.690 --> 00:08:10.120 align:start position:0%
and then prints it out so what I want
you<00:08:08.750><c> to</c><00:08:08.840><c> do</c><00:08:08.960><c> is</c><00:08:09.080><c> think</c><00:08:09.200><c> about</c><00:08:09.470><c> how</c><00:08:09.620><c> much</c><00:08:09.740><c> total</c>

00:08:10.120 --> 00:08:10.130 align:start position:0%
you to do is think about how much total
 

00:08:10.130 --> 00:08:12.220 align:start position:0%
you to do is think about how much total
memory<00:08:10.280><c> is</c><00:08:10.580><c> used</c><00:08:11.090><c> by</c><00:08:11.300><c> this</c><00:08:11.360><c> method</c><00:08:11.690><c> to</c><00:08:11.990><c> store</c>

00:08:12.220 --> 00:08:12.230 align:start position:0%
memory is used by this method to store
 

00:08:12.230 --> 00:08:14.290 align:start position:0%
memory is used by this method to store
all<00:08:12.440><c> of</c><00:08:12.650><c> its</c><00:08:12.770><c> local</c><00:08:13.100><c> variables</c><00:08:13.550><c> and</c><00:08:13.730><c> I'll</c>

00:08:14.290 --> 00:08:14.300 align:start position:0%
all of its local variables and I'll
 

00:08:14.300 --> 00:08:23.650 align:start position:0%
all of its local variables and I'll
reveal<00:08:14.630><c> it</c><00:08:14.810><c> in</c><00:08:14.960><c> a</c><00:08:15.140><c> moment</c>

00:08:23.650 --> 00:08:23.660 align:start position:0%
 
 

00:08:23.660 --> 00:08:26.630 align:start position:0%
 
okay<00:08:24.660><c> so</c><00:08:25.440><c> these</c><00:08:25.530><c> annotations</c><00:08:26.130><c> I</c><00:08:26.250><c> actually</c><00:08:26.370><c> did</c>

00:08:26.630 --> 00:08:26.640 align:start position:0%
okay so these annotations I actually did
 

00:08:26.640 --> 00:08:28.430 align:start position:0%
okay so these annotations I actually did
them<00:08:26.790><c> live</c><00:08:26.970><c> during</c><00:08:27.390><c> the</c><00:08:27.510><c> live</c><00:08:27.750><c> version</c><00:08:28.140><c> in</c>

00:08:28.430 --> 00:08:28.440 align:start position:0%
them live during the live version in
 

00:08:28.440 --> 00:08:30.410 align:start position:0%
them live during the live version in
this<00:08:28.560><c> lecture</c><00:08:28.890><c> so</c><00:08:29.820><c> they're</c><00:08:29.940><c> already</c><00:08:30.090><c> here</c><00:08:30.300><c> and</c>

00:08:30.410 --> 00:08:30.420 align:start position:0%
this lecture so they're already here and
 

00:08:30.420 --> 00:08:32.030 align:start position:0%
this lecture so they're already here and
they<00:08:30.510><c> give</c><00:08:30.660><c> you</c><00:08:30.750><c> a</c><00:08:30.810><c> substantial</c><00:08:31.110><c> hint</c><00:08:31.530><c> this</c>

00:08:32.030 --> 00:08:32.040 align:start position:0%
they give you a substantial hint this
 

00:08:32.040 --> 00:08:33.740 align:start position:0%
they give you a substantial hint this
question<00:08:32.430><c> isn't</c><00:08:32.580><c> super</c><00:08:33.000><c> interesting</c><00:08:33.360><c> but</c><00:08:33.480><c> you</c>

00:08:33.740 --> 00:08:33.750 align:start position:0%
question isn't super interesting but you
 

00:08:33.750 --> 00:08:35.350 align:start position:0%
question isn't super interesting but you
know<00:08:33.840><c> I</c><00:08:34.410><c> just</c><00:08:34.470><c> wanted</c><00:08:34.830><c> you</c><00:08:34.920><c> to</c><00:08:34.980><c> give</c><00:08:35.130><c> it</c>

00:08:35.350 --> 00:08:35.360 align:start position:0%
know I just wanted you to give it
 

00:08:35.360 --> 00:08:38.390 align:start position:0%
know I just wanted you to give it
thought<00:08:36.360><c> to</c><00:08:36.750><c> it</c><00:08:36.900><c> because</c><00:08:37.770><c> I</c><00:08:37.980><c> you</c><00:08:38.130><c> know</c>

00:08:38.390 --> 00:08:38.400 align:start position:0%
thought to it because I you know
 

00:08:38.400 --> 00:08:39.620 align:start position:0%
thought to it because I you know
wouldn't<00:08:38.700><c> be</c><00:08:38.820><c> watched</c><00:08:39.000><c> on</c><00:08:39.150><c> the</c><00:08:39.240><c> talk</c><00:08:39.420><c> for</c><00:08:39.570><c> a</c>

00:08:39.620 --> 00:08:39.630 align:start position:0%
wouldn't be watched on the talk for a
 

00:08:39.630 --> 00:08:41.000 align:start position:0%
wouldn't be watched on the talk for a
long<00:08:39.780><c> time</c><00:08:39.960><c> and</c><00:08:40.200><c> something's</c><00:08:40.440><c> not</c><00:08:40.590><c> exciting</c>

00:08:41.000 --> 00:08:41.010 align:start position:0%
long time and something's not exciting
 

00:08:41.010 --> 00:08:42.500 align:start position:0%
long time and something's not exciting
you<00:08:41.100><c> kind</c><00:08:41.280><c> of</c><00:08:41.370><c> glaze</c><00:08:41.550><c> over</c><00:08:41.730><c> so</c><00:08:42.090><c> this</c><00:08:42.180><c> is</c><00:08:42.270><c> my</c><00:08:42.390><c> way</c>

00:08:42.500 --> 00:08:42.510 align:start position:0%
you kind of glaze over so this is my way
 

00:08:42.510 --> 00:08:44.270 align:start position:0%
you kind of glaze over so this is my way
to<00:08:42.540><c> trick</c><00:08:42.810><c> you</c><00:08:42.930><c> into</c><00:08:42.960><c> actually</c><00:08:43.410><c> engaging</c><00:08:43.710><c> not</c>

00:08:44.270 --> 00:08:44.280 align:start position:0%
to trick you into actually engaging not
 

00:08:44.280 --> 00:08:47.420 align:start position:0%
to trick you into actually engaging not
really<00:08:44.580><c> a</c><00:08:44.610><c> big</c><00:08:45.060><c> puzzle</c><00:08:45.710><c> so</c><00:08:46.710><c> in</c><00:08:46.800><c> this</c><00:08:46.890><c> case</c><00:08:47.100><c> the</c>

00:08:47.420 --> 00:08:47.430 align:start position:0%
really a big puzzle so in this case the
 

00:08:47.430 --> 00:08:49.040 align:start position:0%
really a big puzzle so in this case the
total<00:08:47.610><c> amount</c><00:08:47.970><c> of</c><00:08:48.030><c> memory</c><00:08:48.150><c> that</c><00:08:48.300><c> it</c><00:08:48.510><c> takes</c><00:08:48.690><c> is</c>

00:08:49.040 --> 00:08:49.050 align:start position:0%
total amount of memory that it takes is
 

00:08:49.050 --> 00:08:50.390 align:start position:0%
total amount of memory that it takes is
well<00:08:49.380><c> let's</c><00:08:49.770><c> think</c><00:08:49.890><c> about</c><00:08:50.010><c> it</c>

00:08:50.390 --> 00:08:50.400 align:start position:0%
well let's think about it
 

00:08:50.400 --> 00:08:53.060 align:start position:0%
well let's think about it
bleep<00:08:50.850><c> blorp</c><00:08:51.060><c> has</c><00:08:51.360><c> a</c><00:08:51.390><c> variable</c><00:08:52.020><c> called</c><00:08:52.320><c> X</c><00:08:52.590><c> it</c>

00:08:53.060 --> 00:08:53.070 align:start position:0%
bleep blorp has a variable called X it
 

00:08:53.070 --> 00:08:55.610 align:start position:0%
bleep blorp has a variable called X it
is<00:08:53.130><c> in</c><00:08:53.370><c> an</c><00:08:53.640><c> integer</c><00:08:54.060><c> so</c><00:08:54.840><c> this</c><00:08:55.080><c> box</c><00:08:55.320><c> right</c><00:08:55.560><c> here</c>

00:08:55.610 --> 00:08:55.620 align:start position:0%
is in an integer so this box right here
 

00:08:55.620 --> 00:08:58.220 align:start position:0%
is in an integer so this box right here
is<00:08:55.950><c> as</c><00:08:56.100><c> annotated</c><00:08:56.820><c> 64</c><00:08:57.360><c> bits</c><00:08:57.570><c> it's</c><00:08:57.900><c> an</c><00:08:58.050><c> address</c>

00:08:58.220 --> 00:08:58.230 align:start position:0%
is as annotated 64 bits it's an address
 

00:08:58.230 --> 00:09:00.970 align:start position:0%
is as annotated 64 bits it's an address
effectively<00:08:59.190><c> or</c><00:08:59.340><c> a</c><00:08:59.400><c> reference</c><00:08:59.760><c> to</c><00:09:00.420><c> something</c>

00:09:00.970 --> 00:09:00.980 align:start position:0%
effectively or a reference to something
 

00:09:00.980 --> 00:09:04.580 align:start position:0%
effectively or a reference to something
then<00:09:01.980><c> here</c><00:09:02.400><c> we</c><00:09:02.550><c> have</c><00:09:02.580><c> a</c><00:09:03.380><c> object</c><00:09:04.380><c> that</c><00:09:04.470><c> was</c>

00:09:04.580 --> 00:09:04.590 align:start position:0%
then here we have a object that was
 

00:09:04.590 --> 00:09:06.890 align:start position:0%
then here we have a object that was
created<00:09:04.680><c> and</c><00:09:05.220><c> that</c><00:09:05.280><c> object</c><00:09:06.120><c> has</c><00:09:06.180><c> a</c><00:09:06.540><c> single</c>

00:09:06.890 --> 00:09:06.900 align:start position:0%
created and that object has a single
 

00:09:06.900 --> 00:09:08.600 align:start position:0%
created and that object has a single
field<00:09:07.140><c> which</c><00:09:07.500><c> is</c><00:09:07.650><c> the</c><00:09:07.740><c> one</c><00:09:07.860><c> we</c><00:09:08.010><c> just</c><00:09:08.040><c> saw</c><00:09:08.280><c> in</c>

00:09:08.600 --> 00:09:08.610 align:start position:0%
field which is the one we just saw in
 

00:09:08.610 --> 00:09:12.260 align:start position:0%
field which is the one we just saw in
the<00:09:08.790><c> source</c><00:09:09.000><c> code</c><00:09:09.210><c> that</c><00:09:09.480><c> private</c><00:09:10.460><c> final</c><00:09:11.460><c> int</c>

00:09:12.260 --> 00:09:12.270 align:start position:0%
the source code that private final int
 

00:09:12.270 --> 00:09:14.990 align:start position:0%
the source code that private final int
called<00:09:12.960><c> value</c><00:09:13.320><c> that's</c><00:09:13.950><c> 32</c><00:09:14.400><c> bits</c><00:09:14.640><c> we</c><00:09:14.880><c> know</c>

00:09:14.990 --> 00:09:15.000 align:start position:0%
called value that's 32 bits we know
 

00:09:15.000 --> 00:09:17.120 align:start position:0%
called value that's 32 bits we know
that's<00:09:15.150><c> a</c><00:09:15.210><c> 32</c><00:09:15.450><c> bit</c><00:09:15.660><c> box</c><00:09:15.930><c> and</c><00:09:16.230><c> then</c><00:09:16.800><c> we</c><00:09:16.890><c> said</c>

00:09:17.120 --> 00:09:17.130 align:start position:0%
that's a 32 bit box and then we said
 

00:09:17.130 --> 00:09:20.150 align:start position:0%
that's a 32 bit box and then we said
there's<00:09:17.850><c> other</c><00:09:18.120><c> information</c><00:09:18.680><c> 64</c><00:09:19.680><c> bits</c><00:09:19.890><c> of</c><00:09:20.040><c> it</c>

00:09:20.150 --> 00:09:20.160 align:start position:0%
there's other information 64 bits of it
 

00:09:20.160 --> 00:09:22.610 align:start position:0%
there's other information 64 bits of it
that<00:09:20.640><c> goes</c><00:09:20.910><c> with</c><00:09:21.090><c> every</c><00:09:21.480><c> object</c><00:09:21.930><c> and</c><00:09:22.110><c> we're</c>

00:09:22.610 --> 00:09:22.620 align:start position:0%
that goes with every object and we're
 

00:09:22.620 --> 00:09:23.840 align:start position:0%
that goes with every object and we're
not<00:09:22.710><c> gonna</c><00:09:22.800><c> say</c><00:09:23.010><c> what</c><00:09:23.160><c> that</c><00:09:23.280><c> is</c><00:09:23.340><c> I</c><00:09:23.460><c> mean</c><00:09:23.640><c> it</c>

00:09:23.840 --> 00:09:23.850 align:start position:0%
not gonna say what that is I mean it
 

00:09:23.850 --> 00:09:24.890 align:start position:0%
not gonna say what that is I mean it
might<00:09:23.940><c> have</c><00:09:24.090><c> to</c><00:09:24.180><c> do</c><00:09:24.270><c> with</c><00:09:24.300><c> garbage</c><00:09:24.720><c> collection</c>

00:09:24.890 --> 00:09:24.900 align:start position:0%
might have to do with garbage collection
 

00:09:24.900 --> 00:09:26.900 align:start position:0%
might have to do with garbage collection
or<00:09:25.320><c> who</c><00:09:25.650><c> really</c><00:09:25.920><c> knows</c><00:09:26.100><c> but</c><00:09:26.670><c> it's</c><00:09:26.820><c> just</c>

00:09:26.900 --> 00:09:26.910 align:start position:0%
or who really knows but it's just
 

00:09:26.910 --> 00:09:28.550 align:start position:0%
or who really knows but it's just
something<00:09:27.150><c> that</c><00:09:27.270><c> every</c><00:09:27.630><c> object</c><00:09:28.020><c> has</c><00:09:28.050><c> right</c>

00:09:28.550 --> 00:09:28.560 align:start position:0%
something that every object has right
 

00:09:28.560 --> 00:09:31.070 align:start position:0%
something that every object has right
you<00:09:28.740><c> can</c><00:09:28.890><c> just</c><00:09:28.920><c> imagine</c><00:09:29.220><c> it's</c><00:09:29.660><c> some</c><00:09:30.660><c> secret</c>

00:09:31.070 --> 00:09:31.080 align:start position:0%
you can just imagine it's some secret
 

00:09:31.080 --> 00:09:33.440 align:start position:0%
you can just imagine it's some secret
information<00:09:32.040><c> scrawled</c><00:09:32.640><c> on</c><00:09:32.820><c> top</c><00:09:33.000><c> of</c><00:09:33.150><c> it</c>

00:09:33.440 --> 00:09:33.450 align:start position:0%
information scrawled on top of it
 

00:09:33.450 --> 00:09:35.450 align:start position:0%
information scrawled on top of it
scrawled<00:09:34.140><c> on</c><00:09:34.350><c> top</c><00:09:34.620><c> of</c><00:09:34.770><c> every</c><00:09:34.980><c> object</c><00:09:35.400><c> you</c>

00:09:35.450 --> 00:09:35.460 align:start position:0%
scrawled on top of every object you
 

00:09:35.460 --> 00:09:37.730 align:start position:0%
scrawled on top of every object you
can't<00:09:35.820><c> access</c><00:09:36.150><c> so</c><00:09:36.930><c> if</c><00:09:36.990><c> we</c><00:09:37.080><c> just</c><00:09:37.200><c> add</c><00:09:37.350><c> these</c><00:09:37.560><c> up</c>

00:09:37.730 --> 00:09:37.740 align:start position:0%
can't access so if we just add these up
 

00:09:37.740 --> 00:09:40.640 align:start position:0%
can't access so if we just add these up
then<00:09:37.980><c> it's</c><00:09:38.370><c> just</c><00:09:38.550><c> 160</c><00:09:39.300><c> so</c><00:09:39.810><c> not</c><00:09:40.200><c> a</c><00:09:40.230><c> lot</c><00:09:40.380><c> of</c><00:09:40.410><c> depth</c>

00:09:40.640 --> 00:09:40.650 align:start position:0%
then it's just 160 so not a lot of depth
 

00:09:40.650 --> 00:09:41.030 align:start position:0%
then it's just 160 so not a lot of depth
there

00:09:41.030 --> 00:09:41.040 align:start position:0%
there
 

00:09:41.040 --> 00:09:43.280 align:start position:0%
there
so<00:09:41.520><c> that's</c><00:09:41.670><c> wrapper</c><00:09:41.970><c> types</c><00:09:42.210><c> and</c><00:09:42.720><c> the</c><00:09:42.840><c> glorious</c>

00:09:43.280 --> 00:09:43.290 align:start position:0%
so that's wrapper types and the glorious
 

00:09:43.290 --> 00:09:46.880 align:start position:0%
so that's wrapper types and the glorious
world<00:09:43.530><c> of</c><00:09:43.800><c> boxing</c><00:09:44.220><c> and</c><00:09:44.580><c> unboxing</c>

