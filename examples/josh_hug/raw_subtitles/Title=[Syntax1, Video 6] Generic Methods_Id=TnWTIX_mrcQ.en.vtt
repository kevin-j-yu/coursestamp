WEBVTT
Kind: captions
Language: en

00:00:00.030 --> 00:00:02.570 align:start position:0%
 
our<00:00:00.810><c> last</c><00:00:01.020><c> topic</c><00:00:01.290><c> of</c><00:00:01.500><c> this</c><00:00:01.620><c> video</c><00:00:01.770><c> is</c><00:00:01.949><c> generic</c>

00:00:02.570 --> 00:00:02.580 align:start position:0%
our last topic of this video is generic
 

00:00:02.580 --> 00:00:04.309 align:start position:0%
our last topic of this video is generic
methods<00:00:03.000><c> I</c><00:00:03.210><c> probably</c><00:00:03.840><c> should</c><00:00:04.049><c> have</c><00:00:04.080><c> warned</c>

00:00:04.309 --> 00:00:04.319 align:start position:0%
methods I probably should have warned
 

00:00:04.319 --> 00:00:05.690 align:start position:0%
methods I probably should have warned
you<00:00:04.410><c> one</c><00:00:04.560><c> of</c><00:00:04.680><c> the</c><00:00:04.740><c> early</c><00:00:05.009><c> segments</c><00:00:05.460><c> in</c><00:00:05.580><c> this</c>

00:00:05.690 --> 00:00:05.700 align:start position:0%
you one of the early segments in this
 

00:00:05.700 --> 00:00:07.670 align:start position:0%
you one of the early segments in this
video<00:00:06.000><c> series</c><00:00:06.240><c> that</c><00:00:06.810><c> with</c><00:00:07.319><c> a</c><00:00:07.350><c> name</c><00:00:07.649><c> like</c>

00:00:07.670 --> 00:00:07.680 align:start position:0%
video series that with a name like
 

00:00:07.680 --> 00:00:10.520 align:start position:0%
video series that with a name like
syntax<00:00:08.189><c> one</c><00:00:08.790><c> this</c><00:00:09.150><c> is</c><00:00:09.420><c> not</c><00:00:09.570><c> the</c><00:00:09.840><c> most</c><00:00:10.139><c> exciting</c>

00:00:10.520 --> 00:00:10.530 align:start position:0%
syntax one this is not the most exciting
 

00:00:10.530 --> 00:00:12.980 align:start position:0%
syntax one this is not the most exciting
lecture<00:00:10.830><c> and</c><00:00:11.490><c> in</c><00:00:11.670><c> fact</c><00:00:11.790><c> these</c><00:00:12.030><c> three</c><00:00:12.389><c> videos</c>

00:00:12.980 --> 00:00:12.990 align:start position:0%
lecture and in fact these three videos
 

00:00:12.990 --> 00:00:15.129 align:start position:0%
lecture and in fact these three videos
this<00:00:13.290><c> one</c><00:00:13.500><c> some</c><00:00:13.740><c> text</c><00:00:14.009><c> to</c><00:00:14.040><c> instant</c><00:00:14.400><c> text</c><00:00:14.639><c> three</c>

00:00:15.129 --> 00:00:15.139 align:start position:0%
this one some text to instant text three
 

00:00:15.139 --> 00:00:17.540 align:start position:0%
this one some text to instant text three
you<00:00:16.139><c> know</c><00:00:16.260><c> they're</c><00:00:16.470><c> useful</c><00:00:16.859><c> but</c><00:00:17.220><c> they're</c><00:00:17.460><c> not</c>

00:00:17.540 --> 00:00:17.550 align:start position:0%
you know they're useful but they're not
 

00:00:17.550 --> 00:00:19.880 align:start position:0%
you know they're useful but they're not
like<00:00:17.730><c> oh</c><00:00:17.880><c> wow</c><00:00:18.600><c> that's</c><00:00:18.840><c> beautiful</c><00:00:19.080><c> then</c><00:00:19.740><c> we're</c>

00:00:19.880 --> 00:00:19.890 align:start position:0%
like oh wow that's beautiful then we're
 

00:00:19.890 --> 00:00:21.349 align:start position:0%
like oh wow that's beautiful then we're
just<00:00:19.920><c> like</c><00:00:20.220><c> okay</c><00:00:20.670><c> that's</c><00:00:20.939><c> what</c><00:00:21.060><c> the</c><00:00:21.150><c> Java</c>

00:00:21.349 --> 00:00:21.359 align:start position:0%
just like okay that's what the Java
 

00:00:21.359 --> 00:00:24.019 align:start position:0%
just like okay that's what the Java
designer<00:00:21.720><c> has</c><00:00:21.900><c> decided</c><00:00:22.170><c> to</c><00:00:22.410><c> do</c><00:00:22.529><c> so</c><00:00:22.939><c> sorry</c><00:00:23.939><c> it</c>

00:00:24.019 --> 00:00:24.029 align:start position:0%
designer has decided to do so sorry it
 

00:00:24.029 --> 00:00:25.460 align:start position:0%
designer has decided to do so sorry it
seems<00:00:24.210><c> a</c><00:00:24.240><c> little</c><00:00:24.300><c> arbitrary</c><00:00:24.480><c> but</c><00:00:24.960><c> kind</c><00:00:25.410><c> of</c>

00:00:25.460 --> 00:00:25.470 align:start position:0%
seems a little arbitrary but kind of
 

00:00:25.470 --> 00:00:28.130 align:start position:0%
seems a little arbitrary but kind of
learning<00:00:26.240><c> so</c><00:00:27.240><c> in</c><00:00:27.300><c> this</c><00:00:27.390><c> case</c><00:00:27.630><c> what</c><00:00:28.019><c> we're</c>

00:00:28.130 --> 00:00:28.140 align:start position:0%
learning so in this case what we're
 

00:00:28.140 --> 00:00:29.660 align:start position:0%
learning so in this case what we're
gonna<00:00:28.230><c> do</c><00:00:28.439><c> in</c><00:00:28.590><c> order</c><00:00:28.800><c> to</c><00:00:28.890><c> understand</c><00:00:29.310><c> generic</c>

00:00:29.660 --> 00:00:29.670 align:start position:0%
gonna do in order to understand generic
 

00:00:29.670 --> 00:00:31.429 align:start position:0%
gonna do in order to understand generic
methods<00:00:30.029><c> is</c><00:00:30.510><c> we're</c><00:00:30.660><c> gonna</c><00:00:30.750><c> create</c><00:00:31.019><c> a</c><00:00:31.170><c> class</c>

00:00:31.429 --> 00:00:31.439 align:start position:0%
methods is we're gonna create a class
 

00:00:31.439 --> 00:00:33.110 align:start position:0%
methods is we're gonna create a class
called<00:00:31.740><c> map</c><00:00:31.949><c> helper</c><00:00:32.340><c> that's</c><00:00:32.520><c> gonna</c><00:00:32.910><c> have</c><00:00:33.000><c> two</c>

00:00:33.110 --> 00:00:33.120 align:start position:0%
called map helper that's gonna have two
 

00:00:33.120 --> 00:00:35.090 align:start position:0%
called map helper that's gonna have two
methods<00:00:33.450><c> one</c><00:00:34.290><c> of</c><00:00:34.410><c> them</c><00:00:34.500><c> is</c><00:00:34.620><c> gonna</c><00:00:34.770><c> be</c><00:00:34.920><c> called</c>

00:00:35.090 --> 00:00:35.100 align:start position:0%
methods one of them is gonna be called
 

00:00:35.100 --> 00:00:37.819 align:start position:0%
methods one of them is gonna be called
get<00:00:35.370><c> and</c><00:00:35.640><c> that</c><00:00:36.149><c> method</c><00:00:36.390><c> takes</c><00:00:36.719><c> a</c><00:00:36.930><c> map</c><00:00:37.140><c> 61b</c>

00:00:37.819 --> 00:00:37.829 align:start position:0%
get and that method takes a map 61b
 

00:00:37.829 --> 00:00:40.520 align:start position:0%
get and that method takes a map 61b
and<00:00:38.040><c> a</c><00:00:38.489><c> key</c><00:00:38.670><c> and</c><00:00:39.059><c> it</c><00:00:39.750><c> returns</c><00:00:40.020><c> the</c><00:00:40.140><c> value</c><00:00:40.290><c> of</c>

00:00:40.520 --> 00:00:40.530 align:start position:0%
and a key and it returns the value of
 

00:00:40.530 --> 00:00:42.350 align:start position:0%
and a key and it returns the value of
corresponding<00:00:41.070><c> to</c><00:00:41.190><c> this</c><00:00:41.340><c> key</c><00:00:41.550><c> in</c><00:00:41.700><c> the</c><00:00:41.850><c> map</c><00:00:42.000><c> if</c>

00:00:42.350 --> 00:00:42.360 align:start position:0%
corresponding to this key in the map if
 

00:00:42.360 --> 00:00:44.389 align:start position:0%
corresponding to this key in the map if
it<00:00:42.540><c> exists</c><00:00:42.930><c> otherwise</c><00:00:43.320><c> it</c><00:00:43.620><c> will</c><00:00:43.710><c> return</c><00:00:43.920><c> null</c>

00:00:44.389 --> 00:00:44.399 align:start position:0%
it exists otherwise it will return null
 

00:00:44.399 --> 00:00:46.910 align:start position:0%
it exists otherwise it will return null
now<00:00:45.180><c> that's</c><00:00:45.360><c> unlike</c><00:00:45.809><c> the</c><00:00:45.989><c> array</c><00:00:46.200><c> Maps</c><00:00:46.440><c> native</c>

00:00:46.910 --> 00:00:46.920 align:start position:0%
now that's unlike the array Maps native
 

00:00:46.920 --> 00:00:48.529 align:start position:0%
now that's unlike the array Maps native
get<00:00:47.160><c> method</c><00:00:47.520><c> the</c><00:00:47.640><c> thing</c><00:00:47.820><c> actually</c><00:00:47.969><c> built</c><00:00:48.239><c> into</c>

00:00:48.529 --> 00:00:48.539 align:start position:0%
get method the thing actually built into
 

00:00:48.539 --> 00:00:49.910 align:start position:0%
get method the thing actually built into
it<00:00:48.660><c> which</c><00:00:48.809><c> will</c><00:00:49.200><c> crash</c><00:00:49.410><c> if</c><00:00:49.620><c> the</c><00:00:49.739><c> key</c><00:00:49.890><c> doesn't</c>

00:00:49.910 --> 00:00:49.920 align:start position:0%
it which will crash if the key doesn't
 

00:00:49.920 --> 00:00:51.770 align:start position:0%
it which will crash if the key doesn't
exist<00:00:50.520><c> in</c><00:00:50.789><c> fact</c><00:00:50.969><c> if</c><00:00:51.090><c> we</c><00:00:51.180><c> look</c><00:00:51.300><c> at</c><00:00:51.420><c> a</c><00:00:51.449><c> Rhema</c>

00:00:51.770 --> 00:00:51.780 align:start position:0%
exist in fact if we look at a Rhema
 

00:00:51.780 --> 00:00:54.260 align:start position:0%
exist in fact if we look at a Rhema
we'll<00:00:52.590><c> see</c><00:00:52.770><c> that</c><00:00:52.949><c> get</c><00:00:53.340><c> it</c><00:00:53.699><c> just</c><00:00:53.879><c> gets</c><00:00:54.120><c> the</c>

00:00:54.260 --> 00:00:54.270 align:start position:0%
we'll see that get it just gets the
 

00:00:54.270 --> 00:00:56.270 align:start position:0%
we'll see that get it just gets the
index<00:00:54.600><c> and</c><00:00:54.840><c> if</c><00:00:55.199><c> it</c><00:00:55.289><c> doesn't</c><00:00:55.469><c> exist</c><00:00:55.800><c> it'll</c><00:00:56.039><c> try</c>

00:00:56.270 --> 00:00:56.280 align:start position:0%
index and if it doesn't exist it'll try
 

00:00:56.280 --> 00:00:57.920 align:start position:0%
index and if it doesn't exist it'll try
and<00:00:56.370><c> return</c><00:00:56.550><c> the</c><00:00:56.730><c> minus</c><00:00:57.000><c> one</c><00:00:57.149><c> item</c><00:00:57.510><c> and</c><00:00:57.690><c> it'll</c>

00:00:57.920 --> 00:00:57.930 align:start position:0%
and return the minus one item and it'll
 

00:00:57.930 --> 00:00:59.959 align:start position:0%
and return the minus one item and it'll
crash<00:00:58.109><c> so</c><00:00:58.949><c> map</c><00:00:59.100><c> helper</c><00:00:59.399><c> is</c><00:00:59.460><c> gonna</c><00:00:59.609><c> try</c><00:00:59.820><c> and</c><00:00:59.910><c> do</c>

00:00:59.959 --> 00:00:59.969 align:start position:0%
crash so map helper is gonna try and do
 

00:00:59.969 --> 00:01:02.270 align:start position:0%
crash so map helper is gonna try and do
better<00:01:00.090><c> now</c><00:01:00.989><c> this</c><00:01:01.140><c> is</c><00:01:01.289><c> terrible</c><00:01:01.649><c> class</c><00:01:01.890><c> design</c>

00:01:02.270 --> 00:01:02.280 align:start position:0%
better now this is terrible class design
 

00:01:02.280 --> 00:01:03.680 align:start position:0%
better now this is terrible class design
really<00:01:02.579><c> we</c><00:01:02.789><c> should</c><00:01:02.969><c> do</c><00:01:03.090><c> is</c><00:01:03.210><c> fix</c><00:01:03.390><c> your</c><00:01:03.539><c> array</c>

00:01:03.680 --> 00:01:03.690 align:start position:0%
really we should do is fix your array
 

00:01:03.690 --> 00:01:05.719 align:start position:0%
really we should do is fix your array
map<00:01:03.870><c> class</c><00:01:04.110><c> but</c><00:01:04.530><c> for</c><00:01:05.070><c> the</c><00:01:05.159><c> sake</c><00:01:05.309><c> of</c><00:01:05.339><c> argument</c>

00:01:05.719 --> 00:01:05.729 align:start position:0%
map class but for the sake of argument
 

00:01:05.729 --> 00:01:07.609 align:start position:0%
map class but for the sake of argument
just<00:01:06.090><c> for</c><00:01:06.210><c> pedagogical</c><00:01:06.570><c> reasons</c><00:01:06.869><c> we're</c><00:01:07.500><c> gonna</c>

00:01:07.609 --> 00:01:07.619 align:start position:0%
just for pedagogical reasons we're gonna
 

00:01:07.619 --> 00:01:10.340 align:start position:0%
just for pedagogical reasons we're gonna
build<00:01:07.830><c> it</c><00:01:07.979><c> this</c><00:01:08.130><c> way</c><00:01:08.280><c> so</c><00:01:08.640><c> that</c><00:01:08.729><c> we</c><00:01:08.790><c> can</c><00:01:08.909><c> do</c><00:01:09.350><c> the</c>

00:01:10.340 --> 00:01:10.350 align:start position:0%
build it this way so that we can do the
 

00:01:10.350 --> 00:01:11.179 align:start position:0%
build it this way so that we can do the
next<00:01:10.500><c> one</c><00:01:10.590><c> we're</c><00:01:10.740><c> gonna</c><00:01:10.799><c> write</c><00:01:11.040><c> will</c><00:01:11.159><c> be</c>

00:01:11.179 --> 00:01:11.189 align:start position:0%
next one we're gonna write will be
 

00:01:11.189 --> 00:01:13.070 align:start position:0%
next one we're gonna write will be
called<00:01:11.430><c> max</c><00:01:11.670><c> key</c><00:01:11.939><c> and</c><00:01:12.210><c> it</c><00:01:12.420><c> will</c><00:01:12.510><c> find</c><00:01:12.750><c> the</c><00:01:12.869><c> max</c>

00:01:13.070 --> 00:01:13.080 align:start position:0%
called max key and it will find the max
 

00:01:13.080 --> 00:01:14.499 align:start position:0%
called max key and it will find the max
key<00:01:13.260><c> in</c><00:01:13.380><c> a</c><00:01:13.439><c> map</c><00:01:13.590><c> 61b</c>

00:01:14.499 --> 00:01:14.509 align:start position:0%
key in a map 61b
 

00:01:14.509 --> 00:01:18.679 align:start position:0%
key in a map 61b
so<00:01:15.509><c> let's</c><00:01:15.720><c> start</c><00:01:15.930><c> with</c><00:01:16.049><c> the</c><00:01:16.140><c> get</c><00:01:16.350><c> method</c><00:01:17.600><c> so</c><00:01:18.600><c> in</c>

00:01:18.679 --> 00:01:18.689 align:start position:0%
so let's start with the get method so in
 

00:01:18.689 --> 00:01:20.030 align:start position:0%
so let's start with the get method so in
this<00:01:18.810><c> case</c><00:01:18.990><c> have</c><00:01:19.229><c> a</c><00:01:19.259><c> little</c><00:01:19.439><c> exercise</c><00:01:19.680><c> and</c>

00:01:20.030 --> 00:01:20.040 align:start position:0%
this case have a little exercise and
 

00:01:20.040 --> 00:01:22.940 align:start position:0%
this case have a little exercise and
we'll<00:01:20.460><c> just</c><00:01:20.580><c> jump</c><00:01:20.640><c> right</c><00:01:20.820><c> in</c><00:01:21.030><c> so</c><00:01:21.590><c> we</c><00:01:22.590><c> go</c><00:01:22.710><c> to</c><00:01:22.740><c> map</c>

00:01:22.940 --> 00:01:22.950 align:start position:0%
we'll just jump right in so we go to map
 

00:01:22.950 --> 00:01:26.270 align:start position:0%
we'll just jump right in so we go to map
helper<00:01:23.250><c> class</c><00:01:23.460><c> we</c><00:01:24.330><c> can</c><00:01:24.720><c> delete</c><00:01:25.110><c> these</c><00:01:25.860><c> comment</c>

00:01:26.270 --> 00:01:26.280 align:start position:0%
helper class we can delete these comment
 

00:01:26.280 --> 00:01:28.100 align:start position:0%
helper class we can delete these comment
marks<00:01:26.520><c> and</c><00:01:26.759><c> this</c><00:01:27.119><c> will</c><00:01:27.270><c> now</c><00:01:27.360><c> set</c><00:01:27.600><c> up</c><00:01:27.720><c> this</c><00:01:27.840><c> test</c>

00:01:28.100 --> 00:01:28.110 align:start position:0%
marks and this will now set up this test
 

00:01:28.110 --> 00:01:29.719 align:start position:0%
marks and this will now set up this test
we're<00:01:28.650><c> gonna</c><00:01:28.770><c> use</c><00:01:28.920><c> test</c><00:01:29.159><c> get</c><00:01:29.369><c> to</c><00:01:29.549><c> make</c><00:01:29.700><c> sure</c>

00:01:29.719 --> 00:01:29.729 align:start position:0%
we're gonna use test get to make sure
 

00:01:29.729 --> 00:01:31.490 align:start position:0%
we're gonna use test get to make sure
that<00:01:29.970><c> get</c><00:01:30.150><c> works</c><00:01:30.360><c> but</c><00:01:30.810><c> we</c><00:01:30.900><c> haven't</c><00:01:31.020><c> ridden</c><00:01:31.259><c> get</c>

00:01:31.490 --> 00:01:31.500 align:start position:0%
that get works but we haven't ridden get
 

00:01:31.500 --> 00:01:32.719 align:start position:0%
that get works but we haven't ridden get
yet<00:01:31.680><c> so</c><00:01:31.890><c> of</c><00:01:31.979><c> course</c><00:01:32.130><c> the</c><00:01:32.340><c> test</c><00:01:32.520><c> does</c><00:01:32.700><c> not</c>

00:01:32.719 --> 00:01:32.729 align:start position:0%
yet so of course the test does not
 

00:01:32.729 --> 00:01:35.929 align:start position:0%
yet so of course the test does not
compile<00:01:33.210><c> saying</c><00:01:34.140><c> doesn't</c><00:01:34.350><c> exist</c><00:01:34.740><c> now</c><00:01:34.979><c> if</c><00:01:35.880><c> we</c>

00:01:35.929 --> 00:01:35.939 align:start position:0%
compile saying doesn't exist now if we
 

00:01:35.939 --> 00:01:37.100 align:start position:0%
compile saying doesn't exist now if we
look<00:01:36.060><c> at</c><00:01:36.150><c> what's</c><00:01:36.329><c> going</c><00:01:36.450><c> on</c><00:01:36.659><c> here</c>

00:01:37.100 --> 00:01:37.110 align:start position:0%
look at what's going on here
 

00:01:37.110 --> 00:01:39.980 align:start position:0%
look at what's going on here
it<00:01:37.710><c> looks</c><00:01:37.920><c> like</c><00:01:38.040><c> map</c><00:01:38.490><c> helper</c><00:01:38.909><c> get</c><00:01:39.540><c> is</c><00:01:39.689><c> supposed</c>

00:01:39.980 --> 00:01:39.990 align:start position:0%
it looks like map helper get is supposed
 

00:01:39.990 --> 00:01:41.240 align:start position:0%
it looks like map helper get is supposed
to<00:01:40.049><c> be</c><00:01:40.200><c> a</c><00:01:40.229><c> static</c><00:01:40.500><c> method</c><00:01:40.770><c> because</c><00:01:41.100><c> we're</c>

00:01:41.240 --> 00:01:41.250 align:start position:0%
to be a static method because we're
 

00:01:41.250 --> 00:01:43.310 align:start position:0%
to be a static method because we're
convenient<00:01:41.820><c> using</c><00:01:42.030><c> the</c><00:01:42.150><c> class</c><00:01:42.329><c> name</c><00:01:42.360><c> so</c><00:01:43.170><c> let's</c>

00:01:43.310 --> 00:01:43.320 align:start position:0%
convenient using the class name so let's
 

00:01:43.320 --> 00:01:45.109 align:start position:0%
convenient using the class name so let's
say<00:01:43.380><c> public</c><00:01:43.770><c> static</c><00:01:44.130><c> and</c><00:01:44.310><c> then</c><00:01:44.880><c> we'll</c><00:01:45.000><c> think</c>

00:01:45.109 --> 00:01:45.119 align:start position:0%
say public static and then we'll think
 

00:01:45.119 --> 00:01:46.429 align:start position:0%
say public static and then we'll think
okay<00:01:45.479><c> what's</c><00:01:45.659><c> it</c><00:01:45.780><c> supposed</c><00:01:45.840><c> to</c><00:01:46.020><c> do</c><00:01:46.170><c> it</c><00:01:46.290><c> looks</c>

00:01:46.429 --> 00:01:46.439 align:start position:0%
okay what's it supposed to do it looks
 

00:01:46.439 --> 00:01:48.980 align:start position:0%
okay what's it supposed to do it looks
like<00:01:46.560><c> it</c><00:01:46.680><c> returns</c><00:01:46.950><c> an</c><00:01:47.130><c> integer</c><00:01:47.659><c> and</c><00:01:48.659><c> it's</c>

00:01:48.980 --> 00:01:48.990 align:start position:0%
like it returns an integer and it's
 

00:01:48.990 --> 00:01:51.380 align:start position:0%
like it returns an integer and it's
called<00:01:49.200><c> get</c><00:01:49.470><c> and</c><00:01:49.920><c> it</c><00:01:50.100><c> takes</c><00:01:50.340><c> in</c><00:01:50.610><c> a</c><00:01:50.640><c> rain</c><00:01:51.000><c> or</c><00:01:51.180><c> it</c>

00:01:51.380 --> 00:01:51.390 align:start position:0%
called get and it takes in a rain or it
 

00:01:51.390 --> 00:01:52.670 align:start position:0%
called get and it takes in a rain or it
takes<00:01:51.540><c> a</c><00:01:51.630><c> map</c><00:01:51.869><c> 61v</c>

00:01:52.670 --> 00:01:52.680 align:start position:0%
takes a map 61v
 

00:01:52.680 --> 00:01:57.350 align:start position:0%
takes a map 61v
of<00:01:54.200><c> strings</c><00:01:55.200><c> two</c><00:01:55.799><c> integers</c><00:01:56.189><c> now</c><00:01:57.060><c> we'll</c><00:01:57.210><c> call</c>

00:01:57.350 --> 00:01:57.360 align:start position:0%
of strings two integers now we'll call
 

00:01:57.360 --> 00:02:01.940 align:start position:0%
of strings two integers now we'll call
that<00:01:57.479><c> I</c><00:01:58.320><c> don't</c><00:01:58.740><c> know</c><00:01:58.939><c> string</c><00:01:59.939><c> integer</c><00:02:00.390><c> map</c><00:02:00.950><c> and</c>

00:02:01.940 --> 00:02:01.950 align:start position:0%
that I don't know string integer map and
 

00:02:01.950 --> 00:02:05.510 align:start position:0%
that I don't know string integer map and
then<00:02:02.790><c> we</c><00:02:03.119><c> will</c><00:02:03.270><c> do</c><00:02:03.509><c> a</c><00:02:04.049><c> key</c><00:02:04.409><c> okay</c><00:02:04.619><c> or</c><00:02:05.130><c> not</c><00:02:05.250><c> a</c><00:02:05.310><c> key</c>

00:02:05.510 --> 00:02:05.520 align:start position:0%
then we will do a key okay or not a key
 

00:02:05.520 --> 00:02:08.809 align:start position:0%
then we will do a key okay or not a key
K<00:02:05.700><c> a</c><00:02:05.909><c> stream</c><00:02:06.180><c> key</c><00:02:06.829><c> and</c><00:02:07.829><c> then</c><00:02:08.220><c> we'll</c><00:02:08.550><c> do</c><00:02:08.640><c> some</c>

00:02:08.809 --> 00:02:08.819 align:start position:0%
K a stream key and then we'll do some
 

00:02:08.819 --> 00:02:10.770 align:start position:0%
K a stream key and then we'll do some
code<00:02:09.030><c> and</c><00:02:09.360><c> return</c><00:02:09.899><c> something</c><00:02:10.140><c> and</c>

00:02:10.770 --> 00:02:10.780 align:start position:0%
code and return something and
 

00:02:10.780 --> 00:02:12.900 align:start position:0%
code and return something and
get<00:02:10.929><c> there</c><00:02:11.080><c> in</c><00:02:11.140><c> a</c><00:02:11.200><c> bit</c><00:02:11.350><c> now</c><00:02:11.819><c> before</c><00:02:12.819><c> we</c><00:02:12.880><c> even</c>

00:02:12.900 --> 00:02:12.910 align:start position:0%
get there in a bit now before we even
 

00:02:12.910 --> 00:02:14.670 align:start position:0%
get there in a bit now before we even
get<00:02:13.270><c> there</c><00:02:13.510><c> they</c><00:02:13.990><c> actually</c><00:02:14.260><c> the</c><00:02:14.350><c> interesting</c>

00:02:14.670 --> 00:02:14.680 align:start position:0%
get there they actually the interesting
 

00:02:14.680 --> 00:02:16.500 align:start position:0%
get there they actually the interesting
part<00:02:15.069><c> of</c><00:02:15.130><c> this</c><00:02:15.250><c> is</c><00:02:15.430><c> not</c><00:02:15.580><c> the</c><00:02:15.730><c> code</c><00:02:15.910><c> it's</c><00:02:16.270><c> the</c>

00:02:16.500 --> 00:02:16.510 align:start position:0%
part of this is not the code it's the
 

00:02:16.510 --> 00:02:18.690 align:start position:0%
part of this is not the code it's the
signature<00:02:16.870><c> so</c><00:02:17.860><c> this</c><00:02:18.010><c> code</c><00:02:18.220><c> right</c><00:02:18.370><c> now</c><00:02:18.520><c> you'll</c>

00:02:18.690 --> 00:02:18.700 align:start position:0%
signature so this code right now you'll
 

00:02:18.700 --> 00:02:20.460 align:start position:0%
signature so this code right now you'll
notice<00:02:18.970><c> it's</c><00:02:19.150><c> compiling</c><00:02:19.540><c> but</c><00:02:20.140><c> this</c><00:02:20.260><c> get</c>

00:02:20.460 --> 00:02:20.470 align:start position:0%
notice it's compiling but this get
 

00:02:20.470 --> 00:02:22.020 align:start position:0%
notice it's compiling but this get
method<00:02:20.830><c> doesn't</c><00:02:21.220><c> do</c><00:02:21.370><c> what</c><00:02:21.550><c> it's</c><00:02:21.670><c> supposed</c><00:02:21.700><c> to</c>

00:02:22.020 --> 00:02:22.030 align:start position:0%
method doesn't do what it's supposed to
 

00:02:22.030 --> 00:02:24.449 align:start position:0%
method doesn't do what it's supposed to
it's<00:02:22.480><c> supposed</c><00:02:22.750><c> to</c><00:02:22.840><c> work</c><00:02:22.990><c> on</c><00:02:23.080><c> any</c><00:02:23.380><c> map</c><00:02:23.709><c> 61b</c>

00:02:24.449 --> 00:02:24.459 align:start position:0%
it's supposed to work on any map 61b
 

00:02:24.459 --> 00:02:26.430 align:start position:0%
it's supposed to work on any map 61b
you<00:02:24.640><c> give</c><00:02:24.790><c> me</c><00:02:24.940><c> any</c><00:02:25.060><c> map</c><00:02:25.270><c> 61b</c><00:02:25.959><c> and</c><00:02:26.200><c> it</c><00:02:26.290><c> should</c>

00:02:26.430 --> 00:02:26.440 align:start position:0%
you give me any map 61b and it should
 

00:02:26.440 --> 00:02:29.100 align:start position:0%
you give me any map 61b and it should
work<00:02:26.470><c> it</c><00:02:27.040><c> shouldn't</c><00:02:27.280><c> be</c><00:02:27.340><c> a</c><00:02:27.370><c> string</c><00:02:27.700><c> integer</c><00:02:28.110><c> so</c>

00:02:29.100 --> 00:02:29.110 align:start position:0%
work it shouldn't be a string integer so
 

00:02:29.110 --> 00:02:31.320 align:start position:0%
work it shouldn't be a string integer so
how<00:02:29.230><c> do</c><00:02:29.290><c> we</c><00:02:29.350><c> do</c><00:02:29.560><c> that</c><00:02:29.709><c> well</c><00:02:30.610><c> maybe</c><00:02:30.850><c> we</c><00:02:31.030><c> try</c><00:02:31.180><c> and</c>

00:02:31.320 --> 00:02:31.330 align:start position:0%
how do we do that well maybe we try and
 

00:02:31.330 --> 00:02:36.570 align:start position:0%
how do we do that well maybe we try and
do<00:02:31.420><c> something</c><00:02:31.600><c> like</c><00:02:31.840><c> V</c><00:02:32.140><c> K</c><00:02:33.150><c> V</c><00:02:34.200><c> K</c><00:02:35.459><c> but</c><00:02:36.459><c> we'll</c>

00:02:36.570 --> 00:02:36.580 align:start position:0%
do something like V K V K but we'll
 

00:02:36.580 --> 00:02:37.920 align:start position:0%
do something like V K V K but we'll
notice<00:02:36.790><c> that</c><00:02:36.880><c> it</c><00:02:37.000><c> doesn't</c><00:02:37.180><c> compile</c><00:02:37.540><c> it's</c><00:02:37.690><c> red</c>

00:02:37.920 --> 00:02:37.930 align:start position:0%
notice that it doesn't compile it's red
 

00:02:37.930 --> 00:02:39.510 align:start position:0%
notice that it doesn't compile it's red
and<00:02:38.230><c> in</c><00:02:38.739><c> this</c><00:02:38.830><c> case</c><00:02:39.069><c> it's</c><00:02:39.250><c> saying</c><00:02:39.340><c> I</c><00:02:39.459><c> don't</c>

00:02:39.510 --> 00:02:39.520 align:start position:0%
and in this case it's saying I don't
 

00:02:39.520 --> 00:02:41.610 align:start position:0%
and in this case it's saying I don't
know<00:02:39.700><c> you</c><00:02:39.760><c> mean</c><00:02:40.030><c> by</c><00:02:40.209><c> V</c><00:02:40.390><c> okay</c><00:02:40.720><c> I</c><00:02:40.989><c> mean</c><00:02:41.380><c> these</c><00:02:41.500><c> are</c>

00:02:41.610 --> 00:02:41.620 align:start position:0%
know you mean by V okay I mean these are
 

00:02:41.620 --> 00:02:43.290 align:start position:0%
know you mean by V okay I mean these are
just<00:02:41.800><c> arbitrary</c><00:02:41.950><c> symbols</c><00:02:42.550><c> as</c><00:02:42.670><c> far</c><00:02:42.850><c> as</c><00:02:42.970><c> Java</c>

00:02:43.290 --> 00:02:43.300 align:start position:0%
just arbitrary symbols as far as Java
 

00:02:43.300 --> 00:02:46.290 align:start position:0%
just arbitrary symbols as far as Java
cares<00:02:43.690><c> I</c><00:02:43.840><c> just</c><00:02:44.050><c> wrote</c><00:02:44.230><c> potato</c><00:02:44.560><c> and</c><00:02:44.950><c> like</c><00:02:45.300><c> sauce</c>

00:02:46.290 --> 00:02:46.300 align:start position:0%
cares I just wrote potato and like sauce
 

00:02:46.300 --> 00:02:48.900 align:start position:0%
cares I just wrote potato and like sauce
all<00:02:47.170><c> right</c><00:02:47.350><c> it's</c><00:02:48.220><c> hard</c><00:02:48.310><c> to</c><00:02:48.459><c> matter</c><00:02:48.580><c> which</c><00:02:48.700><c> ones</c>

00:02:48.900 --> 00:02:48.910 align:start position:0%
all right it's hard to matter which ones
 

00:02:48.910 --> 00:02:51.720 align:start position:0%
all right it's hard to matter which ones
which<00:02:49.090><c> okay</c><00:02:50.370><c> I'll</c><00:02:51.370><c> pick</c><00:02:51.489><c> some</c><00:02:51.640><c> different</c>

00:02:51.720 --> 00:02:51.730 align:start position:0%
which okay I'll pick some different
 

00:02:51.730 --> 00:02:53.660 align:start position:0%
which okay I'll pick some different
words<00:02:52.030><c> how</c><00:02:52.510><c> about</c><00:02:52.720><c> it</c><00:02:52.959><c> may</c><00:02:53.230><c> as</c><00:02:53.290><c> well</c><00:02:53.350><c> be</c>

00:02:53.660 --> 00:02:53.670 align:start position:0%
words how about it may as well be
 

00:02:53.670 --> 00:02:57.809 align:start position:0%
words how about it may as well be
vanadium<00:02:54.670><c> and</c><00:02:55.209><c> ketchup</c><00:02:55.959><c> right</c><00:02:56.709><c> I</c><00:02:56.980><c> think</c><00:02:57.610><c> those</c>

00:02:57.809 --> 00:02:57.819 align:start position:0%
vanadium and ketchup right I think those
 

00:02:57.819 --> 00:03:00.150 align:start position:0%
vanadium and ketchup right I think those
are<00:02:57.850><c> just</c><00:02:57.970><c> meaningless</c><00:02:58.269><c> symbols</c><00:02:59.069><c> so</c><00:03:00.069><c> the</c>

00:03:00.150 --> 00:03:00.160 align:start position:0%
are just meaningless symbols so the
 

00:03:00.160 --> 00:03:01.650 align:start position:0%
are just meaningless symbols so the
question<00:03:00.430><c> is</c><00:03:00.580><c> how</c><00:03:00.970><c> do</c><00:03:01.030><c> I</c><00:03:01.120><c> actually</c><00:03:01.269><c> get</c><00:03:01.480><c> that</c>

00:03:01.650 --> 00:03:01.660 align:start position:0%
question is how do I actually get that
 

00:03:01.660 --> 00:03:05.250 align:start position:0%
question is how do I actually get that
to<00:03:01.840><c> work</c><00:03:02.790><c> well</c><00:03:03.790><c> our</c><00:03:03.910><c> trick</c><00:03:04.120><c> before</c><00:03:04.330><c> as</c><00:03:04.780><c> we</c><00:03:05.140><c> go</c>

00:03:05.250 --> 00:03:05.260 align:start position:0%
to work well our trick before as we go
 

00:03:05.260 --> 00:03:07.770 align:start position:0%
to work well our trick before as we go
up<00:03:05.380><c> to</c><00:03:05.500><c> the</c><00:03:05.590><c> class</c><00:03:05.830><c> declaration</c><00:03:06.180><c> and</c><00:03:07.180><c> we</c><00:03:07.330><c> put</c><00:03:07.600><c> I</c>

00:03:07.770 --> 00:03:07.780 align:start position:0%
up to the class declaration and we put I
 

00:03:07.780 --> 00:03:11.759 align:start position:0%
up to the class declaration and we put I
don't<00:03:07.989><c> know</c><00:03:08.050><c> ketchup</c><00:03:08.550><c> vanadium</c><00:03:09.550><c> up</c><00:03:10.000><c> there</c><00:03:10.769><c> but</c>

00:03:11.759 --> 00:03:11.769 align:start position:0%
don't know ketchup vanadium up there but
 

00:03:11.769 --> 00:03:13.970 align:start position:0%
don't know ketchup vanadium up there but
the<00:03:11.860><c> problem</c><00:03:12.220><c> with</c><00:03:12.370><c> this</c><00:03:12.519><c> approach</c><00:03:12.580><c> is</c><00:03:13.239><c> that</c>

00:03:13.970 --> 00:03:13.980 align:start position:0%
the problem with this approach is that
 

00:03:13.980 --> 00:03:17.069 align:start position:0%
the problem with this approach is that
this<00:03:14.980><c> is</c><00:03:15.310><c> this</c><00:03:15.760><c> is</c><00:03:15.880><c> just</c><00:03:16.060><c> not</c><00:03:16.209><c> the</c><00:03:16.510><c> right</c><00:03:16.540><c> idea</c>

00:03:17.069 --> 00:03:17.079 align:start position:0%
this is this is just not the right idea
 

00:03:17.079 --> 00:03:19.170 align:start position:0%
this is this is just not the right idea
remember<00:03:17.260><c> the</c><00:03:17.739><c> way</c><00:03:17.890><c> these</c><00:03:18.190><c> work</c><00:03:18.519><c> is</c><00:03:18.730><c> that</c><00:03:19.060><c> when</c>

00:03:19.170 --> 00:03:19.180 align:start position:0%
remember the way these work is that when
 

00:03:19.180 --> 00:03:21.030 align:start position:0%
remember the way these work is that when
someone<00:03:19.420><c> instantiate</c><00:03:20.230><c> same</c><00:03:20.440><c> app</c><00:03:20.620><c> helper</c>

00:03:21.030 --> 00:03:21.040 align:start position:0%
someone instantiate same app helper
 

00:03:21.040 --> 00:03:23.250 align:start position:0%
someone instantiate same app helper
they're<00:03:21.459><c> gonna</c><00:03:21.549><c> pass</c><00:03:21.850><c> along</c><00:03:22.180><c> actual</c><00:03:22.959><c> type</c>

00:03:23.250 --> 00:03:23.260 align:start position:0%
they're gonna pass along actual type
 

00:03:23.260 --> 00:03:25.310 align:start position:0%
they're gonna pass along actual type
arguments<00:03:23.950><c> that</c><00:03:24.100><c> will</c><00:03:24.220><c> go</c><00:03:24.400><c> and</c><00:03:24.610><c> fill</c><00:03:24.880><c> these</c><00:03:25.120><c> in</c>

00:03:25.310 --> 00:03:25.320 align:start position:0%
arguments that will go and fill these in
 

00:03:25.320 --> 00:03:27.720 align:start position:0%
arguments that will go and fill these in
but<00:03:26.320><c> nobody's</c><00:03:26.709><c> ever</c><00:03:26.799><c> going</c><00:03:27.070><c> to</c><00:03:27.100><c> instantiate</c><00:03:27.430><c> a</c>

00:03:27.720 --> 00:03:27.730 align:start position:0%
but nobody's ever going to instantiate a
 

00:03:27.730 --> 00:03:30.690 align:start position:0%
but nobody's ever going to instantiate a
map<00:03:27.940><c> helper</c><00:03:28.299><c> we're</c><00:03:28.480><c> not</c><00:03:28.600><c> doing</c><00:03:28.900><c> new</c><00:03:29.700><c> map</c>

00:03:30.690 --> 00:03:30.700 align:start position:0%
map helper we're not doing new map
 

00:03:30.700 --> 00:03:34.080 align:start position:0%
map helper we're not doing new map
helper<00:03:31.650><c> string</c><00:03:32.650><c> integer</c><00:03:33.250><c> or</c><00:03:33.280><c> something</c><00:03:33.730><c> that</c>

00:03:34.080 --> 00:03:34.090 align:start position:0%
helper string integer or something that
 

00:03:34.090 --> 00:03:36.120 align:start position:0%
helper string integer or something that
doesn't<00:03:34.239><c> make</c><00:03:34.450><c> sense</c><00:03:34.690><c> right</c><00:03:35.110><c> we</c><00:03:35.890><c> don't</c><00:03:36.040><c> want</c>

00:03:36.120 --> 00:03:36.130 align:start position:0%
doesn't make sense right we don't want
 

00:03:36.130 --> 00:03:38.250 align:start position:0%
doesn't make sense right we don't want
to<00:03:36.310><c> do</c><00:03:36.430><c> that</c><00:03:36.549><c> so</c><00:03:37.390><c> we're</c><00:03:37.540><c> gonna</c><00:03:37.630><c> try</c><00:03:37.900><c> and</c><00:03:38.019><c> do</c>

00:03:38.250 --> 00:03:38.260 align:start position:0%
to do that so we're gonna try and do
 

00:03:38.260 --> 00:03:41.090 align:start position:0%
to do that so we're gonna try and do
here<00:03:38.290><c> is</c><00:03:38.650><c> avoid</c><00:03:39.070><c> the</c><00:03:39.340><c> need</c><00:03:39.609><c> to</c><00:03:40.150><c> make</c><00:03:40.299><c> the</c><00:03:40.450><c> class</c>

00:03:41.090 --> 00:03:41.100 align:start position:0%
here is avoid the need to make the class
 

00:03:41.100 --> 00:03:43.979 align:start position:0%
here is avoid the need to make the class
generic<00:03:42.359><c> instead</c><00:03:43.359><c> we're</c><00:03:43.480><c> gonna</c><00:03:43.600><c> make</c><00:03:43.810><c> the</c>

00:03:43.979 --> 00:03:43.989 align:start position:0%
generic instead we're gonna make the
 

00:03:43.989 --> 00:03:46.410 align:start position:0%
generic instead we're gonna make the
method<00:03:44.230><c> generic</c><00:03:45.040><c> so</c><00:03:45.880><c> it's</c><00:03:45.970><c> actually</c><00:03:46.239><c> a</c><00:03:46.269><c> pretty</c>

00:03:46.410 --> 00:03:46.420 align:start position:0%
method generic so it's actually a pretty
 

00:03:46.420 --> 00:03:48.420 align:start position:0%
method generic so it's actually a pretty
easy<00:03:46.540><c> thing</c><00:03:46.840><c> we</c><00:03:47.140><c> do</c><00:03:47.290><c> here</c><00:03:47.530><c> instead</c><00:03:47.709><c> of</c><00:03:48.130><c> putting</c>

00:03:48.420 --> 00:03:48.430 align:start position:0%
easy thing we do here instead of putting
 

00:03:48.430 --> 00:03:50.160 align:start position:0%
easy thing we do here instead of putting
it<00:03:48.579><c> up</c><00:03:48.700><c> here</c><00:03:48.730><c> we</c><00:03:49.420><c> just</c><00:03:49.630><c> stick</c><00:03:49.780><c> it</c><00:03:49.900><c> right</c><00:03:50.049><c> after</c>

00:03:50.160 --> 00:03:50.170 align:start position:0%
it up here we just stick it right after
 

00:03:50.170 --> 00:03:52.050 align:start position:0%
it up here we just stick it right after
the<00:03:50.380><c> word</c><00:03:50.500><c> static</c><00:03:50.799><c> and</c><00:03:51.130><c> now</c><00:03:51.549><c> it'll</c><00:03:51.700><c> work</c><00:03:51.790><c> the</c>

00:03:52.050 --> 00:03:52.060 align:start position:0%
the word static and now it'll work the
 

00:03:52.060 --> 00:03:54.270 align:start position:0%
the word static and now it'll work the
way<00:03:52.180><c> we</c><00:03:52.209><c> want</c><00:03:52.329><c> so</c><00:03:53.170><c> for</c><00:03:53.350><c> the</c><00:03:53.470><c> purposes</c><00:03:53.920><c> of</c><00:03:53.980><c> this</c>

00:03:54.270 --> 00:03:54.280 align:start position:0%
way we want so for the purposes of this
 

00:03:54.280 --> 00:03:57.270 align:start position:0%
way we want so for the purposes of this
single<00:03:54.700><c> method</c><00:03:55.109><c> this</c><00:03:56.109><c> ketchup</c><00:03:56.829><c> and</c><00:03:57.010><c> vanadium</c>

00:03:57.270 --> 00:03:57.280 align:start position:0%
single method this ketchup and vanadium
 

00:03:57.280 --> 00:03:59.220 align:start position:0%
single method this ketchup and vanadium
it<00:03:57.549><c> applies</c><00:03:57.790><c> only</c><00:03:58.000><c> to</c><00:03:58.180><c> this</c><00:03:58.420><c> tiny</c><00:03:58.660><c> scope</c><00:03:59.019><c> and</c>

00:03:59.220 --> 00:03:59.230 align:start position:0%
it applies only to this tiny scope and
 

00:03:59.230 --> 00:04:00.690 align:start position:0%
it applies only to this tiny scope and
that's<00:03:59.500><c> very</c><00:03:59.739><c> different</c><00:04:00.040><c> okay</c><00:04:00.430><c> just</c><00:04:00.640><c> to</c>

00:04:00.690 --> 00:04:00.700 align:start position:0%
that's very different okay just to
 

00:04:00.700 --> 00:04:01.949 align:start position:0%
that's very different okay just to
compare<00:04:00.940><c> and</c><00:04:01.060><c> contrast</c><00:04:01.090><c> with</c><00:04:01.510><c> a</c><00:04:01.600><c> ray</c><00:04:01.750><c> map</c>

00:04:01.949 --> 00:04:01.959 align:start position:0%
compare and contrast with a ray map
 

00:04:01.959 --> 00:04:04.680 align:start position:0%
compare and contrast with a ray map
where<00:04:02.500><c> the</c><00:04:02.739><c> kV</c><00:04:03.250><c> goes</c><00:04:03.489><c> up</c><00:04:03.640><c> at</c><00:04:03.760><c> the</c><00:04:03.850><c> top</c><00:04:04.060><c> and</c><00:04:04.299><c> it's</c>

00:04:04.680 --> 00:04:04.690 align:start position:0%
where the kV goes up at the top and it's
 

00:04:04.690 --> 00:04:06.750 align:start position:0%
where the kV goes up at the top and it's
shared<00:04:05.019><c> by</c><00:04:05.230><c> the</c><00:04:05.290><c> entire</c><00:04:05.739><c> program</c><00:04:06.280><c> everywhere</c>

00:04:06.750 --> 00:04:06.760 align:start position:0%
shared by the entire program everywhere
 

00:04:06.760 --> 00:04:09.150 align:start position:0%
shared by the entire program everywhere
here<00:04:07.420><c> it</c><00:04:07.660><c> applies</c><00:04:07.930><c> to</c><00:04:07.959><c> only</c><00:04:08.290><c> that</c><00:04:08.799><c> single</c>

00:04:09.150 --> 00:04:09.160 align:start position:0%
here it applies to only that single
 

00:04:09.160 --> 00:04:11.130 align:start position:0%
here it applies to only that single
method<00:04:09.459><c> now</c><00:04:10.180><c> I</c><00:04:10.209><c> don't</c><00:04:10.420><c> like</c><00:04:10.570><c> ketchup</c><00:04:10.989><c> and</c>

00:04:11.130 --> 00:04:11.140 align:start position:0%
method now I don't like ketchup and
 

00:04:11.140 --> 00:04:17.759 align:start position:0%
method now I don't like ketchup and
vanadium<00:04:11.380><c> so</c><00:04:11.769><c> I'll</c><00:04:11.859><c> go</c><00:04:12.010><c> with</c><00:04:12.040><c> kv</c><00:04:12.670><c> v</c><00:04:13.920><c> k</c><00:04:15.570><c> v</c><00:04:16.570><c> k</c><00:04:17.229><c> all</c>

00:04:17.759 --> 00:04:17.769 align:start position:0%
vanadium so I'll go with kv v k v k all
 

00:04:17.769 --> 00:04:18.120 align:start position:0%
vanadium so I'll go with kv v k v k all
right

00:04:18.120 --> 00:04:18.130 align:start position:0%
right
 

00:04:18.130 --> 00:04:22.230 align:start position:0%
right
so<00:04:19.060><c> that</c><00:04:19.209><c> is</c><00:04:19.450><c> our</c><00:04:19.720><c> get</c><00:04:20.260><c> method</c><00:04:20.650><c> and</c><00:04:21.580><c> now</c><00:04:22.090><c> we'll</c>

00:04:22.230 --> 00:04:22.240 align:start position:0%
so that is our get method and now we'll
 

00:04:22.240 --> 00:04:23.940 align:start position:0%
so that is our get method and now we'll
write<00:04:22.390><c> it</c><00:04:22.510><c> so</c><00:04:23.140><c> at</c><00:04:23.229><c> this</c><00:04:23.320><c> point</c><00:04:23.500><c> I</c><00:04:23.710><c> need</c><00:04:23.800><c> to</c>

00:04:23.940 --> 00:04:23.950 align:start position:0%
write it so at this point I need to
 

00:04:23.950 --> 00:04:24.570 align:start position:0%
write it so at this point I need to
actually<00:04:24.250><c> get</c>

00:04:24.570 --> 00:04:24.580 align:start position:0%
actually get
 

00:04:24.580 --> 00:04:28.710 align:start position:0%
actually get
value<00:04:24.849><c> back</c><00:04:25.060><c> so</c><00:04:25.599><c> I</c><00:04:25.960><c> can</c><00:04:26.080><c> do</c><00:04:26.439><c> the</c><00:04:26.650><c> following</c><00:04:27.720><c> we</c>

00:04:28.710 --> 00:04:28.720 align:start position:0%
value back so I can do the following we
 

00:04:28.720 --> 00:04:34.110 align:start position:0%
value back so I can do the following we
will<00:04:28.750><c> do</c><00:04:29.500><c> if</c><00:04:29.939><c> SCIM</c><00:04:30.939><c> contains</c><00:04:31.509><c> Kiki</c><00:04:33.000><c> then</c><00:04:34.000><c> we</c>

00:04:34.110 --> 00:04:34.120 align:start position:0%
will do if SCIM contains Kiki then we
 

00:04:34.120 --> 00:04:36.809 align:start position:0%
will do if SCIM contains Kiki then we
will<00:04:34.210><c> return</c><00:04:34.569><c> sim</c><00:04:35.020><c> get</c><00:04:35.530><c> key</c><00:04:35.770><c> we</c><00:04:36.460><c> need</c><00:04:36.580><c> to</c><00:04:36.729><c> add</c>

00:04:36.809 --> 00:04:36.819 align:start position:0%
will return sim get key we need to add
 

00:04:36.819 --> 00:04:39.749 align:start position:0%
will return sim get key we need to add
some<00:04:37.090><c> parentheses</c><00:04:38.310><c> and</c><00:04:39.310><c> if</c><00:04:39.430><c> it</c><00:04:39.490><c> doesn't</c>

00:04:39.749 --> 00:04:39.759 align:start position:0%
some parentheses and if it doesn't
 

00:04:39.759 --> 00:04:42.270 align:start position:0%
some parentheses and if it doesn't
contain<00:04:39.939><c> it</c><00:04:40.120><c> we'll</c><00:04:40.300><c> just</c><00:04:40.449><c> return</c><00:04:40.599><c> null</c><00:04:41.280><c> and</c>

00:04:42.270 --> 00:04:42.280 align:start position:0%
contain it we'll just return null and
 

00:04:42.280 --> 00:04:44.399 align:start position:0%
contain it we'll just return null and
then<00:04:42.460><c> here</c><00:04:42.759><c> we'll</c><00:04:43.000><c> run</c><00:04:43.180><c> our</c><00:04:43.330><c> test</c><00:04:43.539><c> that's</c><00:04:44.229><c> a</c>

00:04:44.399 --> 00:04:44.409 align:start position:0%
then here we'll run our test that's a
 

00:04:44.409 --> 00:04:45.959 align:start position:0%
then here we'll run our test that's a
very<00:04:44.620><c> terrible</c><00:04:44.919><c> test</c><00:04:45.250><c> because</c><00:04:45.610><c> it</c><00:04:45.729><c> doesn't</c>

00:04:45.959 --> 00:04:45.969 align:start position:0%
very terrible test because it doesn't
 

00:04:45.969 --> 00:04:48.390 align:start position:0%
very terrible test because it doesn't
actually<00:04:46.030><c> test</c><00:04:46.539><c> the</c><00:04:46.719><c> case</c><00:04:46.930><c> where</c><00:04:47.199><c> the</c><00:04:48.159><c> item</c>

00:04:48.390 --> 00:04:48.400 align:start position:0%
actually test the case where the item
 

00:04:48.400 --> 00:04:51.409 align:start position:0%
actually test the case where the item
doesn't<00:04:48.610><c> exist</c><00:04:48.969><c> but</c><00:04:49.180><c> let's</c><00:04:49.449><c> run</c><00:04:49.569><c> it</c><00:04:49.719><c> anyway</c><00:04:49.960><c> so</c>

00:04:51.409 --> 00:04:51.419 align:start position:0%
doesn't exist but let's run it anyway so
 

00:04:51.419 --> 00:04:53.640 align:start position:0%
doesn't exist but let's run it anyway so
this<00:04:52.419><c> is</c><00:04:52.629><c> map</c><00:04:53.110><c> helper</c>

00:04:53.640 --> 00:04:53.650 align:start position:0%
this is map helper
 

00:04:53.650 --> 00:04:56.159 align:start position:0%
this is map helper
let<00:04:54.580><c> me</c><00:04:54.639><c> run</c><00:04:54.789><c> our</c><00:04:54.909><c> test</c><00:04:55.150><c> and</c><00:04:55.389><c> it</c><00:04:55.569><c> passes</c><00:04:55.990><c> I</c>

00:04:56.159 --> 00:04:56.169 align:start position:0%
let me run our test and it passes I
 

00:04:56.169 --> 00:04:58.439 align:start position:0%
let me run our test and it passes I
don't<00:04:56.680><c> let's</c><00:04:56.830><c> make</c><00:04:56.919><c> the</c><00:04:57.039><c> test</c><00:04:57.219><c> even</c><00:04:57.430><c> better</c><00:04:57.610><c> so</c>

00:04:58.439 --> 00:04:58.449 align:start position:0%
don't let's make the test even better so
 

00:04:58.449 --> 00:05:04.670 align:start position:0%
don't let's make the test even better so
let's<00:04:58.599><c> do</c><00:04:58.750><c> map</c><00:04:59.020><c> helper</c><00:04:59.409><c> get</c><00:05:00.419><c> in</c><00:05:01.419><c> this</c><00:05:02.199><c> case</c><00:05:03.599><c> and</c>

00:05:04.670 --> 00:05:04.680 align:start position:0%
let's do map helper get in this case and
 

00:05:04.680 --> 00:05:11.240 align:start position:0%
let's do map helper get in this case and
we'll<00:05:05.680><c> do</c><00:05:05.800><c> an</c><00:05:05.949><c> assert</c><00:05:06.190><c> equals</c><00:05:06.840><c> null</c><00:05:07.840><c> that</c><00:05:09.120><c> okay</c>

00:05:11.240 --> 00:05:11.250 align:start position:0%
we'll do an assert equals null that okay
 

00:05:11.250 --> 00:05:13.379 align:start position:0%
we'll do an assert equals null that okay
so<00:05:12.250><c> this</c><00:05:12.340><c> will</c><00:05:12.460><c> also</c><00:05:12.669><c> check</c><00:05:12.849><c> the</c><00:05:13.030><c> null</c><00:05:13.180><c> case</c>

00:05:13.379 --> 00:05:13.389 align:start position:0%
so this will also check the null case
 

00:05:13.389 --> 00:05:17.640 align:start position:0%
so this will also check the null case
just<00:05:13.870><c> make</c><00:05:14.020><c> the</c><00:05:14.139><c> test</c><00:05:14.319><c> a</c><00:05:14.440><c> little</c><00:05:14.530><c> better</c><00:05:15.840><c> so</c><00:05:16.840><c> we</c>

00:05:17.640 --> 00:05:17.650 align:start position:0%
just make the test a little better so we
 

00:05:17.650 --> 00:05:20.450 align:start position:0%
just make the test a little better so we
run<00:05:17.889><c> it</c><00:05:18.240><c> and</c><00:05:19.240><c> it</c><00:05:19.479><c> seems</c><00:05:19.690><c> to</c><00:05:19.750><c> work</c><00:05:19.810><c> fine</c><00:05:20.050><c> good</c>

00:05:20.450 --> 00:05:20.460 align:start position:0%
run it and it seems to work fine good
 

00:05:20.460 --> 00:05:22.679 align:start position:0%
run it and it seems to work fine good
okay<00:05:21.460><c> so</c><00:05:21.520><c> that's</c><00:05:21.699><c> the</c><00:05:21.849><c> test</c><00:05:22.029><c> kit</c><00:05:22.270><c> method</c><00:05:22.569><c> so</c>

00:05:22.679 --> 00:05:22.689 align:start position:0%
okay so that's the test kit method so
 

00:05:22.689 --> 00:05:24.390 align:start position:0%
okay so that's the test kit method so
again<00:05:22.870><c> the</c><00:05:23.229><c> special</c><00:05:23.409><c> thing</c><00:05:23.770><c> here</c><00:05:23.979><c> was</c><00:05:24.099><c> making</c>

00:05:24.390 --> 00:05:24.400 align:start position:0%
again the special thing here was making
 

00:05:24.400 --> 00:05:26.339 align:start position:0%
again the special thing here was making
a<00:05:24.490><c> single</c><00:05:24.729><c> method</c><00:05:25.000><c> generic</c><00:05:25.449><c> as</c><00:05:25.599><c> opposed</c><00:05:25.960><c> to</c><00:05:26.080><c> an</c>

00:05:26.339 --> 00:05:26.349 align:start position:0%
a single method generic as opposed to an
 

00:05:26.349 --> 00:05:29.760 align:start position:0%
a single method generic as opposed to an
entire<00:05:26.650><c> class</c><00:05:27.569><c> so</c><00:05:28.569><c> now</c><00:05:28.690><c> let's</c><00:05:28.840><c> write</c><00:05:28.960><c> test</c><00:05:29.349><c> max</c>

00:05:29.760 --> 00:05:29.770 align:start position:0%
entire class so now let's write test max
 

00:05:29.770 --> 00:05:32.369 align:start position:0%
entire class so now let's write test max
key<00:05:30.039><c> so</c><00:05:30.879><c> in</c><00:05:30.969><c> this</c><00:05:31.060><c> case</c><00:05:31.270><c> we're</c><00:05:31.599><c> gonna</c><00:05:31.659><c> move</c><00:05:32.110><c> on</c>

00:05:32.369 --> 00:05:32.379 align:start position:0%
key so in this case we're gonna move on
 

00:05:32.379 --> 00:05:35.100 align:start position:0%
key so in this case we're gonna move on
to<00:05:32.620><c> well</c><00:05:33.580><c> actually</c><00:05:33.819><c> I'll</c><00:05:34.389><c> debrief</c><00:05:34.569><c> real</c><00:05:34.960><c> quick</c>

00:05:35.100 --> 00:05:35.110 align:start position:0%
to well actually I'll debrief real quick
 

00:05:35.110 --> 00:05:37.439 align:start position:0%
to well actually I'll debrief real quick
and<00:05:35.229><c> then</c><00:05:35.319><c> we'll</c><00:05:35.440><c> do</c><00:05:35.529><c> the</c><00:05:35.680><c> program</c><00:05:36.129><c> so</c><00:05:36.789><c> the</c><00:05:37.300><c> key</c>

00:05:37.439 --> 00:05:37.449 align:start position:0%
and then we'll do the program so the key
 

00:05:37.449 --> 00:05:40.350 align:start position:0%
and then we'll do the program so the key
point<00:05:37.719><c> here</c><00:05:37.750><c> is</c><00:05:38.080><c> that</c><00:05:38.440><c> I</c><00:05:38.800><c> set</c><00:05:39.310><c> up</c><00:05:39.340><c> the</c><00:05:39.759><c> type</c>

00:05:40.350 --> 00:05:40.360 align:start position:0%
point here is that I set up the type
 

00:05:40.360 --> 00:05:42.390 align:start position:0%
point here is that I set up the type
parameter<00:05:40.539><c> definitions</c><00:05:41.500><c> in</c><00:05:41.710><c> the</c><00:05:41.979><c> actual</c>

00:05:42.390 --> 00:05:42.400 align:start position:0%
parameter definitions in the actual
 

00:05:42.400 --> 00:05:44.640 align:start position:0%
parameter definitions in the actual
method<00:05:42.819><c> declaration</c><00:05:43.479><c> I</c><00:05:43.659><c> put</c><00:05:44.110><c> them</c><00:05:44.229><c> after</c><00:05:44.560><c> the</c>

00:05:44.640 --> 00:05:44.650 align:start position:0%
method declaration I put them after the
 

00:05:44.650 --> 00:05:47.430 align:start position:0%
method declaration I put them after the
word<00:05:44.770><c> static</c><00:05:45.069><c> and</c><00:05:45.909><c> in</c><00:05:46.089><c> this</c><00:05:46.180><c> case</c><00:05:46.419><c> desert</c><00:05:47.169><c> is</c>

00:05:47.430 --> 00:05:47.440 align:start position:0%
word static and in this case desert is
 

00:05:47.440 --> 00:05:50.369 align:start position:0%
word static and in this case desert is
just<00:05:47.740><c> who</c><00:05:48.009><c> knows</c><00:05:48.190><c> what</c><00:05:48.400><c> and</c><00:05:49.240><c> it's</c><00:05:49.389><c> and</c><00:05:49.719><c> here</c>

00:05:50.369 --> 00:05:50.379 align:start position:0%
just who knows what and it's and here
 

00:05:50.379 --> 00:05:52.079 align:start position:0%
just who knows what and it's and here
the<00:05:50.680><c> difference</c><00:05:51.009><c> is</c><00:05:51.190><c> that</c><00:05:51.370><c> rather</c><00:05:51.819><c> than</c>

00:05:52.079 --> 00:05:52.089 align:start position:0%
the difference is that rather than
 

00:05:52.089 --> 00:05:54.600 align:start position:0%
the difference is that rather than
specifying<00:05:52.360><c> at</c><00:05:53.020><c> runtime</c><00:05:53.560><c> which</c><00:05:54.099><c> types</c><00:05:54.400><c> we</c>

00:05:54.600 --> 00:05:54.610 align:start position:0%
specifying at runtime which types we
 

00:05:54.610 --> 00:05:56.339 align:start position:0%
specifying at runtime which types we
want<00:05:54.819><c> we</c><00:05:55.180><c> don't</c><00:05:55.360><c> put</c><00:05:55.539><c> map</c><00:05:55.719><c> helper</c><00:05:56.080><c> string</c>

00:05:56.339 --> 00:05:56.349 align:start position:0%
want we don't put map helper string
 

00:05:56.349 --> 00:05:58.409 align:start position:0%
want we don't put map helper string
integer<00:05:56.529><c> it</c><00:05:56.979><c> automatically</c><00:05:57.520><c> infers</c><00:05:57.909><c> it</c><00:05:58.120><c> from</c>

00:05:58.409 --> 00:05:58.419 align:start position:0%
integer it automatically infers it from
 

00:05:58.419 --> 00:06:00.329 align:start position:0%
integer it automatically infers it from
the<00:05:58.539><c> type</c><00:05:58.719><c> of</c><00:05:58.750><c> object</c><00:05:59.020><c> passed</c><00:05:59.500><c> so</c><00:06:00.009><c> that's</c><00:06:00.159><c> kind</c>

00:06:00.329 --> 00:06:00.339 align:start position:0%
the type of object passed so that's kind
 

00:06:00.339 --> 00:06:02.820 align:start position:0%
the type of object passed so that's kind
of<00:06:00.370><c> nice</c><00:06:00.550><c> now</c><00:06:01.539><c> you're</c><00:06:02.169><c> probably</c><00:06:02.289><c> getting</c><00:06:02.740><c> a</c>

00:06:02.820 --> 00:06:02.830 align:start position:0%
of nice now you're probably getting a
 

00:06:02.830 --> 00:06:04.920 align:start position:0%
of nice now you're probably getting a
little<00:06:02.949><c> dizzy</c><00:06:03.159><c> about</c><00:06:03.490><c> types</c><00:06:03.759><c> you</c><00:06:04.569><c> won't</c><00:06:04.719><c> have</c>

00:06:04.920 --> 00:06:04.930 align:start position:0%
little dizzy about types you won't have
 

00:06:04.930 --> 00:06:07.680 align:start position:0%
little dizzy about types you won't have
to<00:06:05.139><c> go</c><00:06:05.259><c> too</c><00:06:05.319><c> much</c><00:06:05.680><c> deeper</c><00:06:06.069><c> than</c><00:06:06.219><c> this</c><00:06:06.370><c> in</c><00:06:06.690><c> 61b</c>

00:06:07.680 --> 00:06:07.690 align:start position:0%
to go too much deeper than this in 61b
 

00:06:07.690 --> 00:06:09.869 align:start position:0%
to go too much deeper than this in 61b
but<00:06:08.680><c> if</c><00:06:08.770><c> you're</c><00:06:08.889><c> curious</c><00:06:09.039><c> you</c><00:06:09.610><c> know</c><00:06:09.639><c> there's</c>

00:06:09.869 --> 00:06:09.879 align:start position:0%
but if you're curious you know there's
 

00:06:09.879 --> 00:06:11.010 align:start position:0%
but if you're curious you know there's
plenty<00:06:10.000><c> more</c><00:06:10.120><c> to</c><00:06:10.300><c> learn</c><00:06:10.419><c> about</c><00:06:10.479><c> type</c><00:06:10.870><c> so</c>

00:06:11.010 --> 00:06:11.020 align:start position:0%
plenty more to learn about type so
 

00:06:11.020 --> 00:06:12.600 align:start position:0%
plenty more to learn about type so
there's<00:06:11.169><c> crazy</c><00:06:11.349><c> things</c><00:06:11.650><c> that</c><00:06:11.770><c> can</c><00:06:11.889><c> happen</c><00:06:12.039><c> and</c>

00:06:12.600 --> 00:06:12.610 align:start position:0%
there's crazy things that can happen and
 

00:06:12.610 --> 00:06:15.480 align:start position:0%
there's crazy things that can happen and
let's<00:06:12.789><c> see</c><00:06:12.879><c> just</c><00:06:13.060><c> one</c><00:06:13.629><c> more</c><00:06:13.839><c> for</c><00:06:14.020><c> now</c><00:06:14.400><c> so</c><00:06:15.400><c> in</c>

00:06:15.480 --> 00:06:15.490 align:start position:0%
let's see just one more for now so in
 

00:06:15.490 --> 00:06:17.760 align:start position:0%
let's see just one more for now so in
the<00:06:15.520><c> next</c><00:06:15.669><c> case</c><00:06:15.909><c> we're</c><00:06:16.060><c> gonna</c><00:06:16.120><c> do</c><00:06:16.330><c> max</c><00:06:16.569><c> key</c><00:06:16.839><c> so</c>

00:06:17.760 --> 00:06:17.770 align:start position:0%
the next case we're gonna do max key so
 

00:06:17.770 --> 00:06:20.100 align:start position:0%
the next case we're gonna do max key so
again<00:06:17.979><c> it's</c><00:06:18.129><c> an</c><00:06:18.219><c> exercise</c><00:06:18.610><c> you</c><00:06:18.639><c> can</c><00:06:18.789><c> try</c><00:06:19.120><c> and</c>

00:06:20.100 --> 00:06:20.110 align:start position:0%
again it's an exercise you can try and
 

00:06:20.110 --> 00:06:23.550 align:start position:0%
again it's an exercise you can try and
so<00:06:20.440><c> now</c><00:06:20.770><c> let's</c><00:06:21.069><c> go</c><00:06:21.699><c> and</c><00:06:21.849><c> do</c><00:06:21.940><c> it</c><00:06:22.080><c> so</c><00:06:23.080><c> the</c><00:06:23.139><c> max</c><00:06:23.349><c> key</c>

00:06:23.550 --> 00:06:23.560 align:start position:0%
so now let's go and do it so the max key
 

00:06:23.560 --> 00:06:25.469 align:start position:0%
so now let's go and do it so the max key
I'm<00:06:23.680><c> again</c><00:06:23.919><c> gonna</c><00:06:24.099><c> uncomment</c><00:06:24.669><c> this</c><00:06:24.819><c> and</c><00:06:25.120><c> I</c><00:06:25.360><c> had</c>

00:06:25.469 --> 00:06:25.479 align:start position:0%
I'm again gonna uncomment this and I had
 

00:06:25.479 --> 00:06:26.640 align:start position:0%
I'm again gonna uncomment this and I had
it<00:06:25.599><c> commented</c><00:06:26.020><c> out</c><00:06:26.080><c> because</c><00:06:26.379><c> it</c><00:06:26.500><c> won't</c>

00:06:26.640 --> 00:06:26.650 align:start position:0%
it commented out because it won't
 

00:06:26.650 --> 00:06:28.439 align:start position:0%
it commented out because it won't
compile<00:06:26.949><c> otherwise</c><00:06:27.370><c> because</c><00:06:27.879><c> we</c><00:06:28.029><c> do</c><00:06:28.120><c> not</c><00:06:28.240><c> have</c>

00:06:28.439 --> 00:06:28.449 align:start position:0%
compile otherwise because we do not have
 

00:06:28.449 --> 00:06:31.079 align:start position:0%
compile otherwise because we do not have
a<00:06:28.479><c> max</c><00:06:28.839><c> key</c><00:06:29.050><c> method</c><00:06:29.639><c> so</c><00:06:30.639><c> what</c><00:06:30.759><c> might</c><00:06:30.909><c> that</c><00:06:30.940><c> look</c>

00:06:31.079 --> 00:06:31.089 align:start position:0%
a max key method so what might that look
 

00:06:31.089 --> 00:06:31.469 align:start position:0%
a max key method so what might that look
like

00:06:31.469 --> 00:06:31.479 align:start position:0%
like
 

00:06:31.479 --> 00:06:33.480 align:start position:0%
like
well<00:06:32.289><c> max</c><00:06:32.469><c> key</c><00:06:32.709><c> is</c><00:06:32.830><c> supposed</c><00:06:33.039><c> to</c><00:06:33.069><c> return</c><00:06:33.339><c> the</c>

00:06:33.480 --> 00:06:33.490 align:start position:0%
well max key is supposed to return the
 

00:06:33.490 --> 00:06:35.969 align:start position:0%
well max key is supposed to return the
max<00:06:33.669><c> of</c><00:06:33.819><c> all</c><00:06:33.969><c> keys</c><00:06:34.240><c> and</c><00:06:34.659><c> if</c><00:06:35.349><c> we</c><00:06:35.469><c> look</c><00:06:35.649><c> at</c><00:06:35.800><c> what</c>

00:06:35.969 --> 00:06:35.979 align:start position:0%
max of all keys and if we look at what
 

00:06:35.979 --> 00:06:38.030 align:start position:0%
max of all keys and if we look at what
it<00:06:36.069><c> does</c><00:06:36.310><c> okay</c><00:06:36.550><c> well</c><00:06:37.029><c> again</c><00:06:37.180><c> we'll</c><00:06:37.659><c> do</c>

00:06:38.030 --> 00:06:38.040 align:start position:0%
it does okay well again we'll do
 

00:06:38.040 --> 00:06:40.640 align:start position:0%
it does okay well again we'll do
hard-coded<00:06:38.820><c> string</c><00:06:39.090><c> integer</c><00:06:39.300><c> trick</c><00:06:39.660><c> again</c><00:06:39.930><c> at</c>

00:06:40.640 --> 00:06:40.650 align:start position:0%
hard-coded string integer trick again at
 

00:06:40.650 --> 00:06:43.550 align:start position:0%
hard-coded string integer trick again at
first<00:06:40.950><c> and</c><00:06:41.760><c> we'll</c><00:06:41.940><c> say</c><00:06:42.120><c> okay</c><00:06:42.360><c> so</c><00:06:43.260><c> we</c><00:06:43.410><c> have</c><00:06:43.530><c> a</c>

00:06:43.550 --> 00:06:43.560 align:start position:0%
first and we'll say okay so we have a
 

00:06:43.560 --> 00:06:45.620 align:start position:0%
first and we'll say okay so we have a
method<00:06:43.950><c> it's</c><00:06:44.610><c> static</c><00:06:45.060><c> because</c><00:06:45.390><c> we're</c>

00:06:45.620 --> 00:06:45.630 align:start position:0%
method it's static because we're
 

00:06:45.630 --> 00:06:47.600 align:start position:0%
method it's static because we're
invoking<00:06:45.840><c> it</c><00:06:46.080><c> using</c><00:06:46.380><c> the</c><00:06:46.500><c> class</c><00:06:46.680><c> name</c><00:06:46.710><c> it</c>

00:06:47.600 --> 00:06:47.610 align:start position:0%
invoking it using the class name it
 

00:06:47.610 --> 00:06:50.930 align:start position:0%
invoking it using the class name it
returns<00:06:48.030><c> something</c><00:06:48.750><c> of</c><00:06:48.930><c> type</c><00:06:49.140><c> string</c><00:06:49.940><c> the</c>

00:06:50.930 --> 00:06:50.940 align:start position:0%
returns something of type string the
 

00:06:50.940 --> 00:06:53.450 align:start position:0%
returns something of type string the
method<00:06:51.450><c> is</c><00:06:51.570><c> named</c><00:06:51.810><c> max</c><00:06:52.140><c> key</c><00:06:52.410><c> it</c><00:06:53.010><c> takes</c><00:06:53.310><c> an</c>

00:06:53.450 --> 00:06:53.460 align:start position:0%
method is named max key it takes an
 

00:06:53.460 --> 00:06:55.280 align:start position:0%
method is named max key it takes an
array<00:06:53.580><c> or</c><00:06:54.060><c> a</c><00:06:54.120><c> map</c><00:06:54.420><c> 61b</c>

00:06:55.280 --> 00:06:55.290 align:start position:0%
array or a map 61b
 

00:06:55.290 --> 00:07:01.250 align:start position:0%
array or a map 61b
of<00:06:56.360><c> string</c><00:06:57.360><c> integers</c><00:06:58.940><c> and</c><00:06:59.940><c> we'll</c><00:07:00.930><c> call</c><00:07:01.110><c> this</c>

00:07:01.250 --> 00:07:01.260 align:start position:0%
of string integers and we'll call this
 

00:07:01.260 --> 00:07:05.360 align:start position:0%
of string integers and we'll call this
thing<00:07:01.700><c> map</c><00:07:02.700><c> string</c><00:07:03.030><c> integer</c><00:07:03.240><c> okay</c><00:07:03.930><c> I</c><00:07:04.370><c> don't</c>

00:07:05.360 --> 00:07:05.370 align:start position:0%
thing map string integer okay I don't
 

00:07:05.370 --> 00:07:07.100 align:start position:0%
thing map string integer okay I don't
know<00:07:05.490><c> what</c><00:07:05.610><c> we</c><00:07:05.700><c> called</c><00:07:05.910><c> it</c><00:07:06.060><c> sim</c><00:07:06.660><c> before</c>

00:07:07.100 --> 00:07:07.110 align:start position:0%
know what we called it sim before
 

00:07:07.110 --> 00:07:07.670 align:start position:0%
know what we called it sim before
whatever

00:07:07.670 --> 00:07:07.680 align:start position:0%
whatever
 

00:07:07.680 --> 00:07:13.220 align:start position:0%
whatever
okay<00:07:09.740><c> so</c><00:07:10.740><c> in</c><00:07:11.100><c> this</c><00:07:11.250><c> case</c><00:07:11.490><c> this</c><00:07:12.480><c> code</c><00:07:12.900><c> right</c>

00:07:13.220 --> 00:07:13.230 align:start position:0%
okay so in this case this code right
 

00:07:13.230 --> 00:07:16.010 align:start position:0%
okay so in this case this code right
here<00:07:13.500><c> if</c><00:07:13.710><c> we</c><00:07:13.770><c> return</c><00:07:14.310><c> null</c><00:07:14.670><c> should</c><00:07:15.660><c> compile</c>

00:07:16.010 --> 00:07:16.020 align:start position:0%
here if we return null should compile
 

00:07:16.020 --> 00:07:18.350 align:start position:0%
here if we return null should compile
everywhere<00:07:16.500><c> but</c><00:07:16.890><c> again</c><00:07:17.130><c> as</c><00:07:17.310><c> before</c><00:07:17.640><c> we</c><00:07:18.150><c> don't</c>

00:07:18.350 --> 00:07:18.360 align:start position:0%
everywhere but again as before we don't
 

00:07:18.360 --> 00:07:19.910 align:start position:0%
everywhere but again as before we don't
want<00:07:18.660><c> it</c><00:07:18.750><c> to</c><00:07:18.870><c> be</c><00:07:19.020><c> for</c><00:07:19.260><c> only</c><00:07:19.410><c> strings</c><00:07:19.740><c> and</c>

00:07:19.910 --> 00:07:19.920 align:start position:0%
want it to be for only strings and
 

00:07:19.920 --> 00:07:21.860 align:start position:0%
want it to be for only strings and
integers<00:07:20.120><c> so</c><00:07:21.120><c> we</c><00:07:21.240><c> already</c><00:07:21.330><c> know</c><00:07:21.450><c> how</c><00:07:21.630><c> to</c><00:07:21.660><c> deal</c>

00:07:21.860 --> 00:07:21.870 align:start position:0%
integers so we already know how to deal
 

00:07:21.870 --> 00:07:26.420 align:start position:0%
integers so we already know how to deal
with<00:07:22.050><c> that</c><00:07:22.200><c> so</c><00:07:22.560><c> we</c><00:07:22.710><c> can</c><00:07:22.830><c> simply</c><00:07:23.190><c> say</c><00:07:23.720><c> K</c><00:07:24.720><c> V</c><00:07:25.430><c> in</c>

00:07:26.420 --> 00:07:26.430 align:start position:0%
with that so we can simply say K V in
 

00:07:26.430 --> 00:07:29.300 align:start position:0%
with that so we can simply say K V in
this<00:07:26.610><c> case</c><00:07:26.850><c> the</c><00:07:27.270><c> string</c><00:07:27.720><c> is</c><00:07:27.900><c> our</c><00:07:28.050><c> K</c><00:07:28.320><c> this</c><00:07:29.070><c> is</c><00:07:29.130><c> K</c>

00:07:29.300 --> 00:07:29.310 align:start position:0%
this case the string is our K this is K
 

00:07:29.310 --> 00:07:32.330 align:start position:0%
this case the string is our K this is K
V<00:07:30.290><c> and</c><00:07:31.290><c> we</c><00:07:31.500><c> should</c><00:07:31.680><c> be</c><00:07:31.800><c> good</c><00:07:31.890><c> to</c><00:07:31.950><c> go</c>

00:07:32.330 --> 00:07:32.340 align:start position:0%
V and we should be good to go
 

00:07:32.340 --> 00:07:35.000 align:start position:0%
V and we should be good to go
so<00:07:33.090><c> it's</c><00:07:33.180><c> try</c><00:07:33.360><c> writing</c><00:07:33.690><c> our</c><00:07:33.810><c> code</c><00:07:33.890><c> and</c><00:07:34.890><c> we'll</c>

00:07:35.000 --> 00:07:35.010 align:start position:0%
so it's try writing our code and we'll
 

00:07:35.010 --> 00:07:37.430 align:start position:0%
so it's try writing our code and we'll
do<00:07:35.160><c> the</c><00:07:35.490><c> usual</c><00:07:35.790><c> stuff</c><00:07:36.000><c> you</c><00:07:36.060><c> might</c><00:07:36.270><c> imagine</c><00:07:36.510><c> so</c>

00:07:37.430 --> 00:07:37.440 align:start position:0%
do the usual stuff you might imagine so
 

00:07:37.440 --> 00:07:40.340 align:start position:0%
do the usual stuff you might imagine so
here<00:07:37.740><c> we</c><00:07:38.310><c> want</c><00:07:38.460><c> to</c><00:07:38.580><c> get</c><00:07:38.790><c> back</c><00:07:38.970><c> a</c><00:07:39.180><c> list</c><00:07:39.540><c> we</c><00:07:40.260><c> need</c>

00:07:40.340 --> 00:07:40.350 align:start position:0%
here we want to get back a list we need
 

00:07:40.350 --> 00:07:41.930 align:start position:0%
here we want to get back a list we need
to<00:07:40.470><c> go</c><00:07:40.590><c> through</c><00:07:40.800><c> all</c><00:07:40.890><c> the</c><00:07:41.010><c> keys</c><00:07:41.250><c> so</c><00:07:41.640><c> we'll</c><00:07:41.790><c> get</c>

00:07:41.930 --> 00:07:41.940 align:start position:0%
to go through all the keys so we'll get
 

00:07:41.940 --> 00:07:43.820 align:start position:0%
to go through all the keys so we'll get
a<00:07:42.000><c> list</c><00:07:42.240><c> of</c><00:07:42.450><c> keys</c><00:07:42.660><c> which</c><00:07:43.290><c> will</c><00:07:43.440><c> be</c><00:07:43.530><c> the</c><00:07:43.650><c> key</c>

00:07:43.820 --> 00:07:43.830 align:start position:0%
a list of keys which will be the key
 

00:07:43.830 --> 00:07:46.160 align:start position:0%
a list of keys which will be the key
list<00:07:44.070><c> which</c><00:07:44.760><c> is</c><00:07:44.850><c> equal</c><00:07:45.090><c> to</c><00:07:45.210><c> m</c><00:07:45.330><c> SI</c><00:07:45.660><c> dot</c><00:07:45.930><c> list</c>

00:07:46.160 --> 00:07:46.170 align:start position:0%
list which is equal to m SI dot list
 

00:07:46.170 --> 00:07:48.140 align:start position:0%
list which is equal to m SI dot list
it's<00:07:46.740><c> a</c><00:07:46.830><c> terrible</c><00:07:47.160><c> name</c><00:07:47.220><c> now</c><00:07:47.550><c> cuz</c><00:07:47.790><c> it's</c><00:07:47.940><c> you</c>

00:07:48.140 --> 00:07:48.150 align:start position:0%
it's a terrible name now cuz it's you
 

00:07:48.150 --> 00:07:50.650 align:start position:0%
it's a terrible name now cuz it's you
know<00:07:48.240><c> just</c><00:07:48.390><c> a</c><00:07:48.570><c> map</c><00:07:48.750><c> so</c><00:07:48.990><c> I'll</c><00:07:49.350><c> call</c><00:07:49.530><c> it</c><00:07:49.620><c> map</c>

00:07:50.650 --> 00:07:50.660 align:start position:0%
know just a map so I'll call it map
 

00:07:50.660 --> 00:07:52.670 align:start position:0%
know just a map so I'll call it map
single<00:07:51.660><c> letter</c><00:07:51.810><c> variable</c><00:07:51.900><c> names</c><00:07:52.410><c> aren't</c>

00:07:52.670 --> 00:07:52.680 align:start position:0%
single letter variable names aren't
 

00:07:52.680 --> 00:07:57.080 align:start position:0%
single letter variable names aren't
necessarily<00:07:52.980><c> great</c><00:07:53.310><c> but</c><00:07:54.440><c> maps</c><00:07:55.850><c> so</c><00:07:56.850><c> we</c><00:07:56.940><c> get</c><00:07:57.060><c> a</c>

00:07:57.080 --> 00:07:57.090 align:start position:0%
necessarily great but maps so we get a
 

00:07:57.090 --> 00:07:59.870 align:start position:0%
necessarily great but maps so we get a
map<00:07:57.300><c> we</c><00:07:57.630><c> get</c><00:07:57.750><c> the</c><00:07:58.430><c> what</c><00:07:59.430><c> we</c><00:07:59.490><c> call</c><00:07:59.670><c> the</c><00:07:59.700><c> same</c>

00:07:59.870 --> 00:07:59.880 align:start position:0%
map we get the what we call the same
 

00:07:59.880 --> 00:08:03.260 align:start position:0%
map we get the what we call the same
keys<00:08:01.220><c> and</c><00:08:02.220><c> then</c><00:08:02.400><c> we</c><00:08:02.790><c> will</c><00:08:02.940><c> go</c><00:08:03.060><c> through</c><00:08:03.210><c> that</c>

00:08:03.260 --> 00:08:03.270 align:start position:0%
keys and then we will go through that
 

00:08:03.270 --> 00:08:06.530 align:start position:0%
keys and then we will go through that
key<00:08:03.540><c> list</c><00:08:03.720><c> and</c><00:08:04.020><c> we'll</c><00:08:04.440><c> say</c><00:08:04.650><c> well</c><00:08:05.310><c> key</c><00:08:05.880><c> largest</c>

00:08:06.530 --> 00:08:06.540 align:start position:0%
key list and we'll say well key largest
 

00:08:06.540 --> 00:08:09.830 align:start position:0%
key list and we'll say well key largest
equals<00:08:07.110><c> key</c><00:08:07.380><c> list</c><00:08:07.590><c> get</c><00:08:08.370><c> 0</c><00:08:08.700><c> and</c><00:08:09.570><c> then</c><00:08:09.720><c> we'll</c>

00:08:09.830 --> 00:08:09.840 align:start position:0%
equals key list get 0 and then we'll
 

00:08:09.840 --> 00:08:11.720 align:start position:0%
equals key list get 0 and then we'll
just<00:08:10.020><c> go</c><00:08:10.140><c> through</c><00:08:10.350><c> each</c><00:08:10.500><c> element</c><00:08:11.220><c> of</c><00:08:11.340><c> the</c><00:08:11.520><c> key</c>

00:08:11.720 --> 00:08:11.730 align:start position:0%
just go through each element of the key
 

00:08:11.730 --> 00:08:15.250 align:start position:0%
just go through each element of the key
list<00:08:11.970><c> actually</c><00:08:12.600><c> we</c><00:08:12.900><c> can</c><00:08:13.020><c> just</c><00:08:13.230><c> do</c><00:08:13.380><c> for</c><00:08:13.860><c> K</c><00:08:14.280><c> in</c>

00:08:15.250 --> 00:08:15.260 align:start position:0%
list actually we can just do for K in
 

00:08:15.260 --> 00:08:22.580 align:start position:0%
list actually we can just do for K in
key<00:08:16.260><c> list</c><00:08:17.120><c> if</c><00:08:18.410><c> k</c><00:08:19.410><c> k</c><00:08:19.710><c> key</c><00:08:20.100><c> list</c><00:08:20.310><c> if</c><00:08:20.940><c> K</c><00:08:21.570><c> is</c><00:08:21.960><c> greater</c>

00:08:22.580 --> 00:08:22.590 align:start position:0%
key list if k k key list if K is greater
 

00:08:22.590 --> 00:08:24.560 align:start position:0%
key list if k k key list if K is greater
than<00:08:22.800><c> largest</c><00:08:23.400><c> and</c><00:08:23.910><c> we'll</c><00:08:24.030><c> say</c><00:08:24.180><c> largest</c>

00:08:24.560 --> 00:08:24.570 align:start position:0%
than largest and we'll say largest
 

00:08:24.570 --> 00:08:27.260 align:start position:0%
than largest and we'll say largest
equals<00:08:24.930><c> K</c><00:08:25.250><c> and</c><00:08:26.250><c> we</c><00:08:26.550><c> rendered</c><00:08:26.850><c> that</c><00:08:26.910><c> same</c><00:08:27.120><c> issue</c>

00:08:27.260 --> 00:08:27.270 align:start position:0%
equals K and we rendered that same issue
 

00:08:27.270 --> 00:08:29.630 align:start position:0%
equals K and we rendered that same issue
we<00:08:27.480><c> had</c><00:08:27.600><c> before</c><00:08:27.890><c> which</c><00:08:28.890><c> is</c><00:08:28.920><c> you</c><00:08:29.310><c> cannot</c>

00:08:29.630 --> 00:08:29.640 align:start position:0%
we had before which is you cannot
 

00:08:29.640 --> 00:08:33.290 align:start position:0%
we had before which is you cannot
compare<00:08:30.890><c> using</c><00:08:31.890><c> greater</c><00:08:32.190><c> than</c><00:08:32.430><c> arbitrary</c>

00:08:33.290 --> 00:08:33.300 align:start position:0%
compare using greater than arbitrary
 

00:08:33.300 --> 00:08:35.990 align:start position:0%
compare using greater than arbitrary
objects<00:08:33.720><c> also</c><00:08:34.020><c> a</c><00:08:34.050><c> returned</c><00:08:34.380><c> largest</c><00:08:34.880><c> so</c><00:08:35.880><c> we've</c>

00:08:35.990 --> 00:08:36.000 align:start position:0%
objects also a returned largest so we've
 

00:08:36.000 --> 00:08:37.250 align:start position:0%
objects also a returned largest so we've
already<00:08:36.120><c> used</c><00:08:36.240><c> the</c><00:08:36.540><c> we've</c><00:08:36.780><c> already</c><00:08:36.870><c> run</c><00:08:37.050><c> into</c>

00:08:37.250 --> 00:08:37.260 align:start position:0%
already used the we've already run into
 

00:08:37.260 --> 00:08:39.080 align:start position:0%
already used the we've already run into
this<00:08:37.320><c> issue</c><00:08:37.560><c> before</c><00:08:37.800><c> and</c><00:08:38.250><c> what</c><00:08:38.460><c> do</c><00:08:38.520><c> we</c><00:08:38.580><c> do</c><00:08:38.790><c> we</c>

00:08:39.080 --> 00:08:39.090 align:start position:0%
this issue before and what do we do we
 

00:08:39.090 --> 00:08:41.360 align:start position:0%
this issue before and what do we do we
said<00:08:39.300><c> K</c><00:08:39.599><c> dot</c><00:08:39.810><c> compare</c><00:08:40.229><c> to</c><00:08:40.380><c> largest</c><00:08:40.710><c> is</c><00:08:41.040><c> greater</c>

00:08:41.360 --> 00:08:41.370 align:start position:0%
said K dot compare to largest is greater
 

00:08:41.370 --> 00:08:44.240 align:start position:0%
said K dot compare to largest is greater
than<00:08:41.490><c> 0</c><00:08:41.870><c> still</c><00:08:42.870><c> though</c><00:08:43.110><c> compared</c><00:08:43.620><c> to</c><00:08:43.800><c> does</c><00:08:44.220><c> not</c>

00:08:44.240 --> 00:08:44.250 align:start position:0%
than 0 still though compared to does not
 

00:08:44.250 --> 00:08:46.400 align:start position:0%
than 0 still though compared to does not
work<00:08:44.580><c> with</c><00:08:44.730><c> case</c><00:08:44.970><c> and</c><00:08:45.300><c> that's</c><00:08:45.990><c> true</c><00:08:46.230><c> even</c>

00:08:46.400 --> 00:08:46.410 align:start position:0%
work with case and that's true even
 

00:08:46.410 --> 00:08:49.160 align:start position:0%
work with case and that's true even
though<00:08:46.800><c> we're</c><00:08:47.640><c> giving</c><00:08:47.970><c> it</c><00:08:48.090><c> an</c><00:08:48.240><c> array</c>

00:08:49.160 --> 00:08:49.170 align:start position:0%
though we're giving it an array
 

00:08:49.170 --> 00:08:50.570 align:start position:0%
though we're giving it an array
from<00:08:49.320><c> string</c><00:08:49.560><c> integer</c><00:08:49.770><c> strings</c><00:08:50.250><c> have</c><00:08:50.460><c> it</c>

00:08:50.570 --> 00:08:50.580 align:start position:0%
from string integer strings have it
 

00:08:50.580 --> 00:08:52.460 align:start position:0%
from string integer strings have it
compare<00:08:50.880><c> to</c><00:08:50.910><c> but</c><00:08:51.480><c> is</c><00:08:51.570><c> not</c><00:08:51.720><c> working</c><00:08:52.050><c> here</c><00:08:52.320><c> and</c>

00:08:52.460 --> 00:08:52.470 align:start position:0%
compare to but is not working here and
 

00:08:52.470 --> 00:08:54.830 align:start position:0%
compare to but is not working here and
the<00:08:52.980><c> reason</c><00:08:53.280><c> is</c><00:08:53.430><c> that</c><00:08:53.540><c> think</c><00:08:54.540><c> about</c><00:08:54.720><c> the</c>

00:08:54.830 --> 00:08:54.840 align:start position:0%
the reason is that think about the
 

00:08:54.840 --> 00:08:56.750 align:start position:0%
the reason is that think about the
compiler<00:08:55.320><c> all</c><00:08:55.620><c> the</c><00:08:55.830><c> compiler</c><00:08:56.280><c> knows</c><00:08:56.460><c> is</c><00:08:56.730><c> that</c>

00:08:56.750 --> 00:08:56.760 align:start position:0%
compiler all the compiler knows is that
 

00:08:56.760 --> 00:08:58.730 align:start position:0%
compiler all the compiler knows is that
somebody<00:08:57.180><c> is</c><00:08:57.240><c> gonna</c><00:08:57.450><c> give</c><00:08:57.630><c> me</c><00:08:57.720><c> Ches</c><00:08:57.990><c> and</c><00:08:58.290><c> maybe</c>

00:08:58.730 --> 00:08:58.740 align:start position:0%
somebody is gonna give me Ches and maybe
 

00:08:58.740 --> 00:09:00.230 align:start position:0%
somebody is gonna give me Ches and maybe
somebody<00:08:59.070><c> gives</c><00:08:59.250><c> me</c><00:08:59.310><c> dogs</c><00:08:59.640><c> and</c><00:09:00.030><c> they</c><00:09:00.090><c> don't</c>

00:09:00.230 --> 00:09:00.240 align:start position:0%
somebody gives me dogs and they don't
 

00:09:00.240 --> 00:09:02.570 align:start position:0%
somebody gives me dogs and they don't
have<00:09:00.360><c> a</c><00:09:00.390><c> compare</c><00:09:00.780><c> to</c><00:09:00.930><c> method</c><00:09:01.140><c> so</c><00:09:01.950><c> what</c><00:09:02.340><c> we</c><00:09:02.430><c> need</c>

00:09:02.570 --> 00:09:02.580 align:start position:0%
have a compare to method so what we need
 

00:09:02.580 --> 00:09:05.450 align:start position:0%
have a compare to method so what we need
to<00:09:02.610><c> do</c><00:09:02.820><c> is</c><00:09:02.970><c> somehow</c><00:09:03.150><c> deal</c><00:09:03.510><c> with</c><00:09:03.660><c> that</c><00:09:03.810><c> fact</c><00:09:04.460><c> so</c>

00:09:05.450 --> 00:09:05.460 align:start position:0%
to do is somehow deal with that fact so
 

00:09:05.460 --> 00:09:08.710 align:start position:0%
to do is somehow deal with that fact so
ordinarily<00:09:06.120><c> what</c><00:09:06.750><c> we</c><00:09:06.870><c> would</c><00:09:07.020><c> do</c><00:09:07.200><c> is</c><00:09:07.440><c> we</c><00:09:08.010><c> would</c>

00:09:08.710 --> 00:09:08.720 align:start position:0%
ordinarily what we would do is we would
 

00:09:08.720 --> 00:09:11.030 align:start position:0%
ordinarily what we would do is we would
specify<00:09:09.720><c> somehow</c><00:09:10.410><c> that</c><00:09:10.680><c> this</c><00:09:10.860><c> is</c><00:09:11.010><c> a</c>

00:09:11.030 --> 00:09:11.040 align:start position:0%
specify somehow that this is a
 

00:09:11.040 --> 00:09:13.610 align:start position:0%
specify somehow that this is a
comparable<00:09:11.790><c> or</c><00:09:11.910><c> something</c><00:09:12.300><c> and</c><00:09:13.290><c> so</c><00:09:13.470><c> the</c>

00:09:13.610 --> 00:09:13.620 align:start position:0%
comparable or something and so the
 

00:09:13.620 --> 00:09:17.030 align:start position:0%
comparable or something and so the
syntax<00:09:14.040><c> for</c><00:09:14.100><c> that</c><00:09:14.220><c> in</c><00:09:14.460><c> Java</c><00:09:14.730><c> is</c><00:09:14.970><c> we</c><00:09:15.600><c> say</c><00:09:15.810><c> K</c><00:09:16.410><c> not</c>

00:09:17.030 --> 00:09:17.040 align:start position:0%
syntax for that in Java is we say K not
 

00:09:17.040 --> 00:09:19.820 align:start position:0%
syntax for that in Java is we say K not
just<00:09:17.250><c> K</c><00:09:17.460><c> but</c><00:09:17.700><c> K</c><00:09:18.170><c> extends</c><00:09:19.170><c> maybe</c><00:09:19.560><c> are</c>

00:09:19.820 --> 00:09:19.830 align:start position:0%
just K but K extends maybe are
 

00:09:19.830 --> 00:09:24.170 align:start position:0%
just K but K extends maybe are
comparable<00:09:21.050><c> now</c><00:09:22.050><c> that</c><00:09:22.230><c> would</c><00:09:22.350><c> be</c><00:09:22.380><c> okay</c><00:09:23.180><c> except</c>

00:09:24.170 --> 00:09:24.180 align:start position:0%
comparable now that would be okay except
 

00:09:24.180 --> 00:09:25.820 align:start position:0%
comparable now that would be okay except
for<00:09:24.360><c> the</c><00:09:24.450><c> fact</c><00:09:24.660><c> that</c><00:09:24.840><c> are</c><00:09:25.260><c> comparable</c><00:09:25.590><c> is</c>

00:09:25.820 --> 00:09:25.830 align:start position:0%
for the fact that are comparable is
 

00:09:25.830 --> 00:09:27.140 align:start position:0%
for the fact that are comparable is
something<00:09:26.100><c> you</c><00:09:26.220><c> and</c><00:09:26.340><c> I</c><00:09:26.430><c> made</c><00:09:26.610><c> up</c><00:09:26.760><c> it's</c><00:09:27.000><c> not</c>

00:09:27.140 --> 00:09:27.150 align:start position:0%
something you and I made up it's not
 

00:09:27.150 --> 00:09:29.000 align:start position:0%
something you and I made up it's not
part<00:09:27.420><c> of</c><00:09:27.450><c> this</c><00:09:27.570><c> package</c><00:09:27.990><c> so</c><00:09:28.200><c> we</c><00:09:28.650><c> need</c><00:09:28.800><c> to</c><00:09:28.890><c> use</c>

00:09:29.000 --> 00:09:29.010 align:start position:0%
part of this package so we need to use
 

00:09:29.010 --> 00:09:33.440 align:start position:0%
part of this package so we need to use
the<00:09:29.190><c> built</c><00:09:29.400><c> in</c><00:09:29.550><c> Java</c><00:09:29.940><c> comparable</c><00:09:31.250><c> class</c><00:09:32.450><c> our</c>

00:09:33.440 --> 00:09:33.450 align:start position:0%
the built in Java comparable class our
 

00:09:33.450 --> 00:09:35.770 align:start position:0%
the built in Java comparable class our
interface<00:09:33.900><c> now</c><00:09:34.680><c> of</c><00:09:34.770><c> course</c><00:09:34.920><c> comparable</c>

00:09:35.770 --> 00:09:35.780 align:start position:0%
interface now of course comparable
 

00:09:35.780 --> 00:09:39.100 align:start position:0%
interface now of course comparable
itself<00:09:36.780><c> needs</c><00:09:37.140><c> to</c><00:09:37.350><c> have</c><00:09:37.530><c> a</c><00:09:37.830><c> generic</c><00:09:38.790><c> type</c>

00:09:39.100 --> 00:09:39.110 align:start position:0%
itself needs to have a generic type
 

00:09:39.110 --> 00:09:41.120 align:start position:0%
itself needs to have a generic type
parameter<00:09:40.110><c> specified</c><00:09:40.650><c> so</c><00:09:40.830><c> this</c><00:09:40.920><c> is</c><00:09:40.980><c> where</c><00:09:41.070><c> it</c>

00:09:41.120 --> 00:09:41.130 align:start position:0%
parameter specified so this is where it
 

00:09:41.130 --> 00:09:43.520 align:start position:0%
parameter specified so this is where it
gets<00:09:41.190><c> a</c><00:09:41.310><c> little</c><00:09:41.340><c> messy</c><00:09:41.730><c> so</c><00:09:42.690><c> if</c><00:09:42.810><c> you</c><00:09:42.930><c> you</c><00:09:43.230><c> you</c>

00:09:43.520 --> 00:09:43.530 align:start position:0%
gets a little messy so if you you you
 

00:09:43.530 --> 00:09:44.510 align:start position:0%
gets a little messy so if you you you
don't<00:09:43.740><c> just</c><00:09:43.920><c> want</c><00:09:44.100><c> things</c><00:09:44.250><c> that</c><00:09:44.370><c> are</c>

00:09:44.510 --> 00:09:44.520 align:start position:0%
don't just want things that are
 

00:09:44.520 --> 00:09:46.730 align:start position:0%
don't just want things that are
comparable<00:09:44.850><c> but</c><00:09:45.540><c> you</c><00:09:45.600><c> want</c><00:09:45.810><c> K's</c><00:09:46.380><c> that</c><00:09:46.650><c> are</c>

00:09:46.730 --> 00:09:46.740 align:start position:0%
comparable but you want K's that are
 

00:09:46.740 --> 00:09:49.490 align:start position:0%
comparable but you want K's that are
comparable<00:09:47.220><c> to</c><00:09:47.310><c> other</c><00:09:47.550><c> K's</c><00:09:47.970><c> okay</c><00:09:48.600><c> so</c><00:09:49.290><c> we</c><00:09:49.410><c> end</c>

00:09:49.490 --> 00:09:49.500 align:start position:0%
comparable to other K's okay so we end
 

00:09:49.500 --> 00:09:52.670 align:start position:0%
comparable to other K's okay so we end
up<00:09:49.590><c> with</c><00:09:49.740><c> this</c><00:09:49.890><c> rather</c><00:09:50.190><c> ugly</c><00:09:51.440><c> declaration</c><00:09:52.440><c> for</c>

00:09:52.670 --> 00:09:52.680 align:start position:0%
up with this rather ugly declaration for
 

00:09:52.680 --> 00:09:54.560 align:start position:0%
up with this rather ugly declaration for
our<00:09:52.860><c> method</c><00:09:53.160><c> but</c><00:09:53.820><c> in</c><00:09:53.910><c> this</c><00:09:54.000><c> case</c><00:09:54.180><c> it</c><00:09:54.390><c> should</c>

00:09:54.560 --> 00:09:54.570 align:start position:0%
our method but in this case it should
 

00:09:54.570 --> 00:09:56.060 align:start position:0%
our method but in this case it should
work<00:09:54.750><c> perfectly</c><00:09:54.960><c> fine</c><00:09:55.440><c> I'll</c><00:09:55.650><c> talk</c><00:09:55.800><c> more</c><00:09:56.010><c> about</c>

00:09:56.060 --> 00:09:56.070 align:start position:0%
work perfectly fine I'll talk more about
 

00:09:56.070 --> 00:09:58.070 align:start position:0%
work perfectly fine I'll talk more about
it<00:09:56.340><c> in</c><00:09:56.460><c> a</c><00:09:56.550><c> moment</c><00:09:56.700><c> so</c><00:09:57.540><c> just</c><00:09:57.780><c> see</c><00:09:57.870><c> if</c><00:09:57.960><c> it</c><00:09:58.050><c> works</c>

00:09:58.070 --> 00:09:58.080 align:start position:0%
it in a moment so just see if it works
 

00:09:58.080 --> 00:09:59.990 align:start position:0%
it in a moment so just see if it works
first<00:09:58.470><c> and</c><00:09:58.740><c> then</c><00:09:59.070><c> we'll</c><00:09:59.220><c> discuss</c><00:09:59.550><c> in</c><00:09:59.880><c> a</c><00:09:59.940><c> little</c>

00:09:59.990 --> 00:10:00.000 align:start position:0%
first and then we'll discuss in a little
 

00:10:00.000 --> 00:10:03.320 align:start position:0%
first and then we'll discuss in a little
more<00:10:00.180><c> detail</c><00:10:01.160><c> can</c><00:10:02.160><c> we</c><00:10:02.250><c> run</c><00:10:02.430><c> it</c><00:10:02.520><c> one</c><00:10:03.060><c> test</c>

00:10:03.320 --> 00:10:03.330 align:start position:0%
more detail can we run it one test
 

00:10:03.330 --> 00:10:05.510 align:start position:0%
more detail can we run it one test
passed<00:10:03.630><c> actually</c><00:10:04.290><c> want</c><00:10:04.590><c> to</c><00:10:04.620><c> run</c><00:10:04.740><c> all</c><00:10:04.980><c> tests</c>

00:10:05.510 --> 00:10:05.520 align:start position:0%
passed actually want to run all tests
 

00:10:05.520 --> 00:10:07.310 align:start position:0%
passed actually want to run all tests
just<00:10:06.330><c> to</c><00:10:06.450><c> make</c><00:10:06.540><c> sure</c><00:10:06.810><c> we</c><00:10:06.990><c> didn't</c><00:10:07.200><c> mess</c>

00:10:07.310 --> 00:10:07.320 align:start position:0%
just to make sure we didn't mess
 

00:10:07.320 --> 00:10:09.710 align:start position:0%
just to make sure we didn't mess
something<00:10:07.500><c> up</c><00:10:07.710><c> I</c><00:10:07.860><c> think</c><00:10:08.010><c> I</c><00:10:08.040><c> ran</c><00:10:08.220><c> array</c><00:10:08.760><c> math</c><00:10:09.180><c> so</c>

00:10:09.710 --> 00:10:09.720 align:start position:0%
something up I think I ran array math so
 

00:10:09.720 --> 00:10:11.090 align:start position:0%
something up I think I ran array math so
in<00:10:09.810><c> this</c><00:10:09.870><c> case</c><00:10:10.050><c> we</c><00:10:10.170><c> ran</c><00:10:10.290><c> both</c><00:10:10.560><c> of</c><00:10:10.680><c> our</c><00:10:10.800><c> tests</c>

00:10:11.090 --> 00:10:11.100 align:start position:0%
in this case we ran both of our tests
 

00:10:11.100 --> 00:10:12.350 align:start position:0%
in this case we ran both of our tests
and<00:10:11.250><c> it</c><00:10:11.520><c> works</c><00:10:11.670><c> swimmingly</c>

00:10:12.350 --> 00:10:12.360 align:start position:0%
and it works swimmingly
 

00:10:12.360 --> 00:10:14.330 align:start position:0%
and it works swimmingly
so<00:10:13.080><c> let's</c><00:10:13.200><c> debrief</c><00:10:13.560><c> a</c><00:10:13.680><c> little</c><00:10:13.890><c> more</c><00:10:14.040><c> what</c><00:10:14.190><c> this</c>

00:10:14.330 --> 00:10:14.340 align:start position:0%
so let's debrief a little more what this
 

00:10:14.340 --> 00:10:17.450 align:start position:0%
so let's debrief a little more what this
is<00:10:14.460><c> about</c><00:10:14.580><c> in</c><00:10:14.880><c> the</c><00:10:15.000><c> next</c><00:10:15.210><c> video</c>

