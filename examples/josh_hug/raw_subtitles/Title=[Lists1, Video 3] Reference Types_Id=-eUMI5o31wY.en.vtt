WEBVTT
Kind: captions
Language: en

00:00:00.030 --> 00:00:01.939 align:start position:0%
 
so<00:00:00.780><c> we've</c><00:00:00.900><c> covered</c><00:00:01.050><c> the</c><00:00:01.199><c> right</c><00:00:01.469><c> half</c><00:00:01.709><c> of</c><00:00:01.860><c> the</c>

00:00:01.939 --> 00:00:01.949 align:start position:0%
so we've covered the right half of the
 

00:00:01.949 --> 00:00:03.919 align:start position:0%
so we've covered the right half of the
puzzle<00:00:02.100><c> primitive</c><00:00:02.820><c> types</c><00:00:03.060><c> now</c><00:00:03.659><c> we're</c><00:00:03.840><c> going</c>

00:00:03.919 --> 00:00:03.929 align:start position:0%
puzzle primitive types now we're going
 

00:00:03.929 --> 00:00:05.599 align:start position:0%
puzzle primitive types now we're going
to<00:00:03.990><c> do</c><00:00:04.140><c> is</c><00:00:04.259><c> turn</c><00:00:04.440><c> over</c><00:00:04.500><c> to</c><00:00:04.799><c> the</c><00:00:04.920><c> left</c><00:00:05.190><c> half</c><00:00:05.400><c> of</c>

00:00:05.599 --> 00:00:05.609 align:start position:0%
to do is turn over to the left half of
 

00:00:05.609 --> 00:00:07.730 align:start position:0%
to do is turn over to the left half of
the<00:00:05.790><c> walrus</c><00:00:06.210><c> mystery</c><00:00:06.750><c> how</c><00:00:07.230><c> the</c><00:00:07.290><c> walrus</c>

00:00:07.730 --> 00:00:07.740 align:start position:0%
the walrus mystery how the walrus
 

00:00:07.740 --> 00:00:09.020 align:start position:0%
the walrus mystery how the walrus
behaves<00:00:08.069><c> by</c><00:00:08.280><c> talking</c><00:00:08.610><c> about</c><00:00:08.700><c> so-called</c>

00:00:09.020 --> 00:00:09.030 align:start position:0%
behaves by talking about so-called
 

00:00:09.030 --> 00:00:12.049 align:start position:0%
behaves by talking about so-called
reference<00:00:09.809><c> types</c><00:00:10.160><c> so</c><00:00:11.160><c> we've</c><00:00:11.639><c> said</c><00:00:11.880><c> there</c>

00:00:12.049 --> 00:00:12.059 align:start position:0%
reference types so we've said there
 

00:00:12.059 --> 00:00:13.850 align:start position:0%
reference types so we've said there
eight<00:00:12.240><c> primitive</c><00:00:12.660><c> types</c><00:00:12.870><c> in</c><00:00:13.049><c> Java</c><00:00:13.230><c> byte</c><00:00:13.620><c> short</c>

00:00:13.850 --> 00:00:13.860 align:start position:0%
eight primitive types in Java byte short
 

00:00:13.860 --> 00:00:16.880 align:start position:0%
eight primitive types in Java byte short
int<00:00:14.040><c> long</c><00:00:14.340><c> etc</c><00:00:14.719><c> and</c><00:00:15.719><c> any</c><00:00:15.960><c> other</c><00:00:16.260><c> variable</c><00:00:16.770><c> you</c>

00:00:16.880 --> 00:00:16.890 align:start position:0%
int long etc and any other variable you
 

00:00:16.890 --> 00:00:19.160 align:start position:0%
int long etc and any other variable you
declare<00:00:17.310><c> say</c><00:00:17.640><c> a</c><00:00:17.670><c> planet</c><00:00:18.119><c> or</c><00:00:18.330><c> a</c><00:00:18.390><c> walrus</c><00:00:18.720><c> or</c><00:00:19.080><c> an</c>

00:00:19.160 --> 00:00:19.170 align:start position:0%
declare say a planet or a walrus or an
 

00:00:19.170 --> 00:00:20.810 align:start position:0%
declare say a planet or a walrus or an
int<00:00:19.320><c> array</c><00:00:19.470><c> is</c><00:00:20.010><c> going</c><00:00:20.130><c> to</c><00:00:20.340><c> be</c><00:00:20.520><c> a</c><00:00:20.550><c> so-called</c>

00:00:20.810 --> 00:00:20.820 align:start position:0%
int array is going to be a so-called
 

00:00:20.820 --> 00:00:23.630 align:start position:0%
int array is going to be a so-called
reference<00:00:21.660><c> type</c><00:00:22.020><c> okay</c><00:00:22.590><c> that's</c><00:00:23.130><c> just</c><00:00:23.189><c> the</c><00:00:23.400><c> term</c>

00:00:23.630 --> 00:00:23.640 align:start position:0%
reference type okay that's just the term
 

00:00:23.640 --> 00:00:26.200 align:start position:0%
reference type okay that's just the term
for<00:00:23.910><c> all</c><00:00:24.150><c> of</c><00:00:24.359><c> the</c><00:00:24.510><c> types</c><00:00:24.779><c> that</c><00:00:25.080><c> are</c><00:00:25.230><c> not</c><00:00:25.350><c> these</c>

00:00:26.200 --> 00:00:26.210 align:start position:0%
for all of the types that are not these
 

00:00:26.210 --> 00:00:28.700 align:start position:0%
for all of the types that are not these
so<00:00:27.210><c> let's</c><00:00:27.390><c> start</c><00:00:27.779><c> digging</c><00:00:28.289><c> into</c><00:00:28.439><c> our</c>

00:00:28.700 --> 00:00:28.710 align:start position:0%
so let's start digging into our
 

00:00:28.710 --> 00:00:30.200 align:start position:0%
so let's start digging into our
understanding<00:00:29.279><c> of</c><00:00:29.340><c> reference</c><00:00:29.730><c> types</c><00:00:30.000><c> by</c>

00:00:30.200 --> 00:00:30.210 align:start position:0%
understanding of reference types by
 

00:00:30.210 --> 00:00:33.110 align:start position:0%
understanding of reference types by
discussing<00:00:30.599><c> object</c><00:00:31.230><c> instantiation</c><00:00:31.560><c> z'</c><00:00:32.160><c> so</c>

00:00:33.110 --> 00:00:33.120 align:start position:0%
discussing object instantiation z' so
 

00:00:33.120 --> 00:00:35.030 align:start position:0%
discussing object instantiation z' so
whatever<00:00:33.360><c> you</c><00:00:33.450><c> say</c><00:00:33.630><c> new</c><00:00:34.020><c> dog</c><00:00:34.260><c> or</c><00:00:34.559><c> new</c><00:00:34.680><c> wall</c><00:00:34.890><c> is</c>

00:00:35.030 --> 00:00:35.040 align:start position:0%
whatever you say new dog or new wall is
 

00:00:35.040 --> 00:00:37.130 align:start position:0%
whatever you say new dog or new wall is
a<00:00:35.100><c> new</c><00:00:35.309><c> planet</c><00:00:35.700><c> or</c><00:00:35.820><c> whatever</c><00:00:36.059><c> what</c><00:00:36.809><c> job</c><00:00:37.020><c> is</c>

00:00:37.130 --> 00:00:37.140 align:start position:0%
a new planet or whatever what job is
 

00:00:37.140 --> 00:00:38.720 align:start position:0%
a new planet or whatever what job is
going<00:00:37.290><c> to</c><00:00:37.410><c> do</c><00:00:37.559><c> is</c><00:00:37.680><c> it's</c><00:00:37.829><c> going</c><00:00:37.890><c> to</c><00:00:38.160><c> allocate</c><00:00:38.550><c> a</c>

00:00:38.720 --> 00:00:38.730 align:start position:0%
going to do is it's going to allocate a
 

00:00:38.730 --> 00:00:41.000 align:start position:0%
going to do is it's going to allocate a
box<00:00:39.120><c> of</c><00:00:39.360><c> bits</c><00:00:39.540><c> for</c><00:00:39.809><c> each</c><00:00:39.989><c> instance</c><00:00:40.530><c> variable</c>

00:00:41.000 --> 00:00:41.010 align:start position:0%
box of bits for each instance variable
 

00:00:41.010 --> 00:00:42.740 align:start position:0%
box of bits for each instance variable
of<00:00:41.100><c> the</c><00:00:41.219><c> class</c><00:00:41.430><c> here</c><00:00:41.790><c> they</c><00:00:41.910><c> are</c><00:00:42.059><c> listed</c><00:00:42.450><c> and</c>

00:00:42.740 --> 00:00:42.750 align:start position:0%
of the class here they are listed and
 

00:00:42.750 --> 00:00:44.779 align:start position:0%
of the class here they are listed and
fill<00:00:43.290><c> them</c><00:00:43.440><c> with</c><00:00:43.469><c> a</c><00:00:43.590><c> default</c><00:00:44.040><c> value</c><00:00:44.070><c> say</c><00:00:44.520><c> zero</c>

00:00:44.779 --> 00:00:44.789 align:start position:0%
fill them with a default value say zero
 

00:00:44.789 --> 00:00:47.060 align:start position:0%
fill them with a default value say zero
or<00:00:45.000><c> null</c><00:00:45.180><c> and</c><00:00:45.510><c> then</c><00:00:46.079><c> the</c><00:00:46.170><c> constructor</c><00:00:46.620><c> will</c>

00:00:47.060 --> 00:00:47.070 align:start position:0%
or null and then the constructor will
 

00:00:47.070 --> 00:00:49.069 align:start position:0%
or null and then the constructor will
then<00:00:47.219><c> usually</c><00:00:48.030><c> fill</c><00:00:48.270><c> every</c><00:00:48.480><c> box</c><00:00:48.690><c> with</c><00:00:48.899><c> some</c>

00:00:49.069 --> 00:00:49.079 align:start position:0%
then usually fill every box with some
 

00:00:49.079 --> 00:00:51.560 align:start position:0%
then usually fill every box with some
other<00:00:49.320><c> value</c><00:00:49.710><c> now</c><00:00:50.129><c> does</c><00:00:50.250><c> it</c><00:00:50.309><c> have</c><00:00:50.460><c> to</c><00:00:50.640><c> but</c><00:00:51.480><c> in</c>

00:00:51.560 --> 00:00:51.570 align:start position:0%
other value now does it have to but in
 

00:00:51.570 --> 00:00:53.029 align:start position:0%
other value now does it have to but in
this<00:00:51.660><c> case</c><00:00:51.840><c> it</c><00:00:51.989><c> will</c><00:00:52.110><c> so</c><00:00:52.680><c> let's</c><00:00:52.829><c> see</c><00:00:52.949><c> an</c>

00:00:53.029 --> 00:00:53.039 align:start position:0%
this case it will so let's see an
 

00:00:53.039 --> 00:00:56.689 align:start position:0%
this case it will so let's see an
example<00:00:54.320><c> so</c><00:00:55.320><c> when</c><00:00:55.410><c> I</c><00:00:55.440><c> run</c><00:00:55.680><c> this</c><00:00:55.920><c> visualizer</c>

00:00:56.689 --> 00:00:56.699 align:start position:0%
example so when I run this visualizer
 

00:00:56.699 --> 00:01:00.139 align:start position:0%
example so when I run this visualizer
here<00:00:57.059><c> I</c><00:00:57.239><c> will</c><00:00:58.109><c> see</c><00:00:58.289><c> that</c><00:00:58.649><c> walrus</c><00:00:59.579><c> whenever</c><00:01:00.090><c> I</c>

00:01:00.139 --> 00:01:00.149 align:start position:0%
here I will see that walrus whenever I
 

00:01:00.149 --> 00:01:02.510 align:start position:0%
here I will see that walrus whenever I
run<00:01:00.300><c> the</c><00:01:00.449><c> constructor</c><00:01:00.960><c> once</c><00:01:01.859><c> I</c><00:01:01.980><c> once</c><00:01:02.250><c> I</c><00:01:02.340><c> call</c>

00:01:02.510 --> 00:01:02.520 align:start position:0%
run the constructor once I once I call
 

00:01:02.520 --> 00:01:04.910 align:start position:0%
run the constructor once I once I call
new<00:01:02.699><c> two</c><00:01:03.270><c> boxes</c><00:01:03.780><c> are</c><00:01:03.960><c> created</c><00:01:04.350><c> one</c><00:01:04.619><c> for</c><00:01:04.830><c> the</c>

00:01:04.910 --> 00:01:04.920 align:start position:0%
new two boxes are created one for the
 

00:01:04.920 --> 00:01:06.950 align:start position:0%
new two boxes are created one for the
weight<00:01:05.070><c> and</c><00:01:05.760><c> one</c><00:01:05.970><c> for</c><00:01:06.150><c> the</c><00:01:06.240><c> tusk</c><00:01:06.420><c> size</c><00:01:06.659><c> and</c>

00:01:06.950 --> 00:01:06.960 align:start position:0%
weight and one for the tusk size and
 

00:01:06.960 --> 00:01:08.179 align:start position:0%
weight and one for the tusk size and
they're<00:01:07.170><c> filled</c><00:01:07.380><c> in</c><00:01:07.530><c> with</c><00:01:07.680><c> a</c><00:01:07.710><c> default</c><00:01:08.070><c> value</c>

00:01:08.179 --> 00:01:08.189 align:start position:0%
they're filled in with a default value
 

00:01:08.189 --> 00:01:11.030 align:start position:0%
they're filled in with a default value
of<00:01:08.520><c> zero</c><00:01:09.049><c> now</c><00:01:10.049><c> the</c><00:01:10.110><c> constructor</c><00:01:10.710><c> will</c><00:01:10.830><c> come</c>

00:01:11.030 --> 00:01:11.040 align:start position:0%
of zero now the constructor will come
 

00:01:11.040 --> 00:01:12.890 align:start position:0%
of zero now the constructor will come
through<00:01:11.250><c> and</c><00:01:11.520><c> reset</c><00:01:12.360><c> them</c><00:01:12.540><c> to</c><00:01:12.659><c> some</c><00:01:12.810><c> other</c>

00:01:12.890 --> 00:01:12.900 align:start position:0%
through and reset them to some other
 

00:01:12.900 --> 00:01:14.810 align:start position:0%
through and reset them to some other
value<00:01:13.229><c> in</c><00:01:13.439><c> this</c><00:01:13.590><c> case</c><00:01:13.830><c> though</c><00:01:14.460><c> it</c><00:01:14.580><c> doesn't</c>

00:01:14.810 --> 00:01:14.820 align:start position:0%
value in this case though it doesn't
 

00:01:14.820 --> 00:01:18.350 align:start position:0%
value in this case though it doesn't
necessarily<00:01:15.180><c> have</c><00:01:15.210><c> to</c><00:01:15.630><c> do</c><00:01:15.720><c> that</c><00:01:16.790><c> so</c><00:01:17.790><c> whenever</c>

00:01:18.350 --> 00:01:18.360 align:start position:0%
necessarily have to do that so whenever
 

00:01:18.360 --> 00:01:20.149 align:start position:0%
necessarily have to do that so whenever
this<00:01:18.630><c> code</c><00:01:18.869><c> runs</c><00:01:19.170><c> what</c><00:01:19.860><c> ends</c><00:01:20.040><c> up</c><00:01:20.100><c> happening</c>

00:01:20.149 --> 00:01:20.159 align:start position:0%
this code runs what ends up happening
 

00:01:20.159 --> 00:01:22.010 align:start position:0%
this code runs what ends up happening
what<00:01:20.700><c> the</c><00:01:20.820><c> new</c><00:01:20.939><c> keyword</c><00:01:21.270><c> does</c><00:01:21.479><c> for</c><00:01:21.720><c> us</c><00:01:21.780><c> is</c><00:01:21.990><c> it</c>

00:01:22.010 --> 00:01:22.020 align:start position:0%
what the new keyword does for us is it
 

00:01:22.020 --> 00:01:24.859 align:start position:0%
what the new keyword does for us is it
creates<00:01:22.439><c> two</c><00:01:22.680><c> boxes</c><00:01:23.070><c> one</c><00:01:23.580><c> of</c><00:01:23.729><c> size</c><00:01:23.909><c> 32</c><00:01:24.299><c> bits</c>

00:01:24.859 --> 00:01:24.869 align:start position:0%
creates two boxes one of size 32 bits
 

00:01:24.869 --> 00:01:28.969 align:start position:0%
creates two boxes one of size 32 bits
one<00:01:25.140><c> of</c><00:01:25.259><c> size</c><00:01:25.409><c> 64</c><00:01:25.979><c> bits</c><00:01:26.159><c> for</c><00:01:27.000><c> a</c><00:01:27.030><c> total</c><00:01:27.299><c> of</c><00:01:27.360><c> 96</c><00:01:28.020><c> so</c>

00:01:28.969 --> 00:01:28.979 align:start position:0%
one of size 64 bits for a total of 96 so
 

00:01:28.979 --> 00:01:30.109 align:start position:0%
one of size 64 bits for a total of 96 so
that's<00:01:29.130><c> what</c><00:01:29.250><c> happens</c><00:01:29.520><c> when</c><00:01:29.610><c> we</c><00:01:29.700><c> instantiate</c>

00:01:30.109 --> 00:01:30.119 align:start position:0%
that's what happens when we instantiate
 

00:01:30.119 --> 00:01:33.140 align:start position:0%
that's what happens when we instantiate
an<00:01:30.659><c> object</c><00:01:31.369><c> now</c><00:01:32.369><c> it's</c><00:01:32.520><c> interesting</c><00:01:32.759><c> to</c>

00:01:33.140 --> 00:01:33.150 align:start position:0%
an object now it's interesting to
 

00:01:33.150 --> 00:01:34.940 align:start position:0%
an object now it's interesting to
actually<00:01:33.479><c> reflect</c><00:01:33.780><c> on</c><00:01:34.140><c> what</c><00:01:34.350><c> happens</c><00:01:34.680><c> at</c><00:01:34.829><c> the</c>

00:01:34.940 --> 00:01:34.950 align:start position:0%
actually reflect on what happens at the
 

00:01:34.950 --> 00:01:36.950 align:start position:0%
actually reflect on what happens at the
bit<00:01:35.189><c> level</c><00:01:35.430><c> now</c><00:01:36.090><c> this</c><00:01:36.119><c> is</c><00:01:36.240><c> a</c><00:01:36.299><c> little</c><00:01:36.689><c> beyond</c>

00:01:36.950 --> 00:01:36.960 align:start position:0%
bit level now this is a little beyond
 

00:01:36.960 --> 00:01:38.270 align:start position:0%
bit level now this is a little beyond
the<00:01:36.990><c> scope</c><00:01:37.140><c> of</c><00:01:37.439><c> the</c><00:01:37.530><c> class</c><00:01:37.710><c> but</c><00:01:37.979><c> somehow</c><00:01:38.159><c> I</c>

00:01:38.270 --> 00:01:38.280 align:start position:0%
the scope of the class but somehow I
 

00:01:38.280 --> 00:01:39.980 align:start position:0%
the scope of the class but somehow I
find<00:01:38.490><c> it</c><00:01:38.729><c> satisfying</c><00:01:39.180><c> to</c><00:01:39.390><c> know</c><00:01:39.540><c> that</c><00:01:39.720><c> this</c><00:01:39.840><c> is</c>

00:01:39.980 --> 00:01:39.990 align:start position:0%
find it satisfying to know that this is
 

00:01:39.990 --> 00:01:41.630 align:start position:0%
find it satisfying to know that this is
approximately<00:01:40.320><c> what's</c><00:01:40.890><c> going</c><00:01:41.100><c> on</c><00:01:41.250><c> under</c><00:01:41.520><c> the</c>

00:01:41.630 --> 00:01:41.640 align:start position:0%
approximately what's going on under the
 

00:01:41.640 --> 00:01:43.340 align:start position:0%
approximately what's going on under the
hood<00:01:41.689><c> so</c><00:01:42.689><c> it's</c><00:01:42.780><c> a</c><00:01:42.840><c> little</c><00:01:43.020><c> bit</c><00:01:43.200><c> of</c><00:01:43.290><c> a</c>

00:01:43.340 --> 00:01:43.350 align:start position:0%
hood so it's a little bit of a
 

00:01:43.350 --> 00:01:45.679 align:start position:0%
hood so it's a little bit of a
simplification<00:01:43.820><c> but</c><00:01:44.820><c> in</c><00:01:44.970><c> this</c><00:01:45.119><c> case</c><00:01:45.329><c> whenever</c>

00:01:45.679 --> 00:01:45.689 align:start position:0%
simplification but in this case whenever
 

00:01:45.689 --> 00:01:48.260 align:start position:0%
simplification but in this case whenever
we<00:01:45.960><c> call</c><00:01:46.200><c> new</c><00:01:46.470><c> what</c><00:01:47.040><c> Java</c><00:01:47.310><c> will</c><00:01:47.520><c> do</c><00:01:47.700><c> is</c><00:01:47.909><c> it</c><00:01:48.149><c> will</c>

00:01:48.260 --> 00:01:48.270 align:start position:0%
we call new what Java will do is it will
 

00:01:48.270 --> 00:01:50.270 align:start position:0%
we call new what Java will do is it will
when<00:01:48.450><c> I</c><00:01:48.479><c> say</c><00:01:48.659><c> new</c><00:01:48.810><c> RS</c><00:01:49.110><c> it's</c><00:01:49.470><c> gonna</c><00:01:49.619><c> dig</c><00:01:49.979><c> through</c>

00:01:50.270 --> 00:01:50.280 align:start position:0%
when I say new RS it's gonna dig through
 

00:01:50.280 --> 00:01:52.639 align:start position:0%
when I say new RS it's gonna dig through
memory<00:01:50.610><c> and</c><00:01:50.850><c> it's</c><00:01:51.119><c> gonna</c><00:01:51.240><c> find</c><00:01:51.630><c> 96</c><00:01:52.439><c> bits</c>

00:01:52.639 --> 00:01:52.649 align:start position:0%
memory and it's gonna find 96 bits
 

00:01:52.649 --> 00:01:54.380 align:start position:0%
memory and it's gonna find 96 bits
because<00:01:53.220><c> that's</c><00:01:53.369><c> now</c><00:01:53.549><c> that's</c><00:01:53.939><c> how</c><00:01:54.119><c> many</c><00:01:54.270><c> it</c>

00:01:54.380 --> 00:01:54.390 align:start position:0%
because that's now that's how many it
 

00:01:54.390 --> 00:01:56.450 align:start position:0%
because that's now that's how many it
needs<00:01:54.540><c> to</c><00:01:54.750><c> store</c><00:01:54.899><c> the</c><00:01:55.049><c> walrus</c><00:01:55.380><c> and</c><00:01:55.590><c> then</c><00:01:56.369><c> it's</c>

00:01:56.450 --> 00:01:56.460 align:start position:0%
needs to store the walrus and then it's
 

00:01:56.460 --> 00:01:58.280 align:start position:0%
needs to store the walrus and then it's
gonna<00:01:56.610><c> fill</c><00:01:56.909><c> in</c><00:01:57.060><c> those</c><00:01:57.329><c> with</c><00:01:57.719><c> a</c><00:01:57.750><c> constructor</c>

00:01:58.280 --> 00:01:58.290 align:start position:0%
gonna fill in those with a constructor
 

00:01:58.290 --> 00:01:59.929 align:start position:0%
gonna fill in those with a constructor
we'll<00:01:58.409><c> fill</c><00:01:58.619><c> in</c><00:01:58.770><c> this</c><00:01:58.920><c> top</c><00:01:59.159><c> bit</c><00:01:59.340><c> with</c><00:01:59.579><c> a</c>

00:01:59.929 --> 00:01:59.939 align:start position:0%
we'll fill in this top bit with a
 

00:01:59.939 --> 00:02:01.969 align:start position:0%
we'll fill in this top bit with a
thousand<00:02:00.420><c> and</c><00:02:00.570><c> this</c><00:02:01.170><c> bottom</c><00:02:01.469><c> bit</c><00:02:01.619><c> here</c><00:02:01.860><c> the</c>

00:02:01.969 --> 00:02:01.979 align:start position:0%
thousand and this bottom bit here the
 

00:02:01.979 --> 00:02:04.399 align:start position:0%
thousand and this bottom bit here the
blue<00:02:02.159><c> bits</c><00:02:02.369><c> of'</c><00:02:02.790><c> 8.3</c><00:02:03.540><c> so</c><00:02:03.810><c> this</c><00:02:03.960><c> happens</c><00:02:04.229><c> to</c><00:02:04.290><c> be</c>

00:02:04.399 --> 00:02:04.409 align:start position:0%
blue bits of' 8.3 so this happens to be
 

00:02:04.409 --> 00:02:09.469 align:start position:0%
blue bits of' 8.3 so this happens to be
8.3<00:02:05.450><c> and</c><00:02:06.450><c> on</c><00:02:06.930><c> a</c><00:02:07.489><c> more</c><00:02:08.489><c> physical</c><00:02:09.000><c> level</c><00:02:09.239><c> that's</c>

00:02:09.469 --> 00:02:09.479 align:start position:0%
8.3 and on a more physical level that's
 

00:02:09.479 --> 00:02:11.510 align:start position:0%
8.3 and on a more physical level that's
a<00:02:09.599><c> rough</c><00:02:09.929><c> picture</c><00:02:10.259><c> of</c><00:02:10.319><c> what's</c><00:02:10.470><c> going</c><00:02:10.530><c> on</c><00:02:10.890><c> now</c>

00:02:11.510 --> 00:02:11.520 align:start position:0%
a rough picture of what's going on now
 

00:02:11.520 --> 00:02:12.480 align:start position:0%
a rough picture of what's going on now
I'm<00:02:11.580><c> gonna</c><00:02:11.670><c> admit</c><00:02:11.940><c> this</c><00:02:12.090><c> is</c><00:02:12.209><c> a</c>

00:02:12.480 --> 00:02:12.490 align:start position:0%
I'm gonna admit this is a
 

00:02:12.490 --> 00:02:15.360 align:start position:0%
I'm gonna admit this is a
the<00:02:12.580><c> simplification</c><00:02:13.390><c> the</c><00:02:14.290><c> actual</c><00:02:14.770><c> size</c><00:02:15.100><c> of</c><00:02:15.280><c> a</c>

00:02:15.360 --> 00:02:15.370 align:start position:0%
the simplification the actual size of a
 

00:02:15.370 --> 00:02:17.010 align:start position:0%
the simplification the actual size of a
walrus<00:02:15.610><c> will</c><00:02:15.970><c> be</c><00:02:16.090><c> a</c><00:02:16.120><c> little</c><00:02:16.420><c> bit</c><00:02:16.570><c> bigger</c><00:02:16.810><c> than</c>

00:02:17.010 --> 00:02:17.020 align:start position:0%
walrus will be a little bit bigger than
 

00:02:17.020 --> 00:02:18.840 align:start position:0%
walrus will be a little bit bigger than
96<00:02:17.590><c> bits</c><00:02:17.770><c> because</c><00:02:18.250><c> there's</c><00:02:18.460><c> various</c>

00:02:18.840 --> 00:02:18.850 align:start position:0%
96 bits because there's various
 

00:02:18.850 --> 00:02:21.560 align:start position:0%
96 bits because there's various
information<00:02:19.240><c> that's</c><00:02:19.870><c> header</c><00:02:20.440><c> information</c><00:02:20.830><c> or</c>

00:02:21.560 --> 00:02:21.570 align:start position:0%
information that's header information or
 

00:02:21.570 --> 00:02:24.210 align:start position:0%
information that's header information or
overhead<00:02:22.570><c> up</c><00:02:22.780><c> here</c><00:02:23.050><c> but</c><00:02:23.680><c> I'm</c><00:02:23.770><c> not</c><00:02:23.860><c> showing</c><00:02:24.100><c> you</c>

00:02:24.210 --> 00:02:24.220 align:start position:0%
overhead up here but I'm not showing you
 

00:02:24.220 --> 00:02:25.740 align:start position:0%
overhead up here but I'm not showing you
here<00:02:24.400><c> because</c><00:02:24.700><c> it's</c><00:02:24.880><c> just</c><00:02:25.150><c> beyond</c><00:02:25.480><c> the</c><00:02:25.570><c> scope</c>

00:02:25.740 --> 00:02:25.750 align:start position:0%
here because it's just beyond the scope
 

00:02:25.750 --> 00:02:27.240 align:start position:0%
here because it's just beyond the scope
of<00:02:25.900><c> our</c><00:02:26.050><c> class</c><00:02:26.260><c> and</c><00:02:26.500><c> this</c><00:02:26.620><c> is</c><00:02:26.740><c> good</c><00:02:26.890><c> enough</c><00:02:26.980><c> for</c>

00:02:27.240 --> 00:02:27.250 align:start position:0%
of our class and this is good enough for
 

00:02:27.250 --> 00:02:30.000 align:start position:0%
of our class and this is good enough for
us<00:02:27.460><c> okay</c><00:02:28.000><c> so</c><00:02:28.840><c> in</c><00:02:28.930><c> other</c><00:02:28.990><c> words</c><00:02:29.200><c> what</c><00:02:29.680><c> happens</c>

00:02:30.000 --> 00:02:30.010 align:start position:0%
us okay so in other words what happens
 

00:02:30.010 --> 00:02:32.640 align:start position:0%
us okay so in other words what happens
is<00:02:30.190><c> your</c><00:02:30.400><c> computer</c><00:02:30.880><c> has</c><00:02:31.060><c> a</c><00:02:31.210><c> few</c><00:02:31.810><c> billion</c><00:02:32.020><c> bits</c>

00:02:32.640 --> 00:02:32.650 align:start position:0%
is your computer has a few billion bits
 

00:02:32.650 --> 00:02:34.290 align:start position:0%
is your computer has a few billion bits
it<00:02:32.950><c> looks</c><00:02:33.250><c> through</c><00:02:33.580><c> those</c><00:02:33.790><c> bits</c><00:02:34.060><c> and</c><00:02:34.240><c> it</c>

00:02:34.290 --> 00:02:34.300 align:start position:0%
it looks through those bits and it
 

00:02:34.300 --> 00:02:36.600 align:start position:0%
it looks through those bits and it
somehow<00:02:34.480><c> decides</c><00:02:34.900><c> yes</c><00:02:35.230><c> this</c><00:02:35.650><c> this</c><00:02:36.310><c> is</c><00:02:36.490><c> the</c>

00:02:36.600 --> 00:02:36.610 align:start position:0%
somehow decides yes this this is the
 

00:02:36.610 --> 00:02:38.700 align:start position:0%
somehow decides yes this this is the
place<00:02:36.850><c> where</c><00:02:37.090><c> my</c><00:02:37.180><c> walrus</c><00:02:37.540><c> is</c><00:02:37.690><c> gonna</c><00:02:37.870><c> live</c><00:02:38.110><c> here</c>

00:02:38.700 --> 00:02:38.710 align:start position:0%
place where my walrus is gonna live here
 

00:02:38.710 --> 00:02:41.130 align:start position:0%
place where my walrus is gonna live here
is<00:02:38.860><c> the</c><00:02:38.980><c> weight</c><00:02:39.160><c> here</c><00:02:39.610><c> is</c><00:02:39.730><c> the</c><00:02:39.850><c> tusks</c><00:02:40.060><c> size</c><00:02:40.300><c> and</c>

00:02:41.130 --> 00:02:41.140 align:start position:0%
is the weight here is the tusks size and
 

00:02:41.140 --> 00:02:43.100 align:start position:0%
is the weight here is the tusks size and
there<00:02:41.800><c> it</c><00:02:41.890><c> goes</c>

00:02:43.100 --> 00:02:43.110 align:start position:0%
there it goes
 

00:02:43.110 --> 00:02:45.030 align:start position:0%
there it goes
so<00:02:44.110><c> what's</c><00:02:44.260><c> interesting</c><00:02:44.380><c> about</c><00:02:44.620><c> the</c><00:02:44.890><c> new</c>

00:02:45.030 --> 00:02:45.040 align:start position:0%
so what's interesting about the new
 

00:02:45.040 --> 00:02:47.310 align:start position:0%
so what's interesting about the new
keyword<00:02:45.340><c> is</c><00:02:45.700><c> that</c><00:02:46.450><c> we</c><00:02:46.540><c> can</c><00:02:46.690><c> think</c><00:02:46.870><c> of</c><00:02:46.990><c> it</c><00:02:47.170><c> not</c>

00:02:47.310 --> 00:02:47.320 align:start position:0%
keyword is that we can think of it not
 

00:02:47.320 --> 00:02:50.220 align:start position:0%
keyword is that we can think of it not
only<00:02:47.620><c> as</c><00:02:48.040><c> going</c><00:02:48.880><c> out</c><00:02:49.000><c> to</c><00:02:49.210><c> the</c><00:02:49.330><c> massive</c><00:02:49.960><c> field</c>

00:02:50.220 --> 00:02:50.230 align:start position:0%
only as going out to the massive field
 

00:02:50.230 --> 00:02:51.930 align:start position:0%
only as going out to the massive field
of<00:02:50.410><c> bits</c><00:02:50.620><c> and</c><00:02:50.770><c> finding</c><00:02:51.220><c> a</c><00:02:51.310><c> home</c><00:02:51.520><c> for</c><00:02:51.850><c> the</c>

00:02:51.930 --> 00:02:51.940 align:start position:0%
of bits and finding a home for the
 

00:02:51.940 --> 00:02:53.820 align:start position:0%
of bits and finding a home for the
information<00:02:52.450><c> the</c><00:02:52.570><c> walrus</c><00:02:52.900><c> but</c><00:02:53.470><c> we</c><00:02:53.530><c> can</c><00:02:53.680><c> also</c>

00:02:53.820 --> 00:02:53.830 align:start position:0%
information the walrus but we can also
 

00:02:53.830 --> 00:02:56.280 align:start position:0%
information the walrus but we can also
think<00:02:54.010><c> of</c><00:02:54.280><c> it</c><00:02:54.400><c> as</c><00:02:54.460><c> reporting</c><00:02:55.390><c> where</c><00:02:55.930><c> it</c><00:02:56.110><c> put</c>

00:02:56.280 --> 00:02:56.290 align:start position:0%
think of it as reporting where it put
 

00:02:56.290 --> 00:02:58.770 align:start position:0%
think of it as reporting where it put
the<00:02:56.410><c> walrus</c><00:02:56.770><c> so</c><00:02:57.370><c> if</c><00:02:57.490><c> I</c><00:02:57.580><c> go</c><00:02:57.760><c> to</c><00:02:57.820><c> the</c><00:02:58.270><c> fields</c><00:02:58.690><c> and</c>

00:02:58.770 --> 00:02:58.780 align:start position:0%
the walrus so if I go to the fields and
 

00:02:58.780 --> 00:03:00.660 align:start position:0%
the walrus so if I go to the fields and
I<00:02:58.900><c> bury</c><00:02:59.290><c> a</c><00:02:59.410><c> treasure</c><00:02:59.710><c> I</c><00:03:00.040><c> mean</c><00:03:00.310><c> that's</c><00:03:00.490><c> a</c><00:03:00.550><c> great</c>

00:03:00.660 --> 00:03:00.670 align:start position:0%
I bury a treasure I mean that's a great
 

00:03:00.670 --> 00:03:02.520 align:start position:0%
I bury a treasure I mean that's a great
the<00:03:00.970><c> treasures</c><00:03:01.330><c> in</c><00:03:01.420><c> the</c><00:03:01.510><c> field</c><00:03:01.720><c> now</c><00:03:01.930><c> but</c><00:03:02.410><c> if</c><00:03:02.470><c> I</c>

00:03:02.520 --> 00:03:02.530 align:start position:0%
the treasures in the field now but if I
 

00:03:02.530 --> 00:03:04.020 align:start position:0%
the treasures in the field now but if I
ever<00:03:02.650><c> want</c><00:03:02.890><c> to</c><00:03:02.920><c> see</c><00:03:03.100><c> that</c><00:03:03.130><c> treasure</c><00:03:03.520><c> again</c><00:03:03.850><c> or</c>

00:03:04.020 --> 00:03:04.030 align:start position:0%
ever want to see that treasure again or
 

00:03:04.030 --> 00:03:05.250 align:start position:0%
ever want to see that treasure again or
something<00:03:04.330><c> like</c><00:03:04.480><c> let</c><00:03:04.660><c> someone</c><00:03:04.870><c> know</c><00:03:04.990><c> where</c><00:03:05.170><c> it</c>

00:03:05.250 --> 00:03:05.260 align:start position:0%
something like let someone know where it
 

00:03:05.260 --> 00:03:06.510 align:start position:0%
something like let someone know where it
is<00:03:05.350><c> I</c><00:03:05.500><c> have</c><00:03:05.710><c> to</c><00:03:05.770><c> report</c><00:03:06.220><c> that</c><00:03:06.370><c> information</c>

00:03:06.510 --> 00:03:06.520 align:start position:0%
is I have to report that information
 

00:03:06.520 --> 00:03:08.430 align:start position:0%
is I have to report that information
that<00:03:07.150><c> out</c><00:03:07.510><c> there</c><00:03:07.750><c> in</c><00:03:07.840><c> the</c><00:03:07.960><c> corner</c><00:03:08.260><c> of</c><00:03:08.380><c> the</c>

00:03:08.430 --> 00:03:08.440 align:start position:0%
that out there in the corner of the
 

00:03:08.440 --> 00:03:10.770 align:start position:0%
that out there in the corner of the
field<00:03:08.650><c> that's</c><00:03:08.920><c> where</c><00:03:09.190><c> the</c><00:03:09.280><c> treasure</c><00:03:09.520><c> is</c><00:03:09.780><c> so</c>

00:03:10.770 --> 00:03:10.780 align:start position:0%
field that's where the treasure is so
 

00:03:10.780 --> 00:03:12.480 align:start position:0%
field that's where the treasure is so
what<00:03:10.900><c> will</c><00:03:10.990><c> happen</c><00:03:11.020><c> is</c><00:03:11.440><c> that</c><00:03:11.470><c> the</c><00:03:11.770><c> new</c><00:03:11.980><c> keyword</c>

00:03:12.480 --> 00:03:12.490 align:start position:0%
what will happen is that the new keyword
 

00:03:12.490 --> 00:03:14.340 align:start position:0%
what will happen is that the new keyword
you<00:03:12.700><c> could</c><00:03:12.850><c> think</c><00:03:13.060><c> of</c><00:03:13.240><c> it</c><00:03:13.360><c> as</c><00:03:13.450><c> returning</c><00:03:14.020><c> the</c>

00:03:14.340 --> 00:03:14.350 align:start position:0%
you could think of it as returning the
 

00:03:14.350 --> 00:03:19.020 align:start position:0%
you could think of it as returning the
value<00:03:14.640><c> or</c><00:03:15.640><c> the</c><00:03:16.090><c> number</c><00:03:16.450><c> of</c><00:03:17.280><c> bit</c><00:03:18.280><c> in</c><00:03:18.490><c> memory</c>

00:03:19.020 --> 00:03:19.030 align:start position:0%
value or the number of bit in memory
 

00:03:19.030 --> 00:03:22.080 align:start position:0%
value or the number of bit in memory
where<00:03:19.690><c> it</c><00:03:19.720><c> put</c><00:03:20.050><c> the</c><00:03:20.380><c> walrus</c><00:03:21.040><c> so</c><00:03:21.850><c> it's</c><00:03:21.970><c> very</c>

00:03:22.080 --> 00:03:22.090 align:start position:0%
where it put the walrus so it's very
 

00:03:22.090 --> 00:03:24.210 align:start position:0%
where it put the walrus so it's very
natural<00:03:22.330><c> it's</c><00:03:22.750><c> a</c><00:03:22.810><c> sequence</c><00:03:23.170><c> of</c><00:03:23.320><c> bits</c><00:03:23.470><c> that</c>

00:03:24.210 --> 00:03:24.220 align:start position:0%
natural it's a sequence of bits that
 

00:03:24.220 --> 00:03:26.430 align:start position:0%
natural it's a sequence of bits that
what<00:03:24.550><c> new</c><00:03:24.730><c> can</c><00:03:24.910><c> just</c><00:03:25.060><c> do</c><00:03:25.240><c> is</c><00:03:25.390><c> return</c><00:03:25.720><c> okay</c><00:03:26.200><c> hey</c>

00:03:26.430 --> 00:03:26.440 align:start position:0%
what new can just do is return okay hey
 

00:03:26.440 --> 00:03:27.960 align:start position:0%
what new can just do is return okay hey
you<00:03:26.800><c> know</c><00:03:26.920><c> where</c><00:03:27.070><c> I</c><00:03:27.100><c> put</c><00:03:27.280><c> that</c><00:03:27.490><c> wonderful</c>

00:03:27.960 --> 00:03:27.970 align:start position:0%
you know where I put that wonderful
 

00:03:27.970 --> 00:03:29.520 align:start position:0%
you know where I put that wonderful
walrus<00:03:28.300><c> I</c><00:03:28.450><c> put</c><00:03:28.660><c> it</c><00:03:28.750><c> in</c><00:03:28.840><c> bit</c><00:03:29.050><c> number</c><00:03:29.380><c> two</c>

00:03:29.520 --> 00:03:29.530 align:start position:0%
walrus I put it in bit number two
 

00:03:29.530 --> 00:03:31.350 align:start position:0%
walrus I put it in bit number two
billion<00:03:29.890><c> 384</c><00:03:30.730><c> million</c><00:03:31.060><c> seven</c><00:03:31.330><c> hundred</c>

00:03:31.350 --> 00:03:31.360 align:start position:0%
billion 384 million seven hundred
 

00:03:31.360 --> 00:03:32.880 align:start position:0%
billion 384 million seven hundred
twenty-three<00:03:31.810><c> thousand</c><00:03:32.410><c> four</c><00:03:32.620><c> hundred</c><00:03:32.710><c> and</c>

00:03:32.880 --> 00:03:32.890 align:start position:0%
twenty-three thousand four hundred and
 

00:03:32.890 --> 00:03:35.820 align:start position:0%
twenty-three thousand four hundred and
twenty-three<00:03:33.540><c> and</c><00:03:34.540><c> that</c><00:03:34.900><c> will</c><00:03:35.110><c> be</c><00:03:35.260><c> the</c><00:03:35.650><c> so</c>

00:03:35.820 --> 00:03:35.830 align:start position:0%
twenty-three and that will be the so
 

00:03:35.830 --> 00:03:37.020 align:start position:0%
twenty-three and that will be the so
call<00:03:36.040><c> or</c><00:03:36.070><c> you</c><00:03:36.460><c> can</c><00:03:36.580><c> think</c><00:03:36.730><c> of</c><00:03:36.790><c> that</c><00:03:36.880><c> as</c><00:03:36.940><c> the</c>

00:03:37.020 --> 00:03:37.030 align:start position:0%
call or you can think of that as the
 

00:03:37.030 --> 00:03:40.860 align:start position:0%
call or you can think of that as the
return<00:03:37.570><c> value</c><00:03:38.050><c> of</c><00:03:38.230><c> the</c><00:03:38.830><c> new</c><00:03:39.010><c> keyword</c><00:03:39.550><c> okay</c><00:03:40.090><c> so</c>

00:03:40.860 --> 00:03:40.870 align:start position:0%
return value of the new keyword okay so
 

00:03:40.870 --> 00:03:42.180 align:start position:0%
return value of the new keyword okay so
it<00:03:40.960><c> goes</c><00:03:41.110><c> out</c><00:03:41.290><c> there</c><00:03:41.440><c> buries</c><00:03:41.800><c> the</c><00:03:41.950><c> treasure</c>

00:03:42.180 --> 00:03:42.190 align:start position:0%
it goes out there buries the treasure
 

00:03:42.190 --> 00:03:44.130 align:start position:0%
it goes out there buries the treasure
and<00:03:42.520><c> it</c><00:03:42.670><c> shouts</c><00:03:42.940><c> to</c><00:03:43.150><c> the</c><00:03:43.240><c> heavens</c><00:03:43.540><c> this</c><00:03:43.960><c> is</c>

00:03:44.130 --> 00:03:44.140 align:start position:0%
and it shouts to the heavens this is
 

00:03:44.140 --> 00:03:46.140 align:start position:0%
and it shouts to the heavens this is
where<00:03:44.290><c> I've</c><00:03:44.410><c> put</c><00:03:44.680><c> this</c><00:03:45.280><c> treasure</c><00:03:45.790><c> this</c>

00:03:46.140 --> 00:03:46.150 align:start position:0%
where I've put this treasure this
 

00:03:46.150 --> 00:03:50.370 align:start position:0%
where I've put this treasure this
wonderful<00:03:46.780><c> walrus</c><00:03:47.370><c> yeah</c><00:03:48.370><c> so</c><00:03:49.150><c> what</c><00:03:49.330><c> well</c><00:03:50.050><c> let's</c>

00:03:50.370 --> 00:03:50.380 align:start position:0%
wonderful walrus yeah so what well let's
 

00:03:50.380 --> 00:03:52.590 align:start position:0%
wonderful walrus yeah so what well let's
talk<00:03:50.530><c> a</c><00:03:50.590><c> little</c><00:03:50.710><c> bit</c><00:03:50.950><c> about</c><00:03:51.070><c> the</c><00:03:51.820><c> declaration</c>

00:03:52.590 --> 00:03:52.600 align:start position:0%
talk a little bit about the declaration
 

00:03:52.600 --> 00:03:54.870 align:start position:0%
talk a little bit about the declaration
of<00:03:52.750><c> a</c><00:03:52.990><c> variable</c><00:03:53.350><c> that's</c><00:03:54.010><c> a</c><00:03:54.160><c> reference</c><00:03:54.520><c> type</c><00:03:54.670><c> so</c>

00:03:54.870 --> 00:03:54.880 align:start position:0%
of a variable that's a reference type so
 

00:03:54.880 --> 00:03:55.710 align:start position:0%
of a variable that's a reference type so
before<00:03:55.150><c> we've</c><00:03:55.270><c> been</c><00:03:55.360><c> talking</c><00:03:55.660><c> about</c>

00:03:55.710 --> 00:03:55.720 align:start position:0%
before we've been talking about
 

00:03:55.720 --> 00:03:58.290 align:start position:0%
before we've been talking about
instantiation<00:03:56.560><c> how</c><00:03:57.130><c> new</c><00:03:57.370><c> works</c><00:03:57.610><c> now</c><00:03:58.120><c> let's</c>

00:03:58.290 --> 00:03:58.300 align:start position:0%
instantiation how new works now let's
 

00:03:58.300 --> 00:04:00.960 align:start position:0%
instantiation how new works now let's
talk<00:03:58.420><c> about</c><00:03:58.480><c> declaration</c><00:03:59.700><c> so</c><00:04:00.700><c> if</c><00:04:00.760><c> I</c><00:04:00.820><c> have</c><00:04:00.940><c> a</c>

00:04:00.960 --> 00:04:00.970 align:start position:0%
talk about declaration so if I have a
 

00:04:00.970 --> 00:04:02.370 align:start position:0%
talk about declaration so if I have a
piece<00:04:01.180><c> of</c><00:04:01.210><c> code</c><00:04:01.510><c> that</c><00:04:01.690><c> declares</c><00:04:02.110><c> that</c><00:04:02.350><c> a</c>

00:04:02.370 --> 00:04:02.380 align:start position:0%
piece of code that declares that a
 

00:04:02.380 --> 00:04:04.410 align:start position:0%
piece of code that declares that a
walrus<00:04:02.620><c> exists</c><00:04:03.250><c> or</c><00:04:03.370><c> that</c><00:04:03.400><c> a</c><00:04:03.610><c> dog</c><00:04:03.850><c> exists</c><00:04:04.300><c> so</c>

00:04:04.410 --> 00:04:04.420 align:start position:0%
walrus exists or that a dog exists so
 

00:04:04.420 --> 00:04:06.540 align:start position:0%
walrus exists or that a dog exists so
that<00:04:04.570><c> a</c><00:04:04.630><c> planet</c><00:04:04.870><c> exists</c><00:04:05.440><c> what</c><00:04:05.950><c> Java</c><00:04:06.160><c> will</c><00:04:06.400><c> do</c>

00:04:06.540 --> 00:04:06.550 align:start position:0%
that a planet exists what Java will do
 

00:04:06.550 --> 00:04:09.420 align:start position:0%
that a planet exists what Java will do
is<00:04:06.730><c> it</c><00:04:07.000><c> will</c><00:04:07.090><c> allocate</c><00:04:07.420><c> a</c><00:04:07.570><c> box</c><00:04:07.840><c> of</c><00:04:08.080><c> exactly</c><00:04:08.680><c> 64</c>

00:04:09.420 --> 00:04:09.430 align:start position:0%
is it will allocate a box of exactly 64
 

00:04:09.430 --> 00:04:11.790 align:start position:0%
is it will allocate a box of exactly 64
bits<00:04:09.640><c> no</c><00:04:09.880><c> matter</c><00:04:10.060><c> what</c><00:04:10.360><c> type</c><00:04:10.630><c> of</c><00:04:10.660><c> object</c><00:04:10.900><c> it's</c>

00:04:11.790 --> 00:04:11.800 align:start position:0%
bits no matter what type of object it's
 

00:04:11.800 --> 00:04:13.110 align:start position:0%
bits no matter what type of object it's
a<00:04:11.890><c> reference</c><00:04:12.100><c> type</c><00:04:12.490><c> that's</c><00:04:12.700><c> just</c><00:04:12.880><c> what's</c>

00:04:13.110 --> 00:04:13.120 align:start position:0%
a reference type that's just what's
 

00:04:13.120 --> 00:04:15.300 align:start position:0%
a reference type that's just what's
gonna<00:04:13.300><c> happen</c><00:04:13.660><c> and</c><00:04:13.810><c> then</c><00:04:14.620><c> these</c><00:04:14.830><c> bits</c><00:04:15.130><c> can</c>

00:04:15.300 --> 00:04:15.310 align:start position:0%
gonna happen and then these bits can
 

00:04:15.310 --> 00:04:17.580 align:start position:0%
gonna happen and then these bits can
either<00:04:15.520><c> be</c><00:04:15.670><c> set</c><00:04:15.880><c> to</c><00:04:16.060><c> null</c><00:04:16.420><c> that</c><00:04:16.900><c> is</c><00:04:17.049><c> all</c><00:04:17.200><c> zeros</c>

00:04:17.580 --> 00:04:17.590 align:start position:0%
either be set to null that is all zeros
 

00:04:17.590 --> 00:04:19.770 align:start position:0%
either be set to null that is all zeros
or<00:04:18.340><c> it</c><00:04:18.489><c> could</c><00:04:18.609><c> be</c><00:04:18.700><c> set</c><00:04:18.910><c> to</c><00:04:19.030><c> the</c><00:04:19.060><c> address</c><00:04:19.180><c> of</c><00:04:19.690><c> a</c>

00:04:19.770 --> 00:04:19.780 align:start position:0%
or it could be set to the address of a
 

00:04:19.780 --> 00:04:21.300 align:start position:0%
or it could be set to the address of a
specific<00:04:20.230><c> instance</c><00:04:20.560><c> of</c><00:04:20.680><c> that</c><00:04:20.739><c> class</c><00:04:20.859><c> as</c>

00:04:21.300 --> 00:04:21.310 align:start position:0%
specific instance of that class as
 

00:04:21.310 --> 00:04:23.340 align:start position:0%
specific instance of that class as
returned<00:04:21.790><c> by</c><00:04:22.000><c> new</c><00:04:22.210><c> so</c><00:04:22.810><c> let's</c><00:04:22.930><c> this</c><00:04:23.140><c> very</c>

00:04:23.340 --> 00:04:23.350 align:start position:0%
returned by new so let's this very
 

00:04:23.350 --> 00:04:24.379 align:start position:0%
returned by new so let's this very
simple<00:04:23.680><c> example</c>

00:04:24.379 --> 00:04:24.389 align:start position:0%
simple example
 

00:04:24.389 --> 00:04:27.499 align:start position:0%
simple example
if<00:04:24.930><c> I</c><00:04:25.020><c> say</c><00:04:25.229><c> walrus</c><00:04:25.710><c> some</c><00:04:26.250><c> walrus</c><00:04:26.669><c> and</c><00:04:26.879><c> then</c><00:04:27.360><c> say</c>

00:04:27.499 --> 00:04:27.509 align:start position:0%
if I say walrus some walrus and then say
 

00:04:27.509 --> 00:04:29.390 align:start position:0%
if I say walrus some walrus and then say
some<00:04:27.750><c> walrus</c><00:04:28.050><c> equals</c><00:04:28.379><c> null</c><00:04:28.560><c> well</c><00:04:29.039><c> that</c><00:04:29.189><c> first</c>

00:04:29.390 --> 00:04:29.400 align:start position:0%
some walrus equals null well that first
 

00:04:29.400 --> 00:04:31.070 align:start position:0%
some walrus equals null well that first
line<00:04:29.669><c> what</c><00:04:29.879><c> it</c><00:04:29.969><c> does</c><00:04:30.120><c> this</c><00:04:30.300><c> creates</c><00:04:30.569><c> a</c><00:04:30.659><c> box</c><00:04:30.870><c> of</c>

00:04:31.070 --> 00:04:31.080 align:start position:0%
line what it does this creates a box of
 

00:04:31.080 --> 00:04:33.770 align:start position:0%
line what it does this creates a box of
64<00:04:31.439><c> bits</c><00:04:31.800><c> and</c><00:04:32.009><c> this</c><00:04:32.490><c> second</c><00:04:32.879><c> line</c><00:04:33.030><c> equals</c><00:04:33.539><c> null</c>

00:04:33.770 --> 00:04:33.780 align:start position:0%
64 bits and this second line equals null
 

00:04:33.780 --> 00:04:36.110 align:start position:0%
64 bits and this second line equals null
sets<00:04:34.409><c> it</c><00:04:34.560><c> all</c><00:04:34.650><c> equal</c><00:04:34.949><c> to</c><00:04:35.039><c> zero</c><00:04:35.280><c> as</c><00:04:35.520><c> a</c><00:04:35.669><c> marker</c><00:04:36.090><c> to</c>

00:04:36.110 --> 00:04:36.120 align:start position:0%
sets it all equal to zero as a marker to
 

00:04:36.120 --> 00:04:40.730 align:start position:0%
sets it all equal to zero as a marker to
say<00:04:36.360><c> well</c><00:04:37.009><c> it's</c><00:04:38.009><c> nothing</c><00:04:38.759><c> right</c><00:04:39.060><c> no</c><00:04:39.740><c> by</c>

00:04:40.730 --> 00:04:40.740 align:start position:0%
say well it's nothing right no by
 

00:04:40.740 --> 00:04:43.279 align:start position:0%
say well it's nothing right no by
contrast<00:04:41.280><c> if</c><00:04:41.699><c> I</c><00:04:41.879><c> say</c><00:04:42.060><c> walrus</c><00:04:42.509><c> some</c><00:04:42.870><c> walrus</c>

00:04:43.279 --> 00:04:43.289 align:start position:0%
contrast if I say walrus some walrus
 

00:04:43.289 --> 00:04:45.439 align:start position:0%
contrast if I say walrus some walrus
that<00:04:43.650><c> creates</c><00:04:43.949><c> a</c><00:04:44.009><c> box</c><00:04:44.159><c> of</c><00:04:44.340><c> 64</c><00:04:44.639><c> bits</c><00:04:44.969><c> and</c><00:04:45.120><c> then</c>

00:04:45.439 --> 00:04:45.449 align:start position:0%
that creates a box of 64 bits and then
 

00:04:45.449 --> 00:04:47.420 align:start position:0%
that creates a box of 64 bits and then
say<00:04:45.599><c> equals</c><00:04:45.990><c> new</c><00:04:46.199><c> walrus</c><00:04:46.590><c> and</c><00:04:47.129><c> what's</c><00:04:47.310><c> going</c>

00:04:47.420 --> 00:04:47.430 align:start position:0%
say equals new walrus and what's going
 

00:04:47.430 --> 00:04:49.100 align:start position:0%
say equals new walrus and what's going
to<00:04:47.520><c> happen</c><00:04:47.610><c> is</c><00:04:47.969><c> that</c><00:04:48.000><c> after</c><00:04:48.360><c> new</c><00:04:48.539><c> goes</c><00:04:48.840><c> out</c><00:04:48.990><c> to</c>

00:04:49.100 --> 00:04:49.110 align:start position:0%
to happen is that after new goes out to
 

00:04:49.110 --> 00:04:50.959 align:start position:0%
to happen is that after new goes out to
the<00:04:49.229><c> field</c><00:04:49.469><c> and</c><00:04:49.650><c> it</c><00:04:49.710><c> digs</c><00:04:49.949><c> to</c><00:04:50.069><c> the</c><00:04:50.189><c> hole</c><00:04:50.699><c> and</c>

00:04:50.959 --> 00:04:50.969 align:start position:0%
the field and it digs to the hole and
 

00:04:50.969 --> 00:04:53.480 align:start position:0%
the field and it digs to the hole and
puts<00:04:51.180><c> the</c><00:04:51.300><c> delicious</c><00:04:51.780><c> delicious</c><00:04:52.530><c> walrus</c>

00:04:53.480 --> 00:04:53.490 align:start position:0%
puts the delicious delicious walrus
 

00:04:53.490 --> 00:04:54.559 align:start position:0%
puts the delicious delicious walrus
that's<00:04:53.729><c> not</c><00:04:53.879><c> nice</c>

00:04:54.559 --> 00:04:54.569 align:start position:0%
that's not nice
 

00:04:54.569 --> 00:04:57.890 align:start position:0%
that's not nice
our<00:04:54.930><c> lovely</c><00:04:55.199><c> walrus</c><00:04:55.650><c> in</c><00:04:55.889><c> the</c><00:04:56.460><c> in</c><00:04:56.699><c> the</c><00:04:56.909><c> field</c>

00:04:57.890 --> 00:04:57.900 align:start position:0%
our lovely walrus in the in the field
 

00:04:57.900 --> 00:05:00.019 align:start position:0%
our lovely walrus in the in the field
and<00:04:58.169><c> then</c><00:04:58.500><c> shouts</c><00:04:58.770><c> here's</c><00:04:59.310><c> the</c><00:04:59.490><c> location</c><00:04:59.939><c> of</c>

00:05:00.019 --> 00:05:00.029 align:start position:0%
and then shouts here's the location of
 

00:05:00.029 --> 00:05:02.300 align:start position:0%
and then shouts here's the location of
the<00:05:00.090><c> walrus</c><00:05:00.270><c> this</c><00:05:01.169><c> serves</c><00:05:01.560><c> as</c><00:05:01.740><c> a</c><00:05:01.770><c> record</c><00:05:02.009><c> of</c>

00:05:02.300 --> 00:05:02.310 align:start position:0%
the walrus this serves as a record of
 

00:05:02.310 --> 00:05:04.369 align:start position:0%
the walrus this serves as a record of
that<00:05:02.639><c> information</c><00:05:02.939><c> so</c><00:05:03.389><c> if</c><00:05:03.840><c> we</c><00:05:03.900><c> got</c><00:05:04.080><c> put</c><00:05:04.259><c> in</c>

00:05:04.369 --> 00:05:04.379 align:start position:0%
that information so if we got put in
 

00:05:04.379 --> 00:05:08.809 align:start position:0%
that information so if we got put in
location<00:05:04.860><c> 0</c><00:05:05.189><c> 1</c><00:05:05.430><c> 0</c><00:05:05.819><c> 0</c><00:05:05.909><c> 0</c><00:05:06.270><c> 1</c><00:05:06.719><c> 1</c><00:05:06.779><c> yada</c><00:05:07.289><c> yada</c><00:05:07.500><c> that</c><00:05:07.819><c> is</c>

00:05:08.809 --> 00:05:08.819 align:start position:0%
location 0 1 0 0 0 1 1 yada yada that is
 

00:05:08.819 --> 00:05:11.600 align:start position:0%
location 0 1 0 0 0 1 1 yada yada that is
going<00:05:09.419><c> to</c><00:05:09.509><c> be</c><00:05:09.659><c> what</c><00:05:09.810><c> we</c><00:05:09.930><c> store</c><00:05:10.169><c> in</c><00:05:10.289><c> this</c><00:05:10.409><c> box</c><00:05:10.680><c> so</c>

00:05:11.600 --> 00:05:11.610 align:start position:0%
going to be what we store in this box so
 

00:05:11.610 --> 00:05:13.790 align:start position:0%
going to be what we store in this box so
even<00:05:11.879><c> though</c><00:05:11.969><c> the</c><00:05:12.090><c> war</c><00:05:12.270><c> is</c><00:05:12.449><c> itself</c><00:05:12.779><c> is</c><00:05:13.020><c> 96</c><00:05:13.590><c> bits</c>

00:05:13.790 --> 00:05:13.800 align:start position:0%
even though the war is itself is 96 bits
 

00:05:13.800 --> 00:05:16.969 align:start position:0%
even though the war is itself is 96 bits
the<00:05:14.370><c> address</c><00:05:15.029><c> that</c><00:05:15.060><c> we</c><00:05:15.330><c> store</c><00:05:15.539><c> is</c><00:05:15.689><c> 64</c><00:05:16.199><c> bits</c><00:05:16.409><c> and</c>

00:05:16.969 --> 00:05:16.979 align:start position:0%
the address that we store is 64 bits and
 

00:05:16.979 --> 00:05:21.050 align:start position:0%
the address that we store is 64 bits and
it's<00:05:17.189><c> just</c><00:05:17.490><c> in</c><00:05:18.479><c> a</c><00:05:18.870><c> modern</c><00:05:19.259><c> Java</c><00:05:20.060><c> Runtime</c>

00:05:21.050 --> 00:05:21.060 align:start position:0%
it's just in a modern Java Runtime
 

00:05:21.060 --> 00:05:23.300 align:start position:0%
it's just in a modern Java Runtime
environment<00:05:21.110><c> 64</c><00:05:22.110><c> bits</c><00:05:22.289><c> is</c><00:05:22.409><c> the</c><00:05:22.560><c> size</c><00:05:22.800><c> of</c><00:05:23.189><c> the</c>

00:05:23.300 --> 00:05:23.310 align:start position:0%
environment 64 bits is the size of the
 

00:05:23.310 --> 00:05:25.129 align:start position:0%
environment 64 bits is the size of the
address<00:05:23.460><c> that's</c><00:05:23.849><c> how</c><00:05:24.029><c> many</c><00:05:24.180><c> bits</c><00:05:24.389><c> we</c><00:05:24.569><c> use</c><00:05:24.750><c> to</c>

00:05:25.129 --> 00:05:25.139 align:start position:0%
address that's how many bits we use to
 

00:05:25.139 --> 00:05:29.920 align:start position:0%
address that's how many bits we use to
represent<00:05:25.650><c> this</c><00:05:25.889><c> number</c><00:05:26.099><c> right</c><00:05:26.460><c> here</c><00:05:26.520><c> ok</c><00:05:27.979><c> so</c>

00:05:29.920 --> 00:05:29.930 align:start position:0%
represent this number right here ok so
 

00:05:29.930 --> 00:05:33.019 align:start position:0%
represent this number right here ok so
while<00:05:30.930><c> this</c><00:05:31.409><c> notation</c><00:05:32.129><c> does</c><00:05:32.430><c> give</c><00:05:32.759><c> us</c><00:05:32.789><c> a</c>

00:05:33.019 --> 00:05:33.029 align:start position:0%
while this notation does give us a
 

00:05:33.029 --> 00:05:34.909 align:start position:0%
while this notation does give us a
fairly<00:05:33.389><c> accurate</c><00:05:33.569><c> picture</c><00:05:34.289><c> of</c><00:05:34.319><c> what's</c><00:05:34.830><c> going</c>

00:05:34.909 --> 00:05:34.919 align:start position:0%
fairly accurate picture of what's going
 

00:05:34.919 --> 00:05:36.619 align:start position:0%
fairly accurate picture of what's going
on<00:05:35.219><c> and</c><00:05:35.460><c> again</c><00:05:35.580><c> you</c><00:05:35.789><c> know</c><00:05:35.879><c> I</c><00:05:35.940><c> kind</c><00:05:36.300><c> of</c><00:05:36.419><c> fudge</c>

00:05:36.619 --> 00:05:36.629 align:start position:0%
on and again you know I kind of fudge
 

00:05:36.629 --> 00:05:38.180 align:start position:0%
on and again you know I kind of fudge
things<00:05:36.930><c> a</c><00:05:37.080><c> little</c><00:05:37.199><c> bit</c><00:05:37.440><c> and</c><00:05:37.889><c> when</c><00:05:37.979><c> you</c><00:05:38.039><c> go</c><00:05:38.159><c> to</c>

00:05:38.180 --> 00:05:38.190 align:start position:0%
things a little bit and when you go to
 

00:05:38.190 --> 00:05:40.640 align:start position:0%
things a little bit and when you go to
61<00:05:38.729><c> C</c><00:05:38.940><c> or</c><00:05:39.270><c> even</c><00:05:39.449><c> an</c><00:05:39.629><c> operating</c><00:05:40.050><c> systems</c><00:05:40.440><c> class</c>

00:05:40.640 --> 00:05:40.650 align:start position:0%
61 C or even an operating systems class
 

00:05:40.650 --> 00:05:43.159 align:start position:0%
61 C or even an operating systems class
you<00:05:40.830><c> get</c><00:05:41.039><c> a</c><00:05:41.069><c> really</c><00:05:41.400><c> under</c><00:05:41.839><c> more</c><00:05:42.839><c> honest</c>

00:05:43.159 --> 00:05:43.169 align:start position:0%
you get a really under more honest
 

00:05:43.169 --> 00:05:44.899 align:start position:0%
you get a really under more honest
understanding<00:05:43.800><c> well</c><00:05:44.250><c> this</c><00:05:44.400><c> is</c><00:05:44.550><c> good</c><00:05:44.729><c> enough</c>

00:05:44.899 --> 00:05:44.909 align:start position:0%
understanding well this is good enough
 

00:05:44.909 --> 00:05:46.999 align:start position:0%
understanding well this is good enough
for<00:05:45.029><c> our</c><00:05:45.089><c> purpose</c><00:05:45.419><c> in</c><00:05:45.539><c> 61</c><00:05:45.900><c> B</c><00:05:46.139><c> it's</c><00:05:46.800><c> not</c>

00:05:46.999 --> 00:05:47.009 align:start position:0%
for our purpose in 61 B it's not
 

00:05:47.009 --> 00:05:48.769 align:start position:0%
for our purpose in 61 B it's not
particularly<00:05:47.430><c> instructive</c><00:05:47.969><c> to</c><00:05:48.210><c> look</c><00:05:48.360><c> at</c><00:05:48.629><c> this</c>

00:05:48.769 --> 00:05:48.779 align:start position:0%
particularly instructive to look at this
 

00:05:48.779 --> 00:05:50.360 align:start position:0%
particularly instructive to look at this
giant<00:05:49.020><c> stream</c><00:05:49.379><c> of</c><00:05:49.500><c> bits</c><00:05:49.680><c> and</c><00:05:49.860><c> expect</c><00:05:50.159><c> to</c><00:05:50.250><c> know</c>

00:05:50.360 --> 00:05:50.370 align:start position:0%
giant stream of bits and expect to know
 

00:05:50.370 --> 00:05:52.399 align:start position:0%
giant stream of bits and expect to know
anything<00:05:50.750><c> so</c><00:05:51.750><c> what</c><00:05:51.870><c> I'm</c><00:05:51.960><c> going</c><00:05:52.080><c> to</c><00:05:52.139><c> do</c><00:05:52.289><c> is</c>

00:05:52.399 --> 00:05:52.409 align:start position:0%
anything so what I'm going to do is
 

00:05:52.409 --> 00:05:54.499 align:start position:0%
anything so what I'm going to do is
similar<00:05:52.680><c> to</c><00:05:53.009><c> before</c><00:05:53.159><c> we're</c><00:05:54.089><c> not</c><00:05:54.210><c> going</c><00:05:54.449><c> to</c>

00:05:54.499 --> 00:05:54.509 align:start position:0%
similar to before we're not going to
 

00:05:54.509 --> 00:05:56.329 align:start position:0%
similar to before we're not going to
show<00:05:54.719><c> explicitly</c><00:05:55.349><c> the</c><00:05:55.500><c> binary</c><00:05:56.009><c> information</c>

00:05:56.329 --> 00:05:56.339 align:start position:0%
show explicitly the binary information
 

00:05:56.339 --> 00:05:58.700 align:start position:0%
show explicitly the binary information
shown<00:05:56.939><c> in</c><00:05:57.120><c> a</c><00:05:57.240><c> memory</c><00:05:57.870><c> box</c><00:05:58.050><c> we're</c><00:05:58.620><c> gonna</c>

00:05:58.700 --> 00:05:58.710 align:start position:0%
shown in a memory box we're gonna
 

00:05:58.710 --> 00:06:01.579 align:start position:0%
shown in a memory box we're gonna
instead<00:05:59.099><c> use</c><00:05:59.310><c> this</c><00:05:59.879><c> simplified</c><00:06:00.659><c> box</c><00:06:01.020><c> notation</c>

00:06:01.579 --> 00:06:01.589 align:start position:0%
instead use this simplified box notation
 

00:06:01.589 --> 00:06:04.189 align:start position:0%
instead use this simplified box notation
and<00:06:02.370><c> in</c><00:06:02.490><c> this</c><00:06:02.610><c> case</c><00:06:02.960><c> whenever</c><00:06:03.960><c> we</c><00:06:04.110><c> were</c>

00:06:04.189 --> 00:06:04.199 align:start position:0%
and in this case whenever we were
 

00:06:04.199 --> 00:06:07.040 align:start position:0%
and in this case whenever we were
talking<00:06:04.500><c> about</c><00:06:04.699><c> reference</c><00:06:05.699><c> types</c><00:06:05.939><c> this</c><00:06:06.750><c> this</c>

00:06:07.040 --> 00:06:07.050 align:start position:0%
talking about reference types this this
 

00:06:07.050 --> 00:06:08.689 align:start position:0%
talking about reference types this this
notation<00:06:07.500><c> will</c><00:06:07.620><c> often</c><00:06:07.889><c> be</c><00:06:07.979><c> called</c><00:06:08.129><c> box</c><00:06:08.430><c> and</c>

00:06:08.689 --> 00:06:08.699 align:start position:0%
notation will often be called box and
 

00:06:08.699 --> 00:06:11.360 align:start position:0%
notation will often be called box and
pointer<00:06:08.939><c> okay</c><00:06:09.509><c> so</c><00:06:09.569><c> what</c><00:06:09.779><c> is</c><00:06:09.870><c> it</c><00:06:10.189><c> so</c><00:06:11.189><c> whenever</c>

00:06:11.360 --> 00:06:11.370 align:start position:0%
pointer okay so what is it so whenever
 

00:06:11.370 --> 00:06:13.519 align:start position:0%
pointer okay so what is it so whenever
we<00:06:11.729><c> have</c><00:06:11.759><c> a</c><00:06:11.969><c> null</c><00:06:12.300><c> a</c><00:06:12.330><c> bunch</c><00:06:12.750><c> of</c><00:06:12.870><c> zeros</c><00:06:13.169><c> we're</c>

00:06:13.519 --> 00:06:13.529 align:start position:0%
we have a null a bunch of zeros we're
 

00:06:13.529 --> 00:06:15.050 align:start position:0%
we have a null a bunch of zeros we're
just<00:06:13.710><c> gonna</c><00:06:13.800><c> write</c><00:06:13.979><c> null</c><00:06:14.189><c> in</c><00:06:14.339><c> the</c><00:06:14.430><c> Box</c><00:06:14.639><c> because</c>

00:06:15.050 --> 00:06:15.060 align:start position:0%
just gonna write null in the Box because
 

00:06:15.060 --> 00:06:17.269 align:start position:0%
just gonna write null in the Box because
having<00:06:15.240><c> 64</c><00:06:15.810><c> zeros</c><00:06:16.139><c> in</c><00:06:16.259><c> a</c><00:06:16.319><c> row</c><00:06:16.469><c> is</c><00:06:16.620><c> just</c><00:06:16.860><c> a</c><00:06:17.009><c> waste</c>

00:06:17.269 --> 00:06:17.279 align:start position:0%
having 64 zeros in a row is just a waste
 

00:06:17.279 --> 00:06:20.029 align:start position:0%
having 64 zeros in a row is just a waste
of<00:06:17.400><c> space</c><00:06:17.460><c> and</c><00:06:18.419><c> if</c><00:06:19.319><c> we</c><00:06:19.379><c> ever</c><00:06:19.529><c> have</c><00:06:19.620><c> a</c><00:06:19.740><c> non</c><00:06:20.009><c> zero</c>

00:06:20.029 --> 00:06:20.039 align:start position:0%
of space and if we ever have a non zero
 

00:06:20.039 --> 00:06:22.459 align:start position:0%
of space and if we ever have a non zero
address<00:06:20.759><c> that</c><00:06:20.969><c> is</c><00:06:21.120><c> sorry</c><00:06:21.479><c> and</c><00:06:21.629><c> that</c><00:06:22.050><c> is</c><00:06:22.229><c> if</c>

00:06:22.459 --> 00:06:22.469 align:start position:0%
address that is sorry and that is if
 

00:06:22.469 --> 00:06:23.929 align:start position:0%
address that is sorry and that is if
this<00:06:22.620><c> address</c><00:06:22.979><c> is</c><00:06:23.099><c> anything</c><00:06:23.520><c> other</c><00:06:23.729><c> than</c>

00:06:23.929 --> 00:06:23.939 align:start position:0%
this address is anything other than
 

00:06:23.939 --> 00:06:26.300 align:start position:0%
this address is anything other than
zeros<00:06:24.449><c> then</c><00:06:24.990><c> we're</c><00:06:25.349><c> going</c><00:06:25.589><c> to</c><00:06:25.710><c> draw</c><00:06:25.919><c> an</c><00:06:26.099><c> arrow</c>

00:06:26.300 --> 00:06:26.310 align:start position:0%
zeros then we're going to draw an arrow
 

00:06:26.310 --> 00:06:29.300 align:start position:0%
zeros then we're going to draw an arrow
to<00:06:26.909><c> whichever</c><00:06:27.150><c> object</c><00:06:27.710><c> the</c><00:06:28.710><c> walrus</c><00:06:29.219><c> is</c>

00:06:29.300 --> 00:06:29.310 align:start position:0%
to whichever object the walrus is
 

00:06:29.310 --> 00:06:31.670 align:start position:0%
to whichever object the walrus is
pointing<00:06:29.639><c> at</c><00:06:29.729><c> so</c><00:06:30.150><c> instead</c><00:06:30.419><c> of</c><00:06:30.479><c> showing</c><00:06:30.810><c> this</c>

00:06:31.670 --> 00:06:31.680 align:start position:0%
pointing at so instead of showing this
 

00:06:31.680 --> 00:06:34.490 align:start position:0%
pointing at so instead of showing this
right<00:06:31.919><c> here</c><00:06:32.240><c> this</c><00:06:33.240><c> sequence</c><00:06:33.810><c> of</c><00:06:33.959><c> seemingly</c>

00:06:34.490 --> 00:06:34.500 align:start position:0%
right here this sequence of seemingly
 

00:06:34.500 --> 00:06:36.649 align:start position:0%
right here this sequence of seemingly
random<00:06:34.589><c> 64</c><00:06:35.279><c> bits</c><00:06:35.459><c> will</c><00:06:35.909><c> draw</c><00:06:36.060><c> an</c><00:06:36.120><c> address</c><00:06:36.479><c> that</c>

00:06:36.649 --> 00:06:36.659 align:start position:0%
random 64 bits will draw an address that
 

00:06:36.659 --> 00:06:37.629 align:start position:0%
random 64 bits will draw an address that
shows

00:06:37.629 --> 00:06:37.639 align:start position:0%
shows
 

00:06:37.639 --> 00:06:39.489 align:start position:0%
shows
which<00:06:37.909><c> walrus</c><00:06:38.330><c> were</c><00:06:38.419><c> talking</c><00:06:38.749><c> about</c><00:06:38.930><c> here's</c><00:06:39.469><c> a</c>

00:06:39.489 --> 00:06:39.499 align:start position:0%
which walrus were talking about here's a
 

00:06:39.499 --> 00:06:42.489 align:start position:0%
which walrus were talking about here's a
96<00:06:40.009><c> bit</c><00:06:40.189><c> walrus</c><00:06:40.610><c> here's</c><00:06:41.060><c> a</c><00:06:41.210><c> 64</c><00:06:41.719><c> bit</c><00:06:41.930><c> box</c><00:06:42.229><c> hold</c>

00:06:42.489 --> 00:06:42.499 align:start position:0%
96 bit walrus here's a 64 bit box hold
 

00:06:42.499 --> 00:06:44.619 align:start position:0%
96 bit walrus here's a 64 bit box hold
an<00:06:42.620><c> address</c><00:06:43.039><c> and</c><00:06:43.219><c> there</c><00:06:43.699><c> as</c><00:06:43.789><c> a</c><00:06:43.819><c> pointer</c><00:06:44.180><c> hence</c>

00:06:44.619 --> 00:06:44.629 align:start position:0%
an address and there as a pointer hence
 

00:06:44.629 --> 00:06:48.730 align:start position:0%
an address and there as a pointer hence
the<00:06:44.840><c> name</c><00:06:44.960><c> box</c><00:06:45.530><c> and</c><00:06:45.830><c> pointer</c><00:06:46.099><c> notation</c><00:06:47.740><c> you</c>

00:06:48.730 --> 00:06:48.740 align:start position:0%
the name box and pointer notation you
 

00:06:48.740 --> 00:06:50.230 align:start position:0%
the name box and pointer notation you
may<00:06:48.860><c> not</c><00:06:49.009><c> realize</c><00:06:49.340><c> it</c><00:06:49.550><c> but</c><00:06:49.639><c> you</c><00:06:49.759><c> now</c><00:06:50.060><c> know</c>

00:06:50.230 --> 00:06:50.240 align:start position:0%
may not realize it but you now know
 

00:06:50.240 --> 00:06:52.239 align:start position:0%
may not realize it but you now know
everything<00:06:50.419><c> you</c><00:06:50.870><c> need</c><00:06:51.080><c> to</c><00:06:51.319><c> solve</c><00:06:51.560><c> the</c><00:06:51.889><c> mystery</c>

00:06:52.239 --> 00:06:52.249 align:start position:0%
everything you need to solve the mystery
 

00:06:52.249 --> 00:06:55.540 align:start position:0%
everything you need to solve the mystery
of<00:06:52.279><c> the</c><00:06:52.430><c> walrus</c><00:06:53.379><c> so</c><00:06:54.379><c> I</c><00:06:54.590><c> mentioned</c><00:06:54.889><c> the</c><00:06:55.159><c> golden</c>

00:06:55.540 --> 00:06:55.550 align:start position:0%
of the walrus so I mentioned the golden
 

00:06:55.550 --> 00:06:57.519 align:start position:0%
of the walrus so I mentioned the golden
rule<00:06:55.729><c> of</c><00:06:55.759><c> equals</c><00:06:56.240><c> that</c><00:06:56.479><c> equals</c><00:06:56.840><c> just</c><00:06:57.139><c> copies</c>

00:06:57.519 --> 00:06:57.529 align:start position:0%
rule of equals that equals just copies
 

00:06:57.529 --> 00:06:59.439 align:start position:0%
rule of equals that equals just copies
the<00:06:57.680><c> bits</c><00:06:57.860><c> that's</c><00:06:58.099><c> all</c><00:06:58.310><c> it</c><00:06:58.400><c> does</c><00:06:58.550><c> now</c><00:06:59.300><c> that's</c>

00:06:59.439 --> 00:06:59.449 align:start position:0%
the bits that's all it does now that's
 

00:06:59.449 --> 00:07:01.029 align:start position:0%
the bits that's all it does now that's
true<00:06:59.629><c> for</c><00:06:59.749><c> prototypes</c><00:07:00.319><c> but</c><00:07:00.590><c> it</c><00:07:00.680><c> actually</c><00:07:00.830><c> is</c>

00:07:01.029 --> 00:07:01.039 align:start position:0%
true for prototypes but it actually is
 

00:07:01.039 --> 00:07:02.830 align:start position:0%
true for prototypes but it actually is
also<00:07:01.249><c> true</c><00:07:01.610><c> for</c><00:07:01.639><c> reference</c><00:07:02.180><c> types</c><00:07:02.419><c> and</c><00:07:02.689><c> in</c>

00:07:02.830 --> 00:07:02.840 align:start position:0%
also true for reference types and in
 

00:07:02.840 --> 00:07:04.779 align:start position:0%
also true for reference types and in
fact<00:07:02.990><c> for</c><00:07:03.110><c> any</c><00:07:03.379><c> situation</c><00:07:03.889><c> in</c><00:07:04.370><c> Java</c><00:07:04.580><c> where</c><00:07:04.729><c> you</c>

00:07:04.779 --> 00:07:04.789 align:start position:0%
fact for any situation in Java where you
 

00:07:04.789 --> 00:07:06.820 align:start position:0%
fact for any situation in Java where you
say<00:07:04.969><c> equals</c><00:07:05.330><c> so</c><00:07:06.169><c> in</c><00:07:06.259><c> terms</c><00:07:06.439><c> of</c><00:07:06.529><c> our</c><00:07:06.620><c> visual</c>

00:07:06.820 --> 00:07:06.830 align:start position:0%
say equals so in terms of our visual
 

00:07:06.830 --> 00:07:08.200 align:start position:0%
say equals so in terms of our visual
metaphor<00:07:07.400><c> what</c><00:07:07.580><c> that</c><00:07:07.699><c> means</c><00:07:07.879><c> is</c><00:07:08.029><c> we're</c><00:07:08.120><c> gonna</c>

00:07:08.200 --> 00:07:08.210 align:start position:0%
metaphor what that means is we're gonna
 

00:07:08.210 --> 00:07:10.929 align:start position:0%
metaphor what that means is we're gonna
copy<00:07:08.569><c> the</c><00:07:08.810><c> arrow</c><00:07:08.990><c> by</c><00:07:09.499><c> making</c><00:07:09.889><c> if</c><00:07:10.400><c> we</c><00:07:10.580><c> say</c><00:07:10.759><c> for</c>

00:07:10.929 --> 00:07:10.939 align:start position:0%
copy the arrow by making if we say for
 

00:07:10.939 --> 00:07:12.939 align:start position:0%
copy the arrow by making if we say for
example<00:07:11.270><c> B</c><00:07:11.479><c> equals</c><00:07:11.870><c> a</c><00:07:11.990><c> we're</c><00:07:12.469><c> gonna</c><00:07:12.529><c> make</c><00:07:12.800><c> the</c>

00:07:12.939 --> 00:07:12.949 align:start position:0%
example B equals a we're gonna make the
 

00:07:12.949 --> 00:07:14.619 align:start position:0%
example B equals a we're gonna make the
arrow<00:07:13.129><c> in</c><00:07:13.250><c> the</c><00:07:13.310><c> B</c><00:07:13.520><c> box</c><00:07:13.789><c> point</c><00:07:14.240><c> at</c><00:07:14.330><c> the</c><00:07:14.449><c> same</c>

00:07:14.619 --> 00:07:14.629 align:start position:0%
arrow in the B box point at the same
 

00:07:14.629 --> 00:07:16.689 align:start position:0%
arrow in the B box point at the same
instance<00:07:15.020><c> as</c><00:07:15.169><c> a</c><00:07:15.319><c> so</c><00:07:16.129><c> let's</c><00:07:16.279><c> see</c><00:07:16.400><c> that</c><00:07:16.430><c> in</c><00:07:16.610><c> terms</c>

00:07:16.689 --> 00:07:16.699 align:start position:0%
instance as a so let's see that in terms
 

00:07:16.699 --> 00:07:19.240 align:start position:0%
instance as a so let's see that in terms
of<00:07:16.909><c> box</c><00:07:17.090><c> and</c><00:07:17.300><c> pointer</c><00:07:17.479><c> notation</c><00:07:18.099><c> so</c><00:07:19.099><c> when</c><00:07:19.219><c> I</c>

00:07:19.240 --> 00:07:19.250 align:start position:0%
of box and pointer notation so when I
 

00:07:19.250 --> 00:07:21.640 align:start position:0%
of box and pointer notation so when I
say<00:07:19.400><c> walrus</c><00:07:19.819><c> a</c><00:07:20.029><c> what</c><00:07:20.419><c> does</c><00:07:20.539><c> that</c><00:07:20.569><c> do</c><00:07:20.930><c> well</c><00:07:21.620><c> that</c>

00:07:21.640 --> 00:07:21.650 align:start position:0%
say walrus a what does that do well that
 

00:07:21.650 --> 00:07:24.219 align:start position:0%
say walrus a what does that do well that
creates<00:07:21.860><c> a</c><00:07:22.159><c> box</c><00:07:22.400><c> of</c><00:07:22.610><c> 64</c><00:07:22.969><c> bits</c><00:07:23.180><c> there</c><00:07:23.659><c> it</c><00:07:23.779><c> is</c><00:07:23.870><c> and</c>

00:07:24.219 --> 00:07:24.229 align:start position:0%
creates a box of 64 bits there it is and
 

00:07:24.229 --> 00:07:25.749 align:start position:0%
creates a box of 64 bits there it is and
I've<00:07:24.319><c> only</c><00:07:24.469><c> shown</c><00:07:24.560><c> it</c><00:07:24.740><c> very</c><00:07:25.009><c> small</c><00:07:25.310><c> and</c><00:07:25.669><c> it</c>

00:07:25.749 --> 00:07:25.759 align:start position:0%
I've only shown it very small and it
 

00:07:25.759 --> 00:07:27.399 align:start position:0%
I've only shown it very small and it
could<00:07:25.909><c> have</c><00:07:26.000><c> made</c><00:07:26.090><c> a</c><00:07:26.150><c> huge</c><00:07:26.360><c> box</c><00:07:26.689><c> but</c><00:07:27.050><c> we</c><00:07:27.289><c> know</c>

00:07:27.399 --> 00:07:27.409 align:start position:0%
could have made a huge box but we know
 

00:07:27.409 --> 00:07:29.019 align:start position:0%
could have made a huge box but we know
it's<00:07:27.560><c> 64</c><00:07:27.949><c> bits</c><00:07:28.189><c> because</c><00:07:28.340><c> look</c><00:07:28.580><c> that's</c><00:07:28.909><c> all</c>

00:07:29.019 --> 00:07:29.029 align:start position:0%
it's 64 bits because look that's all
 

00:07:29.029 --> 00:07:32.050 align:start position:0%
it's 64 bits because look that's all
right<00:07:29.150><c> there</c><00:07:29.650><c> now</c><00:07:30.650><c> when</c><00:07:30.770><c> I</c><00:07:30.800><c> say</c><00:07:30.979><c> a</c><00:07:31.159><c> equals</c><00:07:31.819><c> new</c>

00:07:32.050 --> 00:07:32.060 align:start position:0%
right there now when I say a equals new
 

00:07:32.060 --> 00:07:34.420 align:start position:0%
right there now when I say a equals new
walrus<00:07:32.509><c> the</c><00:07:33.110><c> new</c><00:07:33.319><c> key</c><00:07:33.620><c> word</c><00:07:33.800><c> goes</c><00:07:34.099><c> out</c><00:07:34.250><c> the</c>

00:07:34.420 --> 00:07:34.430 align:start position:0%
walrus the new key word goes out the
 

00:07:34.430 --> 00:07:36.969 align:start position:0%
walrus the new key word goes out the
memory<00:07:34.789><c> finds</c><00:07:35.659><c> the</c><00:07:35.810><c> bits</c><00:07:35.990><c> it</c><00:07:36.169><c> needs</c><00:07:36.349><c> the</c><00:07:36.529><c> 96</c>

00:07:36.969 --> 00:07:36.979 align:start position:0%
memory finds the bits it needs the 96
 

00:07:36.979 --> 00:07:39.999 align:start position:0%
memory finds the bits it needs the 96
bits<00:07:37.159><c> and</c><00:07:37.460><c> it</c><00:07:37.610><c> shouts</c><00:07:37.939><c> the</c><00:07:38.240><c> location</c><00:07:38.839><c> which</c><00:07:39.800><c> a</c>

00:07:39.999 --> 00:07:40.009 align:start position:0%
bits and it shouts the location which a
 

00:07:40.009 --> 00:07:41.499 align:start position:0%
bits and it shouts the location which a
will<00:07:40.430><c> dutifully</c><00:07:40.879><c> record</c>

00:07:41.499 --> 00:07:41.509 align:start position:0%
will dutifully record
 

00:07:41.509 --> 00:07:43.899 align:start position:0%
will dutifully record
so<00:07:42.110><c> this</c><00:07:42.319><c> walrus</c><00:07:42.680><c> has</c><00:07:42.800><c> 96</c><00:07:43.310><c> bits</c><00:07:43.520><c> the</c><00:07:43.759><c> new</c>

00:07:43.899 --> 00:07:43.909 align:start position:0%
so this walrus has 96 bits the new
 

00:07:43.909 --> 00:07:45.760 align:start position:0%
so this walrus has 96 bits the new
keyword<00:07:44.150><c> yellows</c><00:07:44.539><c> the</c><00:07:44.569><c> address</c><00:07:45.020><c> we</c><00:07:45.379><c> store</c><00:07:45.650><c> the</c>

00:07:45.760 --> 00:07:45.770 align:start position:0%
keyword yellows the address we store the
 

00:07:45.770 --> 00:07:47.920 align:start position:0%
keyword yellows the address we store the
address<00:07:46.129><c> here</c><00:07:46.430><c> and</c><00:07:46.610><c> rather</c><00:07:47.270><c> than</c><00:07:47.479><c> writing</c><00:07:47.719><c> out</c>

00:07:47.920 --> 00:07:47.930 align:start position:0%
address here and rather than writing out
 

00:07:47.930 --> 00:07:50.050 align:start position:0%
address here and rather than writing out
that<00:07:48.110><c> 64</c><00:07:48.650><c> bit</c><00:07:48.800><c> address</c><00:07:49.159><c> we</c><00:07:49.430><c> draw</c><00:07:49.669><c> an</c><00:07:49.879><c> arrow</c>

00:07:50.050 --> 00:07:50.060 align:start position:0%
that 64 bit address we draw an arrow
 

00:07:50.060 --> 00:07:53.350 align:start position:0%
that 64 bit address we draw an arrow
because<00:07:50.569><c> that's</c><00:07:50.779><c> easier</c><00:07:51.080><c> to</c><00:07:51.139><c> understand</c><00:07:52.360><c> next</c>

00:07:53.350 --> 00:07:53.360 align:start position:0%
because that's easier to understand next
 

00:07:53.360 --> 00:07:56.709 align:start position:0%
because that's easier to understand next
up<00:07:53.479><c> we</c><00:07:53.870><c> say</c><00:07:54.050><c> walrus</c><00:07:54.529><c> B</c><00:07:54.939><c> this</c><00:07:55.939><c> creates</c><00:07:56.389><c> a</c><00:07:56.509><c> box</c>

00:07:56.709 --> 00:07:56.719 align:start position:0%
up we say walrus B this creates a box
 

00:07:56.719 --> 00:07:59.889 align:start position:0%
up we say walrus B this creates a box
which<00:07:57.319><c> is</c><00:07:57.500><c> 64</c><00:07:58.039><c> bits</c><00:07:58.279><c> so</c><00:07:58.550><c> both</c><00:07:58.729><c> a</c><00:07:58.909><c> and</c><00:07:58.939><c> B</c><00:07:59.210><c> are</c><00:07:59.360><c> 64</c>

00:07:59.889 --> 00:07:59.899 align:start position:0%
which is 64 bits so both a and B are 64
 

00:07:59.899 --> 00:08:02.769 align:start position:0%
which is 64 bits so both a and B are 64
bits<00:07:59.930><c> and</c><00:08:00.500><c> at</c><00:08:00.919><c> this</c><00:08:01.069><c> point</c><00:08:01.339><c> B</c><00:08:01.610><c> is</c><00:08:01.879><c> not</c><00:08:02.419><c> defined</c>

00:08:02.769 --> 00:08:02.779 align:start position:0%
bits and at this point B is not defined
 

00:08:02.779 --> 00:08:05.529 align:start position:0%
bits and at this point B is not defined
right<00:08:03.529><c> it's</c><00:08:03.919><c> not</c><00:08:04.069><c> that</c><00:08:04.250><c> it's</c><00:08:04.399><c> normal</c><00:08:05.180><c> right</c>

00:08:05.529 --> 00:08:05.539 align:start position:0%
right it's not that it's normal right
 

00:08:05.539 --> 00:08:07.659 align:start position:0%
right it's not that it's normal right
now<00:08:05.569><c> it's</c><00:08:05.779><c> just</c><00:08:05.930><c> nothing</c><00:08:06.259><c> it's</c><00:08:06.620><c> just</c><00:08:06.919><c> some</c><00:08:07.219><c> box</c>

00:08:07.659 --> 00:08:07.669 align:start position:0%
now it's just nothing it's just some box
 

00:08:07.669 --> 00:08:09.790 align:start position:0%
now it's just nothing it's just some box
of<00:08:07.909><c> 64</c><00:08:08.300><c> bits</c><00:08:08.479><c> who</c><00:08:08.839><c> knows</c><00:08:09.050><c> what's</c><00:08:09.229><c> in</c><00:08:09.349><c> there</c><00:08:09.529><c> and</c>

00:08:09.790 --> 00:08:09.800 align:start position:0%
of 64 bits who knows what's in there and
 

00:08:09.800 --> 00:08:12.279 align:start position:0%
of 64 bits who knows what's in there and
we<00:08:10.339><c> say</c><00:08:10.550><c> B</c><00:08:10.819><c> equals</c><00:08:11.210><c> say</c><00:08:11.419><c> we're</c><00:08:11.899><c> gonna</c><00:08:12.020><c> copy</c>

00:08:12.279 --> 00:08:12.289 align:start position:0%
we say B equals say we're gonna copy
 

00:08:12.289 --> 00:08:14.110 align:start position:0%
we say B equals say we're gonna copy
that<00:08:12.560><c> string</c><00:08:12.860><c> of</c><00:08:12.979><c> bits</c><00:08:13.159><c> remember</c><00:08:13.460><c> there's</c><00:08:13.610><c> 64</c>

00:08:14.110 --> 00:08:14.120 align:start position:0%
that string of bits remember there's 64
 

00:08:14.120 --> 00:08:15.610 align:start position:0%
that string of bits remember there's 64
bits<00:08:14.360><c> here</c><00:08:14.629><c> if</c><00:08:14.719><c> we</c><00:08:14.810><c> have</c><00:08:14.960><c> the</c><00:08:15.110><c> bit</c><00:08:15.259><c> picture</c>

00:08:15.610 --> 00:08:15.620 align:start position:0%
bits here if we have the bit picture
 

00:08:15.620 --> 00:08:17.559 align:start position:0%
bits here if we have the bit picture
it'd<00:08:15.740><c> just</c><00:08:15.830><c> be</c><00:08:15.979><c> a</c><00:08:16.009><c> string</c><00:08:16.370><c> of</c><00:08:16.490><c> 64</c><00:08:16.939><c> bits</c><00:08:16.969><c> we'll</c>

00:08:17.559 --> 00:08:17.569 align:start position:0%
it'd just be a string of 64 bits we'll
 

00:08:17.569 --> 00:08:19.689 align:start position:0%
it'd just be a string of 64 bits we'll
copy<00:08:17.779><c> them</c><00:08:18.050><c> into</c><00:08:18.199><c> this</c><00:08:18.379><c> box</c><00:08:18.649><c> and</c><00:08:18.949><c> so</c><00:08:19.460><c> at</c><00:08:19.550><c> that</c>

00:08:19.689 --> 00:08:19.699 align:start position:0%
copy them into this box and so at that
 

00:08:19.699 --> 00:08:21.939 align:start position:0%
copy them into this box and so at that
point<00:08:19.909><c> when</c><00:08:20.089><c> we</c><00:08:20.120><c> say</c><00:08:20.330><c> P</c><00:08:20.509><c> equals</c><00:08:20.899><c> a</c><00:08:21.110><c> V</c><00:08:21.770><c> is</c>

00:08:21.939 --> 00:08:21.949 align:start position:0%
point when we say P equals a V is
 

00:08:21.949 --> 00:08:24.639 align:start position:0%
point when we say P equals a V is
pointing<00:08:22.430><c> at</c><00:08:22.580><c> the</c><00:08:22.849><c> same</c><00:08:23.060><c> object</c><00:08:23.509><c> so</c><00:08:23.689><c> now</c><00:08:24.379><c> if</c><00:08:24.560><c> we</c>

00:08:24.639 --> 00:08:24.649 align:start position:0%
pointing at the same object so now if we
 

00:08:24.649 --> 00:08:26.350 align:start position:0%
pointing at the same object so now if we
were<00:08:24.830><c> to</c><00:08:24.919><c> try</c><00:08:25.099><c> and</c><00:08:25.219><c> do</c><00:08:25.310><c> something</c><00:08:25.669><c> like</c><00:08:25.759><c> B</c><00:08:26.060><c> dot</c>

00:08:26.350 --> 00:08:26.360 align:start position:0%
were to try and do something like B dot
 

00:08:26.360 --> 00:08:28.990 align:start position:0%
were to try and do something like B dot
wait<00:08:26.629><c> it's</c><00:08:27.110><c> saying</c><00:08:27.349><c> follow</c><00:08:27.979><c> the</c><00:08:28.189><c> arrow</c><00:08:28.399><c> go</c><00:08:28.939><c> to</c>

00:08:28.990 --> 00:08:29.000 align:start position:0%
wait it's saying follow the arrow go to
 

00:08:29.000 --> 00:08:30.850 align:start position:0%
wait it's saying follow the arrow go to
the<00:08:29.270><c> walrus</c><00:08:29.659><c> you</c><00:08:29.930><c> will</c><00:08:30.199><c> find</c><00:08:30.469><c> the</c><00:08:30.620><c> information</c>

00:08:30.850 --> 00:08:30.860 align:start position:0%
the walrus you will find the information
 

00:08:30.860 --> 00:08:33.040 align:start position:0%
the walrus you will find the information
you<00:08:31.279><c> seek</c><00:08:31.550><c> and</c><00:08:31.789><c> in</c><00:08:32.240><c> that</c><00:08:32.360><c> case</c><00:08:32.539><c> you</c><00:08:32.719><c> might</c><00:08:32.870><c> say</c>

00:08:33.040 --> 00:08:33.050 align:start position:0%
you seek and in that case you might say
 

00:08:33.050 --> 00:08:35.259 align:start position:0%
you seek and in that case you might say
B<00:08:33.229><c> dot</c><00:08:33.440><c> weight</c><00:08:33.649><c> equals</c><00:08:34.039><c> something</c><00:08:34.399><c> so</c><00:08:35.060><c> I</c><00:08:35.089><c> hope</c>

00:08:35.259 --> 00:08:35.269 align:start position:0%
B dot weight equals something so I hope
 

00:08:35.269 --> 00:08:37.120 align:start position:0%
B dot weight equals something so I hope
now<00:08:35.419><c> it's</c><00:08:35.630><c> clear</c><00:08:35.930><c> why</c><00:08:36.260><c> the</c><00:08:36.320><c> mystery</c><00:08:36.919><c> of</c><00:08:37.010><c> the</c>

00:08:37.120 --> 00:08:37.130 align:start position:0%
now it's clear why the mystery of the
 

00:08:37.130 --> 00:08:39.100 align:start position:0%
now it's clear why the mystery of the
walrus<00:08:37.339><c> is</c><00:08:37.610><c> resolved</c><00:08:38.120><c> the</c><00:08:38.269><c> way</c><00:08:38.390><c> it</c><00:08:38.510><c> does</c><00:08:38.779><c> and</c>

00:08:39.100 --> 00:08:39.110 align:start position:0%
walrus is resolved the way it does and
 

00:08:39.110 --> 00:08:41.380 align:start position:0%
walrus is resolved the way it does and
that's<00:08:39.919><c> all</c><00:08:40.370><c> you</c><00:08:40.640><c> need</c><00:08:40.820><c> to</c><00:08:40.969><c> know</c><00:08:41.120><c> to</c>

00:08:41.380 --> 00:08:41.390 align:start position:0%
that's all you need to know to
 

00:08:41.390 --> 00:08:44.620 align:start position:0%
that's all you need to know to
understand<00:08:41.810><c> the</c><00:08:42.199><c> whole</c><00:08:42.380><c> deal</c>

