WEBVTT
Kind: captions
Language: en

00:00:00.030 --> 00:00:02.450 align:start position:0%
 
one<00:00:00.840><c> particularly</c><00:00:01.260><c> powerful</c><00:00:01.650><c> and</c><00:00:02.100><c> beautiful</c>

00:00:02.450 --> 00:00:02.460 align:start position:0%
one particularly powerful and beautiful
 

00:00:02.460 --> 00:00:04.130 align:start position:0%
one particularly powerful and beautiful
idea<00:00:02.760><c> and</c><00:00:02.879><c> computer</c><00:00:03.270><c> science</c><00:00:03.629><c> is</c><00:00:03.750><c> that</c><00:00:03.959><c> of</c><00:00:04.049><c> the</c>

00:00:04.130 --> 00:00:04.140 align:start position:0%
idea and computer science is that of the
 

00:00:04.140 --> 00:00:06.230 align:start position:0%
idea and computer science is that of the
higher<00:00:04.319><c> order</c><00:00:04.680><c> function</c><00:00:05.069><c> a</c><00:00:05.250><c> function</c><00:00:05.670><c> that</c>

00:00:06.230 --> 00:00:06.240 align:start position:0%
higher order function a function that
 

00:00:06.240 --> 00:00:09.500 align:start position:0%
higher order function a function that
takes<00:00:06.390><c> other</c><00:00:06.660><c> functions</c><00:00:07.170><c> as</c><00:00:07.350><c> data</c><00:00:08.000><c> so</c><00:00:09.000><c> I'll</c>

00:00:09.500 --> 00:00:09.510 align:start position:0%
takes other functions as data so I'll
 

00:00:09.510 --> 00:00:11.959 align:start position:0%
takes other functions as data so I'll
give<00:00:09.750><c> a</c><00:00:09.780><c> little</c><00:00:09.929><c> example</c><00:00:10.530><c> here</c><00:00:10.559><c> in</c><00:00:10.860><c> Python</c><00:00:11.309><c> and</c>

00:00:11.959 --> 00:00:11.969 align:start position:0%
give a little example here in Python and
 

00:00:11.969 --> 00:00:13.129 align:start position:0%
give a little example here in Python and
even<00:00:12.210><c> if</c><00:00:12.300><c> you've</c><00:00:12.420><c> never</c><00:00:12.599><c> seen</c><00:00:12.870><c> something</c>

00:00:13.129 --> 00:00:13.139 align:start position:0%
even if you've never seen something
 

00:00:13.139 --> 00:00:14.480 align:start position:0%
even if you've never seen something
quite<00:00:13.440><c> like</c><00:00:13.590><c> this</c><00:00:13.740><c> or</c><00:00:13.950><c> even</c><00:00:14.009><c> never</c><00:00:14.280><c> seen</c>

00:00:14.480 --> 00:00:14.490 align:start position:0%
quite like this or even never seen
 

00:00:14.490 --> 00:00:15.860 align:start position:0%
quite like this or even never seen
Python<00:00:14.849><c> I</c><00:00:15.000><c> think</c><00:00:15.299><c> what's</c><00:00:15.450><c> happening</c><00:00:15.809><c> here</c>

00:00:15.860 --> 00:00:15.870 align:start position:0%
Python I think what's happening here
 

00:00:15.870 --> 00:00:18.260 align:start position:0%
Python I think what's happening here
should<00:00:16.170><c> be</c><00:00:16.289><c> clear</c><00:00:16.529><c> so</c><00:00:17.520><c> in</c><00:00:17.609><c> Python</c><00:00:17.730><c> we</c><00:00:18.119><c> can</c>

00:00:18.260 --> 00:00:18.270 align:start position:0%
should be clear so in Python we can
 

00:00:18.270 --> 00:00:20.540 align:start position:0%
should be clear so in Python we can
define<00:00:18.539><c> a</c><00:00:18.570><c> function</c><00:00:18.690><c> 10</c><00:00:19.230><c> X</c><00:00:19.410><c> their</c><00:00:19.830><c> returns</c><00:00:20.160><c> 10</c>

00:00:20.540 --> 00:00:20.550 align:start position:0%
define a function 10 X their returns 10
 

00:00:20.550 --> 00:00:24.380 align:start position:0%
define a function 10 X their returns 10
times<00:00:20.939><c> X</c><00:00:21.260><c> that's</c><00:00:22.260><c> it</c><00:00:22.470><c> so</c><00:00:22.830><c> I'm</c><00:00:23.070><c> do</c><00:00:23.310><c> 10</c><00:00:23.519><c> X</c><00:00:23.670><c> of</c><00:00:23.850><c> 5</c><00:00:24.029><c> no</c>

00:00:24.380 --> 00:00:24.390 align:start position:0%
times X that's it so I'm do 10 X of 5 no
 

00:00:24.390 --> 00:00:27.050 align:start position:0%
times X that's it so I'm do 10 X of 5 no
will<00:00:24.510><c> return</c><00:00:24.750><c> 50</c><00:00:25.340><c> now</c><00:00:26.340><c> I</c><00:00:26.369><c> can</c><00:00:26.519><c> actually</c><00:00:26.760><c> define</c>

00:00:27.050 --> 00:00:27.060 align:start position:0%
will return 50 now I can actually define
 

00:00:27.060 --> 00:00:29.419 align:start position:0%
will return 50 now I can actually define
a<00:00:27.090><c> function</c><00:00:27.330><c> say</c><00:00:27.750><c> do</c><00:00:28.050><c> twice</c><00:00:28.320><c> that</c><00:00:29.070><c> takes</c><00:00:29.279><c> two</c>

00:00:29.419 --> 00:00:29.429 align:start position:0%
a function say do twice that takes two
 

00:00:29.429 --> 00:00:31.759 align:start position:0%
a function say do twice that takes two
arguments<00:00:29.699><c> one</c><00:00:30.689><c> that</c><00:00:31.109><c> you</c><00:00:31.199><c> expect</c><00:00:31.529><c> to</c><00:00:31.590><c> be</c><00:00:31.679><c> a</c>

00:00:31.759 --> 00:00:31.769 align:start position:0%
arguments one that you expect to be a
 

00:00:31.769 --> 00:00:33.680 align:start position:0%
arguments one that you expect to be a
function<00:00:32.219><c> in</c><00:00:32.669><c> the</c><00:00:32.790><c> other</c><00:00:32.910><c> you</c><00:00:33.120><c> expect</c><00:00:33.450><c> to</c><00:00:33.540><c> be</c>

00:00:33.680 --> 00:00:33.690 align:start position:0%
function in the other you expect to be
 

00:00:33.690 --> 00:00:35.360 align:start position:0%
function in the other you expect to be
some<00:00:34.079><c> kind</c><00:00:34.230><c> of</c><00:00:34.290><c> argument</c><00:00:34.770><c> to</c><00:00:34.860><c> that</c><00:00:34.890><c> type</c><00:00:35.190><c> of</c>

00:00:35.360 --> 00:00:35.370 align:start position:0%
some kind of argument to that type of
 

00:00:35.370 --> 00:00:38.060 align:start position:0%
some kind of argument to that type of
function<00:00:35.670><c> and</c><00:00:36.059><c> so</c><00:00:36.630><c> in</c><00:00:36.750><c> that</c><00:00:36.840><c> case</c><00:00:37.050><c> we</c><00:00:37.829><c> could</c><00:00:37.950><c> do</c>

00:00:38.060 --> 00:00:38.070 align:start position:0%
function and so in that case we could do
 

00:00:38.070 --> 00:00:40.100 align:start position:0%
function and so in that case we could do
something<00:00:38.430><c> like</c><00:00:38.460><c> return</c><00:00:39.270><c> the</c><00:00:39.870><c> function</c>

00:00:40.100 --> 00:00:40.110 align:start position:0%
something like return the function
 

00:00:40.110 --> 00:00:42.139 align:start position:0%
something like return the function
applied<00:00:41.010><c> to</c><00:00:41.190><c> the</c><00:00:41.309><c> result</c><00:00:41.489><c> of</c><00:00:41.820><c> the</c><00:00:42.000><c> function</c>

00:00:42.139 --> 00:00:42.149 align:start position:0%
applied to the result of the function
 

00:00:42.149 --> 00:00:45.350 align:start position:0%
applied to the result of the function
applied<00:00:42.989><c> to</c><00:00:43.140><c> X</c><00:00:43.320><c> and</c><00:00:44.309><c> so</c><00:00:44.579><c> I</c><00:00:44.789><c> can</c><00:00:45.149><c> for</c><00:00:45.300><c> example</c>

00:00:45.350 --> 00:00:45.360 align:start position:0%
applied to X and so I can for example
 

00:00:45.360 --> 00:00:47.779 align:start position:0%
applied to X and so I can for example
say<00:00:45.899><c> Python</c><00:00:46.590><c> please</c><00:00:47.070><c> print</c><00:00:47.399><c> for</c><00:00:47.579><c> me</c><00:00:47.670><c> the</c>

00:00:47.779 --> 00:00:47.789 align:start position:0%
say Python please print for me the
 

00:00:47.789 --> 00:00:50.510 align:start position:0%
say Python please print for me the
result<00:00:48.090><c> of</c><00:00:48.210><c> doing</c><00:00:48.510><c> twice</c><00:00:48.750><c> the</c><00:00:49.320><c> 10x</c><00:00:49.710><c> function</c><00:00:50.129><c> 2</c>

00:00:50.510 --> 00:00:50.520 align:start position:0%
result of doing twice the 10x function 2
 

00:00:50.520 --> 00:00:51.860 align:start position:0%
result of doing twice the 10x function 2
so<00:00:51.329><c> that'll</c><00:00:51.600><c> do</c>

00:00:51.860 --> 00:00:51.870 align:start position:0%
so that'll do
 

00:00:51.870 --> 00:00:54.740 align:start position:0%
so that'll do
10<00:00:52.079><c> X</c><00:00:52.230><c> of</c><00:00:52.590><c> 10</c><00:00:52.860><c> X</c><00:00:53.039><c> of</c><00:00:53.280><c> 2</c><00:00:53.699><c> which</c><00:00:54.120><c> is</c><00:00:54.239><c> 10</c><00:00:54.420><c> times</c><00:00:54.629><c> 10</c>

00:00:54.740 --> 00:00:54.750 align:start position:0%
10 X of 10 X of 2 which is 10 times 10
 

00:00:54.750 --> 00:00:57.529 align:start position:0%
10 X of 10 X of 2 which is 10 times 10
times<00:00:55.110><c> 2</c><00:00:55.320><c> which</c><00:00:55.800><c> is</c><00:00:55.829><c> 200</c><00:00:56.370><c> ok</c><00:00:56.730><c> so</c><00:00:57.300><c> what</c><00:00:57.420><c> we're</c>

00:00:57.529 --> 00:00:57.539 align:start position:0%
times 2 which is 200 ok so what we're
 

00:00:57.539 --> 00:00:59.930 align:start position:0%
times 2 which is 200 ok so what we're
gonna<00:00:57.600><c> try</c><00:00:57.750><c> and</c><00:00:58.050><c> do</c><00:00:58.199><c> is</c><00:00:58.410><c> this</c><00:00:59.160><c> same</c><00:00:59.609><c> program</c>

00:00:59.930 --> 00:00:59.940 align:start position:0%
gonna try and do is this same program
 

00:00:59.940 --> 00:01:02.270 align:start position:0%
gonna try and do is this same program
but<00:01:00.359><c> in</c><00:01:00.660><c> Java</c><00:01:00.899><c> and</c><00:01:01.680><c> we'll</c><00:01:01.800><c> see</c><00:01:01.890><c> it's</c><00:01:02.010><c> a</c><00:01:02.070><c> little</c>

00:01:02.270 --> 00:01:02.280 align:start position:0%
but in Java and we'll see it's a little
 

00:01:02.280 --> 00:01:04.640 align:start position:0%
but in Java and we'll see it's a little
more<00:01:02.670><c> challenging</c><00:01:02.969><c> a</c><00:01:03.780><c> little</c><00:01:03.899><c> bit</c><00:01:04.229><c> kludgy</c><00:01:04.619><c> ER</c>

00:01:04.640 --> 00:01:04.650 align:start position:0%
more challenging a little bit kludgy ER
 

00:01:04.650 --> 00:01:06.740 align:start position:0%
more challenging a little bit kludgy ER
than<00:01:04.830><c> it</c><00:01:04.920><c> is</c><00:01:05.070><c> in</c><00:01:05.189><c> python</c><00:01:05.549><c> but</c><00:01:06.119><c> this</c><00:01:06.270><c> idea</c><00:01:06.510><c> turns</c>

00:01:06.740 --> 00:01:06.750 align:start position:0%
than it is in python but this idea turns
 

00:01:06.750 --> 00:01:09.859 align:start position:0%
than it is in python but this idea turns
out<00:01:06.869><c> actually</c><00:01:07.080><c> it's</c><00:01:07.380><c> very</c><00:01:07.619><c> important</c><00:01:08.299><c> so</c><00:01:09.299><c> in</c>

00:01:09.859 --> 00:01:09.869 align:start position:0%
out actually it's very important so in
 

00:01:09.869 --> 00:01:13.880 align:start position:0%
out actually it's very important so in
older<00:01:10.740><c> school</c><00:01:11.130><c> Java</c><00:01:11.490><c> Java</c><00:01:12.090><c> 7</c><00:01:12.360><c> and</c><00:01:12.659><c> earlier</c><00:01:12.890><c> you</c>

00:01:13.880 --> 00:01:13.890 align:start position:0%
older school Java Java 7 and earlier you
 

00:01:13.890 --> 00:01:16.190 align:start position:0%
older school Java Java 7 and earlier you
had<00:01:14.040><c> to</c><00:01:14.159><c> do</c><00:01:14.310><c> it</c><00:01:14.430><c> in</c><00:01:14.549><c> a</c><00:01:14.640><c> somewhat</c><00:01:15.119><c> indirect</c><00:01:16.020><c> way</c>

00:01:16.190 --> 00:01:16.200 align:start position:0%
had to do it in a somewhat indirect way
 

00:01:16.200 --> 00:01:17.749 align:start position:0%
had to do it in a somewhat indirect way
that<00:01:16.530><c> we'll</c><00:01:16.650><c> be</c><00:01:16.770><c> exploring</c><00:01:16.860><c> through</c><00:01:17.430><c> the</c><00:01:17.549><c> rest</c>

00:01:17.749 --> 00:01:17.759 align:start position:0%
that we'll be exploring through the rest
 

00:01:17.759 --> 00:01:19.850 align:start position:0%
that we'll be exploring through the rest
of<00:01:17.880><c> this</c><00:01:17.970><c> video</c><00:01:18.270><c> and</c><00:01:19.110><c> the</c><00:01:19.200><c> fundamental</c><00:01:19.710><c> issue</c>

00:01:19.850 --> 00:01:19.860 align:start position:0%
of this video and the fundamental issue
 

00:01:19.860 --> 00:01:23.030 align:start position:0%
of this video and the fundamental issue
was<00:01:20.460><c> that</c><00:01:20.490><c> memory</c><00:01:20.970><c> boxes</c><00:01:21.390><c> or</c><00:01:22.020><c> a</c><00:01:22.049><c> K</c><00:01:22.560><c> variables</c>

00:01:23.030 --> 00:01:23.040 align:start position:0%
was that memory boxes or a K variables
 

00:01:23.040 --> 00:01:25.249 align:start position:0%
was that memory boxes or a K variables
they<00:01:23.460><c> cannot</c><00:01:23.880><c> contain</c><00:01:24.360><c> pointers</c><00:01:25.049><c> to</c>

00:01:25.249 --> 00:01:25.259 align:start position:0%
they cannot contain pointers to
 

00:01:25.259 --> 00:01:27.740 align:start position:0%
they cannot contain pointers to
functions<00:01:25.290><c> in</c><00:01:25.830><c> the</c><00:01:26.040><c> old</c><00:01:26.189><c> versions</c><00:01:26.580><c> of</c><00:01:26.729><c> Java</c><00:01:26.880><c> so</c>

00:01:27.740 --> 00:01:27.750 align:start position:0%
functions in the old versions of Java so
 

00:01:27.750 --> 00:01:29.090 align:start position:0%
functions in the old versions of Java so
we<00:01:27.869><c> can't</c><00:01:28.170><c> write</c><00:01:28.350><c> a</c><00:01:28.380><c> function</c><00:01:28.619><c> that</c><00:01:28.920><c> has</c><00:01:29.070><c> a</c>

00:01:29.090 --> 00:01:29.100 align:start position:0%
we can't write a function that has a
 

00:01:29.100 --> 00:01:31.310 align:start position:0%
we can't write a function that has a
function<00:01:29.759><c> type</c><00:01:30.210><c> here</c><00:01:30.570><c> remember</c><00:01:30.930><c> that</c><00:01:31.049><c> a</c><00:01:31.079><c> job</c>

00:01:31.310 --> 00:01:31.320 align:start position:0%
function type here remember that a job
 

00:01:31.320 --> 00:01:32.840 align:start position:0%
function type here remember that a job
we<00:01:31.470><c> have</c><00:01:31.590><c> to</c><00:01:31.680><c> do</c><00:01:31.799><c> type</c><00:01:32.009><c> checking</c><00:01:32.280><c> and</c><00:01:32.490><c> there</c>

00:01:32.840 --> 00:01:32.850 align:start position:0%
we have to do type checking and there
 

00:01:32.850 --> 00:01:34.550 align:start position:0%
we have to do type checking and there
just<00:01:33.000><c> was</c><00:01:33.180><c> no</c><00:01:33.360><c> type</c><00:01:33.630><c> for</c><00:01:34.079><c> functions</c><00:01:34.110><c> you</c>

00:01:34.550 --> 00:01:34.560 align:start position:0%
just was no type for functions you
 

00:01:34.560 --> 00:01:36.950 align:start position:0%
just was no type for functions you
couldn't<00:01:34.829><c> do</c><00:01:34.950><c> it</c><00:01:35.070><c> and</c><00:01:35.340><c> so</c><00:01:35.970><c> instead</c><00:01:36.299><c> the</c>

00:01:36.950 --> 00:01:36.960 align:start position:0%
couldn't do it and so instead the
 

00:01:36.960 --> 00:01:38.840 align:start position:0%
couldn't do it and so instead the
workaround<00:01:37.500><c> was</c><00:01:37.770><c> to</c><00:01:38.040><c> take</c><00:01:38.310><c> advantage</c><00:01:38.759><c> of</c>

00:01:38.840 --> 00:01:38.850 align:start position:0%
workaround was to take advantage of
 

00:01:38.850 --> 00:01:40.249 align:start position:0%
workaround was to take advantage of
implementation<00:01:39.540><c> or</c><00:01:39.630><c> sign</c><00:01:39.780><c> interface</c>

00:01:40.249 --> 00:01:40.259 align:start position:0%
implementation or sign interface
 

00:01:40.259 --> 00:01:43.990 align:start position:0%
implementation or sign interface
inheritance<00:01:40.890><c> where</c><00:01:41.759><c> we</c><00:01:41.880><c> would</c><00:01:42.030><c> define</c><00:01:42.720><c> some</c>

00:01:43.990 --> 00:01:44.000 align:start position:0%
inheritance where we would define some
 

00:01:44.000 --> 00:01:47.120 align:start position:0%
inheritance where we would define some
abstract<00:01:45.000><c> function</c><00:01:45.600><c> e</c><00:01:45.899><c> thing</c><00:01:46.229><c> that</c><00:01:46.829><c> doesn't</c>

00:01:47.120 --> 00:01:47.130 align:start position:0%
abstract function e thing that doesn't
 

00:01:47.130 --> 00:01:48.889 align:start position:0%
abstract function e thing that doesn't
have<00:01:47.220><c> a</c><00:01:47.250><c> specific</c><00:01:47.520><c> function</c><00:01:48.299><c> in</c><00:01:48.360><c> mind</c><00:01:48.630><c> and</c>

00:01:48.889 --> 00:01:48.899 align:start position:0%
have a specific function in mind and
 

00:01:48.899 --> 00:01:51.649 align:start position:0%
have a specific function in mind and
then<00:01:49.470><c> we</c><00:01:49.860><c> would</c><00:01:50.040><c> implement</c><00:01:50.579><c> that</c><00:01:51.060><c> class</c><00:01:51.360><c> and</c>

00:01:51.649 --> 00:01:51.659 align:start position:0%
then we would implement that class and
 

00:01:51.659 --> 00:01:54.649 align:start position:0%
then we would implement that class and
we<00:01:52.020><c> would</c><00:01:52.170><c> override</c><00:01:52.790><c> some</c><00:01:53.790><c> otherwise</c>

00:01:54.649 --> 00:01:54.659 align:start position:0%
we would override some otherwise
 

00:01:54.659 --> 00:01:56.780 align:start position:0%
we would override some otherwise
undefined<00:01:55.649><c> method</c><00:01:55.829><c> ok</c><00:01:56.250><c> we'll</c><00:01:56.460><c> see</c><00:01:56.579><c> what</c><00:01:56.700><c> that</c>

00:01:56.780 --> 00:01:56.790 align:start position:0%
undefined method ok we'll see what that
 

00:01:56.790 --> 00:01:59.149 align:start position:0%
undefined method ok we'll see what that
means<00:01:56.939><c> in</c><00:01:57.090><c> a</c><00:01:57.180><c> moment</c><00:01:57.299><c> now</c><00:01:57.710><c> of</c><00:01:58.710><c> course</c><00:01:58.950><c> in</c>

00:01:59.149 --> 00:01:59.159 align:start position:0%
means in a moment now of course in
 

00:01:59.159 --> 00:02:01.429 align:start position:0%
means in a moment now of course in
modern<00:01:59.340><c> Java</c><00:01:59.729><c> you</c><00:01:59.939><c> can</c><00:02:00.180><c> actually</c><00:02:00.450><c> do</c><00:02:00.899><c> this</c><00:02:01.140><c> but</c>

00:02:01.429 --> 00:02:01.439 align:start position:0%
modern Java you can actually do this but
 

00:02:01.439 --> 00:02:03.830 align:start position:0%
modern Java you can actually do this but
for<00:02:02.070><c> so</c><00:02:02.340><c> long</c><00:02:02.579><c> Java</c><00:02:03.180><c> programs</c><00:02:03.600><c> are</c><00:02:03.750><c> written</c>

00:02:03.830 --> 00:02:03.840 align:start position:0%
for so long Java programs are written
 

00:02:03.840 --> 00:02:05.749 align:start position:0%
for so long Java programs are written
this<00:02:04.110><c> way</c><00:02:04.290><c> that</c><00:02:04.799><c> it's</c><00:02:04.950><c> the</c><00:02:05.219><c> default</c><00:02:05.610><c> way</c><00:02:05.729><c> of</c>

00:02:05.749 --> 00:02:05.759 align:start position:0%
this way that it's the default way of
 

00:02:05.759 --> 00:02:06.980 align:start position:0%
this way that it's the default way of
thinking<00:02:06.210><c> in</c><00:02:06.299><c> a</c><00:02:06.390><c> lot</c><00:02:06.509><c> of</c><00:02:06.540><c> cases</c><00:02:06.810><c> like</c>

00:02:06.980 --> 00:02:06.990 align:start position:0%
thinking in a lot of cases like
 

00:02:06.990 --> 00:02:09.290 align:start position:0%
thinking in a lot of cases like
comparators<00:02:07.770><c> and</c><00:02:07.799><c> any</c><00:02:08.700><c> other</c><00:02:08.849><c> number</c><00:02:08.940><c> of</c>

00:02:09.290 --> 00:02:09.300 align:start position:0%
comparators and any other number of
 

00:02:09.300 --> 00:02:10.669 align:start position:0%
comparators and any other number of
things<00:02:09.450><c> that</c><00:02:09.720><c> we'll</c><00:02:09.810><c> be</c><00:02:09.959><c> talking</c><00:02:10.110><c> about</c><00:02:10.379><c> in</c>

00:02:10.669 --> 00:02:10.679 align:start position:0%
things that we'll be talking about in
 

00:02:10.679 --> 00:02:11.750 align:start position:0%
things that we'll be talking about in
the<00:02:10.830><c> coming</c><00:02:11.069><c> weeks</c>

00:02:11.750 --> 00:02:11.760 align:start position:0%
the coming weeks
 

00:02:11.760 --> 00:02:13.160 align:start position:0%
the coming weeks
so<00:02:12.120><c> we're</c><00:02:12.209><c> gonna</c><00:02:12.300><c> stick</c><00:02:12.540><c> with</c><00:02:12.690><c> this</c><00:02:12.840><c> approach</c>

00:02:13.160 --> 00:02:13.170 align:start position:0%
so we're gonna stick with this approach
 

00:02:13.170 --> 00:02:14.809 align:start position:0%
so we're gonna stick with this approach
and<00:02:13.440><c> if</c><00:02:13.680><c> you</c><00:02:13.769><c> want</c><00:02:13.950><c> to</c><00:02:14.040><c> try</c><00:02:14.190><c> out</c><00:02:14.310><c> the</c><00:02:14.430><c> new</c><00:02:14.459><c> Java</c>

00:02:14.809 --> 00:02:14.819 align:start position:0%
and if you want to try out the new Java
 

00:02:14.819 --> 00:02:17.720 align:start position:0%
and if you want to try out the new Java
8<00:02:15.060><c> or</c><00:02:15.269><c> the</c><00:02:15.300><c> newer</c><00:02:15.510><c> Java</c><00:02:15.810><c> 8</c><00:02:15.989><c> stuff</c><00:02:16.430><c> I'll</c><00:02:17.430><c> have</c><00:02:17.670><c> a</c>

00:02:17.720 --> 00:02:17.730 align:start position:0%
8 or the newer Java 8 stuff I'll have a
 

00:02:17.730 --> 00:02:19.280 align:start position:0%
8 or the newer Java 8 stuff I'll have a
separate<00:02:18.150><c> supplementary</c><00:02:18.750><c> video</c><00:02:18.989><c> at</c><00:02:19.110><c> some</c>

00:02:19.280 --> 00:02:19.290 align:start position:0%
separate supplementary video at some
 

00:02:19.290 --> 00:02:21.410 align:start position:0%
separate supplementary video at some
point<00:02:19.500><c> you</c><00:02:19.620><c> can</c><00:02:19.739><c> check</c><00:02:19.950><c> out</c><00:02:20.099><c> but</c><00:02:20.940><c> this</c><00:02:21.150><c> is</c><00:02:21.299><c> the</c>

00:02:21.410 --> 00:02:21.420 align:start position:0%
point you can check out but this is the
 

00:02:21.420 --> 00:02:22.820 align:start position:0%
point you can check out but this is the
way<00:02:21.510><c> we</c><00:02:21.659><c> really</c><00:02:21.900><c> need</c><00:02:22.019><c> to</c><00:02:22.110><c> learn</c><00:02:22.230><c> things</c><00:02:22.440><c> now</c>

00:02:22.820 --> 00:02:22.830 align:start position:0%
way we really need to learn things now
 

00:02:22.830 --> 00:02:25.699 align:start position:0%
way we really need to learn things now
ok<00:02:23.250><c> so</c><00:02:23.519><c> let's</c><00:02:24.299><c> just</c><00:02:24.360><c> try</c><00:02:24.569><c> it</c><00:02:24.659><c> out</c><00:02:24.780><c> and</c><00:02:25.019><c> it'll</c><00:02:25.620><c> be</c>

00:02:25.699 --> 00:02:25.709 align:start position:0%
ok so let's just try it out and it'll be
 

00:02:25.709 --> 00:02:28.009 align:start position:0%
ok so let's just try it out and it'll be
a<00:02:25.860><c> little</c><00:02:26.250><c> strange</c><00:02:26.549><c> until</c><00:02:27.030><c> we're</c><00:02:27.150><c> done</c><00:02:27.299><c> but</c>

00:02:28.009 --> 00:02:28.019 align:start position:0%
a little strange until we're done but
 

00:02:28.019 --> 00:02:29.660 align:start position:0%
a little strange until we're done but
we're<00:02:28.170><c> gonna</c><00:02:28.290><c> start</c><00:02:28.739><c> by</c><00:02:28.920><c> making</c><00:02:29.129><c> our</c><00:02:29.400><c> int</c>

00:02:29.660 --> 00:02:29.670 align:start position:0%
we're gonna start by making our int
 

00:02:29.670 --> 00:02:34.400 align:start position:0%
we're gonna start by making our int
unary<00:02:30.180><c> function</c><00:02:30.750><c> class</c><00:02:30.989><c> or</c><00:02:31.709><c> interface</c><00:02:32.250><c> and</c><00:02:33.410><c> so</c>

00:02:34.400 --> 00:02:34.410 align:start position:0%
unary function class or interface and so
 

00:02:34.410 --> 00:02:36.740 align:start position:0%
unary function class or interface and so
the<00:02:34.530><c> int</c><00:02:34.680><c> unary</c><00:02:34.980><c> function</c><00:02:35.459><c> class</c><00:02:36.180><c> this</c>

00:02:36.740 --> 00:02:36.750 align:start position:0%
the int unary function class this
 

00:02:36.750 --> 00:02:38.500 align:start position:0%
the int unary function class this
basically<00:02:37.470><c> we're</c><00:02:37.709><c> gonna</c><00:02:37.799><c> say</c><00:02:38.040><c> first</c>

00:02:38.500 --> 00:02:38.510 align:start position:0%
basically we're gonna say first
 

00:02:38.510 --> 00:02:41.539 align:start position:0%
basically we're gonna say first
represents<00:02:39.510><c> a</c><00:02:39.690><c> function</c><00:02:40.140><c> that</c><00:02:40.709><c> takes</c><00:02:40.920><c> in</c><00:02:41.159><c> an</c>

00:02:41.539 --> 00:02:41.549 align:start position:0%
represents a function that takes in an
 

00:02:41.549 --> 00:02:44.059 align:start position:0%
represents a function that takes in an
integer<00:02:41.970><c> and</c><00:02:42.390><c> returns</c><00:02:42.420><c> an</c><00:02:43.019><c> integer</c><00:02:43.319><c> any</c>

00:02:44.059 --> 00:02:44.069 align:start position:0%
integer and returns an integer any
 

00:02:44.069 --> 00:02:46.069 align:start position:0%
integer and returns an integer any
function<00:02:44.489><c> right</c><00:02:44.790><c> they</c><00:02:45.150><c> could</c><00:02:45.209><c> be</c><00:02:45.420><c> 10</c><00:02:45.629><c> X</c><00:02:45.660><c> it</c>

00:02:46.069 --> 00:02:46.079 align:start position:0%
function right they could be 10 X it
 

00:02:46.079 --> 00:02:48.710 align:start position:0%
function right they could be 10 X it
could<00:02:46.230><c> be</c><00:02:46.290><c> squaring</c><00:02:46.739><c> whatever</c><00:02:47.480><c> now</c><00:02:48.480><c> we're</c><00:02:48.629><c> not</c>

00:02:48.710 --> 00:02:48.720 align:start position:0%
could be squaring whatever now we're not
 

00:02:48.720 --> 00:02:50.569 align:start position:0%
could be squaring whatever now we're not
gonna<00:02:48.870><c> actually</c><00:02:49.140><c> specify</c><00:02:49.829><c> what</c><00:02:50.099><c> function</c><00:02:50.489><c> in</c>

00:02:50.569 --> 00:02:50.579 align:start position:0%
gonna actually specify what function in
 

00:02:50.579 --> 00:02:52.430 align:start position:0%
gonna actually specify what function in
particular<00:02:51.030><c> we're</c><00:02:51.569><c> just</c><00:02:51.720><c> gonna</c><00:02:51.810><c> say</c><00:02:52.049><c> public</c>

00:02:52.430 --> 00:02:52.440 align:start position:0%
particular we're just gonna say public
 

00:02:52.440 --> 00:02:54.530 align:start position:0%
particular we're just gonna say public
and<00:02:52.620><c> supply</c><00:02:53.010><c> and</c><00:02:53.280><c> X</c><00:02:53.640><c> and</c><00:02:53.970><c> call</c><00:02:54.329><c> it</c><00:02:54.450><c> a</c><00:02:54.510><c> day</c>

00:02:54.530 --> 00:02:54.540 align:start position:0%
and supply and X and call it a day
 

00:02:54.540 --> 00:02:57.199 align:start position:0%
and supply and X and call it a day
there's<00:02:55.140><c> no</c><00:02:55.290><c> default</c><00:02:55.670><c> now</c><00:02:56.670><c> actually</c><00:02:57.030><c> I</c><00:02:57.060><c> want</c>

00:02:57.199 --> 00:02:57.209 align:start position:0%
there's no default now actually I want
 

00:02:57.209 --> 00:02:58.910 align:start position:0%
there's no default now actually I want
to<00:02:57.239><c> note</c><00:02:57.390><c> here</c><00:02:57.629><c> this</c><00:02:58.109><c> public</c><00:02:58.500><c> key</c><00:02:58.530><c> word</c><00:02:58.799><c> is</c>

00:02:58.910 --> 00:02:58.920 align:start position:0%
to note here this public key word is
 

00:02:58.920 --> 00:03:00.979 align:start position:0%
to note here this public key word is
underlined<00:02:59.400><c> and</c><00:02:59.640><c> IntelliJ</c><00:03:00.420><c> is</c><00:03:00.480><c> yelling</c><00:03:00.810><c> at</c><00:03:00.900><c> us</c>

00:03:00.979 --> 00:03:00.989 align:start position:0%
underlined and IntelliJ is yelling at us
 

00:03:00.989 --> 00:03:02.809 align:start position:0%
underlined and IntelliJ is yelling at us
that<00:03:01.260><c> public</c><00:03:01.650><c> is</c><00:03:01.769><c> redundant</c><00:03:02.220><c> so</c><00:03:02.609><c> in</c><00:03:02.670><c> keeping</c>

00:03:02.809 --> 00:03:02.819 align:start position:0%
that public is redundant so in keeping
 

00:03:02.819 --> 00:03:04.670 align:start position:0%
that public is redundant so in keeping
with<00:03:03.000><c> common</c><00:03:03.420><c> convention</c><00:03:03.870><c> I'm</c><00:03:04.170><c> now</c><00:03:04.379><c> going</c><00:03:04.590><c> to</c>

00:03:04.670 --> 00:03:04.680 align:start position:0%
with common convention I'm now going to
 

00:03:04.680 --> 00:03:06.979 align:start position:0%
with common convention I'm now going to
omit<00:03:05.160><c> that</c><00:03:05.340><c> from</c><00:03:05.400><c> our</c><00:03:05.760><c> code</c><00:03:05.940><c> okay</c><00:03:06.359><c> doesn't</c><00:03:06.810><c> do</c>

00:03:06.979 --> 00:03:06.989 align:start position:0%
omit that from our code okay doesn't do
 

00:03:06.989 --> 00:03:09.800 align:start position:0%
omit that from our code okay doesn't do
anything<00:03:07.290><c> having</c><00:03:07.799><c> it</c><00:03:07.890><c> or</c><00:03:08.010><c> not</c><00:03:08.540><c> so</c><00:03:09.540><c> now</c><00:03:09.569><c> we're</c>

00:03:09.800 --> 00:03:09.810 align:start position:0%
anything having it or not so now we're
 

00:03:09.810 --> 00:03:10.819 align:start position:0%
anything having it or not so now we're
going<00:03:09.900><c> to</c><00:03:09.959><c> actually</c><00:03:10.140><c> implement</c><00:03:10.620><c> a</c><00:03:10.709><c> specific</c>

00:03:10.819 --> 00:03:10.829 align:start position:0%
going to actually implement a specific
 

00:03:10.829 --> 00:03:13.729 align:start position:0%
going to actually implement a specific
into<00:03:11.609><c> nary</c><00:03:11.819><c> function</c><00:03:12.239><c> in</c><00:03:12.780><c> particular</c><00:03:13.290><c> let's</c>

00:03:13.729 --> 00:03:13.739 align:start position:0%
into nary function in particular let's
 

00:03:13.739 --> 00:03:16.190 align:start position:0%
into nary function in particular let's
write<00:03:13.890><c> a</c><00:03:13.920><c> function</c><00:03:14.010><c> that</c><00:03:14.519><c> returns</c><00:03:15.180><c> 10</c><00:03:15.930><c> times</c>

00:03:16.190 --> 00:03:16.200 align:start position:0%
write a function that returns 10 times
 

00:03:16.200 --> 00:03:19.400 align:start position:0%
write a function that returns 10 times
its<00:03:16.410><c> argument</c><00:03:17.120><c> so</c><00:03:18.120><c> this</c><00:03:18.690><c> 10</c><00:03:19.019><c> X</c><00:03:19.200><c> class</c>

00:03:19.400 --> 00:03:19.410 align:start position:0%
its argument so this 10 X class
 

00:03:19.410 --> 00:03:22.339 align:start position:0%
its argument so this 10 X class
implements<00:03:20.130><c> int</c><00:03:20.340><c> unary</c><00:03:20.760><c> function</c><00:03:21.200><c> it</c><00:03:22.200><c> has</c><00:03:22.230><c> a</c>

00:03:22.339 --> 00:03:22.349 align:start position:0%
implements int unary function it has a
 

00:03:22.349 --> 00:03:25.039 align:start position:0%
implements int unary function it has a
public<00:03:22.680><c> int</c><00:03:23.099><c> apply</c><00:03:23.609><c> method</c><00:03:24.030><c> that's</c><00:03:24.810><c> what</c><00:03:24.959><c> it</c>

00:03:25.039 --> 00:03:25.049 align:start position:0%
public int apply method that's what it
 

00:03:25.049 --> 00:03:26.690 align:start position:0%
public int apply method that's what it
needs<00:03:25.230><c> in</c><00:03:25.410><c> order</c><00:03:25.500><c> to</c><00:03:25.620><c> compile</c><00:03:25.980><c> actually</c><00:03:26.549><c> need</c>

00:03:26.690 --> 00:03:26.700 align:start position:0%
needs in order to compile actually need
 

00:03:26.700 --> 00:03:30.729 align:start position:0%
needs in order to compile actually need
that<00:03:26.730><c> int</c><00:03:27.090><c> X</c><00:03:27.299><c> and</c><00:03:28.260><c> in</c><00:03:28.349><c> this</c><00:03:28.440><c> case</c><00:03:28.680><c> it</c><00:03:29.280><c> returns</c>

00:03:30.729 --> 00:03:30.739 align:start position:0%
that int X and in this case it returns
 

00:03:30.739 --> 00:03:34.520 align:start position:0%
that int X and in this case it returns
10<00:03:31.739><c> times</c><00:03:32.040><c> its</c><00:03:32.579><c> argument</c><00:03:33.090><c> and</c><00:03:33.329><c> returns</c><00:03:34.290><c> 10</c>

00:03:34.520 --> 00:03:34.530 align:start position:0%
10 times its argument and returns 10
 

00:03:34.530 --> 00:03:37.460 align:start position:0%
10 times its argument and returns 10
times<00:03:34.769><c> the</c><00:03:34.950><c> argument</c><00:03:35.540><c> so</c><00:03:36.540><c> that's</c><00:03:36.720><c> easy</c><00:03:36.900><c> return</c>

00:03:37.460 --> 00:03:37.470 align:start position:0%
times the argument so that's easy return
 

00:03:37.470 --> 00:03:41.000 align:start position:0%
times the argument so that's easy return
10<00:03:37.739><c> times</c><00:03:37.980><c> X</c><00:03:38.250><c> and</c><00:03:38.609><c> we</c><00:03:39.060><c> have</c><00:03:39.209><c> now</c><00:03:39.329><c> in</c><00:03:39.569><c> 10</c><00:03:39.870><c> X</c><00:03:40.049><c> okay</c>

00:03:41.000 --> 00:03:41.010 align:start position:0%
10 times X and we have now in 10 X okay
 

00:03:41.010 --> 00:03:43.250 align:start position:0%
10 times X and we have now in 10 X okay
great<00:03:41.489><c> so</c><00:03:42.180><c> what</c><00:03:42.299><c> we</c><00:03:42.419><c> built</c><00:03:42.630><c> is</c><00:03:42.780><c> this</c><00:03:42.989><c> on</c><00:03:43.169><c> the</c>

00:03:43.250 --> 00:03:43.260 align:start position:0%
great so what we built is this on the
 

00:03:43.260 --> 00:03:45.589 align:start position:0%
great so what we built is this on the
right<00:03:43.410><c> which</c><00:03:43.889><c> is</c><00:03:43.919><c> the</c><00:03:44.069><c> equivalent</c><00:03:44.370><c> of</c><00:03:44.730><c> def</c><00:03:45.329><c> 10</c>

00:03:45.589 --> 00:03:45.599 align:start position:0%
right which is the equivalent of def 10
 

00:03:45.599 --> 00:03:47.420 align:start position:0%
right which is the equivalent of def 10
X<00:03:45.750><c> then</c><00:03:46.380><c> we</c><00:03:46.440><c> could</c><00:03:46.560><c> see</c><00:03:46.680><c> it's</c><00:03:46.769><c> a</c><00:03:46.829><c> lot</c><00:03:46.980><c> kludgy</c>

00:03:47.420 --> 00:03:47.430 align:start position:0%
X then we could see it's a lot kludgy
 

00:03:47.430 --> 00:03:48.830 align:start position:0%
X then we could see it's a lot kludgy
err<00:03:47.459><c> in</c><00:03:47.700><c> fact</c><00:03:47.910><c> here</c><00:03:48.209><c> we</c><00:03:48.359><c> have</c><00:03:48.510><c> it</c><00:03:48.599><c> spread</c>

00:03:48.830 --> 00:03:48.840 align:start position:0%
err in fact here we have it spread
 

00:03:48.840 --> 00:03:51.920 align:start position:0%
err in fact here we have it spread
across<00:03:48.930><c> two</c><00:03:49.319><c> files</c><00:03:49.680><c> that</c><00:03:50.090><c> one</c><00:03:51.090><c> and</c><00:03:51.299><c> this</c><00:03:51.720><c> one</c>

00:03:51.920 --> 00:03:51.930 align:start position:0%
across two files that one and this one
 

00:03:51.930 --> 00:03:53.599 align:start position:0%
across two files that one and this one
and<00:03:52.109><c> that's</c><00:03:52.380><c> the</c><00:03:52.530><c> equivalent</c><00:03:52.919><c> of</c><00:03:52.980><c> def</c><00:03:53.220><c> 10</c><00:03:53.459><c> X</c>

00:03:53.599 --> 00:03:53.609 align:start position:0%
and that's the equivalent of def 10 X
 

00:03:53.609 --> 00:03:57.199 align:start position:0%
and that's the equivalent of def 10 X
okay<00:03:54.000><c> so</c><00:03:54.209><c> again</c><00:03:54.480><c> job</c><00:03:54.810><c> is</c><00:03:54.930><c> pretty</c><00:03:55.079><c> verbose</c><00:03:56.209><c> so</c>

00:03:57.199 --> 00:03:57.209 align:start position:0%
okay so again job is pretty verbose so
 

00:03:57.209 --> 00:03:59.509 align:start position:0%
okay so again job is pretty verbose so
now<00:03:57.389><c> we're</c><00:03:57.720><c> gonna</c><00:03:57.810><c> say</c><00:03:58.109><c> new</c><00:03:58.590><c> class</c><00:03:58.980><c> and</c><00:03:59.430><c> we're</c>

00:03:59.509 --> 00:03:59.519 align:start position:0%
now we're gonna say new class and we're
 

00:03:59.519 --> 00:04:00.860 align:start position:0%
now we're gonna say new class and we're
gonna<00:03:59.609><c> do</c><00:03:59.790><c> a</c><00:03:59.819><c> little</c><00:04:00.030><c> demo</c><00:04:00.329><c> we'll</c><00:04:00.599><c> call</c><00:04:00.780><c> that</c>

00:04:00.860 --> 00:04:00.870 align:start position:0%
gonna do a little demo we'll call that
 

00:04:00.870 --> 00:04:05.000 align:start position:0%
gonna do a little demo we'll call that
hop<00:04:01.169><c> demo</c><00:04:01.970><c> for</c><00:04:02.970><c> higher-order</c><00:04:03.209><c> function</c><00:04:04.010><c> and</c>

00:04:05.000 --> 00:04:05.010 align:start position:0%
hop demo for higher-order function and
 

00:04:05.010 --> 00:04:08.770 align:start position:0%
hop demo for higher-order function and
this<00:04:05.160><c> demonstrates</c><00:04:06.739><c> higher-order</c><00:04:07.739><c> functions</c>

00:04:08.770 --> 00:04:08.780 align:start position:0%
this demonstrates higher-order functions
 

00:04:08.780 --> 00:04:12.190 align:start position:0%
this demonstrates higher-order functions
and<00:04:09.980><c> Java</c>

00:04:12.190 --> 00:04:12.200 align:start position:0%
and Java
 

00:04:12.200 --> 00:04:14.690 align:start position:0%
and Java
so<00:04:13.200><c> this</c><00:04:13.349><c> is</c><00:04:13.500><c> going</c><00:04:13.650><c> to</c><00:04:13.739><c> be</c><00:04:13.950><c> these</c><00:04:14.190><c> other</c><00:04:14.250><c> two</c>

00:04:14.690 --> 00:04:14.700 align:start position:0%
so this is going to be these other two
 

00:04:14.700 --> 00:04:17.060 align:start position:0%
so this is going to be these other two
calls<00:04:14.959><c> so</c><00:04:15.959><c> we'll</c><00:04:16.109><c> start</c><00:04:16.350><c> by</c><00:04:16.410><c> writing</c><00:04:16.530><c> the</c><00:04:16.799><c> do</c>

00:04:17.060 --> 00:04:17.070 align:start position:0%
calls so we'll start by writing the do
 

00:04:17.070 --> 00:04:19.670 align:start position:0%
calls so we'll start by writing the do
twice<00:04:17.310><c> method</c><00:04:17.780><c> so</c><00:04:18.780><c> I'll</c><00:04:18.870><c> do</c><00:04:19.019><c> it</c><00:04:19.169><c> as</c><00:04:19.320><c> some</c>

00:04:19.670 --> 00:04:19.680 align:start position:0%
twice method so I'll do it as some
 

00:04:19.680 --> 00:04:23.750 align:start position:0%
twice method so I'll do it as some
follows<00:04:20.070><c> public</c><00:04:20.820><c> static</c><00:04:21.269><c> int</c><00:04:21.440><c> do</c><00:04:22.440><c> twice</c><00:04:22.760><c> why</c>

00:04:23.750 --> 00:04:23.760 align:start position:0%
follows public static int do twice why
 

00:04:23.760 --> 00:04:25.100 align:start position:0%
follows public static int do twice why
static<00:04:24.180><c> because</c><00:04:24.479><c> I</c><00:04:24.570><c> don't</c><00:04:24.750><c> want</c><00:04:24.870><c> to</c><00:04:24.930><c> have</c><00:04:25.020><c> to</c>

00:04:25.100 --> 00:04:25.110 align:start position:0%
static because I don't want to have to
 

00:04:25.110 --> 00:04:28.400 align:start position:0%
static because I don't want to have to
actually<00:04:25.410><c> instantiate</c><00:04:25.770><c> HOF</c><00:04:26.160><c> demo</c><00:04:26.960><c> and</c><00:04:27.960><c> what</c>

00:04:28.400 --> 00:04:28.410 align:start position:0%
actually instantiate HOF demo and what
 

00:04:28.410 --> 00:04:30.260 align:start position:0%
actually instantiate HOF demo and what
we're<00:04:28.560><c> going</c><00:04:28.710><c> to</c><00:04:28.800><c> do</c><00:04:29.010><c> is</c><00:04:29.310><c> we're</c><00:04:29.639><c> gonna</c><00:04:29.699><c> take</c><00:04:30.060><c> an</c>

00:04:30.260 --> 00:04:30.270 align:start position:0%
we're going to do is we're gonna take an
 

00:04:30.270 --> 00:04:34.700 align:start position:0%
we're going to do is we're gonna take an
int<00:04:30.630><c> unary</c><00:04:31.110><c> function</c><00:04:31.560><c> f</c><00:04:32.780><c> I'll</c><00:04:33.780><c> do</c><00:04:33.900><c> ya</c>

00:04:34.700 --> 00:04:34.710 align:start position:0%
int unary function f I'll do ya
 

00:04:34.710 --> 00:04:37.070 align:start position:0%
int unary function f I'll do ya
Epstein's<00:04:35.130><c> line</c><00:04:35.310><c> and</c><00:04:36.210><c> then</c><00:04:36.360><c> we'll</c><00:04:36.479><c> do</c><00:04:36.630><c> end</c><00:04:36.810><c> X</c>

00:04:37.070 --> 00:04:37.080 align:start position:0%
Epstein's line and then we'll do end X
 

00:04:37.080 --> 00:04:40.120 align:start position:0%
Epstein's line and then we'll do end X
and<00:04:37.380><c> in</c><00:04:38.160><c> this</c><00:04:38.310><c> case</c><00:04:38.550><c> we're</c><00:04:38.970><c> gonna</c><00:04:39.030><c> return</c><00:04:39.479><c> F</c>

00:04:40.120 --> 00:04:40.130 align:start position:0%
and in this case we're gonna return F
 

00:04:40.130 --> 00:04:43.010 align:start position:0%
and in this case we're gonna return F
it's<00:04:41.130><c> not</c><00:04:41.220><c> f</c><00:04:41.460><c> of</c><00:04:41.610><c> f</c><00:04:41.820><c> of</c><00:04:41.940><c> X</c><00:04:42.150><c> like</c><00:04:42.600><c> it</c><00:04:42.720><c> was</c><00:04:42.870><c> in</c>

00:04:43.010 --> 00:04:43.020 align:start position:0%
it's not f of f of X like it was in
 

00:04:43.020 --> 00:04:46.820 align:start position:0%
it's not f of f of X like it was in
Python<00:04:43.440><c> is</c><00:04:44.100><c> going</c><00:04:44.340><c> to</c><00:04:44.400><c> be</c><00:04:44.460><c> F</c><00:04:44.639><c> dot</c><00:04:44.880><c> apply</c><00:04:45.240><c> of</c><00:04:45.830><c> F</c>

00:04:46.820 --> 00:04:46.830 align:start position:0%
Python is going to be F dot apply of F
 

00:04:46.830 --> 00:04:50.779 align:start position:0%
Python is going to be F dot apply of F
dot<00:04:47.100><c> a</c><00:04:47.160><c> plot</c><00:04:47.490><c> of</c><00:04:47.850><c> X</c><00:04:48.720><c> so</c><00:04:49.500><c> basically</c><00:04:49.650><c> we've</c><00:04:50.460><c> used</c>

00:04:50.779 --> 00:04:50.789 align:start position:0%
dot a plot of X so basically we've used
 

00:04:50.789 --> 00:04:53.750 align:start position:0%
dot a plot of X so basically we've used
inheritance<00:04:51.539><c> as</c><00:04:51.720><c> a</c><00:04:51.780><c> funny</c><00:04:52.680><c> workaround</c><00:04:53.190><c> to</c><00:04:53.430><c> get</c>

00:04:53.750 --> 00:04:53.760 align:start position:0%
inheritance as a funny workaround to get
 

00:04:53.760 --> 00:04:55.580 align:start position:0%
inheritance as a funny workaround to get
the<00:04:53.970><c> same</c><00:04:54.180><c> practical</c><00:04:54.720><c> effect</c><00:04:54.990><c> that</c><00:04:55.169><c> we</c><00:04:55.229><c> got</c><00:04:55.410><c> in</c>

00:04:55.580 --> 00:04:55.590 align:start position:0%
the same practical effect that we got in
 

00:04:55.590 --> 00:04:57.290 align:start position:0%
the same practical effect that we got in
Java<00:04:55.860><c> or</c><00:04:56.160><c> saw</c><00:04:56.340><c> in</c><00:04:56.490><c> Python</c>

00:04:57.290 --> 00:04:57.300 align:start position:0%
Java or saw in Python
 

00:04:57.300 --> 00:05:00.320 align:start position:0%
Java or saw in Python
more<00:04:57.660><c> directly</c><00:04:58.669><c> next</c><00:04:59.669><c> I'm</c><00:04:59.789><c> going</c><00:04:59.910><c> to</c><00:04:59.970><c> show</c><00:05:00.090><c> you</c>

00:05:00.320 --> 00:05:00.330 align:start position:0%
more directly next I'm going to show you
 

00:05:00.330 --> 00:05:02.689 align:start position:0%
more directly next I'm going to show you
how<00:05:00.750><c> it</c><00:05:00.870><c> can</c><00:05:00.960><c> be</c><00:05:01.110><c> used</c><00:05:01.380><c> and</c><00:05:02.310><c> we'll</c><00:05:02.400><c> see</c><00:05:02.520><c> it's</c><00:05:02.669><c> a</c>

00:05:02.689 --> 00:05:02.699 align:start position:0%
how it can be used and we'll see it's a
 

00:05:02.699 --> 00:05:05.480 align:start position:0%
how it can be used and we'll see it's a
little<00:05:02.940><c> funny</c><00:05:03.440><c> so</c><00:05:04.440><c> I'm</c><00:05:04.530><c> gonna</c><00:05:04.620><c> start</c><00:05:04.949><c> by</c>

00:05:05.480 --> 00:05:05.490 align:start position:0%
little funny so I'm gonna start by
 

00:05:05.490 --> 00:05:07.370 align:start position:0%
little funny so I'm gonna start by
saying<00:05:05.820><c> well</c><00:05:06.360><c> I</c><00:05:06.539><c> guess</c><00:05:06.750><c> I'll</c><00:05:06.870><c> set</c><00:05:07.020><c> aside</c><00:05:07.110><c> an</c>

00:05:07.370 --> 00:05:07.380 align:start position:0%
saying well I guess I'll set aside an
 

00:05:07.380 --> 00:05:10.279 align:start position:0%
saying well I guess I'll set aside an
integer<00:05:08.030><c> too</c>

00:05:10.279 --> 00:05:10.289 align:start position:0%
integer too
 

00:05:10.289 --> 00:05:13.939 align:start position:0%
integer too
and<00:05:10.590><c> then</c><00:05:10.710><c> I</c><00:05:10.800><c> want</c><00:05:10.949><c> to</c><00:05:11.010><c> print</c><00:05:11.220><c> out</c><00:05:11.400><c> do</c><00:05:12.389><c> twice</c><00:05:12.949><c> 10</c>

00:05:13.939 --> 00:05:13.949 align:start position:0%
and then I want to print out do twice 10
 

00:05:13.949 --> 00:05:18.170 align:start position:0%
and then I want to print out do twice 10
X<00:05:15.560><c> X</c><00:05:16.560><c> let's</c><00:05:17.190><c> say</c><00:05:17.310><c> well</c><00:05:17.520><c> let's</c><00:05:17.820><c> just</c><00:05:17.849><c> do</c><00:05:18.030><c> to</c>

00:05:18.170 --> 00:05:18.180 align:start position:0%
X X let's say well let's just do to
 

00:05:18.180 --> 00:05:20.960 align:start position:0%
X X let's say well let's just do to
directly<00:05:18.479><c> why</c><00:05:18.720><c> not</c><00:05:19.370><c> so</c><00:05:20.370><c> we</c><00:05:20.520><c> we</c><00:05:20.580><c> try</c><00:05:20.610><c> and</c><00:05:20.880><c> do</c>

00:05:20.960 --> 00:05:20.970 align:start position:0%
directly why not so we we try and do
 

00:05:20.970 --> 00:05:23.480 align:start position:0%
directly why not so we we try and do
this<00:05:21.150><c> we</c><00:05:21.479><c> get</c><00:05:21.599><c> a</c><00:05:21.860><c> an</c><00:05:22.860><c> issue</c><00:05:23.039><c> which</c><00:05:23.280><c> says</c>

00:05:23.480 --> 00:05:23.490 align:start position:0%
this we get a an issue which says
 

00:05:23.490 --> 00:05:25.909 align:start position:0%
this we get a an issue which says
expression<00:05:24.210><c> expected</c><00:05:24.780><c> here</c><00:05:24.960><c> so</c><00:05:25.530><c> 10</c><00:05:25.740><c> X</c>

00:05:25.909 --> 00:05:25.919 align:start position:0%
expression expected here so 10 X
 

00:05:25.919 --> 00:05:28.520 align:start position:0%
expression expected here so 10 X
actually<00:05:26.160><c> is</c><00:05:26.430><c> the</c><00:05:26.580><c> name</c><00:05:26.820><c> of</c><00:05:27.120><c> a</c><00:05:27.180><c> class</c><00:05:27.510><c> and</c><00:05:27.960><c> it's</c>

00:05:28.520 --> 00:05:28.530 align:start position:0%
actually is the name of a class and it's
 

00:05:28.530 --> 00:05:31.250 align:start position:0%
actually is the name of a class and it's
expecting<00:05:29.099><c> an</c><00:05:29.220><c> object</c><00:05:29.820><c> so</c><00:05:30.539><c> in</c><00:05:30.660><c> fact</c><00:05:30.870><c> what</c><00:05:31.169><c> we</c>

00:05:31.250 --> 00:05:31.260 align:start position:0%
expecting an object so in fact what we
 

00:05:31.260 --> 00:05:34.550 align:start position:0%
expecting an object so in fact what we
need<00:05:31.410><c> to</c><00:05:31.530><c> do</c><00:05:31.680><c> is</c><00:05:31.830><c> instantiate</c><00:05:32.639><c> our</c><00:05:32.820><c> 10x</c><00:05:33.570><c> object</c>

00:05:34.550 --> 00:05:34.560 align:start position:0%
need to do is instantiate our 10x object
 

00:05:34.560 --> 00:05:37.010 align:start position:0%
need to do is instantiate our 10x object
so<00:05:34.740><c> we</c><00:05:34.830><c> can</c><00:05:34.950><c> do</c><00:05:35.070><c> something</c><00:05:35.280><c> like</c><00:05:35.729><c> this</c>

00:05:37.010 --> 00:05:37.020 align:start position:0%
so we can do something like this
 

00:05:37.020 --> 00:05:41.080 align:start position:0%
so we can do something like this
we'll<00:05:37.470><c> say</c><00:05:37.710><c> int</c><00:05:38.400><c> unary</c><00:05:38.970><c> function</c><00:05:39.440><c> 10x</c><00:05:40.440><c> equals</c>

00:05:41.080 --> 00:05:41.090 align:start position:0%
we'll say int unary function 10x equals
 

00:05:41.090 --> 00:05:45.550 align:start position:0%
we'll say int unary function 10x equals
new<00:05:42.090><c> 10x</c><00:05:43.430><c> that's</c><00:05:44.430><c> better</c><00:05:44.729><c> to</c><00:05:44.849><c> be</c><00:05:44.970><c> lower</c><00:05:45.150><c> case</c>

00:05:45.550 --> 00:05:45.560 align:start position:0%
new 10x that's better to be lower case
 

00:05:45.560 --> 00:05:50.240 align:start position:0%
new 10x that's better to be lower case
so<00:05:46.560><c> 10x</c><00:05:47.010><c> equals</c><00:05:47.220><c> new</c><00:05:47.550><c> 10x</c><00:05:48.169><c> and</c><00:05:49.169><c> now</c><00:05:49.560><c> we</c><00:05:49.620><c> pass</c><00:05:50.039><c> an</c>

00:05:50.240 --> 00:05:50.250 align:start position:0%
so 10x equals new 10x and now we pass an
 

00:05:50.250 --> 00:05:53.450 align:start position:0%
so 10x equals new 10x and now we pass an
instantiated<00:05:50.669><c> copy</c><00:05:51.300><c> of</c><00:05:51.599><c> the</c><00:05:51.810><c> 10x</c><00:05:52.169><c> class</c><00:05:52.590><c> now</c>

00:05:53.450 --> 00:05:53.460 align:start position:0%
instantiated copy of the 10x class now
 

00:05:53.460 --> 00:05:55.700 align:start position:0%
instantiated copy of the 10x class now
it's<00:05:53.610><c> a</c><00:05:53.669><c> little</c><00:05:53.910><c> weird</c><00:05:54.240><c> but</c><00:05:54.870><c> that's</c><00:05:55.110><c> typically</c>

00:05:55.700 --> 00:05:55.710 align:start position:0%
it's a little weird but that's typically
 

00:05:55.710 --> 00:05:57.740 align:start position:0%
it's a little weird but that's typically
how<00:05:55.830><c> things</c><00:05:56.130><c> are</c><00:05:56.310><c> done</c><00:05:56.400><c> so</c><00:05:57.240><c> if</c><00:05:57.330><c> we</c><00:05:57.419><c> run</c><00:05:57.539><c> this</c>

00:05:57.740 --> 00:05:57.750 align:start position:0%
how things are done so if we run this
 

00:05:57.750 --> 00:05:58.850 align:start position:0%
how things are done so if we run this
now<00:05:57.810><c> we</c><00:05:58.349><c> should</c><00:05:58.530><c> get</c><00:05:58.590><c> back</c>

00:05:58.850 --> 00:05:58.860 align:start position:0%
now we should get back
 

00:05:58.860 --> 00:06:02.629 align:start position:0%
now we should get back
uh-oh<00:05:59.669><c> wrong</c><00:06:00.120><c> one</c><00:06:00.680><c> the</c><00:06:01.680><c> vengeful</c><00:06:01.919><c> s</c><00:06:02.190><c> list</c><00:06:02.460><c> it</c>

00:06:02.629 --> 00:06:02.639 align:start position:0%
uh-oh wrong one the vengeful s list it
 

00:06:02.639 --> 00:06:04.400 align:start position:0%
uh-oh wrong one the vengeful s list it
remembers<00:06:03.120><c> it's</c><00:06:03.360><c> still</c><00:06:03.539><c> very</c><00:06:03.720><c> upset</c><00:06:03.840><c> about</c><00:06:04.139><c> it</c>

00:06:04.400 --> 00:06:04.410 align:start position:0%
remembers it's still very upset about it
 

00:06:04.410 --> 00:06:06.170 align:start position:0%
remembers it's still very upset about it
it's<00:06:04.979><c> not</c><00:06:05.160><c> remembers</c><00:06:05.610><c> being</c><00:06:05.789><c> deleted</c><00:06:06.120><c> but</c>

00:06:06.170 --> 00:06:06.180 align:start position:0%
it's not remembers being deleted but
 

00:06:06.180 --> 00:06:09.439 align:start position:0%
it's not remembers being deleted but
here<00:06:06.330><c> we</c><00:06:06.419><c> see</c><00:06:06.450><c> 200</c><00:06:07.349><c> okay</c><00:06:07.820><c> so</c><00:06:08.820><c> that's</c><00:06:09.000><c> Hoff's</c><00:06:09.210><c> in</c>

00:06:09.439 --> 00:06:09.449 align:start position:0%
here we see 200 okay so that's Hoff's in
 

00:06:09.449 --> 00:06:11.930 align:start position:0%
here we see 200 okay so that's Hoff's in
Java<00:06:09.780><c> so</c><00:06:10.620><c> on</c><00:06:10.740><c> the</c><00:06:10.860><c> Left</c><00:06:11.070><c> I</c><00:06:11.250><c> have</c><00:06:11.280><c> all</c><00:06:11.580><c> the</c><00:06:11.789><c> code</c>

00:06:11.930 --> 00:06:11.940 align:start position:0%
Java so on the Left I have all the code
 

00:06:11.940 --> 00:06:14.839 align:start position:0%
Java so on the Left I have all the code
we<00:06:12.120><c> just</c><00:06:12.300><c> wrote</c><00:06:12.510><c> and</c><00:06:12.780><c> I</c><00:06:13.620><c> guess</c><00:06:13.830><c> the</c><00:06:14.070><c> the</c><00:06:14.669><c> main</c>

00:06:14.839 --> 00:06:14.849 align:start position:0%
we just wrote and I guess the the main
 

00:06:14.849 --> 00:06:17.089 align:start position:0%
we just wrote and I guess the the main
thing<00:06:15.060><c> to</c><00:06:15.150><c> keep</c><00:06:15.270><c> in</c><00:06:15.419><c> mind</c><00:06:15.479><c> here</c><00:06:15.870><c> is</c><00:06:15.960><c> that</c><00:06:16.440><c> while</c>

00:06:17.089 --> 00:06:17.099 align:start position:0%
thing to keep in mind here is that while
 

00:06:17.099 --> 00:06:19.010 align:start position:0%
thing to keep in mind here is that while
you<00:06:17.310><c> can't</c><00:06:17.699><c> directly</c><00:06:18.449><c> do</c><00:06:18.570><c> it</c><00:06:18.690><c> in</c><00:06:18.810><c> Java</c>

00:06:19.010 --> 00:06:19.020 align:start position:0%
you can't directly do it in Java
 

00:06:19.020 --> 00:06:20.839 align:start position:0%
you can't directly do it in Java
inheritance<00:06:19.830><c> provides</c><00:06:20.280><c> us</c><00:06:20.460><c> with</c><00:06:20.520><c> a</c><00:06:20.669><c> way</c><00:06:20.789><c> to</c>

00:06:20.839 --> 00:06:20.849 align:start position:0%
inheritance provides us with a way to
 

00:06:20.849 --> 00:06:23.060 align:start position:0%
inheritance provides us with a way to
actually<00:06:21.150><c> accomplish</c><00:06:21.870><c> the</c><00:06:22.289><c> same</c><00:06:22.469><c> thing</c><00:06:22.740><c> and</c>

00:06:23.060 --> 00:06:23.070 align:start position:0%
actually accomplish the same thing and
 

00:06:23.070 --> 00:06:24.430 align:start position:0%
actually accomplish the same thing and
we're<00:06:23.219><c> going</c><00:06:23.340><c> to</c><00:06:23.370><c> be</c><00:06:23.490><c> using</c><00:06:23.669><c> this</c><00:06:23.880><c> a</c><00:06:23.940><c> lot</c>

00:06:24.430 --> 00:06:24.440 align:start position:0%
we're going to be using this a lot
 

00:06:24.440 --> 00:06:26.260 align:start position:0%
we're going to be using this a lot
in<00:06:24.680><c> the</c><00:06:24.830><c> coming</c><00:06:25.130><c> week</c><00:06:25.250><c> actually</c><00:06:25.760><c> a</c><00:06:25.940><c> couple</c>

00:06:26.260 --> 00:06:26.270 align:start position:0%
in the coming week actually a couple
 

00:06:26.270 --> 00:06:29.410 align:start position:0%
in the coming week actually a couple
weeks<00:06:26.860><c> so</c><00:06:27.860><c> the</c><00:06:28.340><c> very</c><00:06:28.550><c> last</c><00:06:28.640><c> thing</c><00:06:29.060><c> we're</c><00:06:29.330><c> gonna</c>

00:06:29.410 --> 00:06:29.420 align:start position:0%
weeks so the very last thing we're gonna
 

00:06:29.420 --> 00:06:31.150 align:start position:0%
weeks so the very last thing we're gonna
call<00:06:29.690><c> it</c><00:06:29.810><c> a</c><00:06:29.900><c> day</c><00:06:30.050><c> here</c><00:06:30.260><c> I've</c><00:06:30.770><c> put</c><00:06:30.980><c> together</c>

00:06:31.150 --> 00:06:31.160 align:start position:0%
call it a day here I've put together
 

00:06:31.160 --> 00:06:33.730 align:start position:0%
call it a day here I've put together
here<00:06:31.670><c> in</c><00:06:31.820><c> inheritance</c><00:06:32.660><c> cheat</c><00:06:32.990><c> sheet</c><00:06:33.260><c> you</c><00:06:33.560><c> can</c>

00:06:33.730 --> 00:06:33.740 align:start position:0%
here in inheritance cheat sheet you can
 

00:06:33.740 --> 00:06:36.310 align:start position:0%
here in inheritance cheat sheet you can
use<00:06:34.250><c> to</c><00:06:34.460><c> remember</c><00:06:34.820><c> how</c><00:06:34.940><c> all</c><00:06:35.150><c> this</c><00:06:35.390><c> works</c><00:06:35.570><c> I'm</c>

00:06:36.310 --> 00:06:36.320 align:start position:0%
use to remember how all this works I'm
 

00:06:36.320 --> 00:06:38.200 align:start position:0%
use to remember how all this works I'm
not<00:06:36.380><c> going</c><00:06:36.680><c> to</c><00:06:36.740><c> read</c><00:06:36.890><c> it</c><00:06:36.920><c> off</c><00:06:37.130><c> right</c><00:06:37.400><c> now</c><00:06:37.550><c> but</c>

00:06:38.200 --> 00:06:38.210 align:start position:0%
not going to read it off right now but
 

00:06:38.210 --> 00:06:39.490 align:start position:0%
not going to read it off right now but
be<00:06:38.420><c> aware</c><00:06:38.510><c> that</c><00:06:38.630><c> this</c><00:06:38.900><c> is</c><00:06:38.960><c> here</c><00:06:39.260><c> for</c><00:06:39.380><c> your</c>

00:06:39.490 --> 00:06:39.500 align:start position:0%
be aware that this is here for your
 

00:06:39.500 --> 00:06:41.680 align:start position:0%
be aware that this is here for your
reference<00:06:39.560><c> so</c><00:06:40.370><c> that's</c><00:06:40.550><c> it</c><00:06:40.700><c> for</c><00:06:40.940><c> this</c><00:06:41.480><c> set</c><00:06:41.660><c> of</c>

00:06:41.680 --> 00:06:41.690 align:start position:0%
reference so that's it for this set of
 

00:06:41.690 --> 00:06:44.200 align:start position:0%
reference so that's it for this set of
videos<00:06:42.080><c> and</c><00:06:42.830><c> I</c><00:06:43.280><c> will</c><00:06:43.340><c> see</c><00:06:43.460><c> you</c><00:06:43.640><c> next</c><00:06:43.760><c> time</c><00:06:44.000><c> when</c>

00:06:44.200 --> 00:06:44.210 align:start position:0%
videos and I will see you next time when
 

00:06:44.210 --> 00:06:45.760 align:start position:0%
videos and I will see you next time when
we'll<00:06:44.360><c> go</c><00:06:44.480><c> a</c><00:06:44.690><c> little</c><00:06:44.900><c> deeper</c><00:06:45.080><c> and</c><00:06:45.440><c> to</c>

00:06:45.760 --> 00:06:45.770 align:start position:0%
we'll go a little deeper and to
 

00:06:45.770 --> 00:06:49.180 align:start position:0%
we'll go a little deeper and to
higher-order<00:06:45.980><c> functions</c><00:06:46.580><c> and</c><00:06:46.820><c> beyond</c>

