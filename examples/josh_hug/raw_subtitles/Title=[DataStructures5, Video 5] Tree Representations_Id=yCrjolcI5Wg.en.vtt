WEBVTT
Kind: captions
Language: en

00:00:00.030 --> 00:00:02.090 align:start position:0%
 
in<00:00:00.810><c> lecture</c><00:00:01.199><c> we're</c><00:00:01.560><c> not</c><00:00:01.680><c> gonna</c><00:00:01.770><c> see</c><00:00:01.979><c> the</c>

00:00:02.090 --> 00:00:02.100 align:start position:0%
in lecture we're not gonna see the
 

00:00:02.100 --> 00:00:03.740 align:start position:0%
in lecture we're not gonna see the
entire<00:00:02.429><c> implementation</c><00:00:02.820><c> of</c><00:00:03.419><c> what</c><00:00:03.540><c> a</c><00:00:03.570><c> heat</c>

00:00:03.740 --> 00:00:03.750 align:start position:0%
entire implementation of what a heat
 

00:00:03.750 --> 00:00:05.480 align:start position:0%
entire implementation of what a heat
might<00:00:03.959><c> look</c><00:00:04.110><c> like</c><00:00:04.170><c> but</c><00:00:04.799><c> let's</c><00:00:05.190><c> get</c><00:00:05.339><c> some</c>

00:00:05.480 --> 00:00:05.490 align:start position:0%
might look like but let's get some
 

00:00:05.490 --> 00:00:07.550 align:start position:0%
might look like but let's get some
insight<00:00:05.819><c> and</c><00:00:06.060><c> in</c><00:00:06.390><c> lab</c><00:00:06.600><c> 9</c><00:00:06.810><c> you'll</c><00:00:07.140><c> get</c><00:00:07.290><c> a</c><00:00:07.350><c> chance</c>

00:00:07.550 --> 00:00:07.560 align:start position:0%
insight and in lab 9 you'll get a chance
 

00:00:07.560 --> 00:00:09.560 align:start position:0%
insight and in lab 9 you'll get a chance
to<00:00:07.649><c> do</c><00:00:07.770><c> it</c><00:00:07.830><c> yourself</c><00:00:08.130><c> so</c><00:00:09.059><c> the</c><00:00:09.150><c> first</c><00:00:09.330><c> thing</c><00:00:09.450><c> I'm</c>

00:00:09.560 --> 00:00:09.570 align:start position:0%
to do it yourself so the first thing I'm
 

00:00:09.570 --> 00:00:10.970 align:start position:0%
to do it yourself so the first thing I'm
going<00:00:09.599><c> to</c><00:00:09.719><c> do</c><00:00:09.870><c> is</c><00:00:10.019><c> talk</c><00:00:10.170><c> about</c><00:00:10.500><c> general</c>

00:00:10.970 --> 00:00:10.980 align:start position:0%
going to do is talk about general
 

00:00:10.980 --> 00:00:13.220 align:start position:0%
going to do is talk about general
approaches<00:00:11.670><c> to</c><00:00:11.790><c> implementing</c><00:00:12.300><c> trees</c><00:00:12.719><c> in</c><00:00:12.960><c> Java</c>

00:00:13.220 --> 00:00:13.230 align:start position:0%
approaches to implementing trees in Java
 

00:00:13.230 --> 00:00:15.470 align:start position:0%
approaches to implementing trees in Java
or<00:00:13.500><c> in</c><00:00:13.650><c> other</c><00:00:13.799><c> programming</c><00:00:14.250><c> languages</c><00:00:14.700><c> so</c>

00:00:15.470 --> 00:00:15.480 align:start position:0%
or in other programming languages so
 

00:00:15.480 --> 00:00:16.939 align:start position:0%
or in other programming languages so
proach<00:00:15.780><c> 1a</c><00:00:16.139><c> is</c><00:00:16.260><c> going</c><00:00:16.470><c> to</c><00:00:16.529><c> be</c><00:00:16.619><c> the</c><00:00:16.770><c> most</c>

00:00:16.939 --> 00:00:16.949 align:start position:0%
proach 1a is going to be the most
 

00:00:16.949 --> 00:00:19.310 align:start position:0%
proach 1a is going to be the most
natural<00:00:17.460><c> thing</c><00:00:17.779><c> imagine</c><00:00:18.779><c> I</c><00:00:18.869><c> have</c><00:00:18.960><c> a</c><00:00:19.020><c> tree</c>

00:00:19.310 --> 00:00:19.320 align:start position:0%
natural thing imagine I have a tree
 

00:00:19.320 --> 00:00:23.000 align:start position:0%
natural thing imagine I have a tree
which<00:00:19.920><c> has</c><00:00:20.100><c> W</c><00:00:20.550><c> as</c><00:00:20.730><c> the</c><00:00:21.060><c> root</c><00:00:21.210><c> and</c><00:00:21.390><c> XY</c><00:00:22.230><c> and</c><00:00:22.560><c> Z</c><00:00:22.800><c> as</c>

00:00:23.000 --> 00:00:23.010 align:start position:0%
which has W as the root and XY and Z as
 

00:00:23.010 --> 00:00:25.490 align:start position:0%
which has W as the root and XY and Z as
its<00:00:23.189><c> children</c><00:00:23.630><c> so</c><00:00:24.630><c> as</c><00:00:24.660><c> many</c><00:00:24.960><c> ways</c><00:00:25.140><c> we</c><00:00:25.320><c> could</c>

00:00:25.490 --> 00:00:25.500 align:start position:0%
its children so as many ways we could
 

00:00:25.500 --> 00:00:27.290 align:start position:0%
its children so as many ways we could
represent<00:00:25.830><c> this</c><00:00:26.279><c> tree</c><00:00:26.490><c> but</c><00:00:26.730><c> the</c><00:00:26.820><c> most</c><00:00:26.939><c> natural</c>

00:00:27.290 --> 00:00:27.300 align:start position:0%
represent this tree but the most natural
 

00:00:27.300 --> 00:00:28.490 align:start position:0%
represent this tree but the most natural
approach<00:00:27.599><c> is</c><00:00:27.779><c> something</c><00:00:27.930><c> like</c><00:00:28.170><c> what</c><00:00:28.380><c> you've</c>

00:00:28.490 --> 00:00:28.500 align:start position:0%
approach is something like what you've
 

00:00:28.500 --> 00:00:30.200 align:start position:0%
approach is something like what you've
done<00:00:28.619><c> in</c><00:00:28.769><c> the</c><00:00:28.859><c> past</c><00:00:28.890><c> this</c><00:00:29.730><c> first</c><00:00:29.970><c> approach</c>

00:00:30.200 --> 00:00:30.210 align:start position:0%
done in the past this first approach
 

00:00:30.210 --> 00:00:32.630 align:start position:0%
done in the past this first approach
tree<00:00:30.869><c> 1a</c><00:00:31.050><c> in</c><00:00:31.830><c> this</c><00:00:32.009><c> approach</c><00:00:32.279><c> which</c><00:00:32.460><c> is</c><00:00:32.610><c> a</c>

00:00:32.630 --> 00:00:32.640 align:start position:0%
tree 1a in this approach which is a
 

00:00:32.640 --> 00:00:35.780 align:start position:0%
tree 1a in this approach which is a
naked<00:00:32.880><c> recursive</c><00:00:33.450><c> tree</c><00:00:33.719><c> we</c><00:00:34.320><c> have</c><00:00:34.440><c> a</c><00:00:34.469><c> key</c><00:00:34.790><c> with</c>

00:00:35.780 --> 00:00:35.790 align:start position:0%
naked recursive tree we have a key with
 

00:00:35.790 --> 00:00:38.180 align:start position:0%
naked recursive tree we have a key with
a<00:00:35.820><c> key</c><00:00:36.239><c> memory</c><00:00:36.540><c> box</c><00:00:36.750><c> called</c><00:00:37.079><c> K</c><00:00:37.290><c> and</c><00:00:37.680><c> then</c><00:00:38.129><c> we</c>

00:00:38.180 --> 00:00:38.190 align:start position:0%
a key memory box called K and then we
 

00:00:38.190 --> 00:00:39.619 align:start position:0%
a key memory box called K and then we
have<00:00:38.280><c> three</c><00:00:38.489><c> memory</c><00:00:38.760><c> boxes</c><00:00:39.149><c> for</c><00:00:39.329><c> the</c><00:00:39.390><c> left</c>

00:00:39.619 --> 00:00:39.629 align:start position:0%
have three memory boxes for the left
 

00:00:39.629 --> 00:00:42.200 align:start position:0%
have three memory boxes for the left
middle<00:00:40.020><c> and</c><00:00:40.200><c> right</c><00:00:40.290><c> child</c><00:00:40.890><c> so</c><00:00:41.700><c> in</c><00:00:41.850><c> this</c><00:00:41.969><c> case</c>

00:00:42.200 --> 00:00:42.210 align:start position:0%
middle and right child so in this case
 

00:00:42.210 --> 00:00:45.200 align:start position:0%
middle and right child so in this case
if<00:00:42.480><c> we</c><00:00:42.629><c> look</c><00:00:42.780><c> at</c><00:00:42.899><c> this</c><00:00:43.020><c> diagram</c><00:00:43.170><c> we</c><00:00:43.890><c> have</c><00:00:44.040><c> W</c><00:00:44.430><c> any</c>

00:00:45.200 --> 00:00:45.210 align:start position:0%
if we look at this diagram we have W any
 

00:00:45.210 --> 00:00:47.630 align:start position:0%
if we look at this diagram we have W any
left<00:00:45.570><c> memory</c><00:00:45.960><c> lay</c><00:00:46.110><c> a</c><00:00:46.260><c> left</c><00:00:46.860><c> memory</c><00:00:47.219><c> box</c><00:00:47.430><c> that</c>

00:00:47.630 --> 00:00:47.640 align:start position:0%
left memory lay a left memory box that
 

00:00:47.640 --> 00:00:49.220 align:start position:0%
left memory lay a left memory box that
points<00:00:47.879><c> at</c><00:00:47.940><c> the</c><00:00:48.059><c> left</c><00:00:48.239><c> subtree</c><00:00:48.450><c> a</c><00:00:48.750><c> middle</c>

00:00:49.220 --> 00:00:49.230 align:start position:0%
points at the left subtree a middle
 

00:00:49.230 --> 00:00:50.510 align:start position:0%
points at the left subtree a middle
memory<00:00:49.469><c> box</c><00:00:49.710><c> that</c><00:00:49.920><c> points</c><00:00:50.129><c> at</c><00:00:50.190><c> the</c><00:00:50.280><c> middle</c>

00:00:50.510 --> 00:00:50.520 align:start position:0%
memory box that points at the middle
 

00:00:50.520 --> 00:00:52.310 align:start position:0%
memory box that points at the middle
subtree<00:00:50.910><c> and</c><00:00:51.059><c> a</c><00:00:51.329><c> right</c><00:00:51.600><c> memory</c><00:00:51.930><c> box</c><00:00:52.110><c> that</c>

00:00:52.310 --> 00:00:52.320 align:start position:0%
subtree and a right memory box that
 

00:00:52.320 --> 00:00:53.779 align:start position:0%
subtree and a right memory box that
points<00:00:52.530><c> at</c><00:00:52.559><c> the</c><00:00:52.649><c> right</c><00:00:52.770><c> subtree</c><00:00:53.010><c> and</c><00:00:53.280><c> that</c>

00:00:53.779 --> 00:00:53.789 align:start position:0%
points at the right subtree and that
 

00:00:53.789 --> 00:00:56.270 align:start position:0%
points at the right subtree and that
right<00:00:54.149><c> there</c><00:00:54.390><c> gives</c><00:00:54.989><c> us</c><00:00:55.170><c> a</c><00:00:55.289><c> tree</c><00:00:55.440><c> now</c><00:00:56.190><c> you</c>

00:00:56.270 --> 00:00:56.280 align:start position:0%
right there gives us a tree now you
 

00:00:56.280 --> 00:00:57.979 align:start position:0%
right there gives us a tree now you
might<00:00:56.430><c> say</c><00:00:56.550><c> Josh</c><00:00:56.789><c> are</c><00:00:57.420><c> we</c><00:00:57.510><c> talking</c><00:00:57.690><c> bout</c><00:00:57.719><c> heaps</c>

00:00:57.979 --> 00:00:57.989 align:start position:0%
might say Josh are we talking bout heaps
 

00:00:57.989 --> 00:01:00.290 align:start position:0%
might say Josh are we talking bout heaps
why<00:00:58.410><c> why</c><00:00:58.739><c> we</c><00:00:58.920><c> have</c><00:00:59.010><c> a</c><00:00:59.039><c> 3-way</c><00:00:59.730><c> tree</c><00:01:00.000><c> all</c><00:01:00.120><c> of</c><00:01:00.239><c> a</c>

00:01:00.290 --> 00:01:00.300 align:start position:0%
why why we have a 3-way tree all of a
 

00:01:00.300 --> 00:01:02.000 align:start position:0%
why why we have a 3-way tree all of a
sudden<00:01:00.539><c> well</c><00:01:01.079><c> the</c><00:01:01.140><c> goal</c><00:01:01.289><c> here</c><00:01:01.500><c> is</c><00:01:01.530><c> simply</c><00:01:01.890><c> to</c>

00:01:02.000 --> 00:01:02.010 align:start position:0%
sudden well the goal here is simply to
 

00:01:02.010 --> 00:01:03.170 align:start position:0%
sudden well the goal here is simply to
say<00:01:02.160><c> there</c><00:01:02.370><c> are</c><00:01:02.430><c> many</c><00:01:02.579><c> ways</c><00:01:02.850><c> to</c><00:01:03.030><c> represent</c>

00:01:03.170 --> 00:01:03.180 align:start position:0%
say there are many ways to represent
 

00:01:03.180 --> 00:01:04.850 align:start position:0%
say there are many ways to represent
trees<00:01:03.690><c> not</c><00:01:03.899><c> just</c><00:01:04.140><c> the</c><00:01:04.260><c> way</c><00:01:04.350><c> you've</c><00:01:04.589><c> done</c><00:01:04.739><c> in</c>

00:01:04.850 --> 00:01:04.860 align:start position:0%
trees not just the way you've done in
 

00:01:04.860 --> 00:01:06.679 align:start position:0%
trees not just the way you've done in
the<00:01:04.979><c> past</c><00:01:05.129><c> now</c><00:01:05.939><c> this</c><00:01:06.119><c> is</c><00:01:06.240><c> the</c><00:01:06.330><c> approach</c><00:01:06.510><c> you</c>

00:01:06.679 --> 00:01:06.689 align:start position:0%
the past now this is the approach you
 

00:01:06.689 --> 00:01:08.330 align:start position:0%
the past now this is the approach you
used<00:01:06.840><c> with</c><00:01:07.020><c> BST</c><00:01:07.439><c> Maps</c><00:01:07.650><c> you've</c><00:01:07.890><c> probably</c><00:01:08.070><c> used</c>

00:01:08.330 --> 00:01:08.340 align:start position:0%
used with BST Maps you've probably used
 

00:01:08.340 --> 00:01:09.920 align:start position:0%
used with BST Maps you've probably used
in<00:01:08.460><c> the</c><00:01:08.549><c> past</c><00:01:08.790><c> but</c><00:01:09.390><c> there</c><00:01:09.510><c> are</c><00:01:09.570><c> other</c><00:01:09.659><c> ways</c><00:01:09.869><c> we</c>

00:01:09.920 --> 00:01:09.930 align:start position:0%
in the past but there are other ways we
 

00:01:09.930 --> 00:01:12.289 align:start position:0%
in the past but there are other ways we
can<00:01:10.229><c> do</c><00:01:10.320><c> this</c><00:01:10.560><c> so</c><00:01:11.490><c> let</c><00:01:11.580><c> me</c><00:01:11.670><c> show</c><00:01:11.790><c> an</c><00:01:11.880><c> alternate</c>

00:01:12.289 --> 00:01:12.299 align:start position:0%
can do this so let me show an alternate
 

00:01:12.299 --> 00:01:14.020 align:start position:0%
can do this so let me show an alternate
approach<00:01:12.390><c> I'll</c><00:01:12.689><c> call</c><00:01:12.840><c> this</c><00:01:12.960><c> tree</c><00:01:13.229><c> one</c><00:01:13.409><c> be</c><00:01:13.619><c> in</c>

00:01:14.020 --> 00:01:14.030 align:start position:0%
approach I'll call this tree one be in
 

00:01:14.030 --> 00:01:17.870 align:start position:0%
approach I'll call this tree one be in
tree<00:01:15.030><c> one</c><00:01:15.270><c> be</c><00:01:15.540><c> by</c><00:01:15.750><c> contrast</c><00:01:16.290><c> we</c><00:01:16.950><c> have</c><00:01:16.979><c> instead</c>

00:01:17.870 --> 00:01:17.880 align:start position:0%
tree one be by contrast we have instead
 

00:01:17.880 --> 00:01:20.359 align:start position:0%
tree one be by contrast we have instead
of<00:01:17.939><c> a</c><00:01:18.119><c> link</c><00:01:18.420><c> a</c><00:01:18.659><c> set</c><00:01:19.080><c> of</c><00:01:19.170><c> links</c><00:01:19.470><c> directly</c><00:01:19.860><c> to</c><00:01:20.100><c> our</c>

00:01:20.359 --> 00:01:20.369 align:start position:0%
of a link a set of links directly to our
 

00:01:20.369 --> 00:01:22.700 align:start position:0%
of a link a set of links directly to our
children<00:01:20.700><c> like</c><00:01:20.820><c> hardwired</c><00:01:21.360><c> links</c><00:01:21.780><c> we</c><00:01:22.409><c> instead</c>

00:01:22.700 --> 00:01:22.710 align:start position:0%
children like hardwired links we instead
 

00:01:22.710 --> 00:01:24.410 align:start position:0%
children like hardwired links we instead
have<00:01:23.159><c> a</c><00:01:23.189><c> memory</c><00:01:23.549><c> box</c><00:01:23.729><c> that</c><00:01:24.090><c> stores</c><00:01:24.360><c> the</c>

00:01:24.410 --> 00:01:24.420 align:start position:0%
have a memory box that stores the
 

00:01:24.420 --> 00:01:26.810 align:start position:0%
have a memory box that stores the
location<00:01:24.630><c> of</c><00:01:25.140><c> an</c><00:01:25.380><c> array</c><00:01:25.680><c> of</c><00:01:25.950><c> links</c><00:01:26.729><c> to</c>

00:01:26.810 --> 00:01:26.820 align:start position:0%
location of an array of links to
 

00:01:26.820 --> 00:01:29.660 align:start position:0%
location of an array of links to
children<00:01:27.210><c> so</c><00:01:28.080><c> here</c><00:01:28.290><c> we</c><00:01:28.409><c> have</c><00:01:28.560><c> tree</c><00:01:28.950><c> our</c><00:01:29.460><c> two</c>

00:01:29.660 --> 00:01:29.670 align:start position:0%
children so here we have tree our two
 

00:01:29.670 --> 00:01:31.940 align:start position:0%
children so here we have tree our two
instance<00:01:30.000><c> variables</c><00:01:30.060><c> our</c><00:01:30.509><c> key</c><00:01:30.810><c> K</c><00:01:31.049><c> and</c><00:01:31.290><c> we</c><00:01:31.860><c> have</c>

00:01:31.940 --> 00:01:31.950 align:start position:0%
instance variables our key K and we have
 

00:01:31.950 --> 00:01:35.420 align:start position:0%
instance variables our key K and we have
tree<00:01:32.220><c> one</c><00:01:32.430><c> B</c><00:01:33.229><c> which</c><00:01:34.229><c> is</c><00:01:34.409><c> going</c><00:01:34.470><c> to</c><00:01:34.799><c> be</c><00:01:34.979><c> an</c><00:01:35.189><c> array</c>

00:01:35.420 --> 00:01:35.430 align:start position:0%
tree one B which is going to be an array
 

00:01:35.430 --> 00:01:38.450 align:start position:0%
tree one B which is going to be an array
sorry<00:01:35.759><c> array</c><00:01:36.479><c> of</c><00:01:36.630><c> tree</c><00:01:36.840><c> would</c><00:01:36.869><c> be</c><00:01:37.170><c> children</c><00:01:37.799><c> so</c>

00:01:38.450 --> 00:01:38.460 align:start position:0%
sorry array of tree would be children so
 

00:01:38.460 --> 00:01:39.620 align:start position:0%
sorry array of tree would be children so
this<00:01:38.610><c> memory</c><00:01:38.850><c> block</c><00:01:39.000><c> could</c><00:01:39.119><c> give</c><00:01:39.240><c> us</c><00:01:39.360><c> a</c><00:01:39.390><c> link</c>

00:01:39.620 --> 00:01:39.630 align:start position:0%
this memory block could give us a link
 

00:01:39.630 --> 00:01:42.230 align:start position:0%
this memory block could give us a link
to<00:01:39.720><c> an</c><00:01:39.840><c> array</c><00:01:40.020><c> of</c><00:01:40.049><c> children</c><00:01:40.820><c> so</c><00:01:41.820><c> this</c><00:01:42.000><c> approach</c>

00:01:42.230 --> 00:01:42.240 align:start position:0%
to an array of children so this approach
 

00:01:42.240 --> 00:01:44.600 align:start position:0%
to an array of children so this approach
well<00:01:42.810><c> what's</c><00:01:43.200><c> good</c><00:01:43.350><c> about</c><00:01:43.439><c> it</c><00:01:43.710><c> it</c><00:01:43.860><c> lets</c><00:01:44.070><c> us</c><00:01:44.220><c> in</c>

00:01:44.600 --> 00:01:44.610 align:start position:0%
well what's good about it it lets us in
 

00:01:44.610 --> 00:01:46.940 align:start position:0%
well what's good about it it lets us in
theory<00:01:45.149><c> have</c><00:01:45.390><c> array</c><00:01:45.990><c> of</c><00:01:46.380><c> how</c><00:01:46.530><c> many</c><00:01:46.770><c> children</c>

00:01:46.940 --> 00:01:46.950 align:start position:0%
theory have array of how many children
 

00:01:46.950 --> 00:01:48.350 align:start position:0%
theory have array of how many children
we<00:01:47.159><c> want</c><00:01:47.369><c> we</c><00:01:47.790><c> could</c><00:01:47.880><c> have</c><00:01:48.030><c> some</c><00:01:48.180><c> kind</c><00:01:48.270><c> of</c>

00:01:48.350 --> 00:01:48.360 align:start position:0%
we want we could have some kind of
 

00:01:48.360 --> 00:01:50.300 align:start position:0%
we want we could have some kind of
heterogeneous<00:01:48.720><c> tree</c><00:01:49.320><c> where</c><00:01:49.649><c> some</c><00:01:49.979><c> of</c><00:01:50.009><c> the</c>

00:01:50.300 --> 00:01:50.310 align:start position:0%
heterogeneous tree where some of the
 

00:01:50.310 --> 00:01:51.950 align:start position:0%
heterogeneous tree where some of the
nodes<00:01:50.729><c> have</c><00:01:51.000><c> like</c><00:01:51.149><c> eight</c><00:01:51.329><c> children</c><00:01:51.600><c> at</c><00:01:51.840><c> some</c>

00:01:51.950 --> 00:01:51.960 align:start position:0%
nodes have like eight children at some
 

00:01:51.960 --> 00:01:53.719 align:start position:0%
nodes have like eight children at some
f2<00:01:52.320><c> and</c><00:01:53.100><c> that</c><00:01:53.220><c> will</c><00:01:53.340><c> give</c><00:01:53.490><c> us</c><00:01:53.579><c> more</c>

00:01:53.719 --> 00:01:53.729 align:start position:0%
f2 and that will give us more
 

00:01:53.729 --> 00:01:55.969 align:start position:0%
f2 and that will give us more
flexibility<00:01:54.360><c> but</c><00:01:55.020><c> the</c><00:01:55.140><c> downside</c><00:01:55.560><c> is</c><00:01:55.770><c> that</c><00:01:55.799><c> our</c>

00:01:55.969 --> 00:01:55.979 align:start position:0%
flexibility but the downside is that our
 

00:01:55.979 --> 00:01:57.469 align:start position:0%
flexibility but the downside is that our
code<00:01:56.159><c> will</c><00:01:56.340><c> be</c><00:01:56.430><c> a</c><00:01:56.460><c> little</c><00:01:56.850><c> more</c><00:01:56.909><c> awkward</c><00:01:57.299><c> and</c>

00:01:57.469 --> 00:01:57.479 align:start position:0%
code will be a little more awkward and
 

00:01:57.479 --> 00:01:58.850 align:start position:0%
code will be a little more awkward and
our<00:01:57.780><c> performance</c><00:01:58.229><c> will</c><00:01:58.320><c> be</c><00:01:58.409><c> a</c><00:01:58.439><c> little</c><00:01:58.680><c> worse</c>

00:01:58.850 --> 00:01:58.860 align:start position:0%
our performance will be a little worse
 

00:01:58.860 --> 00:02:00.620 align:start position:0%
our performance will be a little worse
because<00:01:59.490><c> to</c><00:01:59.759><c> get</c><00:01:59.880><c> to</c><00:01:59.969><c> a</c><00:02:00.000><c> child</c><00:02:00.329><c> we</c><00:02:00.450><c> have</c><00:02:00.570><c> to</c>

00:02:00.620 --> 00:02:00.630 align:start position:0%
because to get to a child we have to
 

00:02:00.630 --> 00:02:02.780 align:start position:0%
because to get to a child we have to
follow<00:02:00.810><c> two</c><00:02:01.110><c> links</c><00:02:01.409><c> instead</c><00:02:02.159><c> of</c><00:02:02.310><c> just</c><00:02:02.490><c> one</c>

00:02:02.780 --> 00:02:02.790 align:start position:0%
follow two links instead of just one
 

00:02:02.790 --> 00:02:05.600 align:start position:0%
follow two links instead of just one
link<00:02:03.380><c> now</c><00:02:04.380><c> you</c><00:02:04.439><c> get</c><00:02:04.590><c> another</c><00:02:04.829><c> stranger</c>

00:02:05.600 --> 00:02:05.610 align:start position:0%
link now you get another stranger
 

00:02:05.610 --> 00:02:08.119 align:start position:0%
link now you get another stranger
approach<00:02:05.939><c> is</c><00:02:06.180><c> what</c><00:02:06.630><c> I'll</c><00:02:06.719><c> call</c><00:02:06.750><c> approach</c><00:02:07.469><c> 1c</c>

00:02:08.119 --> 00:02:08.129 align:start position:0%
approach is what I'll call approach 1c
 

00:02:08.129 --> 00:02:10.609 align:start position:0%
approach is what I'll call approach 1c
in<00:02:08.369><c> this</c><00:02:09.119><c> approach</c><00:02:09.420><c> we</c><00:02:09.780><c> notice</c><00:02:10.050><c> that</c><00:02:10.170><c> W</c><00:02:10.500><c> have</c>

00:02:10.609 --> 00:02:10.619 align:start position:0%
in this approach we notice that W have
 

00:02:10.619 --> 00:02:12.650 align:start position:0%
in this approach we notice that W have
tooth<00:02:10.860><c> has</c><00:02:11.039><c> two</c><00:02:11.220><c> memory</c><00:02:11.459><c> boxes</c><00:02:11.819><c> one</c><00:02:12.450><c> that</c>

00:02:12.650 --> 00:02:12.660 align:start position:0%
tooth has two memory boxes one that
 

00:02:12.660 --> 00:02:14.180 align:start position:0%
tooth has two memory boxes one that
points<00:02:12.900><c> to</c><00:02:13.020><c> one</c><00:02:13.140><c> of</c><00:02:13.230><c> its</c><00:02:13.319><c> children</c><00:02:13.560><c> and</c><00:02:13.800><c> the</c>

00:02:14.180 --> 00:02:14.190 align:start position:0%
points to one of its children and the
 

00:02:14.190 --> 00:02:17.450 align:start position:0%
points to one of its children and the
null<00:02:14.630><c> X</c><00:02:15.630><c> its</c><00:02:16.080><c> leftmost</c><00:02:16.590><c> child</c>

00:02:17.450 --> 00:02:17.460 align:start position:0%
null X its leftmost child
 

00:02:17.460 --> 00:02:19.550 align:start position:0%
null X its leftmost child
it<00:02:17.730><c> has</c><00:02:18.030><c> pointer</c><00:02:18.570><c> off</c><00:02:18.720><c> to</c><00:02:18.900><c> whoever</c><00:02:19.050><c> its</c><00:02:19.260><c> child</c>

00:02:19.550 --> 00:02:19.560 align:start position:0%
it has pointer off to whoever its child
 

00:02:19.560 --> 00:02:21.710 align:start position:0%
it has pointer off to whoever its child
is<00:02:19.770><c> and</c><00:02:19.980><c> also</c><00:02:20.340><c> pointing</c><00:02:20.910><c> pointer</c><00:02:21.420><c> to</c><00:02:21.570><c> its</c>

00:02:21.710 --> 00:02:21.720 align:start position:0%
is and also pointing pointer to its
 

00:02:21.720 --> 00:02:24.380 align:start position:0%
is and also pointing pointer to its
sibling<00:02:22.080><c> Y</c><00:02:22.440><c> and</c><00:02:22.890><c> then</c><00:02:23.400><c> Y</c><00:02:23.550><c> has</c><00:02:23.760><c> a</c><00:02:23.790><c> similar</c><00:02:24.180><c> deal</c>

00:02:24.380 --> 00:02:24.390 align:start position:0%
sibling Y and then Y has a similar deal
 

00:02:24.390 --> 00:02:26.660 align:start position:0%
sibling Y and then Y has a similar deal
where<00:02:24.600><c> it</c><00:02:24.660><c> points</c><00:02:24.840><c> that</c><00:02:25.080><c> its</c><00:02:25.290><c> siblings</c><00:02:25.710><c> E</c><00:02:25.920><c> and</c>

00:02:26.660 --> 00:02:26.670 align:start position:0%
where it points that its siblings E and
 

00:02:26.670 --> 00:02:28.190 align:start position:0%
where it points that its siblings E and
so<00:02:26.760><c> we</c><00:02:26.880><c> end</c><00:02:27.000><c> up</c><00:02:27.060><c> with</c><00:02:27.210><c> this</c><00:02:27.360><c> tree</c><00:02:27.600><c> which</c><00:02:27.780><c> I</c><00:02:27.960><c> call</c>

00:02:28.190 --> 00:02:28.200 align:start position:0%
so we end up with this tree which I call
 

00:02:28.200 --> 00:02:30.860 align:start position:0%
so we end up with this tree which I call
a<00:02:28.350><c> sibling</c><00:02:28.620><c> tree</c><00:02:29.090><c> so</c><00:02:30.090><c> this</c><00:02:30.270><c> sibling</c><00:02:30.480><c> tree</c>

00:02:30.860 --> 00:02:30.870 align:start position:0%
a sibling tree so this sibling tree
 

00:02:30.870 --> 00:02:33.650 align:start position:0%
a sibling tree so this sibling tree
approach<00:02:31.170><c> is</c><00:02:31.710><c> another</c><00:02:32.120><c> way</c><00:02:33.120><c> that</c><00:02:33.150><c> we</c><00:02:33.510><c> could</c>

00:02:33.650 --> 00:02:33.660 align:start position:0%
approach is another way that we could
 

00:02:33.660 --> 00:02:35.450 align:start position:0%
approach is another way that we could
have<00:02:33.840><c> heterogeneous</c><00:02:34.140><c> trees</c><00:02:34.860><c> a</c><00:02:35.130><c> little</c>

00:02:35.450 --> 00:02:35.460 align:start position:0%
have heterogeneous trees a little
 

00:02:35.460 --> 00:02:37.430 align:start position:0%
have heterogeneous trees a little
different<00:02:35.970><c> than</c><00:02:36.120><c> what</c><00:02:36.180><c> we</c><00:02:36.300><c> had</c><00:02:36.450><c> before</c><00:02:36.630><c> and</c>

00:02:37.430 --> 00:02:37.440 align:start position:0%
different than what we had before and
 

00:02:37.440 --> 00:02:39.560 align:start position:0%
different than what we had before and
this<00:02:37.920><c> approach</c><00:02:38.100><c> you</c><00:02:38.490><c> might</c><00:02:38.670><c> figure</c><00:02:38.910><c> well</c>

00:02:39.560 --> 00:02:39.570 align:start position:0%
this approach you might figure well
 

00:02:39.570 --> 00:02:40.700 align:start position:0%
this approach you might figure well
let's<00:02:39.810><c> maybe</c><00:02:39.960><c> think</c><00:02:40.170><c> of</c><00:02:40.230><c> what</c><00:02:40.320><c> the</c><00:02:40.440><c> instance</c>

00:02:40.700 --> 00:02:40.710 align:start position:0%
let's maybe think of what the instance
 

00:02:40.710 --> 00:02:43.700 align:start position:0%
let's maybe think of what the instance
variables<00:02:41.130><c> are</c><00:02:41.220><c> so</c><00:02:42.120><c> we</c><00:02:42.330><c> have</c><00:02:42.510><c> this</c><00:02:43.050><c> first</c><00:02:43.470><c> link</c>

00:02:43.700 --> 00:02:43.710 align:start position:0%
variables are so we have this first link
 

00:02:43.710 --> 00:02:45.440 align:start position:0%
variables are so we have this first link
which<00:02:43.950><c> seems</c><00:02:44.160><c> to</c><00:02:44.250><c> be</c><00:02:44.340><c> to</c><00:02:44.520><c> a</c><00:02:44.550><c> child</c><00:02:44.910><c> and</c><00:02:45.120><c> the</c>

00:02:45.440 --> 00:02:45.450 align:start position:0%
which seems to be to a child and the
 

00:02:45.450 --> 00:02:47.690 align:start position:0%
which seems to be to a child and the
other<00:02:45.480><c> one</c><00:02:45.720><c> is</c><00:02:45.840><c> to</c><00:02:45.960><c> a</c><00:02:45.990><c> sibling</c><00:02:46.470><c> and</c><00:02:46.800><c> so</c><00:02:47.220><c> maybe</c>

00:02:47.690 --> 00:02:47.700 align:start position:0%
other one is to a sibling and so maybe
 

00:02:47.700 --> 00:02:48.890 align:start position:0%
other one is to a sibling and so maybe
we'll<00:02:47.880><c> call</c><00:02:48.060><c> this</c><00:02:48.180><c> one</c><00:02:48.240><c> we</c><00:02:48.480><c> gotta</c><00:02:48.630><c> think</c><00:02:48.690><c> of</c><00:02:48.780><c> an</c>

00:02:48.890 --> 00:02:48.900 align:start position:0%
we'll call this one we gotta think of an
 

00:02:48.900 --> 00:02:50.660 align:start position:0%
we'll call this one we gotta think of an
instance<00:02:49.170><c> variable</c><00:02:49.230><c> name</c><00:02:49.710><c> I</c><00:02:49.890><c> picked</c><00:02:50.400><c> a</c>

00:02:50.660 --> 00:02:50.670 align:start position:0%
instance variable name I picked a
 

00:02:50.670 --> 00:02:52.310 align:start position:0%
instance variable name I picked a
favorite<00:02:51.030><c> kid</c><00:02:51.420><c> or</c><00:02:51.750><c> you</c><00:02:51.840><c> know</c><00:02:51.930><c> a</c><00:02:51.960><c> favorite</c>

00:02:52.310 --> 00:02:52.320 align:start position:0%
favorite kid or you know a favorite
 

00:02:52.320 --> 00:02:52.850 align:start position:0%
favorite kid or you know a favorite
child

00:02:52.850 --> 00:02:52.860 align:start position:0%
child
 

00:02:52.860 --> 00:02:54.740 align:start position:0%
child
okay<00:02:53.130><c> so</c><00:02:53.940><c> that's</c><00:02:54.210><c> what</c><00:02:54.390><c> our</c><00:02:54.480><c> instance</c>

00:02:54.740 --> 00:02:54.750 align:start position:0%
okay so that's what our instance
 

00:02:54.750 --> 00:02:56.150 align:start position:0%
okay so that's what our instance
variables<00:02:55.170><c> are</c><00:02:55.260><c> claimed</c><00:02:55.470><c> and</c><00:02:55.680><c> this</c><00:02:55.980><c> also</c>

00:02:56.150 --> 00:02:56.160 align:start position:0%
variables are claimed and this also
 

00:02:56.160 --> 00:02:58.640 align:start position:0%
variables are claimed and this also
works<00:02:56.480><c> so</c><00:02:57.480><c> all</c><00:02:57.690><c> three</c><00:02:57.960><c> of</c><00:02:58.050><c> these</c><00:02:58.140><c> approaches</c>

00:02:58.640 --> 00:02:58.650 align:start position:0%
works so all three of these approaches
 

00:02:58.650 --> 00:03:00.800 align:start position:0%
works so all three of these approaches
are<00:02:58.830><c> pretty</c><00:02:59.460><c> natural</c><00:02:59.910><c> right</c><00:03:00.150><c> they</c><00:03:00.300><c> all</c><00:03:00.450><c> give</c>

00:03:00.800 --> 00:03:00.810 align:start position:0%
are pretty natural right they all give
 

00:03:00.810 --> 00:03:03.050 align:start position:0%
are pretty natural right they all give
us<00:03:00.960><c> some</c><00:03:01.260><c> mapping</c><00:03:01.500><c> from</c><00:03:02.100><c> our</c><00:03:02.250><c> node</c><00:03:02.460><c> to</c><00:03:02.910><c> our</c>

00:03:03.050 --> 00:03:03.060 align:start position:0%
us some mapping from our node to our
 

00:03:03.060 --> 00:03:05.150 align:start position:0%
us some mapping from our node to our
children<00:03:03.420><c> we</c><00:03:03.630><c> store</c><00:03:03.870><c> explicit</c><00:03:04.500><c> references</c><00:03:05.100><c> to</c>

00:03:05.150 --> 00:03:05.160 align:start position:0%
children we store explicit references to
 

00:03:05.160 --> 00:03:07.760 align:start position:0%
children we store explicit references to
who<00:03:05.760><c> is</c><00:03:05.940><c> below</c><00:03:06.210><c> us</c><00:03:06.500><c> now</c><00:03:07.500><c> there's</c><00:03:07.650><c> actually</c>

00:03:07.760 --> 00:03:07.770 align:start position:0%
who is below us now there's actually
 

00:03:07.770 --> 00:03:09.560 align:start position:0%
who is below us now there's actually
more<00:03:08.130><c> exotic</c><00:03:08.460><c> approaches</c><00:03:09.120><c> where</c><00:03:09.270><c> you</c><00:03:09.330><c> don't</c>

00:03:09.560 --> 00:03:09.570 align:start position:0%
more exotic approaches where you don't
 

00:03:09.570 --> 00:03:11.330 align:start position:0%
more exotic approaches where you don't
extort<00:03:10.020><c> the</c><00:03:10.320><c> dote</c><00:03:10.500><c> store</c><00:03:10.770><c> explicit</c>

00:03:11.330 --> 00:03:11.340 align:start position:0%
extort the dote store explicit
 

00:03:11.340 --> 00:03:12.920 align:start position:0%
extort the dote store explicit
references<00:03:11.910><c> and</c><00:03:12.090><c> we've</c><00:03:12.510><c> actually</c><00:03:12.630><c> already</c>

00:03:12.920 --> 00:03:12.930 align:start position:0%
references and we've actually already
 

00:03:12.930 --> 00:03:14.300 align:start position:0%
references and we've actually already
seen<00:03:13.290><c> one</c><00:03:13.500><c> of</c><00:03:13.620><c> those</c><00:03:13.740><c> when</c><00:03:13.950><c> we</c><00:03:14.040><c> did</c><00:03:14.220><c> the</c>

00:03:14.300 --> 00:03:14.310 align:start position:0%
seen one of those when we did the
 

00:03:14.310 --> 00:03:16.670 align:start position:0%
seen one of those when we did the
destroyed<00:03:14.700><c> sets</c><00:03:14.970><c> data</c><00:03:15.210><c> structure</c><00:03:15.630><c> so</c><00:03:16.470><c> in</c><00:03:16.560><c> this</c>

00:03:16.670 --> 00:03:16.680 align:start position:0%
destroyed sets data structure so in this
 

00:03:16.680 --> 00:03:19.010 align:start position:0%
destroyed sets data structure so in this
case<00:03:16.920><c> we'll</c><00:03:17.340><c> call</c><00:03:17.460><c> this</c><00:03:17.580><c> approach</c><00:03:17.910><c> to</c><00:03:18.020><c> an</c>

00:03:19.010 --> 00:03:19.020 align:start position:0%
case we'll call this approach to an
 

00:03:19.020 --> 00:03:20.690 align:start position:0%
case we'll call this approach to an
approach<00:03:19.320><c> to</c><00:03:19.560><c> will</c><00:03:19.770><c> store</c><00:03:20.040><c> our</c><00:03:20.160><c> keys</c><00:03:20.400><c> in</c><00:03:20.430><c> an</c>

00:03:20.690 --> 00:03:20.700 align:start position:0%
approach to will store our keys in an
 

00:03:20.700 --> 00:03:22.580 align:start position:0%
approach to will store our keys in an
array<00:03:20.940><c> and</c><00:03:21.240><c> we'll</c><00:03:21.690><c> also</c><00:03:21.810><c> store</c><00:03:22.140><c> an</c><00:03:22.320><c> array</c><00:03:22.560><c> of</c>

00:03:22.580 --> 00:03:22.590 align:start position:0%
array and we'll also store an array of
 

00:03:22.590 --> 00:03:26.510 align:start position:0%
array and we'll also store an array of
parent<00:03:23.040><c> IDs</c><00:03:23.720><c> so</c><00:03:24.720><c> for</c><00:03:24.990><c> example</c><00:03:25.410><c> here</c><00:03:26.160><c> again</c><00:03:26.400><c> we</c>

00:03:26.510 --> 00:03:26.520 align:start position:0%
parent IDs so for example here again we
 

00:03:26.520 --> 00:03:28.550 align:start position:0%
parent IDs so for example here again we
have<00:03:26.610><c> the</c><00:03:26.700><c> exact</c><00:03:26.910><c> same</c><00:03:26.940><c> tree</c><00:03:27.360><c> W</c><00:03:27.990><c> has</c><00:03:28.320><c> three</c>

00:03:28.550 --> 00:03:28.560 align:start position:0%
have the exact same tree W has three
 

00:03:28.560 --> 00:03:28.880 align:start position:0%
have the exact same tree W has three
children

00:03:28.880 --> 00:03:28.890 align:start position:0%
children
 

00:03:28.890 --> 00:03:31.430 align:start position:0%
children
x<00:03:29.040><c> y&amp;z</c><00:03:29.520><c> so</c><00:03:30.300><c> we</c><00:03:30.390><c> have</c><00:03:30.480><c> a</c><00:03:30.510><c> keys</c><00:03:30.810><c> array</c><00:03:31.170><c> which</c>

00:03:31.430 --> 00:03:31.440 align:start position:0%
x y&amp;z so we have a keys array which
 

00:03:31.440 --> 00:03:33.860 align:start position:0%
x y&amp;z so we have a keys array which
consists<00:03:31.950><c> of</c><00:03:32.040><c> W</c><00:03:32.400><c> the</c><00:03:32.640><c> next</c><00:03:32.970><c> then</c><00:03:33.090><c> Y</c><00:03:33.270><c> then</c><00:03:33.300><c> C</c><00:03:33.720><c> and</c>

00:03:33.860 --> 00:03:33.870 align:start position:0%
consists of W the next then Y then C and
 

00:03:33.870 --> 00:03:36.830 align:start position:0%
consists of W the next then Y then C and
we<00:03:34.560><c> have</c><00:03:34.590><c> the</c><00:03:34.770><c> parents</c><00:03:35.190><c> array</c><00:03:35.430><c> where</c><00:03:36.060><c> the</c><00:03:36.330><c> 0th</c>

00:03:36.830 --> 00:03:36.840 align:start position:0%
we have the parents array where the 0th
 

00:03:36.840 --> 00:03:39.230 align:start position:0%
we have the parents array where the 0th
entry<00:03:37.260><c> of</c><00:03:37.440><c> that</c><00:03:37.950><c> array</c><00:03:38.220><c> is</c><00:03:38.459><c> well</c><00:03:38.880><c> it</c><00:03:38.940><c> says</c><00:03:39.090><c> what</c>

00:03:39.230 --> 00:03:39.240 align:start position:0%
entry of that array is well it says what
 

00:03:39.240 --> 00:03:41.390 align:start position:0%
entry of that array is well it says what
the<00:03:39.360><c> parent</c><00:03:39.630><c> of</c><00:03:39.690><c> 0</c><00:03:39.959><c> is</c><00:03:40.110><c> so</c><00:03:40.470><c> 0</c><00:03:40.740><c> is</c><00:03:40.830><c> paired</c><00:03:41.010><c> to</c><00:03:41.160><c> 0</c>

00:03:41.390 --> 00:03:41.400 align:start position:0%
the parent of 0 is so 0 is paired to 0
 

00:03:41.400 --> 00:03:43.520 align:start position:0%
the parent of 0 is so 0 is paired to 0
meaning<00:03:41.640><c> W</c><00:03:42.060><c> is</c><00:03:42.150><c> the</c><00:03:42.270><c> route</c><00:03:42.420><c> and</c><00:03:42.600><c> 1</c><00:03:43.170><c> 2</c><00:03:43.350><c> and</c><00:03:43.500><c> 3</c>

00:03:43.520 --> 00:03:43.530 align:start position:0%
meaning W is the route and 1 2 and 3
 

00:03:43.530 --> 00:03:45.380 align:start position:0%
meaning W is the route and 1 2 and 3
also<00:03:44.040><c> have</c><00:03:44.220><c> parent</c><00:03:44.520><c> 0</c><00:03:44.730><c> meaning</c><00:03:45.000><c> they're</c><00:03:45.270><c> all</c>

00:03:45.380 --> 00:03:45.390 align:start position:0%
also have parent 0 meaning they're all
 

00:03:45.390 --> 00:03:48.020 align:start position:0%
also have parent 0 meaning they're all
children<00:03:45.840><c> of</c><00:03:45.959><c> W</c><00:03:46.470><c> now</c><00:03:47.430><c> that's</c><00:03:47.610><c> a</c><00:03:47.670><c> pretty</c><00:03:47.820><c> boring</c>

00:03:48.020 --> 00:03:48.030 align:start position:0%
children of W now that's a pretty boring
 

00:03:48.030 --> 00:03:49.610 align:start position:0%
children of W now that's a pretty boring
tree<00:03:48.390><c> so</c><00:03:48.540><c> I've</c><00:03:48.660><c> got</c><00:03:48.750><c> a</c><00:03:48.780><c> more</c><00:03:48.959><c> complicated</c><00:03:49.260><c> one</c>

00:03:49.610 --> 00:03:49.620 align:start position:0%
tree so I've got a more complicated one
 

00:03:49.620 --> 00:03:51.470 align:start position:0%
tree so I've got a more complicated one
at<00:03:49.709><c> the</c><00:03:49.800><c> bottom</c><00:03:49.950><c> in</c><00:03:50.280><c> this</c><00:03:50.790><c> case</c><00:03:51.000><c> I've</c><00:03:51.239><c> got</c><00:03:51.300><c> a</c>

00:03:51.470 --> 00:03:51.480 align:start position:0%
at the bottom in this case I've got a
 

00:03:51.480 --> 00:03:54.220 align:start position:0%
at the bottom in this case I've got a
complete<00:03:51.989><c> tree</c><00:03:52.200><c> that</c><00:03:52.350><c> looks</c><00:03:52.500><c> like</c><00:03:52.709><c> ke</c><00:03:53.250><c> V</c><00:03:53.820><c> beak</c>

00:03:54.220 --> 00:03:54.230 align:start position:0%
complete tree that looks like ke V beak
 

00:03:54.230 --> 00:03:57.170 align:start position:0%
complete tree that looks like ke V beak
gpy<00:03:55.230><c> ADF</c><00:03:56.160><c> J</c><00:03:56.400><c> and</c><00:03:56.580><c> so</c><00:03:56.730><c> forth</c>

00:03:57.170 --> 00:03:57.180 align:start position:0%
gpy ADF J and so forth
 

00:03:57.180 --> 00:04:02.240 align:start position:0%
gpy ADF J and so forth
and<00:03:57.720><c> so</c><00:03:57.959><c> my</c><00:03:58.080><c> keys</c><00:03:58.350><c> array</c><00:03:58.709><c> is</c><00:03:59.130><c> ke</c><00:03:59.520><c> V</c><00:03:59.970><c> BGP</c><00:04:00.750><c> Y</c><00:04:01.250><c> and</c>

00:04:02.240 --> 00:04:02.250 align:start position:0%
and so my keys array is ke V BGP Y and
 

00:04:02.250 --> 00:04:05.390 align:start position:0%
and so my keys array is ke V BGP Y and
my<00:04:02.400><c> parents</c><00:04:02.850><c> array</c><00:04:03.120><c> is</c><00:04:03.840><c> well</c><00:04:04.650><c> in</c><00:04:04.860><c> this</c><00:04:04.980><c> case</c><00:04:05.160><c> we</c>

00:04:05.390 --> 00:04:05.400 align:start position:0%
my parents array is well in this case we
 

00:04:05.400 --> 00:04:07.190 align:start position:0%
my parents array is well in this case we
say<00:04:05.580><c> ok</c><00:04:05.850><c> well</c><00:04:06.030><c> as</c><00:04:06.120><c> threes</c><00:04:06.420><c> parent</c><00:04:06.780><c> threes</c>

00:04:07.190 --> 00:04:07.200 align:start position:0%
say ok well as threes parent threes
 

00:04:07.200 --> 00:04:10.880 align:start position:0%
say ok well as threes parent threes
parent<00:04:07.530><c> is</c><00:04:07.650><c> 1</c><00:04:07.830><c> and</c><00:04:08.070><c> one's</c><00:04:08.640><c> parent</c><00:04:09.060><c> is</c><00:04:09.180><c> 0</c><00:04:09.890><c> 12</c>

00:04:10.880 --> 00:04:10.890 align:start position:0%
parent is 1 and one's parent is 0 12
 

00:04:10.890 --> 00:04:13.040 align:start position:0%
parent is 1 and one's parent is 0 12
parent<00:04:11.280><c> is</c><00:04:11.400><c> 5</c><00:04:11.580><c> 5</c><00:04:11.850><c> s</c><00:04:11.940><c> parent</c><00:04:12.209><c> is</c><00:04:12.270><c> tutus</c><00:04:12.720><c> parent</c>

00:04:13.040 --> 00:04:13.050 align:start position:0%
parent is 5 5 s parent is tutus parent
 

00:04:13.050 --> 00:04:16.190 align:start position:0%
parent is 5 5 s parent is tutus parent
is<00:04:13.110><c> Sara</c><00:04:13.290><c> so</c><00:04:13.860><c> 12</c><00:04:14.100><c> parent</c><00:04:14.400><c> is</c><00:04:14.520><c> 5</c><00:04:14.700><c> 5</c><00:04:15.690><c> s</c><00:04:15.840><c> parent</c><00:04:16.109><c> is</c>

00:04:16.190 --> 00:04:16.200 align:start position:0%
is Sara so 12 parent is 5 5 s parent is
 

00:04:16.200 --> 00:04:18.860 align:start position:0%
is Sara so 12 parent is 5 5 s parent is
2<00:04:16.410><c> two's</c><00:04:16.980><c> parent</c><00:04:17.310><c> is</c><00:04:17.430><c> 0</c><00:04:17.640><c> and</c><00:04:17.910><c> so</c><00:04:18.299><c> this</c><00:04:18.510><c> is</c><00:04:18.660><c> one</c>

00:04:18.860 --> 00:04:18.870 align:start position:0%
2 two's parent is 0 and so this is one
 

00:04:18.870 --> 00:04:21.380 align:start position:0%
2 two's parent is 0 and so this is one
way<00:04:18.989><c> to</c><00:04:19.020><c> represent</c><00:04:19.590><c> this</c><00:04:19.709><c> tree</c><00:04:20.060><c> now</c><00:04:21.060><c> this</c><00:04:21.209><c> is</c>

00:04:21.380 --> 00:04:21.390 align:start position:0%
way to represent this tree now this is
 

00:04:21.390 --> 00:04:23.180 align:start position:0%
way to represent this tree now this is
not<00:04:21.989><c> the</c><00:04:22.140><c> only</c><00:04:22.440><c> way</c><00:04:22.590><c> I</c><00:04:22.620><c> mean</c><00:04:22.860><c> we</c><00:04:22.919><c> could</c>

00:04:23.180 --> 00:04:23.190 align:start position:0%
not the only way I mean we could
 

00:04:23.190 --> 00:04:24.890 align:start position:0%
not the only way I mean we could
scramble<00:04:23.490><c> these</c><00:04:23.789><c> in</c><00:04:24.000><c> some</c><00:04:24.180><c> order</c><00:04:24.479><c> and</c><00:04:24.510><c> change</c>

00:04:24.890 --> 00:04:24.900 align:start position:0%
scramble these in some order and change
 

00:04:24.900 --> 00:04:28.090 align:start position:0%
scramble these in some order and change
all<00:04:25.050><c> the</c><00:04:25.140><c> parents</c><00:04:25.470><c> to</c><00:04:25.590><c> match</c><00:04:25.770><c> but</c><00:04:26.640><c> if</c><00:04:26.850><c> we</c><00:04:27.150><c> store</c>

00:04:28.090 --> 00:04:28.100 align:start position:0%
all the parents to match but if we store
 

00:04:28.100 --> 00:04:31.450 align:start position:0%
all the parents to match but if we store
keys<00:04:28.460><c> in</c><00:04:28.700><c> the</c><00:04:29.120><c> order</c><00:04:29.570><c> shown</c><00:04:29.860><c> and</c><00:04:30.860><c> the</c><00:04:31.190><c> tree</c><00:04:31.370><c> is</c>

00:04:31.450 --> 00:04:31.460 align:start position:0%
keys in the order shown and the tree is
 

00:04:31.460 --> 00:04:33.550 align:start position:0%
keys in the order shown and the tree is
complete<00:04:31.850><c> it</c><00:04:32.420><c> turns</c><00:04:32.780><c> out</c><00:04:33.020><c> that</c><00:04:33.200><c> we'll</c><00:04:33.320><c> always</c>

00:04:33.550 --> 00:04:33.560 align:start position:0%
complete it turns out that we'll always
 

00:04:33.560 --> 00:04:35.410 align:start position:0%
complete it turns out that we'll always
have<00:04:33.740><c> this</c><00:04:34.040><c> property</c><00:04:34.460><c> that</c><00:04:34.730><c> the</c><00:04:34.970><c> parents</c><00:04:35.360><c> are</c>

00:04:35.410 --> 00:04:35.420 align:start position:0%
have this property that the parents are
 

00:04:35.420 --> 00:04:37.450 align:start position:0%
have this property that the parents are
rail<00:04:35.570><c> is</c><00:04:35.690><c> extremely</c><00:04:36.380><c> boring</c><00:04:36.740><c> it</c><00:04:37.160><c> will</c><00:04:37.280><c> always</c>

00:04:37.450 --> 00:04:37.460 align:start position:0%
rail is extremely boring it will always
 

00:04:37.460 --> 00:04:42.010 align:start position:0%
rail is extremely boring it will always
go<00:04:37.820><c> 0</c><00:04:38.540><c> 0</c><00:04:38.900><c> 1</c><00:04:39.230><c> 1</c><00:04:39.260><c> two</c><00:04:39.860><c> 2</c><00:04:39.890><c> three</c><00:04:40.160><c> 3</c><00:04:40.730><c> four</c><00:04:41.090><c> 4</c><00:04:41.420><c> five</c><00:04:41.630><c> 5</c>

00:04:42.010 --> 00:04:42.020 align:start position:0%
go 0 0 1 1 two 2 three 3 four 4 five 5
 

00:04:42.020 --> 00:04:47.260 align:start position:0%
go 0 0 1 1 two 2 three 3 four 4 five 5
six<00:04:43.930><c> so</c><00:04:44.930><c> in</c><00:04:45.050><c> approach</c><00:04:45.350><c> 3</c><00:04:45.880><c> which</c><00:04:46.880><c> will</c><00:04:47.030><c> be</c><00:04:47.150><c> our</c>

00:04:47.260 --> 00:04:47.270 align:start position:0%
six so in approach 3 which will be our
 

00:04:47.270 --> 00:04:48.820 align:start position:0%
six so in approach 3 which will be our
strangest<00:04:47.750><c> approach</c><00:04:48.080><c> and</c><00:04:48.380><c> maybe</c><00:04:48.560><c> if</c><00:04:48.740><c> you're</c>

00:04:48.820 --> 00:04:48.830 align:start position:0%
strangest approach and maybe if you're
 

00:04:48.830 --> 00:04:50.350 align:start position:0%
strangest approach and maybe if you're
on<00:04:48.890><c> following</c><00:04:49.370><c> pause</c><00:04:49.640><c> the</c><00:04:49.820><c> video</c><00:04:50.060><c> make</c><00:04:50.330><c> sure</c>

00:04:50.350 --> 00:04:50.360 align:start position:0%
on following pause the video make sure
 

00:04:50.360 --> 00:04:51.640 align:start position:0%
on following pause the video make sure
this<00:04:50.600><c> really</c><00:04:50.750><c> makes</c><00:04:51.050><c> sense</c><00:04:51.200><c> because</c><00:04:51.560><c> that's</c>

00:04:51.640 --> 00:04:51.650 align:start position:0%
this really makes sense because that's
 

00:04:51.650 --> 00:04:53.950 align:start position:0%
this really makes sense because that's
about<00:04:51.830><c> to</c><00:04:52.070><c> take</c><00:04:52.280><c> a</c><00:04:52.310><c> strange</c><00:04:52.610><c> leak</c><00:04:53.000><c> okay</c><00:04:53.360><c> this</c>

00:04:53.950 --> 00:04:53.960 align:start position:0%
about to take a strange leak okay this
 

00:04:53.960 --> 00:04:55.270 align:start position:0%
about to take a strange leak okay this
is<00:04:54.080><c> just</c><00:04:54.260><c> like</c><00:04:54.440><c> what</c><00:04:54.590><c> we</c><00:04:54.680><c> did</c><00:04:54.800><c> with</c><00:04:54.860><c> disjoint</c>

00:04:55.270 --> 00:04:55.280 align:start position:0%
is just like what we did with disjoint
 

00:04:55.280 --> 00:04:57.730 align:start position:0%
is just like what we did with disjoint
sets<00:04:55.520><c> and</c><00:04:55.820><c> so</c><00:04:56.450><c> approach</c><00:04:56.750><c> 3</c><00:04:57.020><c> is</c><00:04:57.110><c> to</c><00:04:57.230><c> recognize</c>

00:04:57.730 --> 00:04:57.740 align:start position:0%
sets and so approach 3 is to recognize
 

00:04:57.740 --> 00:04:59.800 align:start position:0%
sets and so approach 3 is to recognize
that<00:04:58.310><c> if</c><00:04:58.430><c> we're</c><00:04:58.610><c> storing</c><00:04:59.000><c> a</c><00:04:59.180><c> complete</c><00:04:59.540><c> tree</c>

00:04:59.800 --> 00:04:59.810 align:start position:0%
that if we're storing a complete tree
 

00:04:59.810 --> 00:05:02.920 align:start position:0%
that if we're storing a complete tree
and<00:05:00.350><c> we</c><00:05:00.440><c> store</c><00:05:00.800><c> the</c><00:05:00.950><c> keys</c><00:05:01.190><c> in</c><00:05:01.430><c> the</c><00:05:01.460><c> order</c><00:05:01.930><c> just</c>

00:05:02.920 --> 00:05:02.930 align:start position:0%
and we store the keys in the order just
 

00:05:02.930 --> 00:05:04.840 align:start position:0%
and we store the keys in the order just
reading<00:05:03.200><c> it</c><00:05:03.320><c> top</c><00:05:03.650><c> to</c><00:05:03.830><c> bottom</c><00:05:03.950><c> which</c><00:05:04.580><c> is</c><00:05:04.610><c> also</c>

00:05:04.840 --> 00:05:04.850 align:start position:0%
reading it top to bottom which is also
 

00:05:04.850 --> 00:05:07.150 align:start position:0%
reading it top to bottom which is also
known<00:05:05.060><c> as</c><00:05:05.090><c> the</c><00:05:05.270><c> level</c><00:05:05.540><c> order</c><00:05:05.840><c> by</c><00:05:06.050><c> the</c><00:05:06.110><c> way</c><00:05:06.290><c> in</c>

00:05:07.150 --> 00:05:07.160 align:start position:0%
known as the level order by the way in
 

00:05:07.160 --> 00:05:08.530 align:start position:0%
known as the level order by the way in
that<00:05:07.340><c> case</c><00:05:07.550><c> we</c><00:05:07.670><c> can</c><00:05:07.790><c> actually</c><00:05:07.820><c> discard</c><00:05:08.420><c> the</c>

00:05:08.530 --> 00:05:08.540 align:start position:0%
that case we can actually discard the
 

00:05:08.540 --> 00:05:10.900 align:start position:0%
that case we can actually discard the
parents<00:05:08.900><c> array</c><00:05:09.110><c> completely</c><00:05:09.590><c> and</c><00:05:09.860><c> in</c><00:05:10.760><c> this</c>

00:05:10.900 --> 00:05:10.910 align:start position:0%
parents array completely and in this
 

00:05:10.910 --> 00:05:13.570 align:start position:0%
parents array completely and in this
case<00:05:11.230><c> the</c><00:05:12.230><c> keys</c><00:05:12.620><c> to</c><00:05:12.800><c> Ray</c><00:05:12.890><c> is</c><00:05:12.950><c> exactly</c><00:05:13.400><c> as</c>

00:05:13.570 --> 00:05:13.580 align:start position:0%
case the keys to Ray is exactly as
 

00:05:13.580 --> 00:05:15.160 align:start position:0%
case the keys to Ray is exactly as
before<00:05:13.610><c> and</c><00:05:14.120><c> this</c><00:05:14.450><c> will</c><00:05:14.570><c> only</c><00:05:14.840><c> work</c><00:05:15.140><c> for</c>

00:05:15.160 --> 00:05:15.170 align:start position:0%
before and this will only work for
 

00:05:15.170 --> 00:05:17.110 align:start position:0%
before and this will only work for
complete<00:05:15.650><c> trees</c><00:05:15.920><c> right</c><00:05:16.490><c> because</c><00:05:16.910><c> the</c><00:05:17.030><c> whole</c>

00:05:17.110 --> 00:05:17.120 align:start position:0%
complete trees right because the whole
 

00:05:17.120 --> 00:05:19.600 align:start position:0%
complete trees right because the whole
the<00:05:17.570><c> whole</c><00:05:17.600><c> idea</c><00:05:18.050><c> here</c><00:05:18.260><c> is</c><00:05:18.440><c> we</c><00:05:18.920><c> assume</c><00:05:19.280><c> that</c>

00:05:19.600 --> 00:05:19.610 align:start position:0%
the whole idea here is we assume that
 

00:05:19.610 --> 00:05:22.180 align:start position:0%
the whole idea here is we assume that
the<00:05:20.000><c> tree</c><00:05:20.180><c> is</c><00:05:20.210><c> complete</c><00:05:20.680><c> then</c><00:05:21.680><c> the</c><00:05:21.830><c> parents</c>

00:05:22.180 --> 00:05:22.190 align:start position:0%
the tree is complete then the parents
 

00:05:22.190 --> 00:05:24.280 align:start position:0%
the tree is complete then the parents
array<00:05:22.430><c> is</c><00:05:22.640><c> actually</c><00:05:22.790><c> redundant</c><00:05:23.480><c> and</c><00:05:23.750><c> so</c><00:05:24.200><c> we</c>

00:05:24.280 --> 00:05:24.290 align:start position:0%
array is actually redundant and so we
 

00:05:24.290 --> 00:05:26.530 align:start position:0%
array is actually redundant and so we
could<00:05:24.440><c> ignore</c><00:05:24.560><c> it</c><00:05:24.830><c> okay</c><00:05:25.070><c> so</c><00:05:25.130><c> tree</c><00:05:25.970><c> 3</c><00:05:26.240><c> is</c><00:05:26.480><c> a</c>

00:05:26.530 --> 00:05:26.540 align:start position:0%
could ignore it okay so tree 3 is a
 

00:05:26.540 --> 00:05:28.510 align:start position:0%
could ignore it okay so tree 3 is a
nicer<00:05:26.930><c> approach</c><00:05:27.230><c> where</c><00:05:27.800><c> our</c><00:05:28.070><c> tree</c><00:05:28.490><c> is</c>

00:05:28.510 --> 00:05:28.520 align:start position:0%
nicer approach where our tree is
 

00:05:28.520 --> 00:05:31.030 align:start position:0%
nicer approach where our tree is
represented<00:05:29.180><c> as</c><00:05:29.270><c> an</c><00:05:29.390><c> array</c><00:05:29.600><c> okay</c><00:05:30.140><c> so</c><00:05:30.770><c> it</c><00:05:30.860><c> seems</c>

00:05:31.030 --> 00:05:31.040 align:start position:0%
represented as an array okay so it seems
 

00:05:31.040 --> 00:05:32.710 align:start position:0%
represented as an array okay so it seems
a<00:05:31.100><c> little</c><00:05:31.220><c> crazy</c><00:05:31.400><c> right</c><00:05:31.850><c> that</c><00:05:32.060><c> you</c><00:05:32.150><c> can</c><00:05:32.330><c> take</c><00:05:32.510><c> a</c>

00:05:32.710 --> 00:05:32.720 align:start position:0%
a little crazy right that you can take a
 

00:05:32.720 --> 00:05:34.510 align:start position:0%
a little crazy right that you can take a
structure<00:05:33.260><c> which</c><00:05:33.440><c> is</c><00:05:33.470><c> not</c><00:05:33.800><c> at</c><00:05:34.280><c> all</c>

00:05:34.510 --> 00:05:34.520 align:start position:0%
structure which is not at all
 

00:05:34.520 --> 00:05:36.910 align:start position:0%
structure which is not at all
one-dimensional<00:05:35.300><c> right</c><00:05:35.690><c> a</c><00:05:35.720><c> tree</c><00:05:35.990><c> is</c><00:05:36.050><c> -</c><00:05:36.260><c> it's</c><00:05:36.800><c> a</c>

00:05:36.910 --> 00:05:36.920 align:start position:0%
one-dimensional right a tree is - it's a
 

00:05:36.920 --> 00:05:40.300 align:start position:0%
one-dimensional right a tree is - it's a
you<00:05:37.550><c> have</c><00:05:37.640><c> this</c><00:05:38.260><c> whole</c><00:05:39.310><c> hierarchical</c>

00:05:40.300 --> 00:05:40.310 align:start position:0%
you have this whole hierarchical
 

00:05:40.310 --> 00:05:42.760 align:start position:0%
you have this whole hierarchical
structure<00:05:41.090><c> but</c><00:05:41.840><c> instead</c><00:05:42.080><c> we</c><00:05:42.260><c> reduced</c><00:05:42.530><c> into</c>

00:05:42.760 --> 00:05:42.770 align:start position:0%
structure but instead we reduced into
 

00:05:42.770 --> 00:05:45.370 align:start position:0%
structure but instead we reduced into
this<00:05:42.830><c> flat</c><00:05:43.130><c> line</c><00:05:43.190><c> right</c><00:05:44.150><c> it's</c><00:05:44.600><c> just</c><00:05:44.780><c> it's</c><00:05:45.050><c> kind</c>

00:05:45.370 --> 00:05:45.380 align:start position:0%
this flat line right it's just it's kind
 

00:05:45.380 --> 00:05:47.430 align:start position:0%
this flat line right it's just it's kind
of<00:05:45.410><c> amazing</c><00:05:45.560><c> I</c><00:05:45.860><c> think</c><00:05:46.130><c> it's</c><00:05:46.250><c> very</c><00:05:46.310><c> clever</c>

00:05:47.430 --> 00:05:47.440 align:start position:0%
of amazing I think it's very clever
 

00:05:47.440 --> 00:05:49.630 align:start position:0%
of amazing I think it's very clever
so<00:05:48.440><c> to</c><00:05:48.530><c> make</c><00:05:48.680><c> sure</c><00:05:48.830><c> that</c><00:05:48.980><c> that'll</c><00:05:49.220><c> make</c><00:05:49.370><c> sense</c>

00:05:49.630 --> 00:05:49.640 align:start position:0%
so to make sure that that'll make sense
 

00:05:49.640 --> 00:05:51.660 align:start position:0%
so to make sure that that'll make sense
I<00:05:49.910><c> have</c><00:05:50.390><c> a</c><00:05:50.420><c> little</c><00:05:50.690><c> puzzle</c><00:05:50.840><c> for</c><00:05:51.170><c> you</c><00:05:51.200><c> here</c><00:05:51.500><c> I</c>

00:05:51.660 --> 00:05:51.670 align:start position:0%
I have a little puzzle for you here I
 

00:05:51.670 --> 00:05:54.760 align:start position:0%
I have a little puzzle for you here I
want<00:05:52.670><c> you</c><00:05:52.790><c> to</c><00:05:53.030><c> write</c><00:05:53.240><c> the</c><00:05:53.570><c> parent</c><00:05:53.990><c> K</c><00:05:54.320><c> method</c>

00:05:54.760 --> 00:05:54.770 align:start position:0%
want you to write the parent K method
 

00:05:54.770 --> 00:05:57.310 align:start position:0%
want you to write the parent K method
for<00:05:55.700><c> this</c><00:05:55.820><c> code</c><00:05:56.060><c> now</c><00:05:56.360><c> what</c><00:05:56.540><c> is</c><00:05:56.630><c> this</c><00:05:56.780><c> guy</c><00:05:56.960><c> this</c>

00:05:57.310 --> 00:05:57.320 align:start position:0%
for this code now what is this guy this
 

00:05:57.320 --> 00:05:58.870 align:start position:0%
for this code now what is this guy this
could<00:05:57.530><c> actually</c><00:05:57.650><c> shows</c><00:05:58.070><c> what</c><00:05:58.100><c> swim</c><00:05:58.640><c> would</c>

00:05:58.870 --> 00:05:58.880 align:start position:0%
could actually shows what swim would
 

00:05:58.880 --> 00:06:00.370 align:start position:0%
could actually shows what swim would
look<00:05:59.090><c> like</c><00:05:59.270><c> in</c><00:05:59.420><c> the</c><00:05:59.510><c> implementation</c><00:05:59.810><c> of</c><00:06:00.290><c> a</c>

00:06:00.370 --> 00:06:00.380 align:start position:0%
look like in the implementation of a
 

00:06:00.380 --> 00:06:04.300 align:start position:0%
look like in the implementation of a
heap<00:06:00.640><c> so</c><00:06:01.640><c> if</c><00:06:01.760><c> I</c><00:06:01.850><c> want</c><00:06:02.030><c> to</c><00:06:02.180><c> swim</c><00:06:02.480><c> in</c><00:06:02.510><c> my</c><00:06:03.260><c> tree</c><00:06:03.800><c> the</c>

00:06:04.300 --> 00:06:04.310 align:start position:0%
heap so if I want to swim in my tree the
 

00:06:04.310 --> 00:06:06.040 align:start position:0%
heap so if I want to swim in my tree the
cave<00:06:04.610><c> item</c><00:06:05.060><c> so</c><00:06:05.270><c> let's</c><00:06:05.450><c> say</c><00:06:05.540><c> I</c><00:06:05.600><c> want</c><00:06:05.810><c> to</c><00:06:05.870><c> swim</c>

00:06:06.040 --> 00:06:06.050 align:start position:0%
cave item so let's say I want to swim
 

00:06:06.050 --> 00:06:09.220 align:start position:0%
cave item so let's say I want to swim
this<00:06:06.230><c> p</c><00:06:06.500><c> here</c><00:06:06.890><c> in</c><00:06:07.010><c> location</c><00:06:07.520><c> 5</c><00:06:07.930><c> then</c><00:06:08.930><c> I'll</c><00:06:09.050><c> say</c>

00:06:09.220 --> 00:06:09.230 align:start position:0%
this p here in location 5 then I'll say
 

00:06:09.230 --> 00:06:12.070 align:start position:0%
this p here in location 5 then I'll say
ok<00:06:09.560><c> well</c><00:06:10.070><c> if</c><00:06:10.280><c> the</c><00:06:10.700><c> key</c><00:06:10.970><c> element</c><00:06:11.600><c> of</c><00:06:11.690><c> the</c><00:06:11.840><c> keys</c>

00:06:12.070 --> 00:06:12.080 align:start position:0%
ok well if the key element of the keys
 

00:06:12.080 --> 00:06:14.860 align:start position:0%
ok well if the key element of the keys
array<00:06:12.410><c> in</c><00:06:12.680><c> the</c><00:06:13.220><c> parent</c><00:06:14.090><c> position</c><00:06:14.570><c> so</c><00:06:14.750><c> the</c>

00:06:14.860 --> 00:06:14.870 align:start position:0%
array in the parent position so the
 

00:06:14.870 --> 00:06:18.400 align:start position:0%
array in the parent position so the
parent<00:06:15.200><c> of</c><00:06:15.320><c> K</c><00:06:15.590><c> parent</c><00:06:16.160><c> of</c><00:06:16.280><c> 5</c><00:06:16.460><c> is</c><00:06:16.640><c> 2</c><00:06:16.900><c> then</c><00:06:17.900><c> what</c>

00:06:18.400 --> 00:06:18.410 align:start position:0%
parent of K parent of 5 is 2 then what
 

00:06:18.410 --> 00:06:20.020 align:start position:0%
parent of K parent of 5 is 2 then what
we'll<00:06:18.530><c> do</c><00:06:18.710><c> is</c><00:06:18.890><c> we'll</c><00:06:19.010><c> say</c><00:06:19.190><c> this</c><00:06:19.430><c> number</c><00:06:19.550><c> is</c><00:06:19.820><c> if</c>

00:06:20.020 --> 00:06:20.030 align:start position:0%
we'll do is we'll say this number is if
 

00:06:20.030 --> 00:06:23.740 align:start position:0%
we'll do is we'll say this number is if
V<00:06:20.360><c> is</c><00:06:20.660><c> greater</c><00:06:21.380><c> than</c><00:06:21.590><c> keys</c><00:06:21.980><c> 5</c><00:06:22.490><c> then</c><00:06:23.330><c> we</c><00:06:23.540><c> would</c>

00:06:23.740 --> 00:06:23.750 align:start position:0%
V is greater than keys 5 then we would
 

00:06:23.750 --> 00:06:26.350 align:start position:0%
V is greater than keys 5 then we would
swap<00:06:24.290><c> 2</c><00:06:24.620><c> and</c><00:06:24.800><c> 5</c><00:06:25.010><c> and</c><00:06:25.310><c> then</c><00:06:25.640><c> we</c><00:06:25.730><c> would</c><00:06:25.820><c> call</c><00:06:26.030><c> swim</c>

00:06:26.350 --> 00:06:26.360 align:start position:0%
swap 2 and 5 and then we would call swim
 

00:06:26.360 --> 00:06:29.860 align:start position:0%
swap 2 and 5 and then we would call swim
on<00:06:26.600><c> this</c><00:06:26.780><c> parent</c><00:06:27.280><c> so</c><00:06:28.280><c> your</c><00:06:28.610><c> job</c><00:06:28.880><c> now</c><00:06:29.120><c> is</c><00:06:29.360><c> to</c><00:06:29.690><c> try</c>

00:06:29.860 --> 00:06:29.870 align:start position:0%
on this parent so your job now is to try
 

00:06:29.870 --> 00:06:31.270 align:start position:0%
on this parent so your job now is to try
and<00:06:30.050><c> write</c><00:06:30.260><c> this</c><00:06:30.500><c> parent</c><00:06:30.860><c> method</c><00:06:31.130><c> that's</c>

00:06:31.270 --> 00:06:31.280 align:start position:0%
and write this parent method that's
 

00:06:31.280 --> 00:06:33.100 align:start position:0%
and write this parent method that's
gonna<00:06:31.400><c> be</c><00:06:31.550><c> really</c><00:06:31.730><c> short</c><00:06:32.000><c> it's</c><00:06:32.570><c> gonna</c><00:06:32.720><c> take</c><00:06:32.990><c> as</c>

00:06:33.100 --> 00:06:33.110 align:start position:0%
gonna be really short it's gonna take as
 

00:06:33.110 --> 00:06:35.110 align:start position:0%
gonna be really short it's gonna take as
input<00:06:33.290><c> an</c><00:06:33.650><c> integer</c><00:06:33.770><c> and</c><00:06:34.250><c> it's</c><00:06:34.940><c> going</c><00:06:35.060><c> to</c>

00:06:35.110 --> 00:06:35.120 align:start position:0%
input an integer and it's going to
 

00:06:35.120 --> 00:06:37.090 align:start position:0%
input an integer and it's going to
return<00:06:35.450><c> an</c><00:06:35.690><c> integer</c><00:06:35.930><c> corresponding</c><00:06:36.919><c> to</c><00:06:37.010><c> the</c>

00:06:37.090 --> 00:06:37.100 align:start position:0%
return an integer corresponding to the
 

00:06:37.100 --> 00:06:39.430 align:start position:0%
return an integer corresponding to the
parent<00:06:37.430><c> so</c><00:06:37.580><c> for</c><00:06:37.760><c> 5</c><00:06:37.940><c> it</c><00:06:38.120><c> should</c><00:06:38.150><c> return</c><00:06:38.570><c> 2</c><00:06:38.840><c> for</c>

00:06:39.430 --> 00:06:39.440 align:start position:0%
parent so for 5 it should return 2 for
 

00:06:39.440 --> 00:06:41.800 align:start position:0%
parent so for 5 it should return 2 for
13<00:06:39.560><c> it</c><00:06:39.950><c> should</c><00:06:40.070><c> return</c><00:06:40.340><c> six</c><00:06:40.640><c> and</c><00:06:40.880><c> so</c><00:06:41.030><c> forth</c><00:06:41.270><c> so</c>

00:06:41.800 --> 00:06:41.810 align:start position:0%
13 it should return six and so forth so
 

00:06:41.810 --> 00:06:43.000 align:start position:0%
13 it should return six and so forth so
give<00:06:41.900><c> you</c><00:06:41.990><c> guys</c><00:06:42.139><c> a</c><00:06:42.169><c> short</c><00:06:42.440><c> time</c><00:06:42.680><c> to</c><00:06:42.830><c> think</c>

00:06:43.000 --> 00:06:43.010 align:start position:0%
give you guys a short time to think
 

00:06:43.010 --> 00:06:46.360 align:start position:0%
give you guys a short time to think
about<00:06:43.190><c> that</c><00:06:43.370><c> and</c><00:06:44.270><c> I</c><00:06:44.750><c> will</c><00:06:44.990><c> spoil</c><00:06:45.830><c> it</c><00:06:46.040><c> in</c><00:06:46.220><c> the</c>

00:06:46.360 --> 00:06:46.370 align:start position:0%
about that and I will spoil it in the
 

00:06:46.370 --> 00:06:54.159 align:start position:0%
about that and I will spoil it in the
next<00:06:46.580><c> little</c><00:06:46.700><c> bit</c><00:06:50.470><c> okay</c><00:06:51.470><c> so</c><00:06:52.780><c> what</c><00:06:53.780><c> I</c><00:06:53.810><c> came</c><00:06:54.110><c> up</c>

00:06:54.159 --> 00:06:54.169 align:start position:0%
next little bit okay so what I came up
 

00:06:54.169 --> 00:06:58.420 align:start position:0%
next little bit okay so what I came up
with<00:06:54.320><c> and</c><00:06:54.770><c> what's</c><00:06:55.220><c> the</c><00:06:55.700><c> answer</c><00:06:55.930><c> is</c><00:06:56.930><c> if</c><00:06:57.889><c> we</c>

00:06:58.420 --> 00:06:58.430 align:start position:0%
with and what's the answer is if we
 

00:06:58.430 --> 00:07:01.210 align:start position:0%
with and what's the answer is if we
subtract<00:06:59.030><c> one</c><00:06:59.300><c> and</c><00:06:59.510><c> divide</c><00:07:00.020><c> by</c><00:07:00.380><c> two</c><00:07:00.440><c> this</c><00:07:01.070><c> is</c>

00:07:01.210 --> 00:07:01.220 align:start position:0%
subtract one and divide by two this is
 

00:07:01.220 --> 00:07:03.340 align:start position:0%
subtract one and divide by two this is
the<00:07:01.340><c> easiest</c><00:07:01.880><c> way</c><00:07:02.120><c> to</c><00:07:02.150><c> do</c><00:07:02.360><c> it</c><00:07:02.480><c> now</c><00:07:03.169><c> you</c><00:07:03.230><c> could</c>

00:07:03.340 --> 00:07:03.350 align:start position:0%
the easiest way to do it now you could
 

00:07:03.350 --> 00:07:04.570 align:start position:0%
the easiest way to do it now you could
do<00:07:03.440><c> it</c><00:07:03.500><c> with</c><00:07:03.590><c> some</c><00:07:03.710><c> kind</c><00:07:03.800><c> of</c><00:07:03.919><c> if</c><00:07:04.040><c> statements</c>

00:07:04.570 --> 00:07:04.580 align:start position:0%
do it with some kind of if statements
 

00:07:04.580 --> 00:07:06.310 align:start position:0%
do it with some kind of if statements
but<00:07:05.180><c> this</c><00:07:05.300><c> takes</c><00:07:05.510><c> advantage</c><00:07:05.900><c> of</c><00:07:05.930><c> the</c><00:07:06.080><c> way</c><00:07:06.169><c> that</c>

00:07:06.310 --> 00:07:06.320 align:start position:0%
but this takes advantage of the way that
 

00:07:06.320 --> 00:07:10.090 align:start position:0%
but this takes advantage of the way that
Java<00:07:06.610><c> rounds</c><00:07:07.610><c> down</c><00:07:07.900><c> integer</c><00:07:08.900><c> division</c><00:07:09.139><c> so</c><00:07:09.950><c> for</c>

00:07:10.090 --> 00:07:10.100 align:start position:0%
Java rounds down integer division so for
 

00:07:10.100 --> 00:07:13.600 align:start position:0%
Java rounds down integer division so for
example<00:07:10.460><c> if</c><00:07:10.669><c> I</c><00:07:11.090><c> do</c><00:07:11.150><c> 5</c><00:07:12.139><c> minus</c><00:07:12.919><c> 1</c><00:07:13.070><c> that's</c><00:07:13.340><c> 4</c>

00:07:13.600 --> 00:07:13.610 align:start position:0%
example if I do 5 minus 1 that's 4
 

00:07:13.610 --> 00:07:16.570 align:start position:0%
example if I do 5 minus 1 that's 4
divided<00:07:14.210><c> by</c><00:07:14.240><c> 2</c><00:07:14.419><c> I</c><00:07:14.600><c> get</c><00:07:14.750><c> 2</c><00:07:14.870><c> and</c><00:07:15.380><c> if</c><00:07:16.100><c> I</c><00:07:16.160><c> have</c><00:07:16.280><c> 6</c>

00:07:16.570 --> 00:07:16.580 align:start position:0%
divided by 2 I get 2 and if I have 6
 

00:07:16.580 --> 00:07:20.080 align:start position:0%
divided by 2 I get 2 and if I have 6
minus<00:07:17.510><c> 1</c><00:07:17.630><c> I</c><00:07:17.690><c> get</c><00:07:17.900><c> 5</c><00:07:18.139><c> and</c><00:07:18.560><c> 5</c><00:07:19.070><c> divided</c><00:07:19.490><c> by</c><00:07:19.700><c> 2</c><00:07:19.760><c> is</c>

00:07:20.080 --> 00:07:20.090 align:start position:0%
minus 1 I get 5 and 5 divided by 2 is
 

00:07:20.090 --> 00:07:23.520 align:start position:0%
minus 1 I get 5 and 5 divided by 2 is
2.5<00:07:20.840><c> and</c><00:07:21.169><c> that</c><00:07:21.650><c> gets</c><00:07:21.830><c> rounded</c><00:07:22.160><c> down</c><00:07:22.340><c> to</c><00:07:22.580><c> 2</c>

00:07:23.520 --> 00:07:23.530 align:start position:0%
2.5 and that gets rounded down to 2
 

00:07:23.530 --> 00:07:26.770 align:start position:0%
2.5 and that gets rounded down to 2
likewise<00:07:24.530><c> anywhere</c><00:07:24.979><c> else</c><00:07:25.190><c> the</c><00:07:25.820><c> key</c><00:07:26.000><c> insight</c>

00:07:26.770 --> 00:07:26.780 align:start position:0%
likewise anywhere else the key insight
 

00:07:26.780 --> 00:07:28.629 align:start position:0%
likewise anywhere else the key insight
is<00:07:26.930><c> to</c><00:07:27.320><c> realize</c><00:07:27.590><c> that</c><00:07:27.740><c> for</c><00:07:27.860><c> every</c><00:07:28.190><c> node</c><00:07:28.220><c> there</c>

00:07:28.629 --> 00:07:28.639 align:start position:0%
is to realize that for every node there
 

00:07:28.639 --> 00:07:31.240 align:start position:0%
is to realize that for every node there
is<00:07:29.000><c> exactly</c><00:07:29.510><c> two</c><00:07:29.900><c> children</c><00:07:30.470><c> so</c><00:07:30.710><c> for</c><00:07:30.889><c> 4</c><00:07:31.070><c> it's</c>

00:07:31.240 --> 00:07:31.250 align:start position:0%
is exactly two children so for 4 it's
 

00:07:31.250 --> 00:07:32.920 align:start position:0%
is exactly two children so for 4 it's
nine<00:07:31.430><c> and</c><00:07:31.610><c> ten</c><00:07:31.760><c> for</c><00:07:32.000><c> two</c><00:07:32.150><c> it's</c><00:07:32.389><c> five</c><00:07:32.540><c> and</c><00:07:32.720><c> six</c>

00:07:32.920 --> 00:07:32.930 align:start position:0%
nine and ten for two it's five and six
 

00:07:32.930 --> 00:07:35.800 align:start position:0%
nine and ten for two it's five and six
for<00:07:33.139><c> six</c><00:07:33.530><c> it's</c><00:07:33.830><c> 13</c><00:07:34.190><c> and</c><00:07:34.370><c> 14</c><00:07:34.580><c> and</c><00:07:34.880><c> so</c><00:07:35.389><c> parent</c>

00:07:35.800 --> 00:07:35.810 align:start position:0%
for six it's 13 and 14 and so parent
 

00:07:35.810 --> 00:07:38.230 align:start position:0%
for six it's 13 and 14 and so parent
should<00:07:36.290><c> always</c><00:07:36.500><c> work</c><00:07:36.770><c> properly</c><00:07:37.280><c> so</c><00:07:37.669><c> we</c><00:07:38.030><c> check</c>

00:07:38.230 --> 00:07:38.240 align:start position:0%
should always work properly so we check
 

00:07:38.240 --> 00:07:43.300 align:start position:0%
should always work properly so we check
for<00:07:38.770><c> 1</c><00:07:39.770><c> so</c><00:07:40.310><c> 1</c><00:07:40.550><c> minus</c><00:07:40.940><c> 1</c><00:07:41.000><c> is</c><00:07:41.150><c> 0</c><00:07:41.389><c> divided</c><00:07:42.200><c> by</c><00:07:42.320><c> 2</c><00:07:42.440><c> and</c>

00:07:43.300 --> 00:07:43.310 align:start position:0%
for 1 so 1 minus 1 is 0 divided by 2 and
 

00:07:43.310 --> 00:07:45.010 align:start position:0%
for 1 so 1 minus 1 is 0 divided by 2 and
that<00:07:43.340><c> gives</c><00:07:43.430><c> me</c><00:07:43.550><c> 0</c><00:07:43.639><c> there's</c><00:07:44.600><c> actually</c><00:07:44.870><c> one</c>

00:07:45.010 --> 00:07:45.020 align:start position:0%
that gives me 0 there's actually one
 

00:07:45.020 --> 00:07:47.020 align:start position:0%
that gives me 0 there's actually one
tiny<00:07:45.320><c> bug</c><00:07:45.650><c> here</c><00:07:45.919><c> which</c><00:07:46.490><c> said</c><00:07:46.640><c> if</c><00:07:46.729><c> we</c><00:07:46.820><c> take</c>

00:07:47.020 --> 00:07:47.030 align:start position:0%
tiny bug here which said if we take
 

00:07:47.030 --> 00:07:48.940 align:start position:0%
tiny bug here which said if we take
actually<00:07:47.840><c> let's</c><00:07:47.960><c> check</c><00:07:48.380><c> and</c><00:07:48.500><c> see</c><00:07:48.590><c> if</c><00:07:48.710><c> it's</c><00:07:48.860><c> a</c>

00:07:48.940 --> 00:07:48.950 align:start position:0%
actually let's check and see if it's a
 

00:07:48.950 --> 00:07:51.850 align:start position:0%
actually let's check and see if it's a
bug<00:07:49.130><c> if</c><00:07:50.030><c> we</c><00:07:50.090><c> take</c><00:07:50.270><c> 0</c><00:07:50.539><c> we</c><00:07:51.020><c> subtract</c><00:07:51.380><c> 1</c><00:07:51.590><c> we</c><00:07:51.710><c> get</c>

00:07:51.850 --> 00:07:51.860 align:start position:0%
bug if we take 0 we subtract 1 we get
 

00:07:51.860 --> 00:07:56.290 align:start position:0%
bug if we take 0 we subtract 1 we get
minus<00:07:52.450><c> 1/2</c><00:07:53.740><c> that's</c><00:07:54.740><c> minus</c><00:07:55.190><c> 0.5</c><00:07:55.669><c> I</c><00:07:55.970><c> actually</c>

00:07:56.290 --> 00:07:56.300 align:start position:0%
minus 1/2 that's minus 0.5 I actually
 

00:07:56.300 --> 00:07:58.090 align:start position:0%
minus 1/2 that's minus 0.5 I actually
don't<00:07:56.630><c> know</c><00:07:56.810><c> if</c><00:07:56.900><c> it</c><00:07:56.960><c> works</c><00:07:57.140><c> for</c><00:07:57.229><c> 0</c><00:07:57.590><c> but</c><00:07:57.919><c> I'll</c>

00:07:58.090 --> 00:07:58.100 align:start position:0%
don't know if it works for 0 but I'll
 

00:07:58.100 --> 00:07:59.230 align:start position:0%
don't know if it works for 0 but I'll
leave<00:07:58.220><c> it</c><00:07:58.340><c> as</c><00:07:58.430><c> an</c><00:07:58.550><c> exercise</c><00:07:58.610><c> to</c><00:07:59.120><c> the</c><00:07:59.150><c> reader</c>

00:07:59.230 --> 00:07:59.240 align:start position:0%
leave it as an exercise to the reader
 

00:07:59.240 --> 00:08:00.670 align:start position:0%
leave it as an exercise to the reader
just<00:07:59.720><c> kind</c><00:07:59.900><c> of</c><00:07:59.930><c> a</c><00:08:00.020><c> funny</c><00:08:00.200><c> thing</c><00:08:00.410><c> I</c><00:08:00.530><c> thought</c>

00:08:00.670 --> 00:08:00.680 align:start position:0%
just kind of a funny thing I thought
 

00:08:00.680 --> 00:08:03.520 align:start position:0%
just kind of a funny thing I thought
about<00:08:01.150><c> ok</c><00:08:02.150><c> because</c><00:08:02.300><c> ideally</c><00:08:02.660><c> the</c><00:08:02.930><c> parent</c><00:08:03.200><c> of</c><00:08:03.289><c> 0</c>

00:08:03.520 --> 00:08:03.530 align:start position:0%
about ok because ideally the parent of 0
 

00:08:03.530 --> 00:08:07.240 align:start position:0%
about ok because ideally the parent of 0
should<00:08:03.740><c> also</c><00:08:03.890><c> be</c><00:08:04.160><c> 0</c><00:08:04.400><c> and</c><00:08:05.270><c> so</c><00:08:05.510><c> mmm</c><00:08:06.470><c> my</c><00:08:06.890><c> knowledge</c>

00:08:07.240 --> 00:08:07.250 align:start position:0%
should also be 0 and so mmm my knowledge
 

00:08:07.250 --> 00:08:09.730 align:start position:0%
should also be 0 and so mmm my knowledge
of<00:08:07.370><c> Java</c><00:08:07.520><c> is</c><00:08:07.760><c> lacking</c><00:08:07.970><c> to</c><00:08:08.270><c> know</c><00:08:08.500><c> we</c><00:08:09.500><c> can</c><00:08:09.620><c> look</c>

00:08:09.730 --> 00:08:09.740 align:start position:0%
of Java is lacking to know we can look
 

00:08:09.740 --> 00:08:13.230 align:start position:0%
of Java is lacking to know we can look
it<00:08:09.860><c> up</c><00:08:09.919><c> later</c><00:08:10.010><c> I</c><00:08:10.310><c> won't</c><00:08:10.520><c> do</c><00:08:10.639><c> it</c><00:08:10.729><c> now</c><00:08:11.380><c> so</c><00:08:12.380><c> two</c>

00:08:13.230 --> 00:08:13.240 align:start position:0%
it up later I won't do it now so two
 

00:08:13.240 --> 00:08:16.270 align:start position:0%
it up later I won't do it now so two
representations<00:08:14.240><c> right</c><00:08:14.870><c> we</c><00:08:15.289><c> have</c><00:08:15.380><c> 1a</c><00:08:15.650><c> 1b</c><00:08:16.070><c> and</c>

00:08:16.270 --> 00:08:16.280 align:start position:0%
representations right we have 1a 1b and
 

00:08:16.280 --> 00:08:19.270 align:start position:0%
representations right we have 1a 1b and
1c<00:08:16.370><c> those</c><00:08:16.910><c> are</c><00:08:17.000><c> all</c><00:08:17.150><c> pretty</c><00:08:17.419><c> standard</c><00:08:18.169><c> 2</c><00:08:19.039><c> was</c><00:08:19.250><c> a</c>

00:08:19.270 --> 00:08:19.280 align:start position:0%
1c those are all pretty standard 2 was a
 

00:08:19.280 --> 00:08:21.040 align:start position:0%
1c those are all pretty standard 2 was a
little<00:08:19.550><c> stranger</c><00:08:20.000><c> but</c><00:08:20.180><c> we</c><00:08:20.270><c> saw</c><00:08:20.419><c> with</c><00:08:20.630><c> disjoint</c>

00:08:21.040 --> 00:08:21.050 align:start position:0%
little stranger but we saw with disjoint
 

00:08:21.050 --> 00:08:23.620 align:start position:0%
little stranger but we saw with disjoint
sets<00:08:21.260><c> and</c><00:08:21.500><c> 3</c><00:08:22.070><c> takes</c><00:08:22.580><c> advantage</c><00:08:23.000><c> that</c><00:08:23.180><c> of</c><00:08:23.300><c> the</c>

00:08:23.620 --> 00:08:23.630 align:start position:0%
sets and 3 takes advantage that of the
 

00:08:23.630 --> 00:08:25.090 align:start position:0%
sets and 3 takes advantage that of the
fact<00:08:23.840><c> that</c><00:08:23.930><c> our</c><00:08:24.050><c> tree</c><00:08:24.350><c> is</c><00:08:24.380><c> actually</c><00:08:24.800><c> complete</c>

00:08:25.090 --> 00:08:25.100 align:start position:0%
fact that our tree is actually complete
 

00:08:25.100 --> 00:08:27.010 align:start position:0%
fact that our tree is actually complete
and<00:08:25.729><c> this</c><00:08:25.880><c> is</c><00:08:26.000><c> typically</c><00:08:26.330><c> what's</c><00:08:26.600><c> done</c><00:08:26.690><c> in</c>

00:08:27.010 --> 00:08:27.020 align:start position:0%
and this is typically what's done in
 

00:08:27.020 --> 00:08:27.850 align:start position:0%
and this is typically what's done in
real<00:08:27.500><c> life</c>

00:08:27.850 --> 00:08:27.860 align:start position:0%
real life
 

00:08:27.860 --> 00:08:30.159 align:start position:0%
real life
keep<00:08:28.039><c> implementations</c><00:08:28.850><c> because</c><00:08:29.510><c> it's</c><00:08:29.990><c> going</c>

00:08:30.159 --> 00:08:30.169 align:start position:0%
keep implementations because it's going
 

00:08:30.169 --> 00:08:32.050 align:start position:0%
keep implementations because it's going
to<00:08:30.320><c> be</c><00:08:30.410><c> very</c><00:08:30.650><c> fast</c><00:08:30.919><c> we</c><00:08:31.520><c> don't</c><00:08:31.700><c> have</c><00:08:31.820><c> to</c><00:08:31.910><c> follow</c>

00:08:32.050 --> 00:08:32.060 align:start position:0%
to be very fast we don't have to follow
 

00:08:32.060 --> 00:08:35.170 align:start position:0%
to be very fast we don't have to follow
any<00:08:32.209><c> links</c><00:08:32.390><c> and</c><00:08:33.250><c> to</c><00:08:34.250><c> the</c><00:08:34.580><c> code</c><00:08:34.729><c> actually</c><00:08:34.909><c> ends</c>

00:08:35.170 --> 00:08:35.180 align:start position:0%
any links and to the code actually ends
 

00:08:35.180 --> 00:08:36.850 align:start position:0%
any links and to the code actually ends
up<00:08:35.270><c> being</c><00:08:35.419><c> quite</c><00:08:35.539><c> simple</c><00:08:35.990><c> a</c><00:08:36.169><c> little</c><00:08:36.560><c> strange</c>

00:08:36.850 --> 00:08:36.860 align:start position:0%
up being quite simple a little strange
 

00:08:36.860 --> 00:08:41.229 align:start position:0%
up being quite simple a little strange
maybe<00:08:37.360><c> but</c><00:08:38.360><c> certainly</c><00:08:38.810><c> quite</c><00:08:38.930><c> simple</c>

