WEBVTT
Kind: captions
Language: en

00:00:00.110 --> 00:00:02.480 align:start position:0%
 
this<00:00:01.110><c> brings</c><00:00:01.410><c> us</c><00:00:01.620><c> to</c><00:00:01.770><c> our</c><00:00:01.800><c> final</c><00:00:02.070><c> clever</c>

00:00:02.480 --> 00:00:02.490 align:start position:0%
this brings us to our final clever
 

00:00:02.490 --> 00:00:04.430 align:start position:0%
this brings us to our final clever
improvement<00:00:03.060><c> to</c><00:00:03.149><c> the</c><00:00:03.240><c> a-list</c><00:00:03.360><c> class</c><00:00:03.810><c> how</c><00:00:04.380><c> do</c>

00:00:04.430 --> 00:00:04.440 align:start position:0%
improvement to the a-list class how do
 

00:00:04.440 --> 00:00:07.760 align:start position:0%
improvement to the a-list class how do
we<00:00:04.589><c> turn</c><00:00:04.770><c> this</c><00:00:04.830><c> or</c><00:00:05.569><c> horrible</c><00:00:06.569><c> I</c><00:00:06.750><c> said</c><00:00:07.589><c> it</c><00:00:07.649><c> that</c>

00:00:07.760 --> 00:00:07.770 align:start position:0%
we turn this or horrible I said it that
 

00:00:07.770 --> 00:00:10.129 align:start position:0%
we turn this or horrible I said it that
way<00:00:07.830><c> and</c><00:00:08.490><c> a</c><00:00:08.550><c> horrible</c><00:00:08.940><c> parabola</c><00:00:09.240><c> into</c><00:00:09.990><c> this</c>

00:00:10.129 --> 00:00:10.139 align:start position:0%
way and a horrible parabola into this
 

00:00:10.139 --> 00:00:12.499 align:start position:0%
way and a horrible parabola into this
beautiful<00:00:10.590><c> line</c><00:00:10.969><c> so</c><00:00:11.969><c> if</c><00:00:12.030><c> we</c><00:00:12.120><c> look</c><00:00:12.269><c> at</c><00:00:12.389><c> this</c>

00:00:12.499 --> 00:00:12.509 align:start position:0%
beautiful line so if we look at this
 

00:00:12.509 --> 00:00:13.780 align:start position:0%
beautiful line so if we look at this
resize<00:00:12.929><c> method</c><00:00:13.380><c> here</c>

00:00:13.780 --> 00:00:13.790 align:start position:0%
resize method here
 

00:00:13.790 --> 00:00:15.890 align:start position:0%
resize method here
that's<00:00:14.790><c> our</c><00:00:14.940><c> site</c><00:00:15.240><c> this</c><00:00:15.420><c> code</c><00:00:15.690><c> right</c><00:00:15.870><c> here</c>

00:00:15.890 --> 00:00:15.900 align:start position:0%
that's our site this code right here
 

00:00:15.900 --> 00:00:17.000 align:start position:0%
that's our site this code right here
that's<00:00:16.440><c> our</c><00:00:16.619><c> problem</c>

00:00:17.000 --> 00:00:17.010 align:start position:0%
that's our problem
 

00:00:17.010 --> 00:00:18.830 align:start position:0%
that's our problem
something<00:00:17.369><c> here</c><00:00:17.550><c> is</c><00:00:17.670><c> broken</c><00:00:17.940><c> and</c><00:00:18.390><c> what</c><00:00:18.600><c> I</c><00:00:18.630><c> want</c>

00:00:18.830 --> 00:00:18.840 align:start position:0%
something here is broken and what I want
 

00:00:18.840 --> 00:00:20.150 align:start position:0%
something here is broken and what I want
you<00:00:18.900><c> to</c><00:00:18.960><c> do</c><00:00:19.170><c> is</c><00:00:19.289><c> try</c><00:00:19.500><c> and</c><00:00:19.529><c> consider</c><00:00:19.890><c> how</c><00:00:20.100><c> you</c>

00:00:20.150 --> 00:00:20.160 align:start position:0%
you to do is try and consider how you
 

00:00:20.160 --> 00:00:23.480 align:start position:0%
you to do is try and consider how you
might<00:00:20.460><c> fix</c><00:00:20.730><c> this</c><00:00:20.990><c> now</c><00:00:21.990><c> the</c><00:00:22.050><c> solution</c><00:00:22.830><c> to</c><00:00:23.340><c> this</c>

00:00:23.480 --> 00:00:23.490 align:start position:0%
might fix this now the solution to this
 

00:00:23.490 --> 00:00:26.330 align:start position:0%
might fix this now the solution to this
problem<00:00:23.670><c> is</c><00:00:23.970><c> actually</c><00:00:24.180><c> a</c><00:00:24.480><c> bit</c><00:00:24.840><c> tricky</c><00:00:25.340><c> and</c>

00:00:26.330 --> 00:00:26.340 align:start position:0%
problem is actually a bit tricky and
 

00:00:26.340 --> 00:00:27.800 align:start position:0%
problem is actually a bit tricky and
even<00:00:26.550><c> after</c><00:00:26.730><c> I</c><00:00:26.760><c> show</c><00:00:27.000><c> you</c><00:00:27.060><c> you</c><00:00:27.510><c> might</c><00:00:27.660><c> be</c><00:00:27.689><c> a</c>

00:00:27.800 --> 00:00:27.810 align:start position:0%
even after I show you you might be a
 

00:00:27.810 --> 00:00:29.689 align:start position:0%
even after I show you you might be a
little<00:00:27.960><c> mystified</c><00:00:28.320><c> and</c><00:00:28.769><c> we'll</c><00:00:29.369><c> cover</c><00:00:29.490><c> the</c>

00:00:29.689 --> 00:00:29.699 align:start position:0%
little mystified and we'll cover the
 

00:00:29.699 --> 00:00:32.990 align:start position:0%
little mystified and we'll cover the
analysis<00:00:30.150><c> later</c><00:00:30.920><c> but</c><00:00:31.920><c> what</c><00:00:32.040><c> you</c><00:00:32.309><c> do</c><00:00:32.640><c> is</c><00:00:32.669><c> maybe</c>

00:00:32.990 --> 00:00:33.000 align:start position:0%
analysis later but what you do is maybe
 

00:00:33.000 --> 00:00:34.880 align:start position:0%
analysis later but what you do is maybe
give<00:00:33.210><c> it</c><00:00:33.329><c> a</c><00:00:33.390><c> shot</c><00:00:33.570><c> maybe</c><00:00:33.780><c> even</c><00:00:34.050><c> try</c><00:00:34.260><c> out</c><00:00:34.290><c> the</c><00:00:34.620><c> a</c>

00:00:34.880 --> 00:00:34.890 align:start position:0%
give it a shot maybe even try out the a
 

00:00:34.890 --> 00:00:36.560 align:start position:0%
give it a shot maybe even try out the a
list<00:00:35.130><c> speed</c><00:00:35.399><c> test</c><00:00:35.670><c> to</c><00:00:35.790><c> test</c><00:00:36.000><c> your</c><00:00:36.180><c> solution</c>

00:00:36.560 --> 00:00:36.570 align:start position:0%
list speed test to test your solution
 

00:00:36.570 --> 00:00:41.450 align:start position:0%
list speed test to test your solution
and<00:00:37.170><c> I'll</c><00:00:37.260><c> spoil</c><00:00:37.530><c> it</c><00:00:37.710><c> in</c><00:00:37.860><c> a</c><00:00:37.950><c> moment</c><00:00:39.950><c> so</c><00:00:40.950><c> let's</c>

00:00:41.450 --> 00:00:41.460 align:start position:0%
and I'll spoil it in a moment so let's
 

00:00:41.460 --> 00:00:43.490 align:start position:0%
and I'll spoil it in a moment so let's
actually<00:00:41.730><c> go</c><00:00:42.000><c> back</c><00:00:42.510><c> to</c><00:00:42.690><c> our</c><00:00:42.750><c> speed</c><00:00:43.050><c> testing</c><00:00:43.379><c> an</c>

00:00:43.490 --> 00:00:43.500 align:start position:0%
actually go back to our speed testing an
 

00:00:43.500 --> 00:00:45.350 align:start position:0%
actually go back to our speed testing an
environment<00:00:43.920><c> now</c><00:00:44.640><c> let's</c><00:00:44.760><c> look</c><00:00:44.820><c> at</c><00:00:44.910><c> our</c><00:00:44.969><c> a</c><00:00:45.120><c> list</c>

00:00:45.350 --> 00:00:45.360 align:start position:0%
environment now let's look at our a list
 

00:00:45.360 --> 00:00:48.049 align:start position:0%
environment now let's look at our a list
class<00:00:45.570><c> this</c><00:00:46.079><c> is</c><00:00:46.260><c> our</c><00:00:46.379><c> trouble</c><00:00:46.620><c> so</c><00:00:47.520><c> perhaps</c><00:00:47.730><c> you</c>

00:00:48.049 --> 00:00:48.059 align:start position:0%
class this is our trouble so perhaps you
 

00:00:48.059 --> 00:00:49.819 align:start position:0%
class this is our trouble so perhaps you
thought<00:00:48.270><c> what</c><00:00:48.660><c> if</c><00:00:48.780><c> I</c><00:00:48.870><c> increase</c><00:00:49.110><c> the</c><00:00:49.379><c> amount</c><00:00:49.680><c> by</c>

00:00:49.819 --> 00:00:49.829 align:start position:0%
thought what if I increase the amount by
 

00:00:49.829 --> 00:00:52.010 align:start position:0%
thought what if I increase the amount by
which<00:00:49.860><c> we</c><00:00:50.280><c> resize</c><00:00:50.670><c> maybe</c><00:00:51.090><c> by</c><00:00:51.329><c> I</c><00:00:51.600><c> don't</c><00:00:51.960><c> know</c>

00:00:52.010 --> 00:00:52.020 align:start position:0%
which we resize maybe by I don't know
 

00:00:52.020 --> 00:00:54.619 align:start position:0%
which we resize maybe by I don't know
from<00:00:52.320><c> one</c><00:00:52.469><c> to</c><00:00:52.620><c> ten</c><00:00:52.829><c> so</c><00:00:53.789><c> if</c><00:00:53.850><c> I</c><00:00:53.940><c> recompile</c><00:00:54.449><c> my</c>

00:00:54.619 --> 00:00:54.629 align:start position:0%
from one to ten so if I recompile my
 

00:00:54.629 --> 00:00:57.760 align:start position:0%
from one to ten so if I recompile my
code<00:00:54.840><c> and</c><00:00:55.079><c> now</c><00:00:55.620><c> I</c><00:00:55.649><c> do</c><00:00:55.800><c> speed</c><00:00:56.219><c> test</c><00:00:56.520><c> a</c><00:00:56.789><c> list</c>

00:00:57.760 --> 00:00:57.770 align:start position:0%
code and now I do speed test a list
 

00:00:57.770 --> 00:01:00.740 align:start position:0%
code and now I do speed test a list
I'll<00:00:58.770><c> see</c><00:00:58.949><c> it's</c><00:00:59.219><c> fast</c><00:00:59.460><c> it's</c><00:01:00.030><c> not</c><00:01:00.210><c> as</c><00:01:00.300><c> fast</c><00:01:00.480><c> as</c><00:01:00.690><c> a</c>

00:01:00.740 --> 00:01:00.750 align:start position:0%
I'll see it's fast it's not as fast as a
 

00:01:00.750 --> 00:01:03.349 align:start position:0%
I'll see it's fast it's not as fast as a
s<00:01:00.899><c> list</c><00:01:01.170><c> it</c><00:01:01.559><c> was</c><00:01:01.649><c> pretty</c><00:01:01.859><c> fast</c><00:01:02.010><c> and</c><00:01:02.430><c> while</c><00:01:03.239><c> that</c>

00:01:03.349 --> 00:01:03.359 align:start position:0%
s list it was pretty fast and while that
 

00:01:03.359 --> 00:01:05.210 align:start position:0%
s list it was pretty fast and while that
seems<00:01:03.570><c> to</c><00:01:03.780><c> be</c><00:01:03.899><c> a</c><00:01:03.930><c> big</c><00:01:04.140><c> improvement</c><00:01:04.379><c> there's</c>

00:01:05.210 --> 00:01:05.220 align:start position:0%
seems to be a big improvement there's
 

00:01:05.220 --> 00:01:06.890 align:start position:0%
seems to be a big improvement there's
actually<00:01:05.549><c> something</c><00:01:05.820><c> a</c><00:01:06.060><c> little</c><00:01:06.299><c> subtle</c><00:01:06.630><c> here</c>

00:01:06.890 --> 00:01:06.900 align:start position:0%
actually something a little subtle here
 

00:01:06.900 --> 00:01:08.630 align:start position:0%
actually something a little subtle here
that's<00:01:07.369><c> tricky</c>

00:01:08.630 --> 00:01:08.640 align:start position:0%
that's tricky
 

00:01:08.640 --> 00:01:10.550 align:start position:0%
that's tricky
I<00:01:08.670><c> mean</c><00:01:09.390><c> that's</c><00:01:09.720><c> subtle</c><00:01:09.869><c> things</c><00:01:10.170><c> often</c><00:01:10.350><c> are</c>

00:01:10.550 --> 00:01:10.560 align:start position:0%
I mean that's subtle things often are
 

00:01:10.560 --> 00:01:12.859 align:start position:0%
I mean that's subtle things often are
and<00:01:11.189><c> that's</c><00:01:11.369><c> if</c><00:01:11.549><c> we</c><00:01:11.670><c> increase</c><00:01:12.060><c> our</c><00:01:12.240><c> speed</c><00:01:12.570><c> test</c>

00:01:12.859 --> 00:01:12.869 align:start position:0%
and that's if we increase our speed test
 

00:01:12.869 --> 00:01:16.850 align:start position:0%
and that's if we increase our speed test
a<00:01:13.020><c> list</c><00:01:13.409><c> runtime</c><00:01:14.369><c> up</c><00:01:14.549><c> to</c><00:01:14.700><c> a</c><00:01:14.729><c> million</c><00:01:15.060><c> and</c><00:01:15.860><c> now</c>

00:01:16.850 --> 00:01:16.860 align:start position:0%
a list runtime up to a million and now
 

00:01:16.860 --> 00:01:20.960 align:start position:0%
a list runtime up to a million and now
we<00:01:16.920><c> try</c><00:01:17.070><c> running</c><00:01:17.400><c> it</c><00:01:17.460><c> again</c><00:01:19.430><c> it's</c><00:01:20.430><c> quite</c><00:01:20.670><c> slow</c>

00:01:20.960 --> 00:01:20.970 align:start position:0%
we try running it again it's quite slow
 

00:01:20.970 --> 00:01:22.730 align:start position:0%
we try running it again it's quite slow
it<00:01:21.689><c> should</c><00:01:21.900><c> not</c><00:01:22.020><c> be</c><00:01:22.229><c> like</c><00:01:22.470><c> this</c>

00:01:22.730 --> 00:01:22.740 align:start position:0%
it should not be like this
 

00:01:22.740 --> 00:01:25.310 align:start position:0%
it should not be like this
in<00:01:22.920><c> fact</c><00:01:23.070><c> it's</c><00:01:23.310><c> taking</c><00:01:23.640><c> quite</c><00:01:23.909><c> a</c><00:01:24.330><c> long</c><00:01:24.570><c> time</c><00:01:24.869><c> so</c>

00:01:25.310 --> 00:01:25.320 align:start position:0%
in fact it's taking quite a long time so
 

00:01:25.320 --> 00:01:27.380 align:start position:0%
in fact it's taking quite a long time so
even<00:01:25.650><c> though</c><00:01:25.740><c> we</c><00:01:25.860><c> increased</c><00:01:26.340><c> this</c><00:01:26.759><c> size</c><00:01:27.060><c> up</c><00:01:27.270><c> to</c>

00:01:27.380 --> 00:01:27.390 align:start position:0%
even though we increased this size up to
 

00:01:27.390 --> 00:01:29.569 align:start position:0%
even though we increased this size up to
ten<00:01:27.659><c> we</c><00:01:28.560><c> were</c><00:01:28.680><c> only</c><00:01:28.829><c> kind</c><00:01:29.040><c> of</c><00:01:29.070><c> hiding</c><00:01:29.310><c> the</c>

00:01:29.569 --> 00:01:29.579 align:start position:0%
ten we were only kind of hiding the
 

00:01:29.579 --> 00:01:31.609 align:start position:0%
ten we were only kind of hiding the
problem<00:01:29.909><c> there's</c><00:01:30.210><c> still</c><00:01:30.479><c> a</c><00:01:30.509><c> big</c><00:01:30.900><c> problem</c><00:01:31.380><c> here</c>

00:01:31.609 --> 00:01:31.619 align:start position:0%
problem there's still a big problem here
 

00:01:31.619 --> 00:01:34.670 align:start position:0%
problem there's still a big problem here
so<00:01:32.610><c> there's</c><00:01:32.759><c> actually</c><00:01:32.880><c> a</c><00:01:33.299><c> bigger</c><00:01:34.049><c> better</c>

00:01:34.670 --> 00:01:34.680 align:start position:0%
so there's actually a bigger better
 

00:01:34.680 --> 00:01:37.700 align:start position:0%
so there's actually a bigger better
solution<00:01:35.400><c> which</c><00:01:36.150><c> is</c><00:01:36.329><c> rather</c><00:01:36.570><c> than</c><00:01:36.900><c> adding</c><00:01:37.259><c> ten</c>

00:01:37.700 --> 00:01:37.710 align:start position:0%
solution which is rather than adding ten
 

00:01:37.710 --> 00:01:40.069 align:start position:0%
solution which is rather than adding ten
I'm<00:01:38.250><c> gonna</c><00:01:38.460><c> multiply</c><00:01:38.729><c> by</c><00:01:39.360><c> some</c><00:01:39.630><c> number</c><00:01:39.869><c> let's</c>

00:01:40.069 --> 00:01:40.079 align:start position:0%
I'm gonna multiply by some number let's
 

00:01:40.079 --> 00:01:43.999 align:start position:0%
I'm gonna multiply by some number let's
say<00:01:40.140><c> two</c><00:01:41.060><c> so</c><00:01:42.060><c> let's</c><00:01:42.180><c> try</c><00:01:42.360><c> now</c><00:01:42.750><c> by</c><00:01:43.259><c> multiplying</c>

00:01:43.999 --> 00:01:44.009 align:start position:0%
say two so let's try now by multiplying
 

00:01:44.009 --> 00:01:47.210 align:start position:0%
say two so let's try now by multiplying
the<00:01:44.340><c> size</c><00:01:44.549><c> of</c><00:01:44.880><c> our</c><00:01:45.600><c> array</c><00:01:45.960><c> if</c><00:01:46.619><c> we</c><00:01:46.770><c> try</c><00:01:46.920><c> running</c>

00:01:47.210 --> 00:01:47.220 align:start position:0%
the size of our array if we try running
 

00:01:47.220 --> 00:01:49.730 align:start position:0%
the size of our array if we try running
it<00:01:47.390><c> it's</c><00:01:48.390><c> quite</c><00:01:48.600><c> fast</c><00:01:48.810><c> look</c><00:01:49.020><c> how</c><00:01:49.110><c> fast</c><00:01:49.320><c> it</c><00:01:49.560><c> is</c>

00:01:49.730 --> 00:01:49.740 align:start position:0%
it it's quite fast look how fast it is
 

00:01:49.740 --> 00:01:51.530 align:start position:0%
it it's quite fast look how fast it is
in<00:01:50.100><c> fact</c><00:01:50.250><c> I</c><00:01:50.399><c> can</c><00:01:50.579><c> crank</c><00:01:50.759><c> this</c><00:01:50.909><c> thing</c><00:01:50.970><c> up</c><00:01:51.210><c> to</c><00:01:51.360><c> ten</c>

00:01:51.530 --> 00:01:51.540 align:start position:0%
in fact I can crank this thing up to ten
 

00:01:51.540 --> 00:01:53.960 align:start position:0%
in fact I can crank this thing up to ten
million<00:01:51.869><c> try</c><00:01:52.590><c> running</c><00:01:52.860><c> it</c><00:01:52.920><c> again</c><00:01:53.159><c> should</c>

00:01:53.960 --> 00:01:53.970 align:start position:0%
million try running it again should
 

00:01:53.970 --> 00:01:56.359 align:start position:0%
million try running it again should
still<00:01:54.210><c> be</c><00:01:54.299><c> pretty</c><00:01:54.450><c> fast</c><00:01:54.750><c> and</c><00:01:55.740><c> that's</c><00:01:55.979><c> actually</c>

00:01:56.359 --> 00:01:56.369 align:start position:0%
still be pretty fast and that's actually
 

00:01:56.369 --> 00:01:58.520 align:start position:0%
still be pretty fast and that's actually
the<00:01:56.850><c> state-of-the-art</c><00:01:57.570><c> approach</c><00:01:57.960><c> and</c><00:01:58.170><c> real</c>

00:01:58.520 --> 00:01:58.530 align:start position:0%
the state-of-the-art approach and real
 

00:01:58.530 --> 00:02:00.260 align:start position:0%
the state-of-the-art approach and real
list<00:01:58.890><c> like</c><00:01:59.280><c> the</c><00:01:59.430><c> list</c><00:01:59.610><c> inside</c><00:02:00.000><c> of</c><00:02:00.149><c> Python</c>

00:02:00.260 --> 00:02:00.270 align:start position:0%
list like the list inside of Python
 

00:02:00.270 --> 00:02:02.620 align:start position:0%
list like the list inside of Python
basically<00:02:01.140><c> uses</c><00:02:01.439><c> this</c><00:02:01.619><c> multiplicative</c><00:02:02.070><c> trick</c>

00:02:02.620 --> 00:02:02.630 align:start position:0%
basically uses this multiplicative trick
 

00:02:02.630 --> 00:02:06.709 align:start position:0%
basically uses this multiplicative trick
so<00:02:03.630><c> what</c><00:02:04.590><c> we</c><00:02:04.680><c> have</c><00:02:04.829><c> right</c><00:02:05.040><c> here</c><00:02:05.070><c> this</c><00:02:05.969><c> add</c><00:02:06.240><c> last</c>

00:02:06.709 --> 00:02:06.719 align:start position:0%
so what we have right here this add last
 

00:02:06.719 --> 00:02:08.960 align:start position:0%
so what we have right here this add last
approach<00:02:07.110><c> where</c><00:02:07.290><c> we</c><00:02:07.380><c> add</c><00:02:07.590><c> some</c><00:02:08.069><c> random</c><00:02:08.550><c> factor</c>

00:02:08.960 --> 00:02:08.970 align:start position:0%
approach where we add some random factor
 

00:02:08.970 --> 00:02:11.780 align:start position:0%
approach where we add some random factor
or<00:02:09.179><c> some</c><00:02:09.390><c> scaling</c><00:02:10.259><c> factor</c><00:02:10.289><c> our</c><00:02:10.800><c> factor</c><00:02:11.220><c> this</c>

00:02:11.780 --> 00:02:11.790 align:start position:0%
or some scaling factor our factor this
 

00:02:11.790 --> 00:02:13.670 align:start position:0%
or some scaling factor our factor this
is<00:02:12.030><c> unusable</c><00:02:12.660><c> bad</c><00:02:13.140><c> the</c>

00:02:13.670 --> 00:02:13.680 align:start position:0%
is unusable bad the
 

00:02:13.680 --> 00:02:16.130 align:start position:0%
is unusable bad the
sizing<00:02:14.040><c> factor</c><00:02:14.250><c> if</c><00:02:14.640><c> used</c><00:02:15.180><c> in</c><00:02:15.359><c> an</c><00:02:15.480><c> additive</c><00:02:15.900><c> way</c>

00:02:16.130 --> 00:02:16.140 align:start position:0%
sizing factor if used in an additive way
 

00:02:16.140 --> 00:02:18.080 align:start position:0%
sizing factor if used in an additive way
it's<00:02:16.650><c> just</c><00:02:16.709><c> not</c><00:02:16.950><c> gonna</c><00:02:17.099><c> work</c><00:02:17.189><c> I</c><00:02:17.640><c> mean</c><00:02:17.969><c> unless</c>

00:02:18.080 --> 00:02:18.090 align:start position:0%
it's just not gonna work I mean unless
 

00:02:18.090 --> 00:02:19.910 align:start position:0%
it's just not gonna work I mean unless
you<00:02:18.329><c> cheap</c><00:02:18.599><c> and</c><00:02:18.810><c> you</c><00:02:18.900><c> make</c><00:02:19.049><c> our</c><00:02:19.200><c> factor</c><00:02:19.590><c> super</c>

00:02:19.910 --> 00:02:19.920 align:start position:0%
you cheap and you make our factor super
 

00:02:19.920 --> 00:02:21.349 align:start position:0%
you cheap and you make our factor super
big<00:02:20.129><c> but</c><00:02:20.340><c> then</c><00:02:20.489><c> that's</c><00:02:20.849><c> cheating</c><00:02:21.299><c> because</c>

00:02:21.349 --> 00:02:21.359 align:start position:0%
big but then that's cheating because
 

00:02:21.359 --> 00:02:23.149 align:start position:0%
big but then that's cheating because
then<00:02:21.540><c> you</c><00:02:21.599><c> just</c><00:02:21.810><c> keep</c><00:02:21.930><c> around</c><00:02:22.170><c> a</c><00:02:22.319><c> size</c><00:02:22.650><c> billion</c>

00:02:23.149 --> 00:02:23.159 align:start position:0%
then you just keep around a size billion
 

00:02:23.159 --> 00:02:25.880 align:start position:0%
then you just keep around a size billion
list<00:02:23.370><c> I</c><00:02:23.519><c> mean</c><00:02:23.640><c> of</c><00:02:23.730><c> course</c><00:02:23.760><c> that</c><00:02:24.060><c> works</c><00:02:24.890><c> by</c>

00:02:25.880 --> 00:02:25.890 align:start position:0%
list I mean of course that works by
 

00:02:25.890 --> 00:02:27.949 align:start position:0%
list I mean of course that works by
contrast<00:02:26.459><c> if</c><00:02:26.790><c> we</c><00:02:27.329><c> actually</c><00:02:27.750><c> use</c><00:02:27.930><c> a</c>

00:02:27.949 --> 00:02:27.959 align:start position:0%
contrast if we actually use a
 

00:02:27.959 --> 00:02:30.500 align:start position:0%
contrast if we actually use a
multiplicative<00:02:28.739><c> or</c><00:02:29.189><c> geometric</c><00:02:30.000><c> rescaling</c>

00:02:30.500 --> 00:02:30.510 align:start position:0%
multiplicative or geometric rescaling
 

00:02:30.510 --> 00:02:32.449 align:start position:0%
multiplicative or geometric rescaling
then<00:02:30.989><c> we</c><00:02:31.109><c> get</c><00:02:31.260><c> great</c><00:02:31.500><c> performance</c><00:02:31.739><c> this</c><00:02:32.400><c> is</c>

00:02:32.449 --> 00:02:32.459 align:start position:0%
then we get great performance this is
 

00:02:32.459 --> 00:02:35.179 align:start position:0%
then we get great performance this is
wonderful<00:02:33.060><c> this</c><00:02:33.510><c> is</c><00:02:34.019><c> how</c><00:02:34.170><c> all</c><00:02:34.500><c> kinds</c><00:02:34.859><c> of</c><00:02:34.889><c> lists</c>

00:02:35.179 --> 00:02:35.189 align:start position:0%
wonderful this is how all kinds of lists
 

00:02:35.189 --> 00:02:37.490 align:start position:0%
wonderful this is how all kinds of lists
out<00:02:35.280><c> there</c><00:02:35.459><c> implemented</c><00:02:36.060><c> but</c><00:02:36.810><c> we</c><00:02:37.139><c> can't</c><00:02:37.379><c> do</c>

00:02:37.490 --> 00:02:37.500 align:start position:0%
out there implemented but we can't do
 

00:02:37.500 --> 00:02:39.020 align:start position:0%
out there implemented but we can't do
the<00:02:37.620><c> analysis</c><00:02:38.099><c> yet</c><00:02:38.310><c> we're</c><00:02:38.609><c> gonna</c><00:02:38.730><c> wait</c><00:02:38.879><c> till</c>

00:02:39.020 --> 00:02:39.030 align:start position:0%
the analysis yet we're gonna wait till
 

00:02:39.030 --> 00:02:41.209 align:start position:0%
the analysis yet we're gonna wait till
after<00:02:39.120><c> the</c><00:02:39.420><c> midterm</c><00:02:39.750><c> to</c><00:02:39.959><c> go</c><00:02:40.109><c> into</c><00:02:40.349><c> detail</c><00:02:40.680><c> so</c>

00:02:41.209 --> 00:02:41.219 align:start position:0%
after the midterm to go into detail so
 

00:02:41.219 --> 00:02:42.679 align:start position:0%
after the midterm to go into detail so
for<00:02:41.400><c> now</c><00:02:41.549><c> we're</c><00:02:41.909><c> treated</c><00:02:42.180><c> us</c><00:02:42.269><c> some</c><00:02:42.450><c> kind</c><00:02:42.569><c> of</c>

00:02:42.679 --> 00:02:42.689 align:start position:0%
for now we're treated us some kind of
 

00:02:42.689 --> 00:02:44.209 align:start position:0%
for now we're treated us some kind of
wizard<00:02:42.989><c> magic</c><00:02:43.379><c> that</c><00:02:43.620><c> this</c><00:02:43.769><c> is</c><00:02:43.920><c> the</c><00:02:44.040><c> right</c>

00:02:44.209 --> 00:02:44.219 align:start position:0%
wizard magic that this is the right
 

00:02:44.219 --> 00:02:47.390 align:start position:0%
wizard magic that this is the right
approach<00:02:44.720><c> now</c><00:02:45.720><c> there's</c><00:02:45.930><c> still</c><00:02:45.989><c> a</c><00:02:46.470><c> little</c><00:02:47.159><c> bit</c>

00:02:47.390 --> 00:02:47.400 align:start position:0%
approach now there's still a little bit
 

00:02:47.400 --> 00:02:50.140 align:start position:0%
approach now there's still a little bit
more<00:02:47.609><c> we</c><00:02:47.760><c> want</c><00:02:47.939><c> to</c><00:02:48.000><c> do</c><00:02:48.290><c> which</c><00:02:49.290><c> is</c><00:02:49.319><c> that</c>

00:02:50.140 --> 00:02:50.150 align:start position:0%
more we want to do which is that
 

00:02:50.150 --> 00:02:52.190 align:start position:0%
more we want to do which is that
occasionally<00:02:51.150><c> we'll</c><00:02:51.629><c> have</c><00:02:51.750><c> an</c><00:02:51.840><c> issue</c><00:02:52.019><c> where</c>

00:02:52.190 --> 00:02:52.200 align:start position:0%
occasionally we'll have an issue where
 

00:02:52.200 --> 00:02:54.080 align:start position:0%
occasionally we'll have an issue where
our<00:02:52.409><c> list</c><00:02:52.590><c> gets</c><00:02:52.829><c> super</c><00:02:53.129><c> big</c><00:02:53.340><c> it</c><00:02:53.579><c> goes</c><00:02:53.760><c> up</c><00:02:53.939><c> to</c><00:02:54.060><c> a</c>

00:02:54.080 --> 00:02:54.090 align:start position:0%
our list gets super big it goes up to a
 

00:02:54.090 --> 00:02:56.899 align:start position:0%
our list gets super big it goes up to a
billion<00:02:54.359><c> items</c><00:02:54.750><c> and</c><00:02:54.989><c> then</c><00:02:55.530><c> we</c><00:02:55.590><c> removed</c><00:02:55.919><c> 999</c>

00:02:56.899 --> 00:02:56.909 align:start position:0%
billion items and then we removed 999
 

00:02:56.909 --> 00:02:59.059 align:start position:0%
billion items and then we removed 999
million<00:02:57.150><c> items</c><00:02:57.569><c> so</c><00:02:58.319><c> at</c><00:02:58.409><c> that</c><00:02:58.560><c> point</c><00:02:58.799><c> we're</c>

00:02:59.059 --> 00:02:59.069 align:start position:0%
million items so at that point we're
 

00:02:59.069 --> 00:03:01.039 align:start position:0%
million items so at that point we're
only<00:02:59.099><c> using</c><00:02:59.639><c> one</c><00:02:59.909><c> percent</c><00:03:00.359><c> of</c><00:03:00.480><c> our</c><00:03:00.810><c> available</c>

00:03:01.039 --> 00:03:01.049 align:start position:0%
only using one percent of our available
 

00:03:01.049 --> 00:03:03.860 align:start position:0%
only using one percent of our available
or<00:03:02.010><c> of</c><00:03:02.250><c> our</c><00:03:02.430><c> array</c><00:03:02.700><c> and</c><00:03:03.060><c> that's</c><00:03:03.359><c> wasteful</c>

00:03:03.860 --> 00:03:03.870 align:start position:0%
or of our array and that's wasteful
 

00:03:03.870 --> 00:03:05.750 align:start position:0%
or of our array and that's wasteful
right<00:03:04.200><c> I</c><00:03:04.469><c> mean</c><00:03:04.650><c> we</c><00:03:04.709><c> could</c><00:03:04.889><c> always</c><00:03:05.069><c> make</c><00:03:05.370><c> a</c><00:03:05.430><c> list</c>

00:03:05.750 --> 00:03:05.760 align:start position:0%
right I mean we could always make a list
 

00:03:05.760 --> 00:03:07.490 align:start position:0%
right I mean we could always make a list
fast<00:03:06.030><c> that</c><00:03:06.329><c> uses</c><00:03:06.569><c> an</c><00:03:06.689><c> array</c><00:03:06.780><c> by</c><00:03:07.019><c> keeping</c><00:03:07.379><c> a</c>

00:03:07.490 --> 00:03:07.500 align:start position:0%
fast that uses an array by keeping a
 

00:03:07.500 --> 00:03:09.709 align:start position:0%
fast that uses an array by keeping a
giant<00:03:07.829><c> array</c><00:03:08.010><c> but</c><00:03:08.609><c> that's</c><00:03:08.790><c> just</c><00:03:09.060><c> a</c><00:03:09.269><c> waste</c><00:03:09.540><c> of</c>

00:03:09.709 --> 00:03:09.719 align:start position:0%
giant array but that's just a waste of
 

00:03:09.719 --> 00:03:12.470 align:start position:0%
giant array but that's just a waste of
space<00:03:09.780><c> and</c><00:03:10.260><c> so</c><00:03:10.980><c> the</c><00:03:11.069><c> question</c><00:03:11.400><c> is</c><00:03:11.579><c> what</c><00:03:12.269><c> do</c><00:03:12.359><c> we</c>

00:03:12.470 --> 00:03:12.480 align:start position:0%
space and so the question is what do we
 

00:03:12.480 --> 00:03:13.909 align:start position:0%
space and so the question is what do we
actually<00:03:12.810><c> want</c><00:03:12.959><c> to</c><00:03:13.019><c> do</c><00:03:13.230><c> to</c><00:03:13.379><c> make</c><00:03:13.530><c> this</c><00:03:13.709><c> better</c>

00:03:13.909 --> 00:03:13.919 align:start position:0%
actually want to do to make this better
 

00:03:13.919 --> 00:03:18.469 align:start position:0%
actually want to do to make this better
I<00:03:16.010><c> kind</c><00:03:17.010><c> of</c><00:03:17.040><c> spoiled</c><00:03:17.430><c> that</c><00:03:17.549><c> problem</c><00:03:17.879><c> okay</c>

00:03:18.469 --> 00:03:18.479 align:start position:0%
I kind of spoiled that problem okay
 

00:03:18.479 --> 00:03:21.199 align:start position:0%
I kind of spoiled that problem okay
that's<00:03:18.930><c> fine</c><00:03:19.190><c> so</c><00:03:20.190><c> what</c><00:03:20.609><c> can</c><00:03:20.699><c> we</c><00:03:20.819><c> do</c><00:03:20.940><c> to</c><00:03:21.060><c> make</c><00:03:21.180><c> it</c>

00:03:21.199 --> 00:03:21.209 align:start position:0%
that's fine so what can we do to make it
 

00:03:21.209 --> 00:03:23.689 align:start position:0%
that's fine so what can we do to make it
better<00:03:21.329><c> well</c><00:03:22.169><c> often</c><00:03:22.739><c> what</c><00:03:22.859><c> we'll</c><00:03:22.979><c> say</c><00:03:23.159><c> is</c><00:03:23.340><c> an</c>

00:03:23.689 --> 00:03:23.699 align:start position:0%
better well often what we'll say is an
 

00:03:23.699 --> 00:03:27.860 align:start position:0%
better well often what we'll say is an
ArrayList<00:03:24.650><c> has</c><00:03:25.650><c> a</c><00:03:25.970><c> usage</c><00:03:26.970><c> ratio</c><00:03:27.389><c> you</c><00:03:27.690><c> might</c>

00:03:27.860 --> 00:03:27.870 align:start position:0%
ArrayList has a usage ratio you might
 

00:03:27.870 --> 00:03:29.960 align:start position:0%
ArrayList has a usage ratio you might
call<00:03:28.049><c> it</c><00:03:28.079><c> or</c><00:03:28.349><c> a</c><00:03:28.379><c> load</c><00:03:28.650><c> factor</c><00:03:29.129><c> and</c><00:03:29.340><c> that's</c>

00:03:29.960 --> 00:03:29.970 align:start position:0%
call it or a load factor and that's
 

00:03:29.970 --> 00:03:32.360 align:start position:0%
call it or a load factor and that's
simply<00:03:30.329><c> the</c><00:03:30.359><c> size</c><00:03:30.780><c> of</c><00:03:30.989><c> the</c><00:03:31.079><c> array</c><00:03:31.319><c> divided</c><00:03:32.220><c> by</c>

00:03:32.360 --> 00:03:32.370 align:start position:0%
simply the size of the array divided by
 

00:03:32.370 --> 00:03:35.179 align:start position:0%
simply the size of the array divided by
the<00:03:32.849><c> length</c><00:03:33.120><c> of</c><00:03:33.180><c> the</c><00:03:34.139><c> site</c><00:03:34.439><c> the</c><00:03:34.739><c> size</c><00:03:34.979><c> of</c><00:03:35.129><c> the</c>

00:03:35.179 --> 00:03:35.189 align:start position:0%
the length of the site the size of the
 

00:03:35.189 --> 00:03:37.339 align:start position:0%
the length of the site the size of the
list<00:03:35.430><c> divided</c><00:03:36.209><c> by</c><00:03:36.329><c> the</c><00:03:36.599><c> length</c><00:03:36.780><c> of</c><00:03:37.019><c> the</c><00:03:37.139><c> array</c>

00:03:37.339 --> 00:03:37.349 align:start position:0%
list divided by the length of the array
 

00:03:37.349 --> 00:03:39.559 align:start position:0%
list divided by the length of the array
that<00:03:37.560><c> represents</c><00:03:38.040><c> the</c><00:03:38.159><c> last</c><00:03:38.340><c> and</c><00:03:39.090><c> so</c><00:03:39.180><c> often</c>

00:03:39.559 --> 00:03:39.569 align:start position:0%
that represents the last and so often
 

00:03:39.569 --> 00:03:41.659 align:start position:0%
that represents the last and so often
what<00:03:39.689><c> you'll</c><00:03:39.810><c> do</c><00:03:40.019><c> is</c><00:03:40.229><c> if</c><00:03:40.709><c> the</c><00:03:41.010><c> load</c><00:03:41.370><c> factor</c>

00:03:41.659 --> 00:03:41.669 align:start position:0%
what you'll do is if the load factor
 

00:03:41.669 --> 00:03:45.289 align:start position:0%
what you'll do is if the load factor
that<00:03:42.060><c> usage</c><00:03:42.479><c> ratio</c><00:03:42.689><c> falls</c><00:03:43.319><c> below</c><00:03:43.680><c> 25%</c><00:03:44.669><c> then</c>

00:03:45.289 --> 00:03:45.299 align:start position:0%
that usage ratio falls below 25% then
 

00:03:45.299 --> 00:03:47.719 align:start position:0%
that usage ratio falls below 25% then
you<00:03:45.689><c> will</c><00:03:45.810><c> have</c><00:03:45.989><c> the</c><00:03:46.349><c> array</c><00:03:46.560><c> size</c><00:03:46.799><c> and</c><00:03:47.519><c> we'll</c>

00:03:47.719 --> 00:03:47.729 align:start position:0%
you will have the array size and we'll
 

00:03:47.729 --> 00:03:49.039 align:start position:0%
you will have the array size and we'll
do<00:03:47.849><c> some</c><00:03:48.030><c> more</c><00:03:48.120><c> details</c><00:03:48.479><c> in</c><00:03:48.599><c> this</c><00:03:48.689><c> in</c><00:03:48.840><c> a</c><00:03:48.900><c> few</c>

00:03:49.039 --> 00:03:49.049 align:start position:0%
do some more details in this in a few
 

00:03:49.049 --> 00:03:51.740 align:start position:0%
do some more details in this in a few
weeks<00:03:49.199><c> so</c><00:03:49.379><c> just</c><00:03:49.560><c> as</c><00:03:49.680><c> an</c><00:03:49.799><c> example</c><00:03:50.359><c> let's</c><00:03:51.359><c> say</c><00:03:51.569><c> we</c>

00:03:51.740 --> 00:03:51.750 align:start position:0%
weeks so just as an example let's say we
 

00:03:51.750 --> 00:03:54.199 align:start position:0%
weeks so just as an example let's say we
have<00:03:51.930><c> here</c><00:03:52.229><c> an</c><00:03:52.319><c> array</c><00:03:52.439><c> that's</c><00:03:52.859><c> it</c><00:03:53.310><c> has</c><00:03:53.459><c> length</c>

00:03:54.199 --> 00:03:54.209 align:start position:0%
have here an array that's it has length
 

00:03:54.209 --> 00:03:57.740 align:start position:0%
have here an array that's it has length
100<00:03:54.720><c> but</c><00:03:55.500><c> the</c><00:03:55.590><c> list</c><00:03:55.769><c> is</c><00:03:55.919><c> only</c><00:03:56.040><c> size</c><00:03:56.639><c> 4</c><00:03:57.030><c> and</c><00:03:57.389><c> so</c>

00:03:57.740 --> 00:03:57.750 align:start position:0%
100 but the list is only size 4 and so
 

00:03:57.750 --> 00:04:00.589 align:start position:0%
100 but the list is only size 4 and so
the<00:03:57.840><c> usage</c><00:03:57.989><c> ratio</c><00:03:58.530><c> here</c><00:03:58.829><c> is</c><00:03:59.040><c> only</c><00:03:59.340><c> 4%</c><00:03:59.699><c> that</c><00:04:00.509><c> is</c>

00:04:00.589 --> 00:04:00.599 align:start position:0%
the usage ratio here is only 4% that is
 

00:04:00.599 --> 00:04:02.869 align:start position:0%
the usage ratio here is only 4% that is
well<00:04:00.840><c> less</c><00:04:01.139><c> than</c><00:04:01.349><c> 25%</c><00:04:01.799><c> so</c><00:04:02.519><c> this</c><00:04:02.669><c> should</c><00:04:02.849><c> have</c>

00:04:02.869 --> 00:04:02.879 align:start position:0%
well less than 25% so this should have
 

00:04:02.879 --> 00:04:04.939 align:start position:0%
well less than 25% so this should have
been<00:04:02.970><c> resized</c><00:04:03.419><c> at</c><00:04:03.689><c> some</c><00:04:03.840><c> point</c><00:04:04.079><c> and</c><00:04:04.709><c> so</c><00:04:04.829><c> this</c>

00:04:04.939 --> 00:04:04.949 align:start position:0%
been resized at some point and so this
 

00:04:04.949 --> 00:04:06.830 align:start position:0%
been resized at some point and so this
actually<00:04:05.099><c> drives</c><00:04:05.549><c> home</c><00:04:05.729><c> a</c><00:04:05.970><c> really</c><00:04:06.180><c> important</c>

00:04:06.830 --> 00:04:06.840 align:start position:0%
actually drives home a really important
 

00:04:06.840 --> 00:04:08.689 align:start position:0%
actually drives home a really important
trade-off<00:04:07.229><c> between</c><00:04:07.829><c> time</c><00:04:08.310><c> and</c><00:04:08.340><c> space</c>

00:04:08.689 --> 00:04:08.699 align:start position:0%
trade-off between time and space
 

00:04:08.699 --> 00:04:09.319 align:start position:0%
trade-off between time and space
efficiency

00:04:09.319 --> 00:04:09.329 align:start position:0%
efficiency
 

00:04:09.329 --> 00:04:11.179 align:start position:0%
efficiency
we'll<00:04:09.750><c> see</c><00:04:09.870><c> this</c><00:04:10.019><c> over</c><00:04:10.349><c> and</c><00:04:10.409><c> over</c><00:04:10.560><c> again</c><00:04:10.829><c> we'll</c>

00:04:11.179 --> 00:04:11.189 align:start position:0%
we'll see this over and over again we'll
 

00:04:11.189 --> 00:04:12.830 align:start position:0%
we'll see this over and over again we'll
talk<00:04:11.310><c> about</c><00:04:11.459><c> things</c><00:04:11.790><c> like</c><00:04:11.879><c> hash</c><00:04:12.180><c> tables</c><00:04:12.599><c> and</c>

00:04:12.830 --> 00:04:12.840 align:start position:0%
talk about things like hash tables and
 

00:04:12.840 --> 00:04:15.520 align:start position:0%
talk about things like hash tables and
how<00:04:13.229><c> we</c><00:04:13.290><c> can</c><00:04:13.500><c> exploit</c><00:04:13.620><c> space</c><00:04:14.129><c> to</c><00:04:14.519><c> save</c><00:04:14.729><c> time</c>

00:04:15.520 --> 00:04:15.530 align:start position:0%
how we can exploit space to save time
 

00:04:15.530 --> 00:04:18.409 align:start position:0%
how we can exploit space to save time
that'll<00:04:16.530><c> be</c><00:04:16.590><c> a</c><00:04:16.620><c> big</c><00:04:16.769><c> theme</c><00:04:16.979><c> of</c><00:04:17.159><c> this</c><00:04:17.310><c> course</c><00:04:17.489><c> so</c>

00:04:18.409 --> 00:04:18.419 align:start position:0%
that'll be a big theme of this course so
 

00:04:18.419 --> 00:04:20.960 align:start position:0%
that'll be a big theme of this course so
with<00:04:18.630><c> that</c><00:04:18.840><c> we</c><00:04:19.139><c> have</c><00:04:19.229><c> now</c><00:04:19.380><c> built</c><00:04:19.849><c> basically</c><00:04:20.849><c> an</c>

00:04:20.960 --> 00:04:20.970 align:start position:0%
with that we have now built basically an
 

00:04:20.970 --> 00:04:21.560 align:start position:0%
with that we have now built basically an
ArrayList

00:04:21.560 --> 00:04:21.570 align:start position:0%
ArrayList
 

00:04:21.570 --> 00:04:22.730 align:start position:0%
ArrayList
we'll<00:04:21.779><c> have</c><00:04:21.870><c> to</c><00:04:21.930><c> do</c><00:04:22.019><c> a</c><00:04:22.049><c> little</c><00:04:22.409><c> bit</c><00:04:22.590><c> more</c>

00:04:22.730 --> 00:04:22.740 align:start position:0%
we'll have to do a little bit more
 

00:04:22.740 --> 00:04:24.290 align:start position:0%
we'll have to do a little bit more
tweaking<00:04:22.889><c> but</c><00:04:23.279><c> that's</c><00:04:23.430><c> the</c><00:04:23.580><c> core</c><00:04:23.789><c> idea</c><00:04:24.090><c> the</c>

00:04:24.290 --> 00:04:24.300 align:start position:0%
tweaking but that's the core idea the
 

00:04:24.300 --> 00:04:25.900 align:start position:0%
tweaking but that's the core idea the
most<00:04:24.419><c> important</c><00:04:24.930><c> stuff</c>

00:04:25.900 --> 00:04:25.910 align:start position:0%
most important stuff
 

00:04:25.910 --> 00:04:27.550 align:start position:0%
most important stuff
and<00:04:26.060><c> with</c><00:04:26.450><c> this</c><00:04:26.570><c> next</c><00:04:26.750><c> little</c><00:04:26.930><c> video</c><00:04:27.260><c> you'll</c>

00:04:27.550 --> 00:04:27.560 align:start position:0%
and with this next little video you'll
 

00:04:27.560 --> 00:04:30.970 align:start position:0%
and with this next little video you'll
be<00:04:27.620><c> ready</c><00:04:27.860><c> to</c><00:04:28.010><c> finish</c><00:04:28.130><c> a</c><00:04:28.280><c> project</c><00:04:28.400><c> on</c><00:04:28.850><c> it</c>

