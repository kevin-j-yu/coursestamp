WEBVTT
Kind: captions
Language: en

00:00:00.030 --> 00:00:03.139 align:start position:0%
 
it's<00:00:00.960><c> a</c><00:00:01.110><c> big</c><00:00:01.260><c> day</c><00:00:01.439><c> my</c><00:00:01.650><c> friends</c><00:00:02.040><c> finally</c><00:00:02.639><c> now</c>

00:00:03.139 --> 00:00:03.149 align:start position:0%
it's a big day my friends finally now
 

00:00:03.149 --> 00:00:05.210 align:start position:0%
it's a big day my friends finally now
we're<00:00:03.600><c> gonna</c><00:00:03.720><c> be</c><00:00:03.899><c> finishing</c><00:00:04.200><c> our</c><00:00:04.410><c> last</c><00:00:04.740><c> Java</c>

00:00:05.210 --> 00:00:05.220 align:start position:0%
we're gonna be finishing our last Java
 

00:00:05.220 --> 00:00:08.000 align:start position:0%
we're gonna be finishing our last Java
syntax<00:00:05.490><c> specific</c><00:00:06.210><c> video</c><00:00:06.600><c> so</c><00:00:07.440><c> if</c><00:00:07.529><c> we</c><00:00:07.620><c> look</c><00:00:07.799><c> at</c>

00:00:08.000 --> 00:00:08.010 align:start position:0%
syntax specific video so if we look at
 

00:00:08.010 --> 00:00:09.950 align:start position:0%
syntax specific video so if we look at
all<00:00:08.280><c> the</c><00:00:08.309><c> things</c><00:00:08.580><c> we've</c><00:00:08.910><c> done</c><00:00:08.940><c> we</c><00:00:09.570><c> just</c><00:00:09.599><c> spent</c>

00:00:09.950 --> 00:00:09.960 align:start position:0%
all the things we've done we just spent
 

00:00:09.960 --> 00:00:11.540 align:start position:0%
all the things we've done we just spent
four<00:00:10.200><c> weeks</c><00:00:10.230><c> really</c><00:00:10.620><c> grinding</c><00:00:11.099><c> through</c><00:00:11.309><c> a</c><00:00:11.429><c> new</c>

00:00:11.540 --> 00:00:11.550 align:start position:0%
four weeks really grinding through a new
 

00:00:11.550 --> 00:00:13.339 align:start position:0%
four weeks really grinding through a new
programming<00:00:12.000><c> language</c><00:00:12.059><c> and</c><00:00:12.570><c> for</c><00:00:13.110><c> those</c><00:00:13.200><c> of</c>

00:00:13.339 --> 00:00:13.349 align:start position:0%
programming language and for those of
 

00:00:13.349 --> 00:00:14.749 align:start position:0%
programming language and for those of
you<00:00:13.440><c> who</c><00:00:13.559><c> already</c><00:00:13.679><c> add</c><00:00:13.860><c> Java</c><00:00:14.099><c> experience</c><00:00:14.549><c> I</c>

00:00:14.749 --> 00:00:14.759 align:start position:0%
you who already add Java experience I
 

00:00:14.759 --> 00:00:16.460 align:start position:0%
you who already add Java experience I
hope<00:00:15.059><c> you</c><00:00:15.210><c> got</c><00:00:15.330><c> something</c><00:00:15.540><c> out</c><00:00:15.719><c> of</c><00:00:15.780><c> it</c><00:00:15.990><c> and</c><00:00:16.170><c> for</c>

00:00:16.460 --> 00:00:16.470 align:start position:0%
hope you got something out of it and for
 

00:00:16.470 --> 00:00:17.960 align:start position:0%
hope you got something out of it and for
everybody<00:00:16.619><c> else</c><00:00:16.830><c> I</c><00:00:17.130><c> hope</c><00:00:17.640><c> that</c><00:00:17.820><c> you've</c><00:00:17.940><c> found</c>

00:00:17.960 --> 00:00:17.970 align:start position:0%
everybody else I hope that you've found
 

00:00:17.970 --> 00:00:19.910 align:start position:0%
everybody else I hope that you've found
that<00:00:18.330><c> it's</c><00:00:18.750><c> not</c><00:00:18.930><c> so</c><00:00:19.140><c> crazy</c><00:00:19.380><c> to</c><00:00:19.619><c> learn</c><00:00:19.770><c> a</c><00:00:19.800><c> new</c>

00:00:19.910 --> 00:00:19.920 align:start position:0%
that it's not so crazy to learn a new
 

00:00:19.920 --> 00:00:21.470 align:start position:0%
that it's not so crazy to learn a new
language<00:00:20.039><c> it's</c><00:00:20.640><c> not</c><00:00:20.789><c> like</c><00:00:20.939><c> moving</c><00:00:21.180><c> from</c>

00:00:21.470 --> 00:00:21.480 align:start position:0%
language it's not like moving from
 

00:00:21.480 --> 00:00:23.450 align:start position:0%
language it's not like moving from
English<00:00:21.869><c> to</c><00:00:21.900><c> Chinese</c><00:00:22.230><c> or</c><00:00:22.650><c> Arabic</c><00:00:23.070><c> or</c><00:00:23.189><c> whatever</c>

00:00:23.450 --> 00:00:23.460 align:start position:0%
English to Chinese or Arabic or whatever
 

00:00:23.460 --> 00:00:26.359 align:start position:0%
English to Chinese or Arabic or whatever
else<00:00:23.670><c> it's</c><00:00:24.630><c> it's</c><00:00:25.080><c> a</c><00:00:25.170><c> closer</c><00:00:25.410><c> thing</c><00:00:25.769><c> right</c><00:00:26.160><c> the</c>

00:00:26.359 --> 00:00:26.369 align:start position:0%
else it's it's a closer thing right the
 

00:00:26.369 --> 00:00:29.179 align:start position:0%
else it's it's a closer thing right the
basic<00:00:26.580><c> underlying</c><00:00:27.180><c> abstractions</c><00:00:27.840><c> are</c><00:00:28.680><c> very</c>

00:00:29.179 --> 00:00:29.189 align:start position:0%
basic underlying abstractions are very
 

00:00:29.189 --> 00:00:31.310 align:start position:0%
basic underlying abstractions are very
similar<00:00:29.460><c> and</c><00:00:29.760><c> the</c><00:00:30.210><c> vocabulary</c><00:00:30.480><c> is</c><00:00:30.929><c> not</c><00:00:30.960><c> so</c>

00:00:31.310 --> 00:00:31.320 align:start position:0%
similar and the vocabulary is not so
 

00:00:31.320 --> 00:00:33.799 align:start position:0%
similar and the vocabulary is not so
large<00:00:31.500><c> and</c><00:00:31.859><c> so</c><00:00:32.399><c> that</c><00:00:32.669><c> said</c><00:00:32.969><c> let's</c><00:00:33.420><c> jump</c><00:00:33.480><c> into</c>

00:00:33.799 --> 00:00:33.809 align:start position:0%
large and so that said let's jump into
 

00:00:33.809 --> 00:00:35.979 align:start position:0%
large and so that said let's jump into
perhaps<00:00:34.230><c> the</c><00:00:34.440><c> most</c><00:00:34.620><c> exciting</c><00:00:35.309><c> thing</c><00:00:35.489><c> of</c><00:00:35.610><c> all</c>

00:00:35.979 --> 00:00:35.989 align:start position:0%
perhaps the most exciting thing of all
 

00:00:35.989 --> 00:00:39.440 align:start position:0%
perhaps the most exciting thing of all
object<00:00:36.989><c> method</c><00:00:37.460><c> so</c><00:00:38.460><c> what</c><00:00:38.550><c> are</c><00:00:38.640><c> they</c><00:00:38.760><c> well</c>

00:00:39.440 --> 00:00:39.450 align:start position:0%
object method so what are they well
 

00:00:39.450 --> 00:00:41.869 align:start position:0%
object method so what are they well
recall<00:00:40.110><c> that</c><00:00:40.170><c> every</c><00:00:40.410><c> class</c><00:00:40.800><c> in</c><00:00:41.129><c> Java</c><00:00:41.340><c> is</c><00:00:41.579><c> the</c>

00:00:41.869 --> 00:00:41.879 align:start position:0%
recall that every class in Java is the
 

00:00:41.879 --> 00:00:44.600 align:start position:0%
recall that every class in Java is the
hyponym<00:00:42.180><c> of</c><00:00:42.510><c> object</c><00:00:43.140><c> that</c><00:00:43.530><c> is</c><00:00:43.710><c> a</c><00:00:43.860><c> dog</c><00:00:44.190><c> is</c><00:00:44.489><c> an</c>

00:00:44.600 --> 00:00:44.610 align:start position:0%
hyponym of object that is a dog is an
 

00:00:44.610 --> 00:00:46.850 align:start position:0%
hyponym of object that is a dog is an
object<00:00:44.969><c> or</c><00:00:45.149><c> a</c><00:00:45.480><c> sled</c><00:00:45.809><c> dog</c><00:00:45.989><c> as</c><00:00:46.230><c> a</c><00:00:46.260><c> dog</c><00:00:46.500><c> is</c><00:00:46.739><c> an</c>

00:00:46.850 --> 00:00:46.860 align:start position:0%
object or a sled dog as a dog is an
 

00:00:46.860 --> 00:00:49.700 align:start position:0%
object or a sled dog as a dog is an
object<00:00:47.190><c> an</c><00:00:47.370><c> arraylist</c><00:00:47.850><c> object</c><00:00:48.480><c> and</c><00:00:49.289><c> so</c><00:00:49.440><c> being</c>

00:00:49.700 --> 00:00:49.710 align:start position:0%
object an arraylist object and so being
 

00:00:49.710 --> 00:00:52.160 align:start position:0%
object an arraylist object and so being
a<00:00:49.890><c> hypernym</c><00:00:50.309><c> object</c><00:00:50.850><c> they</c><00:00:51.180><c> inherit</c><00:00:51.570><c> all</c><00:00:51.719><c> of</c>

00:00:52.160 --> 00:00:52.170 align:start position:0%
a hypernym object they inherit all of
 

00:00:52.170 --> 00:00:53.900 align:start position:0%
a hypernym object they inherit all of
these<00:00:52.350><c> methods</c><00:00:52.710><c> from</c><00:00:53.070><c> this</c><00:00:53.280><c> object</c><00:00:53.489><c> class</c>

00:00:53.900 --> 00:00:53.910 align:start position:0%
these methods from this object class
 

00:00:53.910 --> 00:00:55.850 align:start position:0%
these methods from this object class
which<00:00:54.149><c> by</c><00:00:54.390><c> the</c><00:00:54.449><c> way</c><00:00:54.539><c> is</c><00:00:54.719><c> not</c><00:00:54.899><c> abstract</c><00:00:55.199><c> you</c><00:00:55.680><c> can</c>

00:00:55.850 --> 00:00:55.860 align:start position:0%
which by the way is not abstract you can
 

00:00:55.860 --> 00:00:58.729 align:start position:0%
which by the way is not abstract you can
do<00:00:55.980><c> new</c><00:00:56.129><c> object</c><00:00:56.550><c> all</c><00:00:56.699><c> day</c><00:00:56.940><c> long</c><00:00:57.260><c> so</c><00:00:58.260><c> what</c><00:00:58.620><c> are</c>

00:00:58.729 --> 00:00:58.739 align:start position:0%
do new object all day long so what are
 

00:00:58.739 --> 00:01:00.619 align:start position:0%
do new object all day long so what are
the<00:00:58.829><c> object</c><00:00:59.219><c> methods</c><00:00:59.609><c> that</c><00:00:59.789><c> every</c><00:01:00.149><c> object's</c>

00:01:00.619 --> 00:01:00.629 align:start position:0%
the object methods that every object's
 

00:01:00.629 --> 00:01:03.619 align:start position:0%
the object methods that every object's
guaranteed<00:01:01.050><c> to</c><00:01:01.170><c> have</c><00:01:01.350><c> to</c><00:01:02.100><c> string</c><00:01:02.340><c> equals</c><00:01:02.879><c> get</c>

00:01:03.619 --> 00:01:03.629 align:start position:0%
guaranteed to have to string equals get
 

00:01:03.629 --> 00:01:06.260 align:start position:0%
guaranteed to have to string equals get
class<00:01:03.870><c> hash</c><00:01:04.260><c> code</c><00:01:04.559><c> clone</c><00:01:05.010><c> finalize</c><00:01:05.729><c> notify</c>

00:01:06.260 --> 00:01:06.270 align:start position:0%
class hash code clone finalize notify
 

00:01:06.270 --> 00:01:08.210 align:start position:0%
class hash code clone finalize notify
notify<00:01:06.869><c> all</c><00:01:07.020><c> wait-wait-wait</c>

00:01:08.210 --> 00:01:08.220 align:start position:0%
notify all wait-wait-wait
 

00:01:08.220 --> 00:01:10.070 align:start position:0%
notify all wait-wait-wait
now<00:01:08.880><c> we're</c><00:01:09.000><c> not</c><00:01:09.090><c> gonna</c><00:01:09.210><c> discuss</c><00:01:09.510><c> these</c><00:01:09.810><c> last</c>

00:01:10.070 --> 00:01:10.080 align:start position:0%
now we're not gonna discuss these last
 

00:01:10.080 --> 00:01:12.230 align:start position:0%
now we're not gonna discuss these last
ones<00:01:10.290><c> in</c><00:01:10.470><c> any</c><00:01:10.590><c> detail</c><00:01:10.830><c> and</c><00:01:11.189><c> 61b</c><00:01:11.610><c> you</c><00:01:12.119><c> can</c>

00:01:12.230 --> 00:01:12.240 align:start position:0%
ones in any detail and 61b you can
 

00:01:12.240 --> 00:01:13.370 align:start position:0%
ones in any detail and 61b you can
google<00:01:12.540><c> them</c><00:01:12.630><c> and</c><00:01:12.689><c> find</c><00:01:12.990><c> out</c><00:01:13.110><c> what</c><00:01:13.229><c> they're</c>

00:01:13.370 --> 00:01:13.380 align:start position:0%
google them and find out what they're
 

00:01:13.380 --> 00:01:15.670 align:start position:0%
google them and find out what they're
all<00:01:13.470><c> about</c><00:01:13.500><c> but</c><00:01:14.369><c> we</c><00:01:14.490><c> will</c><00:01:14.640><c> use</c><00:01:14.850><c> these</c><00:01:15.030><c> top</c><00:01:15.240><c> four</c>

00:01:15.670 --> 00:01:15.680 align:start position:0%
all about but we will use these top four
 

00:01:15.680 --> 00:01:17.660 align:start position:0%
all about but we will use these top four
somewhat<00:01:16.680><c> often</c><00:01:16.979><c> and</c><00:01:17.189><c> in</c><00:01:17.340><c> fact</c><00:01:17.490><c> we'll</c>

00:01:17.660 --> 00:01:17.670 align:start position:0%
somewhat often and in fact we'll
 

00:01:17.670 --> 00:01:19.700 align:start position:0%
somewhat often and in fact we'll
override<00:01:18.090><c> this</c><00:01:18.600><c> first</c><00:01:18.869><c> second</c><00:01:19.350><c> and</c><00:01:19.500><c> fourth</c>

00:01:19.700 --> 00:01:19.710 align:start position:0%
override this first second and fourth
 

00:01:19.710 --> 00:01:21.499 align:start position:0%
override this first second and fourth
method<00:01:19.890><c> here</c><00:01:20.250><c> so</c><00:01:20.820><c> this</c><00:01:21.000><c> lecture</c><00:01:21.270><c> I'm</c><00:01:21.360><c> only</c>

00:01:21.499 --> 00:01:21.509 align:start position:0%
method here so this lecture I'm only
 

00:01:21.509 --> 00:01:23.330 align:start position:0%
method here so this lecture I'm only
gonna<00:01:21.720><c> talk</c><00:01:21.930><c> about</c><00:01:22.229><c> these</c><00:01:22.380><c> top</c><00:01:22.619><c> two</c><00:01:22.830><c> in</c><00:01:22.979><c> detail</c>

00:01:23.330 --> 00:01:23.340 align:start position:0%
gonna talk about these top two in detail
 

00:01:23.340 --> 00:01:24.859 align:start position:0%
gonna talk about these top two in detail
and<00:01:23.850><c> we'll</c><00:01:23.939><c> talk</c><00:01:24.060><c> about</c><00:01:24.180><c> hash</c><00:01:24.390><c> code</c><00:01:24.630><c> in</c><00:01:24.780><c> a</c>

00:01:24.859 --> 00:01:24.869 align:start position:0%
and we'll talk about hash code in a
 

00:01:24.869 --> 00:01:26.179 align:start position:0%
and we'll talk about hash code in a
later<00:01:25.049><c> lecture</c><00:01:25.259><c> we</c><00:01:25.530><c> talked</c><00:01:25.680><c> about</c><00:01:25.710><c> hash</c>

00:01:26.179 --> 00:01:26.189 align:start position:0%
later lecture we talked about hash
 

00:01:26.189 --> 00:01:29.030 align:start position:0%
later lecture we talked about hash
tables<00:01:26.780><c> so</c><00:01:27.780><c> the</c><00:01:28.140><c> first</c><00:01:28.350><c> of</c><00:01:28.470><c> these</c><00:01:28.680><c> methods</c>

00:01:29.030 --> 00:01:29.040 align:start position:0%
tables so the first of these methods
 

00:01:29.040 --> 00:01:30.230 align:start position:0%
tables so the first of these methods
that<00:01:29.070><c> we're</c><00:01:29.220><c> going</c><00:01:29.310><c> to</c><00:01:29.400><c> discuss</c><00:01:29.700><c> today</c><00:01:29.850><c> is</c><00:01:29.970><c> the</c>

00:01:30.230 --> 00:01:30.240 align:start position:0%
that we're going to discuss today is the
 

00:01:30.240 --> 00:01:32.390 align:start position:0%
that we're going to discuss today is the
string<00:01:30.479><c> and</c><00:01:30.689><c> basically</c><00:01:31.500><c> what</c><00:01:31.710><c> it</c><00:01:31.799><c> represents</c>

00:01:32.390 --> 00:01:32.400 align:start position:0%
string and basically what it represents
 

00:01:32.400 --> 00:01:34.550 align:start position:0%
string and basically what it represents
is<00:01:32.549><c> the</c><00:01:33.090><c> string</c><00:01:33.450><c> representation</c><00:01:34.229><c> of</c><00:01:34.259><c> an</c>

00:01:34.550 --> 00:01:34.560 align:start position:0%
is the string representation of an
 

00:01:34.560 --> 00:01:36.890 align:start position:0%
is the string representation of an
object<00:01:34.619><c> so</c><00:01:35.490><c> if</c><00:01:35.610><c> you</c><00:01:35.729><c> want</c><00:01:36.000><c> to</c><00:01:36.060><c> when</c><00:01:36.630><c> someone</c>

00:01:36.890 --> 00:01:36.900 align:start position:0%
object so if you want to when someone
 

00:01:36.900 --> 00:01:38.359 align:start position:0%
object so if you want to when someone
wants<00:01:37.110><c> to</c><00:01:37.140><c> print</c><00:01:37.409><c> out</c><00:01:37.560><c> your</c><00:01:37.680><c> object</c><00:01:38.040><c> let's</c><00:01:38.220><c> say</c>

00:01:38.359 --> 00:01:38.369 align:start position:0%
wants to print out your object let's say
 

00:01:38.369 --> 00:01:40.399 align:start position:0%
wants to print out your object let's say
you<00:01:39.090><c> want</c><00:01:39.299><c> to</c><00:01:39.450><c> provide</c><00:01:39.780><c> the</c><00:01:39.990><c> world</c><00:01:40.170><c> with</c><00:01:40.380><c> a</c>

00:01:40.399 --> 00:01:40.409 align:start position:0%
you want to provide the world with a
 

00:01:40.409 --> 00:01:42.440 align:start position:0%
you want to provide the world with a
nice<00:01:40.650><c> string</c><00:01:41.040><c> representation</c><00:01:41.790><c> of</c><00:01:41.939><c> say</c><00:01:42.090><c> a</c><00:01:42.119><c> dog</c>

00:01:42.440 --> 00:01:42.450 align:start position:0%
nice string representation of say a dog
 

00:01:42.450 --> 00:01:44.210 align:start position:0%
nice string representation of say a dog
then<00:01:43.110><c> you'll</c><00:01:43.259><c> create</c><00:01:43.439><c> as</c><00:01:43.619><c> a</c><00:01:43.680><c> string</c><00:01:43.920><c> method</c>

00:01:44.210 --> 00:01:44.220 align:start position:0%
then you'll create as a string method
 

00:01:44.220 --> 00:01:46.399 align:start position:0%
then you'll create as a string method
and<00:01:44.399><c> this</c><00:01:45.060><c> just</c><00:01:45.329><c> string</c><00:01:45.509><c> method</c><00:01:45.840><c> we</c><00:01:45.960><c> see</c><00:01:46.140><c> that</c>

00:01:46.399 --> 00:01:46.409 align:start position:0%
and this just string method we see that
 

00:01:46.409 --> 00:01:49.670 align:start position:0%
and this just string method we see that
we<00:01:47.869><c> generate</c><00:01:48.869><c> a</c><00:01:48.899><c> string</c><00:01:49.290><c> which</c><00:01:49.439><c> is</c><00:01:49.590><c> the</c>

00:01:49.670 --> 00:01:49.680 align:start position:0%
we generate a string which is the
 

00:01:49.680 --> 00:01:51.679 align:start position:0%
we generate a string which is the
combination<00:01:49.860><c> of</c><00:01:50.250><c> the</c><00:01:50.399><c> name</c><00:01:50.610><c> the</c><00:01:51.149><c> mood</c><00:01:51.390><c> of</c><00:01:51.540><c> the</c>

00:01:51.679 --> 00:01:51.689 align:start position:0%
combination of the name the mood of the
 

00:01:51.689 --> 00:01:54.679 align:start position:0%
combination of the name the mood of the
dog<00:01:51.869><c> the</c><00:01:52.439><c> breed</c><00:01:53.130><c> of</c><00:01:53.159><c> dog</c><00:01:53.520><c> the</c><00:01:53.939><c> size</c><00:01:54.119><c> and</c><00:01:54.570><c> so</c>

00:01:54.679 --> 00:01:54.689 align:start position:0%
dog the breed of dog the size and so
 

00:01:54.689 --> 00:01:58.609 align:start position:0%
dog the breed of dog the size and so
forth<00:01:54.930><c> and</c><00:01:55.890><c> in</c><00:01:56.009><c> that</c><00:01:56.159><c> case</c><00:01:56.369><c> we</c><00:01:57.229><c> then</c><00:01:58.229><c> have</c><00:01:58.590><c> a</c>

00:01:58.609 --> 00:01:58.619 align:start position:0%
forth and in that case we then have a
 

00:01:58.619 --> 00:02:00.830 align:start position:0%
forth and in that case we then have a
nice<00:01:58.950><c> string</c><00:01:59.820><c> that</c><00:01:59.969><c> captures</c><00:02:00.360><c> everything</c>

00:02:00.830 --> 00:02:00.840 align:start position:0%
nice string that captures everything
 

00:02:00.840 --> 00:02:02.630 align:start position:0%
nice string that captures everything
that<00:02:00.990><c> is</c><00:02:01.140><c> that</c><00:02:01.320><c> dog</c><00:02:01.530><c> now</c><00:02:02.219><c> there's</c><00:02:02.430><c> nothing</c>

00:02:02.630 --> 00:02:02.640 align:start position:0%
that is that dog now there's nothing
 

00:02:02.640 --> 00:02:04.039 align:start position:0%
that is that dog now there's nothing
particularly<00:02:02.969><c> interesting</c><00:02:03.149><c> about</c><00:02:03.810><c> if</c><00:02:03.899><c> two</c>

00:02:04.039 --> 00:02:04.049 align:start position:0%
particularly interesting about if two
 

00:02:04.049 --> 00:02:05.929 align:start position:0%
particularly interesting about if two
string<00:02:04.259><c> method</c><00:02:04.290><c> except</c><00:02:05.100><c> that</c><00:02:05.250><c> it's</c><00:02:05.430><c> reliable</c>

00:02:05.929 --> 00:02:05.939 align:start position:0%
string method except that it's reliable
 

00:02:05.939 --> 00:02:08.330 align:start position:0%
string method except that it's reliable
it's<00:02:06.210><c> kind</c><00:02:06.479><c> of</c><00:02:06.509><c> like</c><00:02:07.280><c> underscore</c><00:02:08.280><c> underscore</c>

00:02:08.330 --> 00:02:08.340 align:start position:0%
it's kind of like underscore underscore
 

00:02:08.340 --> 00:02:10.460 align:start position:0%
it's kind of like underscore underscore
stir<00:02:08.879><c> or</c><00:02:09.209><c> underscore</c><00:02:09.660><c> underscore</c><00:02:09.780><c> wrapper</c>

00:02:10.460 --> 00:02:10.470 align:start position:0%
stir or underscore underscore wrapper
 

00:02:10.470 --> 00:02:12.890 align:start position:0%
stir or underscore underscore wrapper
and<00:02:11.129><c> Python</c><00:02:11.550><c> it's</c><00:02:12.060><c> just</c><00:02:12.300><c> something</c><00:02:12.690><c> you</c><00:02:12.750><c> can</c>

00:02:12.890 --> 00:02:12.900 align:start position:0%
and Python it's just something you can
 

00:02:12.900 --> 00:02:13.850 align:start position:0%
and Python it's just something you can
assume<00:02:13.170><c> is</c><00:02:13.290><c> there</c>

00:02:13.850 --> 00:02:13.860 align:start position:0%
assume is there
 

00:02:13.860 --> 00:02:15.170 align:start position:0%
assume is there
and<00:02:13.950><c> as</c><00:02:14.280><c> we</c><00:02:14.460><c> know</c><00:02:14.580><c> if</c><00:02:14.760><c> you</c><00:02:14.820><c> try</c><00:02:15.000><c> and</c><00:02:15.060><c> actually</c>

00:02:15.170 --> 00:02:15.180 align:start position:0%
and as we know if you try and actually
 

00:02:15.180 --> 00:02:16.580 align:start position:0%
and as we know if you try and actually
print<00:02:15.510><c> out</c><00:02:15.570><c> an</c><00:02:15.750><c> object</c><00:02:15.840><c> with</c><00:02:16.230><c> that</c><00:02:16.350><c> it's</c><00:02:16.530><c> a</c>

00:02:16.580 --> 00:02:16.590 align:start position:0%
print out an object with that it's a
 

00:02:16.590 --> 00:02:17.960 align:start position:0%
print out an object with that it's a
string<00:02:16.800><c> method</c><00:02:17.070><c> you</c><00:02:17.250><c> just</c><00:02:17.280><c> get</c><00:02:17.580><c> some</c><00:02:17.760><c> kind</c><00:02:17.940><c> of</c>

00:02:17.960 --> 00:02:17.970 align:start position:0%
string method you just get some kind of
 

00:02:17.970 --> 00:02:19.180 align:start position:0%
string method you just get some kind of
a<00:02:18.120><c> reference</c><00:02:18.540><c> that</c><00:02:18.600><c> doesn't</c><00:02:18.930><c> mean</c><00:02:19.020><c> anything</c>

00:02:19.180 --> 00:02:19.190 align:start position:0%
a reference that doesn't mean anything
 

00:02:19.190 --> 00:02:21.980 align:start position:0%
a reference that doesn't mean anything
but<00:02:20.190><c> methods</c><00:02:20.610><c> like</c><00:02:20.730><c> print</c><00:02:21.030><c> line</c><00:02:21.180><c> which</c><00:02:21.600><c> expect</c>

00:02:21.980 --> 00:02:21.990 align:start position:0%
but methods like print line which expect
 

00:02:21.990 --> 00:02:24.470 align:start position:0%
but methods like print line which expect
objects<00:02:22.410><c> know</c><00:02:23.280><c> that</c><00:02:23.730><c> they</c><00:02:23.850><c> can</c><00:02:24.000><c> call</c><00:02:24.210><c> the</c><00:02:24.360><c> de</c>

00:02:24.470 --> 00:02:24.480 align:start position:0%
objects know that they can call the de
 

00:02:24.480 --> 00:02:26.060 align:start position:0%
objects know that they can call the de
string<00:02:24.690><c> method</c><00:02:25.020><c> because</c><00:02:25.350><c> all</c><00:02:25.530><c> objects</c><00:02:26.010><c> have</c>

00:02:26.060 --> 00:02:26.070 align:start position:0%
string method because all objects have
 

00:02:26.070 --> 00:02:29.840 align:start position:0%
string method because all objects have
is<00:02:26.280><c> a</c><00:02:26.370><c> string</c><00:02:27.920><c> the</c><00:02:28.920><c> next</c><00:02:29.010><c> one</c><00:02:29.250><c> and</c><00:02:29.520><c> the</c><00:02:29.730><c> last</c>

00:02:29.840 --> 00:02:29.850 align:start position:0%
is a string the next one and the last
 

00:02:29.850 --> 00:02:32.660 align:start position:0%
is a string the next one and the last
one<00:02:30.000><c> here</c><00:02:30.270><c> will</c><00:02:30.600><c> be</c><00:02:30.720><c> equals</c><00:02:31.310><c> so</c><00:02:32.310><c> as</c><00:02:32.490><c> I</c>

00:02:32.660 --> 00:02:32.670 align:start position:0%
one here will be equals so as I
 

00:02:32.670 --> 00:02:34.010 align:start position:0%
one here will be equals so as I
mentioned<00:02:33.030><c> in</c><00:02:33.120><c> an</c><00:02:33.240><c> offhand</c><00:02:33.390><c> manner</c><00:02:33.660><c> in</c>

00:02:34.010 --> 00:02:34.020 align:start position:0%
mentioned in an offhand manner in
 

00:02:34.020 --> 00:02:36.830 align:start position:0%
mentioned in an offhand manner in
previous<00:02:34.440><c> lectures</c><00:02:35.190><c> the</c><00:02:35.820><c> equal</c><00:02:36.300><c> equals</c><00:02:36.660><c> and</c>

00:02:36.830 --> 00:02:36.840 align:start position:0%
previous lectures the equal equals and
 

00:02:36.840 --> 00:02:39.320 align:start position:0%
previous lectures the equal equals and
dot<00:02:37.170><c> equals</c><00:02:37.650><c> methods</c><00:02:38.040><c> are</c><00:02:38.490><c> so</c><00:02:38.700><c> the</c><00:02:39.060><c> equal</c>

00:02:39.320 --> 00:02:39.330 align:start position:0%
dot equals methods are so the equal
 

00:02:39.330 --> 00:02:41.090 align:start position:0%
dot equals methods are so the equal
equal<00:02:39.420><c> operator</c><00:02:39.900><c> and</c><00:02:40.170><c> the</c><00:02:40.260><c> dot</c><00:02:40.440><c> equals</c><00:02:40.740><c> method</c>

00:02:41.090 --> 00:02:41.100 align:start position:0%
equal operator and the dot equals method
 

00:02:41.100 --> 00:02:44.030 align:start position:0%
equal operator and the dot equals method
they<00:02:41.250><c> behave</c><00:02:41.580><c> differently</c><00:02:42.420><c> in</c><00:02:42.800><c> particular</c><00:02:43.800><c> if</c>

00:02:44.030 --> 00:02:44.040 align:start position:0%
they behave differently in particular if
 

00:02:44.040 --> 00:02:47.180 align:start position:0%
they behave differently in particular if
we<00:02:44.510><c> use</c><00:02:45.510><c> equal</c><00:02:45.900><c> equals</c><00:02:46.170><c> in</c><00:02:46.320><c> a</c><00:02:46.380><c> naive</c><00:02:46.530><c> way</c><00:02:46.830><c> well</c>

00:02:47.180 --> 00:02:47.190 align:start position:0%
we use equal equals in a naive way well
 

00:02:47.190 --> 00:02:49.130 align:start position:0%
we use equal equals in a naive way well
sometimes<00:02:47.520><c> get</c><00:02:47.700><c> results</c><00:02:48.000><c> it</c><00:02:48.120><c> don't</c><00:02:48.330><c> work</c><00:02:48.990><c> the</c>

00:02:49.130 --> 00:02:49.140 align:start position:0%
sometimes get results it don't work the
 

00:02:49.140 --> 00:02:51.170 align:start position:0%
sometimes get results it don't work the
way<00:02:49.170><c> we</c><00:02:49.380><c> expect</c><00:02:49.650><c> so</c><00:02:50.520><c> here</c><00:02:50.670><c> I</c><00:02:50.700><c> have</c><00:02:50.790><c> two</c><00:02:50.940><c> arrays</c>

00:02:51.170 --> 00:02:51.180 align:start position:0%
way we expect so here I have two arrays
 

00:02:51.180 --> 00:02:54.320 align:start position:0%
way we expect so here I have two arrays
x<00:02:51.480><c> and</c><00:02:51.660><c> y</c><00:02:51.750><c> and</c><00:02:52.620><c> they</c><00:02:52.830><c> are</c><00:02:53.040><c> new</c><00:02:53.430><c> int</c><00:02:53.700><c> arrays</c><00:02:54.060><c> so</c>

00:02:54.320 --> 00:02:54.330 align:start position:0%
x and y and they are new int arrays so
 

00:02:54.330 --> 00:02:57.080 align:start position:0%
x and y and they are new int arrays so
they<00:02:54.600><c> have</c><00:02:54.750><c> their</c><00:02:55.170><c> different</c><00:02:55.620><c> instances</c><00:02:56.090><c> so</c>

00:02:57.080 --> 00:02:57.090 align:start position:0%
they have their different instances so
 

00:02:57.090 --> 00:02:58.760 align:start position:0%
they have their different instances so
these<00:02:57.239><c> 64</c><00:02:57.600><c> bits</c><00:02:57.930><c> in</c><00:02:58.050><c> these</c><00:02:58.170><c> two</c><00:02:58.320><c> boxes</c><00:02:58.470><c> are</c>

00:02:58.760 --> 00:02:58.770 align:start position:0%
these 64 bits in these two boxes are
 

00:02:58.770 --> 00:02:59.750 align:start position:0%
these 64 bits in these two boxes are
different<00:02:59.070><c> they're</c><00:02:59.220><c> referring</c><00:02:59.550><c> to</c><00:02:59.640><c> different</c>

00:02:59.750 --> 00:02:59.760 align:start position:0%
different they're referring to different
 

00:02:59.760 --> 00:03:02.090 align:start position:0%
different they're referring to different
copies<00:03:00.239><c> of</c><00:03:00.420><c> the</c><00:03:00.510><c> same</c><00:03:00.660><c> information</c><00:03:00.900><c> so</c><00:03:01.320><c> you</c>

00:03:02.090 --> 00:03:02.100 align:start position:0%
copies of the same information so you
 

00:03:02.100 --> 00:03:03.860 align:start position:0%
copies of the same information so you
and<00:03:02.280><c> I</c><00:03:02.340><c> might</c><00:03:02.550><c> assume</c><00:03:02.880><c> okay</c><00:03:03.180><c> well</c><00:03:03.360><c> x</c><00:03:03.600><c> and</c><00:03:03.780><c> y</c>

00:03:03.860 --> 00:03:03.870 align:start position:0%
and I might assume okay well x and y
 

00:03:03.870 --> 00:03:05.630 align:start position:0%
and I might assume okay well x and y
those<00:03:04.110><c> seem</c><00:03:04.260><c> pretty</c><00:03:04.410><c> equal</c><00:03:04.770><c> so</c><00:03:05.220><c> I</c><00:03:05.250><c> print</c><00:03:05.520><c> this</c>

00:03:05.630 --> 00:03:05.640 align:start position:0%
those seem pretty equal so I print this
 

00:03:05.640 --> 00:03:07.910 align:start position:0%
those seem pretty equal so I print this
out<00:03:05.790><c> we</c><00:03:06.180><c> expect</c><00:03:06.480><c> maybe</c><00:03:06.660><c> to</c><00:03:06.810><c> get</c><00:03:06.900><c> true</c><00:03:07.260><c> however</c>

00:03:07.910 --> 00:03:07.920 align:start position:0%
out we expect maybe to get true however
 

00:03:07.920 --> 00:03:09.560 align:start position:0%
out we expect maybe to get true however
if<00:03:08.250><c> you</c><00:03:08.400><c> run</c><00:03:08.550><c> this</c><00:03:08.670><c> program</c><00:03:08.850><c> you</c><00:03:09.180><c> actually</c><00:03:09.209><c> get</c>

00:03:09.560 --> 00:03:09.570 align:start position:0%
if you run this program you actually get
 

00:03:09.570 --> 00:03:11.180 align:start position:0%
if you run this program you actually get
false<00:03:09.810><c> and</c><00:03:10.200><c> that's</c><00:03:10.380><c> because</c><00:03:10.680><c> what</c><00:03:10.920><c> equal</c>

00:03:11.180 --> 00:03:11.190 align:start position:0%
false and that's because what equal
 

00:03:11.190 --> 00:03:12.800 align:start position:0%
false and that's because what equal
equals<00:03:11.489><c> does</c><00:03:11.670><c> is</c><00:03:11.850><c> compares</c><00:03:12.270><c> the</c><00:03:12.390><c> bits</c><00:03:12.570><c> and</c><00:03:12.690><c> the</c>

00:03:12.800 --> 00:03:12.810 align:start position:0%
equals does is compares the bits and the
 

00:03:12.810 --> 00:03:15.380 align:start position:0%
equals does is compares the bits and the
boxes<00:03:13.170><c> it</c><00:03:13.530><c> says</c><00:03:13.739><c> are</c><00:03:13.950><c> these</c><00:03:14.100><c> 64</c><00:03:14.459><c> bits</c><00:03:14.790><c> the</c><00:03:15.209><c> same</c>

00:03:15.380 --> 00:03:15.390 align:start position:0%
boxes it says are these 64 bits the same
 

00:03:15.390 --> 00:03:17.060 align:start position:0%
boxes it says are these 64 bits the same
as<00:03:15.540><c> these</c><00:03:15.720><c> and</c><00:03:16.230><c> in</c><00:03:16.320><c> this</c><00:03:16.410><c> case</c><00:03:16.620><c> the</c><00:03:16.770><c> answer</c><00:03:16.980><c> is</c>

00:03:17.060 --> 00:03:17.070 align:start position:0%
as these and in this case the answer is
 

00:03:17.070 --> 00:03:19.720 align:start position:0%
as these and in this case the answer is
no<00:03:17.250><c> so</c><00:03:17.550><c> the</c><00:03:17.640><c> answer</c><00:03:17.880><c> to</c><00:03:18.180><c> this</c><00:03:18.630><c> query</c><00:03:18.959><c> is</c><00:03:19.230><c> false</c>

00:03:19.720 --> 00:03:19.730 align:start position:0%
no so the answer to this query is false
 

00:03:19.730 --> 00:03:22.130 align:start position:0%
no so the answer to this query is false
so<00:03:20.730><c> if</c><00:03:20.850><c> you</c><00:03:21.000><c> want</c><00:03:21.209><c> to</c><00:03:21.239><c> actually</c><00:03:21.390><c> test</c><00:03:21.660><c> equality</c>

00:03:22.130 --> 00:03:22.140 align:start position:0%
so if you want to actually test equality
 

00:03:22.140 --> 00:03:24.860 align:start position:0%
so if you want to actually test equality
well<00:03:22.590><c> with</c><00:03:22.950><c> arrays</c><00:03:23.250><c> you</c><00:03:24.060><c> usually</c><00:03:24.269><c> use</c><00:03:24.570><c> arrays</c>

00:03:24.860 --> 00:03:24.870 align:start position:0%
well with arrays you usually use arrays
 

00:03:24.870 --> 00:03:26.840 align:start position:0%
well with arrays you usually use arrays
equal<00:03:25.410><c> or</c><00:03:25.769><c> if</c><00:03:26.130><c> you</c><00:03:26.250><c> have</c><00:03:26.340><c> arrays</c><00:03:26.580><c> of</c><00:03:26.610><c> arrays</c>

00:03:26.840 --> 00:03:26.850 align:start position:0%
equal or if you have arrays of arrays
 

00:03:26.850 --> 00:03:29.660 align:start position:0%
equal or if you have arrays of arrays
you'd<00:03:27.180><c> use</c><00:03:27.330><c> arrays</c><00:03:27.690><c> dot</c><00:03:27.930><c> DP</c><00:03:28.350><c> equals</c><00:03:28.610><c> and</c><00:03:29.610><c> if</c>

00:03:29.660 --> 00:03:29.670 align:start position:0%
you'd use arrays dot DP equals and if
 

00:03:29.670 --> 00:03:31.789 align:start position:0%
you'd use arrays dot DP equals and if
you<00:03:29.760><c> have</c><00:03:29.850><c> classes</c><00:03:30.150><c> you</c><00:03:30.660><c> have</c><00:03:30.840><c> instances</c><00:03:31.560><c> of</c>

00:03:31.789 --> 00:03:31.799 align:start position:0%
you have classes you have instances of
 

00:03:31.799 --> 00:03:33.470 align:start position:0%
you have classes you have instances of
objects<00:03:32.130><c> of</c><00:03:32.310><c> some</c><00:03:32.459><c> kind</c><00:03:32.670><c> we</c><00:03:33.060><c> would</c><00:03:33.180><c> use</c><00:03:33.299><c> there</c>

00:03:33.470 --> 00:03:33.480 align:start position:0%
objects of some kind we would use there
 

00:03:33.480 --> 00:03:35.810 align:start position:0%
objects of some kind we would use there
dot<00:03:33.630><c> equals</c><00:03:33.959><c> method</c><00:03:34.290><c> and</c><00:03:35.070><c> if</c><00:03:35.340><c> you</c><00:03:35.489><c> want</c><00:03:35.670><c> it</c><00:03:35.730><c> to</c>

00:03:35.810 --> 00:03:35.820 align:start position:0%
dot equals method and if you want it to
 

00:03:35.820 --> 00:03:37.430 align:start position:0%
dot equals method and if you want it to
work<00:03:35.850><c> properly</c><00:03:35.970><c> that</c><00:03:36.810><c> means</c><00:03:36.959><c> you</c><00:03:37.170><c> have</c><00:03:37.320><c> to</c>

00:03:37.430 --> 00:03:37.440 align:start position:0%
work properly that means you have to
 

00:03:37.440 --> 00:03:39.020 align:start position:0%
work properly that means you have to
write<00:03:37.560><c> the</c><00:03:37.709><c> dot</c><00:03:37.830><c> equals</c><00:03:38.160><c> method</c><00:03:38.459><c> because</c><00:03:38.850><c> the</c>

00:03:39.020 --> 00:03:39.030 align:start position:0%
write the dot equals method because the
 

00:03:39.030 --> 00:03:40.850 align:start position:0%
write the dot equals method because the
default<00:03:39.360><c> implementation</c><00:03:40.019><c> is</c><00:03:40.140><c> equal</c><00:03:40.590><c> equals</c>

00:03:40.850 --> 00:03:40.860 align:start position:0%
default implementation is equal equals
 

00:03:40.860 --> 00:03:43.370 align:start position:0%
default implementation is equal equals
and<00:03:41.070><c> in</c><00:03:41.459><c> that</c><00:03:41.610><c> case</c><00:03:41.790><c> it</c><00:03:42.420><c> wouldn't</c><00:03:42.660><c> work</c><00:03:42.780><c> if</c><00:03:43.019><c> we</c>

00:03:43.370 --> 00:03:43.380 align:start position:0%
and in that case it wouldn't work if we
 

00:03:43.380 --> 00:03:45.620 align:start position:0%
and in that case it wouldn't work if we
wanted<00:03:43.620><c> to</c><00:03:43.739><c> compare</c><00:03:44.130><c> say</c><00:03:44.370><c> two</c><00:03:44.430><c> dates</c><00:03:45.090><c> as</c><00:03:45.390><c> we'll</c>

00:03:45.620 --> 00:03:45.630 align:start position:0%
wanted to compare say two dates as we'll
 

00:03:45.630 --> 00:03:47.710 align:start position:0%
wanted to compare say two dates as we'll
do<00:03:45.750><c> in</c><00:03:45.840><c> a</c><00:03:45.870><c> moment</c><00:03:45.989><c> using</c><00:03:46.799><c> the</c><00:03:47.010><c> default</c><00:03:47.340><c> method</c>

00:03:47.710 --> 00:03:47.720 align:start position:0%
do in a moment using the default method
 

00:03:47.720 --> 00:03:50.360 align:start position:0%
do in a moment using the default method
so<00:03:48.720><c> what</c><00:03:48.840><c> I</c><00:03:48.870><c> mean</c><00:03:49.019><c> by</c><00:03:49.170><c> date</c><00:03:49.380><c> well</c><00:03:50.070><c> this</c><00:03:50.220><c> is</c><00:03:50.340><c> a</c>

00:03:50.360 --> 00:03:50.370 align:start position:0%
so what I mean by date well this is a
 

00:03:50.370 --> 00:03:52.070 align:start position:0%
so what I mean by date well this is a
class<00:03:50.640><c> I</c><00:03:50.820><c> used</c><00:03:51.000><c> very</c><00:03:51.120><c> briefly</c><00:03:51.630><c> in</c><00:03:51.810><c> one</c><00:03:51.840><c> of</c><00:03:52.019><c> the</c>

00:03:52.070 --> 00:03:52.080 align:start position:0%
class I used very briefly in one of the
 

00:03:52.080 --> 00:03:53.570 align:start position:0%
class I used very briefly in one of the
earlier<00:03:52.350><c> lectures</c><00:03:52.410><c> and</c><00:03:52.950><c> it</c><00:03:53.250><c> just</c><00:03:53.430><c> represents</c>

00:03:53.570 --> 00:03:53.580 align:start position:0%
earlier lectures and it just represents
 

00:03:53.580 --> 00:03:56.720 align:start position:0%
earlier lectures and it just represents
a<00:03:54.030><c> day</c><00:03:54.299><c> of</c><00:03:54.450><c> the</c><00:03:54.570><c> year</c><00:03:55.040><c> here</c><00:03:56.040><c> we</c><00:03:56.160><c> have</c><00:03:56.310><c> the</c><00:03:56.519><c> month</c>

00:03:56.720 --> 00:03:56.730 align:start position:0%
a day of the year here we have the month
 

00:03:56.730 --> 00:03:58.789 align:start position:0%
a day of the year here we have the month
the<00:03:57.150><c> day</c><00:03:57.330><c> the</c><00:03:57.750><c> year</c><00:03:57.930><c> they're</c><00:03:58.230><c> just</c><00:03:58.410><c> three</c><00:03:58.560><c> ants</c>

00:03:58.789 --> 00:03:58.799 align:start position:0%
the day the year they're just three ants
 

00:03:58.799 --> 00:04:01.039 align:start position:0%
the day the year they're just three ants
there's<00:03:59.549><c> a</c><00:03:59.640><c> date</c><00:03:59.850><c> method</c><00:04:00.209><c> or</c><00:04:00.390><c> the</c><00:04:00.450><c> constructor</c>

00:04:01.039 --> 00:04:01.049 align:start position:0%
there's a date method or the constructor
 

00:04:01.049 --> 00:04:03.590 align:start position:0%
there's a date method or the constructor
and<00:04:01.260><c> then</c><00:04:01.410><c> other</c><00:04:01.739><c> stuff</c><00:04:01.980><c> not</c><00:04:02.160><c> shown</c><00:04:02.430><c> and</c><00:04:02.730><c> so</c>

00:04:03.590 --> 00:04:03.600 align:start position:0%
and then other stuff not shown and so
 

00:04:03.600 --> 00:04:04.670 align:start position:0%
and then other stuff not shown and so
what<00:04:03.750><c> I'm</c><00:04:03.840><c> going</c><00:04:03.930><c> to</c><00:04:04.019><c> show</c><00:04:04.140><c> you</c><00:04:04.200><c> is</c><00:04:04.350><c> what</c><00:04:04.560><c> it's</c>

00:04:04.670 --> 00:04:04.680 align:start position:0%
what I'm going to show you is what it's
 

00:04:04.680 --> 00:04:06.620 align:start position:0%
what I'm going to show you is what it's
like<00:04:04.830><c> to</c><00:04:05.010><c> write</c><00:04:05.160><c> a</c><00:04:05.370><c> equals</c><00:04:05.850><c> method</c><00:04:06.150><c> so</c><00:04:06.420><c> that</c><00:04:06.540><c> we</c>

00:04:06.620 --> 00:04:06.630 align:start position:0%
like to write a equals method so that we
 

00:04:06.630 --> 00:04:08.630 align:start position:0%
like to write a equals method so that we
pass<00:04:06.810><c> some</c><00:04:07.019><c> tests</c><00:04:07.380><c> if</c><00:04:08.040><c> you'd</c><00:04:08.250><c> like</c><00:04:08.370><c> you</c><00:04:08.519><c> can</c>

00:04:08.630 --> 00:04:08.640 align:start position:0%
pass some tests if you'd like you can
 

00:04:08.640 --> 00:04:10.370 align:start position:0%
pass some tests if you'd like you can
actually<00:04:08.760><c> just</c><00:04:08.970><c> try</c><00:04:09.180><c> it</c><00:04:09.269><c> on</c><00:04:09.360><c> your</c><00:04:09.510><c> own</c><00:04:09.690><c> and</c><00:04:09.900><c> you</c>

00:04:10.370 --> 00:04:10.380 align:start position:0%
actually just try it on your own and you
 

00:04:10.380 --> 00:04:11.420 align:start position:0%
actually just try it on your own and you
don't<00:04:10.410><c> have</c><00:04:10.590><c> to</c><00:04:10.680><c> actually</c><00:04:10.769><c> watch</c><00:04:11.040><c> this</c><00:04:11.280><c> part</c>

00:04:11.420 --> 00:04:11.430 align:start position:0%
don't have to actually watch this part
 

00:04:11.430 --> 00:04:14.569 align:start position:0%
don't have to actually watch this part
of<00:04:11.549><c> the</c><00:04:11.670><c> video</c><00:04:12.120><c> in</c><00:04:12.510><c> order</c><00:04:12.900><c> to</c><00:04:12.989><c> do</c><00:04:13.980><c> this</c><00:04:14.190><c> I</c><00:04:14.430><c> think</c>

00:04:14.569 --> 00:04:14.579 align:start position:0%
of the video in order to do this I think
 

00:04:14.579 --> 00:04:16.009 align:start position:0%
of the video in order to do this I think
you<00:04:14.820><c> can</c><00:04:14.970><c> try</c><00:04:15.180><c> and</c><00:04:15.269><c> use</c><00:04:15.360><c> your</c><00:04:15.510><c> intuition</c><00:04:15.930><c> you</c>

00:04:16.009 --> 00:04:16.019 align:start position:0%
you can try and use your intuition you
 

00:04:16.019 --> 00:04:19.069 align:start position:0%
you can try and use your intuition you
can<00:04:16.109><c> get</c><00:04:16.200><c> pretty</c><00:04:16.350><c> close</c><00:04:16.549><c> and</c><00:04:17.579><c> this</c><00:04:18.030><c> it'll</c><00:04:18.959><c> be</c>

00:04:19.069 --> 00:04:19.079 align:start position:0%
can get pretty close and this it'll be
 

00:04:19.079 --> 00:04:20.719 align:start position:0%
can get pretty close and this it'll be
here<00:04:19.229><c> in</c><00:04:19.320><c> this</c><00:04:19.440><c> end</c><00:04:20.070><c> the</c><00:04:20.160><c> lecture</c><00:04:20.280><c> code</c><00:04:20.579><c> repo</c>

00:04:20.719 --> 00:04:20.729 align:start position:0%
here in this end the lecture code repo
 

00:04:20.729 --> 00:04:23.810 align:start position:0%
here in this end the lecture code repo
and<00:04:21.090><c> I'll</c><00:04:21.390><c> just</c><00:04:21.540><c> jump</c><00:04:21.690><c> right</c><00:04:21.750><c> into</c><00:04:21.900><c> that</c><00:04:22.820><c> so</c>

00:04:23.810 --> 00:04:23.820 align:start position:0%
and I'll just jump right into that so
 

00:04:23.820 --> 00:04:25.880 align:start position:0%
and I'll just jump right into that so
right<00:04:24.090><c> what</c><00:04:24.330><c> I'm</c><00:04:24.419><c> showing</c><00:04:24.570><c> here</c><00:04:24.720><c> now</c><00:04:25.110><c> is</c><00:04:25.349><c> this</c>

00:04:25.880 --> 00:04:25.890 align:start position:0%
right what I'm showing here now is this
 

00:04:25.890 --> 00:04:26.210 align:start position:0%
right what I'm showing here now is this
is<00:04:26.039><c> the</c>

00:04:26.210 --> 00:04:26.220 align:start position:0%
is the
 

00:04:26.220 --> 00:04:27.230 align:start position:0%
is the
eight<00:04:26.310><c> class</c><00:04:26.550><c> and</c><00:04:26.760><c> we</c><00:04:26.820><c> just</c><00:04:27.000><c> had</c><00:04:27.090><c> on</c><00:04:27.210><c> the</c>

00:04:27.230 --> 00:04:27.240 align:start position:0%
eight class and we just had on the
 

00:04:27.240 --> 00:04:29.600 align:start position:0%
eight class and we just had on the
previous<00:04:27.390><c> slide</c><00:04:27.600><c> and</c><00:04:28.530><c> this</c><00:04:28.710><c> is</c><00:04:28.860><c> a</c><00:04:28.890><c> test</c><00:04:29.220><c> that's</c>

00:04:29.600 --> 00:04:29.610 align:start position:0%
previous slide and this is a test that's
 

00:04:29.610 --> 00:04:31.400 align:start position:0%
previous slide and this is a test that's
gonna<00:04:29.820><c> see</c><00:04:30.030><c> if</c><00:04:30.240><c> two</c><00:04:30.660><c> dates</c><00:04:30.870><c> are</c><00:04:31.050><c> actually</c>

00:04:31.400 --> 00:04:31.410 align:start position:0%
gonna see if two dates are actually
 

00:04:31.410 --> 00:04:34.100 align:start position:0%
gonna see if two dates are actually
equals<00:04:32.010><c> properly</c><00:04:32.430><c> so</c><00:04:33.240><c> in</c><00:04:33.390><c> JUnit</c><00:04:33.870><c> when</c><00:04:34.020><c> you</c>

00:04:34.100 --> 00:04:34.110 align:start position:0%
equals properly so in JUnit when you
 

00:04:34.110 --> 00:04:36.350 align:start position:0%
equals properly so in JUnit when you
call<00:04:34.410><c> assert</c><00:04:34.800><c> equals</c><00:04:34.980><c> the</c><00:04:35.670><c> way</c><00:04:35.820><c> it</c><00:04:35.940><c> works</c><00:04:36.120><c> is</c>

00:04:36.350 --> 00:04:36.360 align:start position:0%
call assert equals the way it works is
 

00:04:36.360 --> 00:04:39.560 align:start position:0%
call assert equals the way it works is
it<00:04:36.510><c> says</c><00:04:36.720><c> if</c><00:04:37.200><c> I</c><00:04:37.380><c> call</c><00:04:37.680><c> d1</c><00:04:38.190><c> a</c><00:04:38.430><c> and</c><00:04:38.730><c> I</c><00:04:39.180><c> do</c><00:04:39.240><c> dot</c>

00:04:39.560 --> 00:04:39.570 align:start position:0%
it says if I call d1 a and I do dot
 

00:04:39.570 --> 00:04:42.380 align:start position:0%
it says if I call d1 a and I do dot
equals<00:04:39.930><c> D</c><00:04:40.140><c> 1</c><00:04:40.320><c> a</c><00:04:40.470><c> is</c><00:04:40.920><c> the</c><00:04:41.130><c> answer</c><00:04:41.400><c> true</c><00:04:41.820><c> and</c><00:04:42.030><c> if</c>

00:04:42.380 --> 00:04:42.390 align:start position:0%
equals D 1 a is the answer true and if
 

00:04:42.390 --> 00:04:44.180 align:start position:0%
equals D 1 a is the answer true and if
so<00:04:42.600><c> we'll</c><00:04:42.930><c> be</c><00:04:43.050><c> okay</c><00:04:43.320><c> otherwise</c><00:04:43.710><c> we'll</c><00:04:44.010><c> throw</c>

00:04:44.180 --> 00:04:44.190 align:start position:0%
so we'll be okay otherwise we'll throw
 

00:04:44.190 --> 00:04:48.470 align:start position:0%
so we'll be okay otherwise we'll throw
an<00:04:44.280><c> error</c><00:04:44.960><c> so</c><00:04:45.960><c> this</c><00:04:46.110><c> right</c><00:04:46.320><c> here</c><00:04:47.060><c> we</c><00:04:48.060><c> the</c><00:04:48.270><c> way</c>

00:04:48.470 --> 00:04:48.480 align:start position:0%
an error so this right here we the way
 

00:04:48.480 --> 00:04:49.970 align:start position:0%
an error so this right here we the way
that<00:04:48.780><c> the</c><00:04:48.930><c> code</c><00:04:49.170><c> actually</c><00:04:49.410><c> works</c><00:04:49.770><c> the</c><00:04:49.860><c> way</c>

00:04:49.970 --> 00:04:49.980 align:start position:0%
that the code actually works the way
 

00:04:49.980 --> 00:04:51.440 align:start position:0%
that the code actually works the way
this<00:04:50.070><c> J</c><00:04:50.220><c> unit</c><00:04:50.370><c> works</c><00:04:50.610><c> it</c><00:04:50.790><c> relies</c><00:04:51.120><c> on</c><00:04:51.150><c> the</c>

00:04:51.440 --> 00:04:51.450 align:start position:0%
this J unit works it relies on the
 

00:04:51.450 --> 00:04:53.390 align:start position:0%
this J unit works it relies on the
equals<00:04:51.780><c> implementation</c><00:04:52.410><c> of</c><00:04:52.530><c> date</c><00:04:52.710><c> which</c><00:04:53.190><c> as</c>

00:04:53.390 --> 00:04:53.400 align:start position:0%
equals implementation of date which as
 

00:04:53.400 --> 00:04:55.100 align:start position:0%
equals implementation of date which as
we<00:04:53.550><c> know</c><00:04:53.700><c> since</c><00:04:54.270><c> it's</c><00:04:54.390><c> not</c><00:04:54.480><c> overwritten</c><00:04:54.900><c> is</c>

00:04:55.100 --> 00:04:55.110 align:start position:0%
we know since it's not overwritten is
 

00:04:55.110 --> 00:04:57.590 align:start position:0%
we know since it's not overwritten is
just<00:04:55.380><c> the</c><00:04:55.470><c> equal</c><00:04:55.710><c> equal</c><00:04:55.770><c> operator</c><00:04:56.270><c> so</c><00:04:57.270><c> this</c>

00:04:57.590 --> 00:04:57.600 align:start position:0%
just the equal equal operator so this
 

00:04:57.600 --> 00:05:00.140 align:start position:0%
just the equal equal operator so this
first<00:04:57.840><c> date</c><00:04:58.020><c> is</c><00:04:58.200><c> just</c><00:04:58.470><c> May</c><00:04:58.830><c> 10th</c><00:04:59.160><c> 2010</c><00:04:59.640><c> this</c><00:05:00.090><c> is</c>

00:05:00.140 --> 00:05:00.150 align:start position:0%
first date is just May 10th 2010 this is
 

00:05:00.150 --> 00:05:02.030 align:start position:0%
first date is just May 10th 2010 this is
another<00:05:00.480><c> copy</c><00:05:00.780><c> of</c><00:05:00.900><c> the</c><00:05:01.080><c> same</c><00:05:01.260><c> date</c><00:05:01.470><c> then</c><00:05:01.980><c> we</c>

00:05:02.030 --> 00:05:02.040 align:start position:0%
another copy of the same date then we
 

00:05:02.040 --> 00:05:04.790 align:start position:0%
another copy of the same date then we
have<00:05:02.130><c> D</c><00:05:02.310><c> 2</c><00:05:02.490><c> and</c><00:05:02.730><c> so</c><00:05:03.360><c> this</c><00:05:03.780><c> test</c><00:05:04.020><c> assuming</c><00:05:04.650><c> that</c>

00:05:04.790 --> 00:05:04.800 align:start position:0%
have D 2 and so this test assuming that
 

00:05:04.800 --> 00:05:06.530 align:start position:0%
have D 2 and so this test assuming that
we've<00:05:04.920><c> written</c><00:05:05.640><c> an</c><00:05:05.880><c> equals</c><00:05:06.150><c> method</c><00:05:06.450><c> that</c>

00:05:06.530 --> 00:05:06.540 align:start position:0%
we've written an equals method that
 

00:05:06.540 --> 00:05:09.370 align:start position:0%
we've written an equals method that
works<00:05:06.690><c> we</c><00:05:07.290><c> should</c><00:05:07.470><c> pass</c><00:05:07.620><c> it</c><00:05:07.820><c> now</c><00:05:08.820><c> if</c><00:05:08.910><c> we</c><00:05:09.000><c> run</c><00:05:09.150><c> it</c>

00:05:09.370 --> 00:05:09.380 align:start position:0%
works we should pass it now if we run it
 

00:05:09.380 --> 00:05:12.110 align:start position:0%
works we should pass it now if we run it
will<00:05:10.380><c> see</c><00:05:10.530><c> that</c><00:05:10.620><c> we</c><00:05:10.740><c> fail</c><00:05:10.950><c> and</c><00:05:11.340><c> in</c><00:05:11.730><c> fact</c><00:05:11.880><c> we</c>

00:05:12.110 --> 00:05:12.120 align:start position:0%
will see that we fail and in fact we
 

00:05:12.120 --> 00:05:14.480 align:start position:0%
will see that we fail and in fact we
fail<00:05:12.360><c> on</c><00:05:12.630><c> the</c><00:05:12.750><c> second</c><00:05:13.050><c> line</c><00:05:13.170><c> so</c><00:05:13.920><c> D</c><00:05:14.130><c> 1</c><00:05:14.280><c> a</c><00:05:14.370><c> is</c>

00:05:14.480 --> 00:05:14.490 align:start position:0%
fail on the second line so D 1 a is
 

00:05:14.490 --> 00:05:16.430 align:start position:0%
fail on the second line so D 1 a is
considered<00:05:14.940><c> D</c><00:05:15.090><c> 1</c><00:05:15.240><c> a</c><00:05:15.390><c> because</c><00:05:15.960><c> they're</c><00:05:16.230><c> equal</c>

00:05:16.430 --> 00:05:16.440 align:start position:0%
considered D 1 a because they're equal
 

00:05:16.440 --> 00:05:19.190 align:start position:0%
considered D 1 a because they're equal
equals<00:05:16.740><c> however</c><00:05:17.460><c> D</c><00:05:18.060><c> 1</c><00:05:18.240><c> a</c><00:05:18.330><c> and</c><00:05:18.480><c> D</c><00:05:18.630><c> 1</c><00:05:18.780><c> B</c><00:05:18.930><c> are</c><00:05:19.050><c> not</c>

00:05:19.190 --> 00:05:19.200 align:start position:0%
equals however D 1 a and D 1 B are not
 

00:05:19.200 --> 00:05:21.140 align:start position:0%
equals however D 1 a and D 1 B are not
equal<00:05:19.280><c> so</c><00:05:20.280><c> let's</c><00:05:20.400><c> try</c><00:05:20.550><c> writing</c><00:05:20.790><c> an</c><00:05:20.880><c> equals</c>

00:05:21.140 --> 00:05:21.150 align:start position:0%
equal so let's try writing an equals
 

00:05:21.150 --> 00:05:25.070 align:start position:0%
equal so let's try writing an equals
method<00:05:21.770><c> so</c><00:05:22.770><c> I</c><00:05:22.800><c> might</c><00:05:22.980><c> do</c><00:05:23.100><c> public</c><00:05:23.940><c> boolean</c><00:05:24.390><c> in</c>

00:05:25.070 --> 00:05:25.080 align:start position:0%
method so I might do public boolean in
 

00:05:25.080 --> 00:05:31.610 align:start position:0%
method so I might do public boolean in
this<00:05:25.320><c> case</c><00:05:25.850><c> equals</c><00:05:27.320><c> we'll</c><00:05:28.320><c> do</c><00:05:28.470><c> date</c><00:05:28.800><c> o</c><00:05:29.510><c> D</c><00:05:30.620><c> and</c>

00:05:31.610 --> 00:05:31.620 align:start position:0%
this case equals we'll do date o D and
 

00:05:31.620 --> 00:05:34.250 align:start position:0%
this case equals we'll do date o D and
then<00:05:31.860><c> we'll</c><00:05:32.190><c> do</c><00:05:32.310><c> some</c><00:05:32.490><c> stuff</c><00:05:33.000><c> now</c><00:05:33.450><c> one</c><00:05:34.050><c> issue</c>

00:05:34.250 --> 00:05:34.260 align:start position:0%
then we'll do some stuff now one issue
 

00:05:34.260 --> 00:05:36.860 align:start position:0%
then we'll do some stuff now one issue
that<00:05:34.590><c> I</c><00:05:35.550><c> want</c><00:05:35.760><c> to</c><00:05:35.820><c> bring</c><00:05:35.940><c> up</c><00:05:36.090><c> here</c><00:05:36.120><c> before</c><00:05:36.840><c> I</c>

00:05:36.860 --> 00:05:36.870 align:start position:0%
that I want to bring up here before I
 

00:05:36.870 --> 00:05:38.540 align:start position:0%
that I want to bring up here before I
even<00:05:37.020><c> start</c><00:05:37.290><c> writing</c><00:05:37.500><c> code</c><00:05:37.530><c> is</c><00:05:37.890><c> that</c><00:05:38.190><c> when</c><00:05:38.460><c> you</c>

00:05:38.540 --> 00:05:38.550 align:start position:0%
even start writing code is that when you
 

00:05:38.550 --> 00:05:40.310 align:start position:0%
even start writing code is that when you
override<00:05:39.030><c> a</c><00:05:39.060><c> method</c><00:05:39.150><c> you</c><00:05:39.570><c> should</c><00:05:39.750><c> always</c><00:05:40.020><c> put</c>

00:05:40.310 --> 00:05:40.320 align:start position:0%
override a method you should always put
 

00:05:40.320 --> 00:05:44.000 align:start position:0%
override a method you should always put
override<00:05:41.280><c> okay</c><00:05:42.090><c> I</c><00:05:42.270><c> just</c><00:05:42.570><c> put</c><00:05:42.720><c> it</c><00:05:42.890><c> because</c><00:05:43.890><c> one</c>

00:05:44.000 --> 00:05:44.010 align:start position:0%
override okay I just put it because one
 

00:05:44.010 --> 00:05:45.320 align:start position:0%
override okay I just put it because one
of<00:05:44.040><c> the</c><00:05:44.160><c> things</c><00:05:44.340><c> you'll</c><00:05:44.460><c> find</c><00:05:44.520><c> is</c><00:05:44.910><c> that</c><00:05:44.940><c> maybe</c>

00:05:45.320 --> 00:05:45.330 align:start position:0%
of the things you'll find is that maybe
 

00:05:45.330 --> 00:05:46.909 align:start position:0%
of the things you'll find is that maybe
you<00:05:45.450><c> screwed</c><00:05:45.690><c> up</c><00:05:45.810><c> in</c><00:05:45.960><c> your</c><00:05:46.290><c> method</c><00:05:46.530><c> signature</c>

00:05:46.909 --> 00:05:46.919 align:start position:0%
you screwed up in your method signature
 

00:05:46.919 --> 00:05:49.340 align:start position:0%
you screwed up in your method signature
here<00:05:47.250><c> I</c><00:05:47.280><c> messed</c><00:05:47.580><c> up</c><00:05:47.729><c> when</c><00:05:48.390><c> I</c><00:05:48.419><c> said</c><00:05:48.630><c> override</c><00:05:49.080><c> I</c>

00:05:49.340 --> 00:05:49.350 align:start position:0%
here I messed up when I said override I
 

00:05:49.350 --> 00:05:50.600 align:start position:0%
here I messed up when I said override I
didn't<00:05:49.770><c> actually</c><00:05:49.890><c> override</c><00:05:50.370><c> the</c><00:05:50.520><c> method</c>

00:05:50.600 --> 00:05:50.610 align:start position:0%
didn't actually override the method
 

00:05:50.610 --> 00:05:53.120 align:start position:0%
didn't actually override the method
which<00:05:51.030><c> is</c><00:05:51.210><c> supposed</c><00:05:51.450><c> to</c><00:05:51.540><c> be</c><00:05:51.750><c> if</c><00:05:52.440><c> we</c><00:05:52.620><c> go</c><00:05:52.770><c> look</c><00:05:52.950><c> at</c>

00:05:53.120 --> 00:05:53.130 align:start position:0%
which is supposed to be if we go look at
 

00:05:53.130 --> 00:05:56.150 align:start position:0%
which is supposed to be if we go look at
the<00:05:53.660><c> method</c><00:05:54.660><c> signature</c><00:05:55.050><c> must</c><00:05:55.500><c> be</c><00:05:55.680><c> equals</c>

00:05:56.150 --> 00:05:56.160 align:start position:0%
the method signature must be equals
 

00:05:56.160 --> 00:05:59.510 align:start position:0%
the method signature must be equals
object<00:05:57.680><c> so</c><00:05:58.680><c> in</c><00:05:58.770><c> other</c><00:05:58.890><c> words</c><00:05:59.040><c> we</c><00:05:59.310><c> need</c><00:05:59.460><c> to</c>

00:05:59.510 --> 00:05:59.520 align:start position:0%
object so in other words we need to
 

00:05:59.520 --> 00:06:01.310 align:start position:0%
object so in other words we need to
change<00:05:59.729><c> this</c><00:05:59.970><c> object</c><00:06:00.240><c> and</c><00:06:00.570><c> that's</c><00:06:00.810><c> incredibly</c>

00:06:01.310 --> 00:06:01.320 align:start position:0%
change this object and that's incredibly
 

00:06:01.320 --> 00:06:03.050 align:start position:0%
change this object and that's incredibly
important<00:06:01.800><c> because</c><00:06:02.100><c> if</c><00:06:02.310><c> we</c><00:06:02.340><c> didn't</c><00:06:02.729><c> do</c><00:06:02.880><c> that</c>

00:06:03.050 --> 00:06:03.060 align:start position:0%
important because if we didn't do that
 

00:06:03.060 --> 00:06:04.490 align:start position:0%
important because if we didn't do that
then<00:06:03.450><c> it's</c><00:06:03.600><c> never</c><00:06:03.720><c> gonna</c><00:06:03.870><c> call</c><00:06:04.110><c> this</c><00:06:04.320><c> method</c>

00:06:04.490 --> 00:06:04.500 align:start position:0%
then it's never gonna call this method
 

00:06:04.500 --> 00:06:06.590 align:start position:0%
then it's never gonna call this method
assert<00:06:05.190><c> equals</c><00:06:05.340><c> is</c><00:06:05.669><c> gonna</c><00:06:05.850><c> continue</c><00:06:06.060><c> to</c><00:06:06.300><c> call</c>

00:06:06.590 --> 00:06:06.600 align:start position:0%
assert equals is gonna continue to call
 

00:06:06.600 --> 00:06:08.300 align:start position:0%
assert equals is gonna continue to call
the<00:06:06.780><c> default</c><00:06:06.930><c> method</c><00:06:07.290><c> because</c><00:06:07.890><c> dynamic</c>

00:06:08.300 --> 00:06:08.310 align:start position:0%
the default method because dynamic
 

00:06:08.310 --> 00:06:09.920 align:start position:0%
the default method because dynamic
method<00:06:08.610><c> selection</c><00:06:08.910><c> won't</c><00:06:09.300><c> know</c><00:06:09.450><c> how</c><00:06:09.600><c> to</c><00:06:09.630><c> find</c>

00:06:09.920 --> 00:06:09.930 align:start position:0%
method selection won't know how to find
 

00:06:09.930 --> 00:06:12.409 align:start position:0%
method selection won't know how to find
this<00:06:10.110><c> okay</c><00:06:10.560><c> so</c><00:06:11.130><c> by</c><00:06:11.280><c> the</c><00:06:11.340><c> way</c><00:06:11.520><c> make</c><00:06:12.060><c> sure</c><00:06:12.090><c> you</c>

00:06:12.409 --> 00:06:12.419 align:start position:0%
this okay so by the way make sure you
 

00:06:12.419 --> 00:06:13.730 align:start position:0%
this okay so by the way make sure you
always<00:06:12.720><c> put</c><00:06:12.900><c> override</c><00:06:13.260><c> so</c><00:06:13.470><c> you</c><00:06:13.530><c> don't</c><00:06:13.650><c> make</c>

00:06:13.730 --> 00:06:13.740 align:start position:0%
always put override so you don't make
 

00:06:13.740 --> 00:06:16.130 align:start position:0%
always put override so you don't make
silly<00:06:13.979><c> mistakes</c><00:06:14.010><c> like</c><00:06:14.430><c> that</c><00:06:14.840><c> okay</c><00:06:15.840><c> now</c><00:06:15.960><c> what</c>

00:06:16.130 --> 00:06:16.140 align:start position:0%
silly mistakes like that okay now what
 

00:06:16.140 --> 00:06:18.170 align:start position:0%
silly mistakes like that okay now what
well<00:06:17.070><c> now</c><00:06:17.100><c> I</c><00:06:17.250><c> want</c><00:06:17.430><c> to</c><00:06:17.490><c> determine</c><00:06:17.760><c> our</c><00:06:18.000><c> two</c>

00:06:18.170 --> 00:06:18.180 align:start position:0%
well now I want to determine our two
 

00:06:18.180 --> 00:06:21.050 align:start position:0%
well now I want to determine our two
objects<00:06:18.600><c> actually</c><00:06:18.900><c> or</c><00:06:19.229><c> two</c><00:06:19.380><c> dates</c><00:06:19.590><c> equal</c><00:06:20.060><c> well</c>

00:06:21.050 --> 00:06:21.060 align:start position:0%
objects actually or two dates equal well
 

00:06:21.060 --> 00:06:23.210 align:start position:0%
objects actually or two dates equal well
first<00:06:21.330><c> I'm</c><00:06:21.479><c> gonna</c><00:06:21.570><c> say</c><00:06:21.840><c> I</c><00:06:22.410><c> will</c><00:06:22.740><c> do</c><00:06:22.860><c> out</c><00:06:23.070><c> of</c>

00:06:23.210 --> 00:06:23.220 align:start position:0%
first I'm gonna say I will do out of
 

00:06:23.220 --> 00:06:26.570 align:start position:0%
first I'm gonna say I will do out of
date<00:06:23.340><c> equals</c><00:06:24.150><c> cast</c><00:06:24.630><c> this</c><00:06:24.840><c> object</c><00:06:25.430><c> and</c><00:06:26.430><c> then</c>

00:06:26.570 --> 00:06:26.580 align:start position:0%
date equals cast this object and then
 

00:06:26.580 --> 00:06:29.360 align:start position:0%
date equals cast this object and then
we'll<00:06:26.669><c> simply</c><00:06:26.970><c> say</c><00:06:27.150><c> if</c><00:06:28.100><c> we'll</c><00:06:29.100><c> go</c><00:06:29.190><c> through</c>

00:06:29.360 --> 00:06:29.370 align:start position:0%
we'll simply say if we'll go through
 

00:06:29.370 --> 00:06:31.310 align:start position:0%
we'll simply say if we'll go through
each<00:06:29.400><c> of</c><00:06:29.580><c> the</c><00:06:29.640><c> fields</c><00:06:29.970><c> if</c><00:06:30.120><c> month</c><00:06:30.660><c> is</c><00:06:30.870><c> not</c><00:06:30.990><c> equal</c>

00:06:31.310 --> 00:06:31.320 align:start position:0%
each of the fields if month is not equal
 

00:06:31.320 --> 00:06:34.370 align:start position:0%
each of the fields if month is not equal
to<00:06:31.530><c> at</c><00:06:31.830><c> a</c><00:06:31.950><c> date</c><00:06:32.130><c> dot</c><00:06:32.490><c> month</c><00:06:33.060><c> then</c><00:06:33.840><c> we'll</c><00:06:34.140><c> return</c>

00:06:34.370 --> 00:06:34.380 align:start position:0%
to at a date dot month then we'll return
 

00:06:34.380 --> 00:06:35.730 align:start position:0%
to at a date dot month then we'll return
false

00:06:35.730 --> 00:06:35.740 align:start position:0%
false
 

00:06:35.740 --> 00:06:38.610 align:start position:0%
false
if<00:06:36.280><c> day</c><00:06:36.610><c> is</c><00:06:36.940><c> not</c><00:06:37.090><c> equal</c><00:06:37.389><c> to</c><00:06:37.419><c> uh</c><00:06:37.509><c> today</c><00:06:37.870><c> day</c>

00:06:38.610 --> 00:06:38.620 align:start position:0%
if day is not equal to uh today day
 

00:06:38.620 --> 00:06:42.360 align:start position:0%
if day is not equal to uh today day
return<00:06:39.370><c> false</c><00:06:39.699><c> if</c><00:06:40.449><c> year</c><00:06:41.350><c> is</c><00:06:41.710><c> not</c><00:06:41.919><c> equal</c><00:06:42.250><c> to</c><00:06:42.280><c> a</c>

00:06:42.360 --> 00:06:42.370 align:start position:0%
return false if year is not equal to a
 

00:06:42.370 --> 00:06:46.409 align:start position:0%
return false if year is not equal to a
tad<00:06:42.610><c> a</c><00:06:42.759><c> year</c><00:06:44.250><c> or</c><00:06:45.250><c> return</c><00:06:45.490><c> false</c><00:06:45.699><c> and</c><00:06:46.330><c> then</c>

00:06:46.409 --> 00:06:46.419 align:start position:0%
tad a year or return false and then
 

00:06:46.419 --> 00:06:50.090 align:start position:0%
tad a year or return false and then
finally<00:06:46.720><c> will</c><00:06:46.990><c> return</c><00:06:47.199><c> true</c><00:06:47.490><c> now</c><00:06:48.490><c> we</c><00:06:48.789><c> can</c><00:06:49.090><c> be</c><00:06:49.419><c> a</c>

00:06:50.090 --> 00:06:50.100 align:start position:0%
finally will return true now we can be a
 

00:06:50.100 --> 00:06:52.620 align:start position:0%
finally will return true now we can be a
little<00:06:51.100><c> smarter</c><00:06:51.460><c> about</c><00:06:51.669><c> this</c><00:06:51.880><c> but</c><00:06:52.210><c> and</c><00:06:52.449><c> not</c>

00:06:52.620 --> 00:06:52.630 align:start position:0%
little smarter about this but and not
 

00:06:52.630 --> 00:06:53.820 align:start position:0%
little smarter about this but and not
put<00:06:52.840><c> it</c><00:06:52.930><c> all</c><00:06:53.020><c> in</c><00:06:53.169><c> a</c><00:06:53.229><c> bunch</c><00:06:53.380><c> of</c><00:06:53.440><c> different</c><00:06:53.500><c> lines</c>

00:06:53.820 --> 00:06:53.830 align:start position:0%
put it all in a bunch of different lines
 

00:06:53.830 --> 00:06:55.499 align:start position:0%
put it all in a bunch of different lines
but<00:06:54.009><c> I'm</c><00:06:54.610><c> just</c><00:06:54.850><c> gonna</c><00:06:55.000><c> leave</c><00:06:55.090><c> it</c><00:06:55.150><c> this</c><00:06:55.330><c> way</c>

00:06:55.499 --> 00:06:55.509 align:start position:0%
but I'm just gonna leave it this way
 

00:06:55.509 --> 00:06:58.680 align:start position:0%
but I'm just gonna leave it this way
because<00:06:55.630><c> it</c><00:06:55.810><c> reads</c><00:06:55.990><c> easily</c><00:06:56.759><c> so</c><00:06:57.759><c> now</c><00:06:57.910><c> in</c><00:06:58.240><c> theory</c>

00:06:58.680 --> 00:06:58.690 align:start position:0%
because it reads easily so now in theory
 

00:06:58.690 --> 00:07:01.409 align:start position:0%
because it reads easily so now in theory
this<00:06:59.229><c> this</c><00:07:00.009><c> method</c><00:07:00.580><c> here</c><00:07:00.850><c> should</c><00:07:01.000><c> work</c><00:07:01.150><c> what's</c>

00:07:01.409 --> 00:07:01.419 align:start position:0%
this this method here should work what's
 

00:07:01.419 --> 00:07:02.820 align:start position:0%
this this method here should work what's
my<00:07:01.570><c> warning</c><00:07:01.900><c> here</c><00:07:02.080><c> if</c><00:07:02.289><c> statement</c><00:07:02.680><c> can</c><00:07:02.800><c> be</c>

00:07:02.820 --> 00:07:02.830 align:start position:0%
my warning here if statement can be
 

00:07:02.830 --> 00:07:04.409 align:start position:0%
my warning here if statement can be
simplified<00:07:03.190><c> sure</c><00:07:03.820><c> all</c><00:07:04.060><c> right</c>

00:07:04.409 --> 00:07:04.419 align:start position:0%
simplified sure all right
 

00:07:04.419 --> 00:07:07.080 align:start position:0%
simplified sure all right
I<00:07:04.449><c> know</c><00:07:05.250><c> all</c><00:07:06.250><c> right</c><00:07:06.370><c> so</c><00:07:06.520><c> now</c><00:07:06.610><c> I'm</c><00:07:06.669><c> gonna</c><00:07:06.759><c> run</c><00:07:06.970><c> a</c>

00:07:07.080 --> 00:07:07.090 align:start position:0%
I know all right so now I'm gonna run a
 

00:07:07.090 --> 00:07:10.230 align:start position:0%
I know all right so now I'm gonna run a
equals<00:07:07.539><c> test</c><00:07:07.780><c> and</c><00:07:08.580><c> in</c><00:07:09.580><c> this</c><00:07:09.669><c> case</c><00:07:09.850><c> it</c><00:07:10.030><c> still</c>

00:07:10.230 --> 00:07:10.240 align:start position:0%
equals test and in this case it still
 

00:07:10.240 --> 00:07:12.840 align:start position:0%
equals test and in this case it still
fails<00:07:10.479><c> in</c><00:07:10.690><c> this</c><00:07:10.780><c> case</c><00:07:10.960><c> on</c><00:07:11.139><c> line</c><00:07:11.320><c> fourteen</c><00:07:11.850><c> so</c>

00:07:12.840 --> 00:07:12.850 align:start position:0%
fails in this case on line fourteen so
 

00:07:12.850 --> 00:07:14.520 align:start position:0%
fails in this case on line fourteen so
it<00:07:13.120><c> got</c><00:07:13.330><c> through</c><00:07:13.570><c> these</c><00:07:13.750><c> all</c><00:07:13.930><c> perfectly</c><00:07:14.289><c> fine</c>

00:07:14.520 --> 00:07:14.530 align:start position:0%
it got through these all perfectly fine
 

00:07:14.530 --> 00:07:16.620 align:start position:0%
it got through these all perfectly fine
but<00:07:14.830><c> it</c><00:07:14.949><c> failed</c><00:07:15.220><c> on</c><00:07:15.430><c> horse</c><00:07:15.669><c> and</c><00:07:15.940><c> the</c><00:07:16.270><c> issue</c><00:07:16.419><c> is</c>

00:07:16.620 --> 00:07:16.630 align:start position:0%
but it failed on horse and the issue is
 

00:07:16.630 --> 00:07:18.890 align:start position:0%
but it failed on horse and the issue is
java.lang<00:07:17.110><c> string</c><00:07:17.440><c> cannot</c><00:07:17.830><c> be</c><00:07:17.979><c> cast</c><00:07:18.250><c> to</c><00:07:18.520><c> date</c>

00:07:18.890 --> 00:07:18.900 align:start position:0%
java.lang string cannot be cast to date
 

00:07:18.900 --> 00:07:21.450 align:start position:0%
java.lang string cannot be cast to date
so<00:07:19.900><c> our</c><00:07:20.080><c> method</c><00:07:20.289><c> it's</c><00:07:20.620><c> very</c><00:07:20.860><c> important</c><00:07:21.310><c> that's</c>

00:07:21.450 --> 00:07:21.460 align:start position:0%
so our method it's very important that's
 

00:07:21.460 --> 00:07:23.129 align:start position:0%
so our method it's very important that's
capable<00:07:21.699><c> of</c><00:07:21.940><c> handling</c><00:07:22.090><c> any</c><00:07:22.479><c> object</c><00:07:22.960><c> at</c><00:07:23.050><c> all</c>

00:07:23.129 --> 00:07:23.139 align:start position:0%
capable of handling any object at all
 

00:07:23.139 --> 00:07:24.990 align:start position:0%
capable of handling any object at all
and<00:07:23.410><c> so</c><00:07:23.860><c> in</c><00:07:23.949><c> this</c><00:07:24.070><c> case</c><00:07:24.310><c> the</c><00:07:24.669><c> way</c><00:07:24.789><c> we're</c><00:07:24.940><c> gonna</c>

00:07:24.990 --> 00:07:25.000 align:start position:0%
and so in this case the way we're gonna
 

00:07:25.000 --> 00:07:27.659 align:start position:0%
and so in this case the way we're gonna
do<00:07:25.270><c> it</c><00:07:25.300><c> is</c><00:07:25.539><c> will</c><00:07:25.720><c> say</c><00:07:25.930><c> if</c><00:07:26.770><c> now</c><00:07:27.400><c> we're</c><00:07:27.520><c> going</c><00:07:27.610><c> to</c>

00:07:27.659 --> 00:07:27.669 align:start position:0%
do it is will say if now we're going to
 

00:07:27.669 --> 00:07:29.580 align:start position:0%
do it is will say if now we're going to
rely<00:07:28.000><c> on</c><00:07:28.030><c> one</c><00:07:28.690><c> of</c><00:07:28.720><c> those</c><00:07:28.870><c> other</c><00:07:29.080><c> object</c>

00:07:29.580 --> 00:07:29.590 align:start position:0%
rely on one of those other object
 

00:07:29.590 --> 00:07:31.439 align:start position:0%
rely on one of those other object
methods<00:07:29.919><c> we're</c><00:07:30.430><c> gonna</c><00:07:30.550><c> say</c><00:07:30.699><c> if</c><00:07:30.910><c> this</c><00:07:31.180><c> doesn't</c>

00:07:31.439 --> 00:07:31.449 align:start position:0%
methods we're gonna say if this doesn't
 

00:07:31.449 --> 00:07:35.810 align:start position:0%
methods we're gonna say if this doesn't
get<00:07:31.720><c> class</c><00:07:32.370><c> equally</c><00:07:33.370><c> equals</c><00:07:33.639><c> Oh</c><00:07:34.020><c> get</c><00:07:35.020><c> class</c>

00:07:35.810 --> 00:07:35.820 align:start position:0%
get class equally equals Oh get class
 

00:07:35.820 --> 00:07:38.879 align:start position:0%
get class equally equals Oh get class
actual<00:07:36.820><c> do</c><00:07:36.940><c> not</c><00:07:37.120><c> equals</c><00:07:37.500><c> so</c><00:07:38.500><c> if</c><00:07:38.590><c> they're</c><00:07:38.740><c> not</c>

00:07:38.879 --> 00:07:38.889 align:start position:0%
actual do not equals so if they're not
 

00:07:38.889 --> 00:07:41.839 align:start position:0%
actual do not equals so if they're not
the<00:07:39.099><c> same</c><00:07:39.250><c> class</c><00:07:39.580><c> then</c><00:07:40.300><c> we'll</c><00:07:40.419><c> return</c><00:07:40.599><c> false</c>

00:07:41.839 --> 00:07:41.849 align:start position:0%
the same class then we'll return false
 

00:07:41.849 --> 00:07:47.310 align:start position:0%
the same class then we'll return false
yeah<00:07:43.620><c> it's</c><00:07:44.620><c> a</c><00:07:44.680><c> little</c><00:07:44.800><c> meta</c><00:07:45.930><c> when</c><00:07:46.930><c> we</c><00:07:47.020><c> run</c><00:07:47.199><c> it</c>

00:07:47.310 --> 00:07:47.320 align:start position:0%
yeah it's a little meta when we run it
 

00:07:47.320 --> 00:07:49.020 align:start position:0%
yeah it's a little meta when we run it
things<00:07:47.650><c> work</c><00:07:47.830><c> better</c><00:07:48.010><c> and</c><00:07:48.400><c> now</c><00:07:48.699><c> we</c><00:07:48.760><c> get</c><00:07:48.910><c> to</c>

00:07:49.020 --> 00:07:49.030 align:start position:0%
things work better and now we get to
 

00:07:49.030 --> 00:07:51.180 align:start position:0%
things work better and now we get to
line<00:07:49.150><c> 15</c><00:07:49.539><c> where</c><00:07:49.780><c> we</c><00:07:49.900><c> crash</c><00:07:50.139><c> and</c><00:07:50.440><c> in</c><00:07:50.830><c> this</c><00:07:50.949><c> case</c>

00:07:51.180 --> 00:07:51.190 align:start position:0%
line 15 where we crash and in this case
 

00:07:51.190 --> 00:07:54.270 align:start position:0%
line 15 where we crash and in this case
the<00:07:51.880><c> issue</c><00:07:52.030><c> is</c><00:07:52.360><c> null</c><00:07:52.840><c> right</c><00:07:53.349><c> in</c><00:07:53.620><c> this</c><00:07:54.099><c> case</c>

00:07:54.270 --> 00:07:54.280 align:start position:0%
the issue is null right in this case
 

00:07:54.280 --> 00:07:56.580 align:start position:0%
the issue is null right in this case
we're<00:07:54.520><c> trying</c><00:07:54.760><c> to</c><00:07:54.909><c> get</c><00:07:55.030><c> null</c><00:07:55.419><c> get</c><00:07:56.050><c> class</c><00:07:56.289><c> and</c>

00:07:56.580 --> 00:07:56.590 align:start position:0%
we're trying to get null get class and
 

00:07:56.590 --> 00:07:58.830 align:start position:0%
we're trying to get null get class and
so<00:07:57.039><c> the</c><00:07:57.159><c> fix</c><00:07:57.340><c> here</c><00:07:57.490><c> is</c><00:07:57.610><c> simply</c><00:07:57.820><c> to</c><00:07:57.909><c> say</c><00:07:58.150><c> if</c><00:07:58.479><c> Oh</c>

00:07:58.830 --> 00:07:58.840 align:start position:0%
so the fix here is simply to say if Oh
 

00:07:58.840 --> 00:08:00.600 align:start position:0%
so the fix here is simply to say if Oh
equals<00:07:59.260><c> null</c><00:07:59.440><c> will</c><00:08:00.099><c> return</c><00:08:00.340><c> false</c>

00:08:00.600 --> 00:08:00.610 align:start position:0%
equals null will return false
 

00:08:00.610 --> 00:08:03.469 align:start position:0%
equals null will return false
immediately<00:08:01.150><c> now</c><00:08:02.110><c> all</c><00:08:02.320><c> of</c><00:08:02.560><c> this</c><00:08:02.650><c> code</c><00:08:02.919><c> here</c>

00:08:03.469 --> 00:08:03.479 align:start position:0%
immediately now all of this code here
 

00:08:03.479 --> 00:08:08.610 align:start position:0%
immediately now all of this code here
will<00:08:04.479><c> work</c><00:08:04.630><c> and</c><00:08:04.780><c> pass</c><00:08:05.380><c> our</c><00:08:05.560><c> test</c><00:08:07.349><c> okay</c><00:08:08.349><c> and</c><00:08:08.560><c> I</c>

00:08:08.610 --> 00:08:08.620 align:start position:0%
will work and pass our test okay and I
 

00:08:08.620 --> 00:08:10.620 align:start position:0%
will work and pass our test okay and I
did<00:08:08.800><c> and</c><00:08:09.550><c> so</c><00:08:09.669><c> that's</c><00:08:09.820><c> roughly</c><00:08:10.000><c> what</c><00:08:10.210><c> an</c><00:08:10.389><c> equals</c>

00:08:10.620 --> 00:08:10.630 align:start position:0%
did and so that's roughly what an equals
 

00:08:10.630 --> 00:08:12.270 align:start position:0%
did and so that's roughly what an equals
method<00:08:10.930><c> looks</c><00:08:11.080><c> like</c><00:08:11.260><c> you</c><00:08:11.740><c> have</c><00:08:11.830><c> to</c><00:08:11.949><c> do</c><00:08:12.039><c> an</c><00:08:12.130><c> old</c>

00:08:12.270 --> 00:08:12.280 align:start position:0%
method looks like you have to do an old
 

00:08:12.280 --> 00:08:14.070 align:start position:0%
method looks like you have to do an old
check<00:08:12.520><c> you</c><00:08:12.880><c> have</c><00:08:12.909><c> to</c><00:08:13.090><c> do</c><00:08:13.180><c> a</c><00:08:13.210><c> class</c><00:08:13.479><c> check</c><00:08:13.780><c> you</c>

00:08:14.070 --> 00:08:14.080 align:start position:0%
check you have to do a class check you
 

00:08:14.080 --> 00:08:15.659 align:start position:0%
check you have to do a class check you
have<00:08:14.199><c> to</c><00:08:14.289><c> do</c><00:08:14.380><c> a</c><00:08:14.409><c> cast</c><00:08:14.710><c> you</c><00:08:15.159><c> have</c><00:08:15.280><c> to</c><00:08:15.370><c> check</c><00:08:15.520><c> all</c>

00:08:15.659 --> 00:08:15.669 align:start position:0%
have to do a cast you have to check all
 

00:08:15.669 --> 00:08:18.360 align:start position:0%
have to do a cast you have to check all
the<00:08:15.760><c> fields</c><00:08:16.470><c> now</c><00:08:17.470><c> this</c><00:08:17.650><c> version</c><00:08:17.860><c> I</c><00:08:18.099><c> have</c><00:08:18.130><c> on</c>

00:08:18.360 --> 00:08:18.370 align:start position:0%
the fields now this version I have on
 

00:08:18.370 --> 00:08:20.670 align:start position:0%
the fields now this version I have on
the<00:08:18.490><c> slide</c><00:08:18.610><c> is</c><00:08:18.909><c> just</c><00:08:18.940><c> a</c><00:08:19.240><c> little</c><00:08:19.750><c> cleaner</c><00:08:20.020><c> than</c>

00:08:20.670 --> 00:08:20.680 align:start position:0%
the slide is just a little cleaner than
 

00:08:20.680 --> 00:08:22.890 align:start position:0%
the slide is just a little cleaner than
the<00:08:21.190><c> version</c><00:08:21.370><c> we</c><00:08:21.550><c> had</c><00:08:21.699><c> before</c><00:08:21.880><c> and</c><00:08:22.270><c> it</c><00:08:22.570><c> has</c><00:08:22.659><c> one</c>

00:08:22.890 --> 00:08:22.900 align:start position:0%
the version we had before and it has one
 

00:08:22.900 --> 00:08:25.110 align:start position:0%
the version we had before and it has one
extra<00:08:23.139><c> trick</c><00:08:23.530><c> which</c><00:08:24.130><c> is</c><00:08:24.159><c> it</c><00:08:24.340><c> says</c><00:08:24.490><c> if</c><00:08:24.669><c> this</c><00:08:24.909><c> is</c>

00:08:25.110 --> 00:08:25.120 align:start position:0%
extra trick which is it says if this is
 

00:08:25.120 --> 00:08:27.810 align:start position:0%
extra trick which is it says if this is
equal<00:08:25.449><c> equal</c><00:08:25.690><c> to</c><00:08:25.810><c> X</c><00:08:25.990><c> return</c><00:08:26.500><c> true</c><00:08:26.830><c> and</c><00:08:27.550><c> this</c><00:08:27.699><c> is</c>

00:08:27.810 --> 00:08:27.820 align:start position:0%
equal equal to X return true and this is
 

00:08:27.820 --> 00:08:29.550 align:start position:0%
equal equal to X return true and this is
just<00:08:27.970><c> an</c><00:08:28.090><c> optimization</c><00:08:28.720><c> because</c><00:08:28.930><c> if</c><00:08:29.289><c> the</c>

00:08:29.550 --> 00:08:29.560 align:start position:0%
just an optimization because if the
 

00:08:29.560 --> 00:08:32.279 align:start position:0%
just an optimization because if the
actual<00:08:30.240><c> pointers</c><00:08:31.240><c> are</c><00:08:31.449><c> equal</c><00:08:31.810><c> that</c><00:08:31.840><c> is</c><00:08:32.110><c> the</c>

00:08:32.279 --> 00:08:32.289 align:start position:0%
actual pointers are equal that is the
 

00:08:32.289 --> 00:08:34.170 align:start position:0%
actual pointers are equal that is the
references<00:08:32.770><c> are</c><00:08:32.890><c> the</c><00:08:32.979><c> same</c><00:08:33.159><c> then</c><00:08:33.400><c> the</c><00:08:33.430><c> same</c><00:08:33.669><c> 64</c>

00:08:34.170 --> 00:08:34.180 align:start position:0%
references are the same then the same 64
 

00:08:34.180 --> 00:08:35.760 align:start position:0%
references are the same then the same 64
bits<00:08:34.419><c> then</c><00:08:34.839><c> there's</c><00:08:34.990><c> no</c><00:08:35.110><c> need</c><00:08:35.289><c> to</c><00:08:35.380><c> do</c><00:08:35.529><c> all</c><00:08:35.650><c> this</c>

00:08:35.760 --> 00:08:35.770 align:start position:0%
bits then there's no need to do all this
 

00:08:35.770 --> 00:08:37.170 align:start position:0%
bits then there's no need to do all this
work<00:08:35.950><c> so</c><00:08:36.310><c> this</c><00:08:36.490><c> is</c><00:08:36.550><c> just</c><00:08:36.849><c> the</c><00:08:36.940><c> speed</c>

00:08:37.170 --> 00:08:37.180 align:start position:0%
work so this is just the speed
 

00:08:37.180 --> 00:08:39.060 align:start position:0%
work so this is just the speed
optimization<00:08:37.479><c> and</c><00:08:38.050><c> the</c><00:08:38.409><c> rest</c><00:08:38.589><c> is</c><00:08:38.770><c> for</c>

00:08:39.060 --> 00:08:39.070 align:start position:0%
optimization and the rest is for
 

00:08:39.070 --> 00:08:42.300 align:start position:0%
optimization and the rest is for
correctness<00:08:40.469><c> so</c><00:08:41.469><c> I'll</c><00:08:41.589><c> just</c><00:08:41.740><c> mention</c><00:08:41.860><c> earlier</c>

00:08:42.300 --> 00:08:42.310 align:start position:0%
correctness so I'll just mention earlier
 

00:08:42.310 --> 00:08:44.190 align:start position:0%
correctness so I'll just mention earlier
I<00:08:42.400><c> said</c><00:08:42.459><c> there</c><00:08:42.669><c> were</c><00:08:42.760><c> some</c><00:08:42.909><c> rules</c><00:08:43.200><c> finished</c>

00:08:44.190 --> 00:08:44.200 align:start position:0%
I said there were some rules finished
 

00:08:44.200 --> 00:08:45.420 align:start position:0%
I said there were some rules finished
something<00:08:44.380><c> I</c><00:08:44.560><c> mentioned</c><00:08:44.709><c> earlier</c><00:08:45.040><c> which</c><00:08:45.400><c> is</c>

00:08:45.420 --> 00:08:45.430 align:start position:0%
something I mentioned earlier which is
 

00:08:45.430 --> 00:08:47.730 align:start position:0%
something I mentioned earlier which is
there<00:08:45.670><c> are</c><00:08:45.730><c> some</c><00:08:45.850><c> rules</c><00:08:46.060><c> in</c><00:08:46.300><c> Java</c><00:08:46.540><c> which</c><00:08:47.110><c> for</c>

00:08:47.730 --> 00:08:47.740 align:start position:0%
there are some rules in Java which for
 

00:08:47.740 --> 00:08:49.020 align:start position:0%
there are some rules in Java which for
how<00:08:47.860><c> equals</c><00:08:48.220><c> is</c><00:08:48.339><c> supposed</c><00:08:48.579><c> to</c><00:08:48.640><c> work</c>

00:08:49.020 --> 00:08:49.030 align:start position:0%
how equals is supposed to work
 

00:08:49.030 --> 00:08:51.450 align:start position:0%
how equals is supposed to work
so<00:08:49.480><c> it</c><00:08:49.600><c> must</c><00:08:49.870><c> be</c><00:08:49.960><c> an</c><00:08:50.290><c> equivalence</c><00:08:50.860><c> relation</c><00:08:50.920><c> as</c>

00:08:51.450 --> 00:08:51.460 align:start position:0%
so it must be an equivalence relation as
 

00:08:51.460 --> 00:08:53.160 align:start position:0%
so it must be an equivalence relation as
we<00:08:51.700><c> call</c><00:08:51.910><c> it</c><00:08:52.000><c> in</c><00:08:52.090><c> math</c><00:08:52.300><c> it</c><00:08:52.570><c> needs</c><00:08:52.930><c> to</c><00:08:53.050><c> be</c>

00:08:53.160 --> 00:08:53.170 align:start position:0%
we call it in math it needs to be
 

00:08:53.170 --> 00:08:55.920 align:start position:0%
we call it in math it needs to be
reflexive<00:08:53.560><c> X</c><00:08:53.920><c> must</c><00:08:54.250><c> equal</c><00:08:54.430><c> itself</c><00:08:55.000><c> it</c><00:08:55.810><c> needs</c>

00:08:55.920 --> 00:08:55.930 align:start position:0%
reflexive X must equal itself it needs
 

00:08:55.930 --> 00:08:58.410 align:start position:0%
reflexive X must equal itself it needs
to<00:08:56.110><c> be</c><00:08:56.200><c> symmetric</c><00:08:56.380><c> x</c><00:08:57.130><c> equals</c><00:08:57.520><c> y</c><00:08:57.670><c> will</c><00:08:58.090><c> be</c><00:08:58.210><c> true</c>

00:08:58.410 --> 00:08:58.420 align:start position:0%
to be symmetric x equals y will be true
 

00:08:58.420 --> 00:09:01.200 align:start position:0%
to be symmetric x equals y will be true
if<00:08:58.600><c> and</c><00:08:58.990><c> only</c><00:08:59.020><c> if</c><00:08:59.200><c> Y</c><00:08:59.470><c> also</c><00:09:00.010><c> equals</c><00:09:00.460><c> x</c><00:09:00.610><c> and</c><00:09:00.850><c> it</c>

00:09:01.200 --> 00:09:01.210 align:start position:0%
if and only if Y also equals x and it
 

00:09:01.210 --> 00:09:03.330 align:start position:0%
if and only if Y also equals x and it
must<00:09:01.360><c> also</c><00:09:01.450><c> be</c><00:09:01.600><c> transitive</c><00:09:02.230><c> if</c><00:09:02.380><c> x</c><00:09:02.920><c> equals</c><00:09:03.040><c> y</c>

00:09:03.330 --> 00:09:03.340 align:start position:0%
must also be transitive if x equals y
 

00:09:03.340 --> 00:09:05.250 align:start position:0%
must also be transitive if x equals y
and<00:09:03.370><c> y</c><00:09:03.700><c> equals</c><00:09:04.030><c> z</c><00:09:04.150><c> then</c><00:09:04.600><c> it</c><00:09:04.690><c> must</c><00:09:04.870><c> be</c><00:09:04.930><c> the</c><00:09:05.020><c> case</c>

00:09:05.250 --> 00:09:05.260 align:start position:0%
and y equals z then it must be the case
 

00:09:05.260 --> 00:09:07.650 align:start position:0%
and y equals z then it must be the case
that<00:09:05.320><c> x</c><00:09:05.650><c> equals</c><00:09:05.980><c> z</c><00:09:06.160><c> now</c><00:09:06.880><c> the</c><00:09:06.940><c> compiler</c><00:09:07.240><c> is</c><00:09:07.480><c> not</c>

00:09:07.650 --> 00:09:07.660 align:start position:0%
that x equals z now the compiler is not
 

00:09:07.660 --> 00:09:09.090 align:start position:0%
that x equals z now the compiler is not
smart<00:09:08.050><c> enough</c><00:09:08.140><c> to</c><00:09:08.260><c> check</c><00:09:08.530><c> all</c><00:09:08.680><c> these</c><00:09:08.800><c> things</c>

00:09:09.090 --> 00:09:09.100 align:start position:0%
smart enough to check all these things
 

00:09:09.100 --> 00:09:11.160 align:start position:0%
smart enough to check all these things
but<00:09:09.520><c> all</c><00:09:09.880><c> kinds</c><00:09:10.450><c> of</c><00:09:10.510><c> java</c><00:09:10.750><c> code</c><00:09:10.990><c> out</c><00:09:11.140><c> there</c>

00:09:11.160 --> 00:09:11.170 align:start position:0%
but all kinds of java code out there
 

00:09:11.170 --> 00:09:13.620 align:start position:0%
but all kinds of java code out there
assumes<00:09:11.710><c> that</c><00:09:11.920><c> it's</c><00:09:12.190><c> a</c><00:09:12.250><c> Bayes</c><00:09:13.150><c> all</c><00:09:13.390><c> of</c><00:09:13.510><c> these</c>

00:09:13.620 --> 00:09:13.630 align:start position:0%
assumes that it's a Bayes all of these
 

00:09:13.630 --> 00:09:15.750 align:start position:0%
assumes that it's a Bayes all of these
properties<00:09:13.960><c> and</c><00:09:14.710><c> if</c><00:09:14.830><c> your</c><00:09:15.010><c> equals</c><00:09:15.340><c> doesn't</c>

00:09:15.750 --> 00:09:15.760 align:start position:0%
properties and if your equals doesn't
 

00:09:15.760 --> 00:09:17.430 align:start position:0%
properties and if your equals doesn't
then<00:09:16.000><c> you</c><00:09:16.120><c> can</c><00:09:16.240><c> run</c><00:09:16.390><c> into</c><00:09:16.540><c> trouble</c><00:09:16.630><c> and</c><00:09:17.080><c> we'll</c>

00:09:17.430 --> 00:09:17.440 align:start position:0%
then you can run into trouble and we'll
 

00:09:17.440 --> 00:09:18.930 align:start position:0%
then you can run into trouble and we'll
see<00:09:17.560><c> a</c><00:09:17.590><c> little</c><00:09:17.830><c> funny</c><00:09:18.010><c> example</c><00:09:18.460><c> of</c><00:09:18.580><c> this</c><00:09:18.730><c> later</c>

00:09:18.930 --> 00:09:18.940 align:start position:0%
see a little funny example of this later
 

00:09:18.940 --> 00:09:22.080 align:start position:0%
see a little funny example of this later
when<00:09:19.090><c> we</c><00:09:19.150><c> talk</c><00:09:19.360><c> about</c><00:09:19.390><c> randomization</c><00:09:20.850><c> we</c><00:09:21.850><c> must</c>

00:09:22.080 --> 00:09:22.090 align:start position:0%
when we talk about randomization we must
 

00:09:22.090 --> 00:09:24.570 align:start position:0%
when we talk about randomization we must
also<00:09:22.330><c> in</c><00:09:23.110><c> addition</c><00:09:23.260><c> to</c><00:09:23.560><c> following</c><00:09:24.400><c> these</c>

00:09:24.570 --> 00:09:24.580 align:start position:0%
also in addition to following these
 

00:09:24.580 --> 00:09:26.310 align:start position:0%
also in addition to following these
rules<00:09:24.790><c> we</c><00:09:25.390><c> need</c><00:09:25.510><c> to</c><00:09:25.600><c> always</c><00:09:25.750><c> take</c><00:09:26.020><c> an</c><00:09:26.140><c> object</c>

00:09:26.310 --> 00:09:26.320 align:start position:0%
rules we need to always take an object
 

00:09:26.320 --> 00:09:28.200 align:start position:0%
rules we need to always take an object
argument<00:09:27.040><c> so</c><00:09:27.400><c> you</c><00:09:27.490><c> cannot</c><00:09:27.790><c> take</c><00:09:27.970><c> a</c><00:09:28.000><c> date</c>

00:09:28.200 --> 00:09:28.210 align:start position:0%
argument so you cannot take a date
 

00:09:28.210 --> 00:09:30.150 align:start position:0%
argument so you cannot take a date
argument<00:09:28.690><c> as</c><00:09:28.750><c> we</c><00:09:28.870><c> saw</c><00:09:29.020><c> we</c><00:09:29.800><c> need</c><00:09:29.950><c> to</c><00:09:30.040><c> be</c>

00:09:30.150 --> 00:09:30.160 align:start position:0%
argument as we saw we need to be
 

00:09:30.160 --> 00:09:32.940 align:start position:0%
argument as we saw we need to be
consistent<00:09:30.790><c> so</c><00:09:31.390><c> if</c><00:09:31.510><c> x</c><00:09:31.750><c> equals</c><00:09:31.870><c> y</c><00:09:32.260><c> then</c><00:09:32.770><c> they</c>

00:09:32.940 --> 00:09:32.950 align:start position:0%
consistent so if x equals y then they
 

00:09:32.950 --> 00:09:35.310 align:start position:0%
consistent so if x equals y then they
must<00:09:33.160><c> be</c><00:09:33.280><c> continued</c><00:09:34.000><c> to</c><00:09:34.120><c> be</c><00:09:34.210><c> equal</c><00:09:34.540><c> as</c><00:09:34.810><c> long</c><00:09:35.110><c> as</c>

00:09:35.310 --> 00:09:35.320 align:start position:0%
must be continued to be equal as long as
 

00:09:35.320 --> 00:09:38.310 align:start position:0%
must be continued to be equal as long as
neither<00:09:35.500><c> changes</c><00:09:36.130><c> so</c><00:09:36.730><c> it</c><00:09:37.510><c> can't</c><00:09:37.810><c> just</c><00:09:37.870><c> be</c><00:09:38.020><c> say</c>

00:09:38.310 --> 00:09:38.320 align:start position:0%
neither changes so it can't just be say
 

00:09:38.320 --> 00:09:40.230 align:start position:0%
neither changes so it can't just be say
a<00:09:38.350><c> random</c><00:09:38.800><c> number</c><00:09:38.920><c> that</c><00:09:39.850><c> would</c><00:09:39.940><c> just</c><00:09:40.120><c> be</c><00:09:40.210><c> a</c>

00:09:40.230 --> 00:09:40.240 align:start position:0%
a random number that would just be a
 

00:09:40.240 --> 00:09:42.570 align:start position:0%
a random number that would just be a
strange<00:09:40.570><c> thing</c><00:09:40.810><c> if</c><00:09:41.080><c> anything</c><00:09:41.500><c> about</c><00:09:41.770><c> the</c><00:09:42.070><c> if</c>

00:09:42.570 --> 00:09:42.580 align:start position:0%
strange thing if anything about the if
 

00:09:42.580 --> 00:09:45.240 align:start position:0%
strange thing if anything about the if
nothing<00:09:43.090><c> in</c><00:09:43.750><c> the</c><00:09:44.080><c> two</c><00:09:44.230><c> classes</c><00:09:44.710><c> changes</c><00:09:45.160><c> in</c>

00:09:45.240 --> 00:09:45.250 align:start position:0%
nothing in the two classes changes in
 

00:09:45.250 --> 00:09:46.560 align:start position:0%
nothing in the two classes changes in
the<00:09:45.340><c> two</c><00:09:45.460><c> instances</c><00:09:45.940><c> then</c><00:09:46.210><c> they</c><00:09:46.390><c> must</c>

00:09:46.560 --> 00:09:46.570 align:start position:0%
the two instances then they must
 

00:09:46.570 --> 00:09:48.630 align:start position:0%
the two instances then they must
continue<00:09:46.720><c> to</c><00:09:47.020><c> be</c><00:09:47.140><c> equal</c><00:09:47.440><c> and</c><00:09:47.620><c> it</c><00:09:48.100><c> must</c><00:09:48.250><c> also</c><00:09:48.430><c> be</c>

00:09:48.630 --> 00:09:48.640 align:start position:0%
continue to be equal and it must also be
 

00:09:48.640 --> 00:09:50.370 align:start position:0%
continue to be equal and it must also be
never<00:09:49.180><c> true</c><00:09:49.480><c> for</c><00:09:49.660><c> a</c><00:09:49.690><c> null</c><00:09:49.810><c> so</c><00:09:50.080><c> it's</c><00:09:50.230><c> always</c>

00:09:50.370 --> 00:09:50.380 align:start position:0%
never true for a null so it's always
 

00:09:50.380 --> 00:09:52.200 align:start position:0%
never true for a null so it's always
gonna<00:09:50.590><c> return</c><00:09:50.890><c> false</c><00:09:51.190><c> if</c><00:09:51.370><c> you</c><00:09:51.520><c> say</c><00:09:51.670><c> x</c><00:09:51.880><c> equals</c>

00:09:52.200 --> 00:09:52.210 align:start position:0%
gonna return false if you say x equals
 

00:09:52.210 --> 00:09:54.990 align:start position:0%
gonna return false if you say x equals
null<00:09:52.800><c> ok</c><00:09:53.800><c> so</c><00:09:54.100><c> that's</c><00:09:54.250><c> everything</c><00:09:54.460><c> we</c><00:09:54.610><c> need</c><00:09:54.760><c> to</c>

00:09:54.990 --> 00:09:55.000 align:start position:0%
null ok so that's everything we need to
 

00:09:55.000 --> 00:09:57.329 align:start position:0%
null ok so that's everything we need to
know<00:09:55.150><c> about</c><00:09:55.839><c> the</c><00:09:56.080><c> core</c><00:09:56.290><c> of</c><00:09:56.320><c> Java</c><00:09:56.650><c> and</c><00:09:56.920><c> as</c><00:09:57.220><c> I've</c>

00:09:57.329 --> 00:09:57.339 align:start position:0%
know about the core of Java and as I've
 

00:09:57.339 --> 00:09:58.950 align:start position:0%
know about the core of Java and as I've
said<00:09:57.370><c> you</c><00:09:57.970><c> know</c><00:09:58.060><c> there's</c><00:09:58.240><c> plenty</c><00:09:58.330><c> of</c><00:09:58.510><c> Java</c><00:09:58.750><c> out</c>

00:09:58.950 --> 00:09:58.960 align:start position:0%
said you know there's plenty of Java out
 

00:09:58.960 --> 00:10:00.360 align:start position:0%
said you know there's plenty of Java out
there<00:09:59.170><c> we</c><00:09:59.320><c> haven't</c><00:09:59.530><c> covered</c><00:09:59.650><c> but</c><00:10:00.070><c> this</c><00:10:00.220><c> is</c>

00:10:00.360 --> 00:10:00.370 align:start position:0%
there we haven't covered but this is
 

00:10:00.370 --> 00:10:02.610 align:start position:0%
there we haven't covered but this is
enough<00:10:00.640><c> from</c><00:10:01.450><c> here</c><00:10:01.720><c> we're</c><00:10:02.080><c> gonna</c><00:10:02.140><c> expect</c><00:10:02.500><c> you</c>

00:10:02.610 --> 00:10:02.620 align:start position:0%
enough from here we're gonna expect you
 

00:10:02.620 --> 00:10:04.170 align:start position:0%
enough from here we're gonna expect you
to<00:10:02.740><c> find</c><00:10:02.920><c> the</c><00:10:03.010><c> syntax</c><00:10:03.400><c> the</c><00:10:03.550><c> libraries</c><00:10:04.060><c> that</c>

00:10:04.170 --> 00:10:04.180 align:start position:0%
to find the syntax the libraries that
 

00:10:04.180 --> 00:10:05.940 align:start position:0%
to find the syntax the libraries that
you<00:10:04.300><c> need</c><00:10:04.510><c> though</c><00:10:04.930><c> I</c><00:10:04.960><c> asked</c><00:10:05.230><c> on</c><00:10:05.470><c> project</c><00:10:05.830><c> 2</c>

00:10:05.940 --> 00:10:05.950 align:start position:0%
you need though I asked on project 2
 

00:10:05.950 --> 00:10:07.620 align:start position:0%
you need though I asked on project 2
you'd<00:10:06.130><c> be</c><00:10:06.250><c> very</c><00:10:06.460><c> careful</c><00:10:06.880><c> don't</c><00:10:07.300><c> go</c><00:10:07.450><c> use</c>

00:10:07.620 --> 00:10:07.630 align:start position:0%
you'd be very careful don't go use
 

00:10:07.630 --> 00:10:09.030 align:start position:0%
you'd be very careful don't go use
things<00:10:07.930><c> using</c><00:10:08.320><c> things</c><00:10:08.470><c> like</c><00:10:08.589><c> the</c><00:10:08.800><c> Apache</c>

00:10:09.030 --> 00:10:09.040 align:start position:0%
things using things like the Apache
 

00:10:09.040 --> 00:10:11.190 align:start position:0%
things using things like the Apache
Commons<00:10:09.339><c> library</c><00:10:09.700><c> please</c><00:10:10.330><c> use</c><00:10:10.600><c> the</c><00:10:10.780><c> built-in</c>

00:10:11.190 --> 00:10:11.200 align:start position:0%
Commons library please use the built-in
 

00:10:11.200 --> 00:10:12.720 align:start position:0%
Commons library please use the built-in
library<00:10:11.380><c> so</c><00:10:11.740><c> we</c><00:10:11.800><c> have</c><00:10:11.890><c> a</c><00:10:11.920><c> list</c><00:10:12.160><c> that</c><00:10:12.220><c> are</c><00:10:12.430><c> ok</c>

00:10:12.720 --> 00:10:12.730 align:start position:0%
library so we have a list that are ok
 

00:10:12.730 --> 00:10:14.130 align:start position:0%
library so we have a list that are ok
and<00:10:12.940><c> the</c><00:10:13.270><c> reason</c><00:10:13.510><c> there</c><00:10:13.630><c> is</c><00:10:13.690><c> we</c><00:10:13.810><c> don't</c><00:10:13.900><c> want</c><00:10:13.990><c> to</c>

00:10:14.130 --> 00:10:14.140 align:start position:0%
and the reason there is we don't want to
 

00:10:14.140 --> 00:10:15.270 align:start position:0%
and the reason there is we don't want to
take<00:10:14.260><c> away</c><00:10:14.470><c> from</c><00:10:14.530><c> the</c><00:10:14.710><c> educational</c>

00:10:15.270 --> 00:10:15.280 align:start position:0%
take away from the educational
 

00:10:15.280 --> 00:10:16.740 align:start position:0%
take away from the educational
opportunity<00:10:15.820><c> if</c><00:10:16.120><c> you</c><00:10:16.330><c> go</c><00:10:16.420><c> out</c><00:10:16.540><c> there</c><00:10:16.690><c> and</c>

00:10:16.740 --> 00:10:16.750 align:start position:0%
opportunity if you go out there and
 

00:10:16.750 --> 00:10:18.780 align:start position:0%
opportunity if you go out there and
download<00:10:17.050><c> for</c><00:10:17.440><c> example</c><00:10:17.800><c> a</c><00:10:17.980><c> table</c><00:10:18.339><c> dot</c><00:10:18.490><c> jar</c>

00:10:18.780 --> 00:10:18.790 align:start position:0%
download for example a table dot jar
 

00:10:18.790 --> 00:10:19.950 align:start position:0%
download for example a table dot jar
right<00:10:19.089><c> like</c><00:10:19.300><c> that's</c><00:10:19.450><c> just</c><00:10:19.660><c> silly</c>

00:10:19.950 --> 00:10:19.960 align:start position:0%
right like that's just silly
 

00:10:19.960 --> 00:10:21.120 align:start position:0%
right like that's just silly
then<00:10:20.110><c> you</c><00:10:20.200><c> defeated</c><00:10:20.500><c> the</c><00:10:20.650><c> whole</c><00:10:20.770><c> point</c><00:10:20.980><c> of</c><00:10:21.040><c> the</c>

00:10:21.120 --> 00:10:21.130 align:start position:0%
then you defeated the whole point of the
 

00:10:21.130 --> 00:10:24.810 align:start position:0%
then you defeated the whole point of the
project<00:10:21.310><c> so</c><00:10:21.670><c> don't</c><00:10:21.850><c> do</c><00:10:21.940><c> that</c><00:10:23.130><c> the</c><00:10:24.130><c> there</c><00:10:24.640><c> will</c>

00:10:24.810 --> 00:10:24.820 align:start position:0%
project so don't do that the there will
 

00:10:24.820 --> 00:10:27.690 align:start position:0%
project so don't do that the there will
be<00:10:24.850><c> extra</c><00:10:25.780><c> optional</c><00:10:26.530><c> syntax</c><00:10:26.980><c> videos</c><00:10:27.400><c> for</c>

00:10:27.690 --> 00:10:27.700 align:start position:0%
be extra optional syntax videos for
 

00:10:27.700 --> 00:10:28.980 align:start position:0%
be extra optional syntax videos for
those<00:10:27.820><c> of</c><00:10:27.970><c> you</c><00:10:28.089><c> who</c><00:10:28.300><c> want</c><00:10:28.480><c> to</c><00:10:28.540><c> learn</c><00:10:28.720><c> about</c>

00:10:28.980 --> 00:10:28.990 align:start position:0%
those of you who want to learn about
 

00:10:28.990 --> 00:10:30.870 align:start position:0%
those of you who want to learn about
some<00:10:29.260><c> more</c><00:10:29.380><c> advanced</c><00:10:29.710><c> Java</c><00:10:30.010><c> syntax</c><00:10:30.250><c> topics</c>

00:10:30.870 --> 00:10:30.880 align:start position:0%
some more advanced Java syntax topics
 

00:10:30.880 --> 00:10:33.870 align:start position:0%
some more advanced Java syntax topics
like<00:10:31.300><c> type</c><00:10:31.570><c> erasure</c><00:10:32.020><c> some</c><00:10:33.010><c> more</c><00:10:33.339><c> messy</c><00:10:33.700><c> things</c>

00:10:33.870 --> 00:10:33.880 align:start position:0%
like type erasure some more messy things
 

00:10:33.880 --> 00:10:35.880 align:start position:0%
like type erasure some more messy things
about<00:10:34.120><c> generics</c><00:10:34.540><c> and</c><00:10:34.930><c> you</c><00:10:35.470><c> know</c><00:10:35.560><c> you'll</c><00:10:35.770><c> see</c>

00:10:35.880 --> 00:10:35.890 align:start position:0%
about generics and you know you'll see
 

00:10:35.890 --> 00:10:37.200 align:start position:0%
about generics and you know you'll see
what<00:10:36.010><c> those</c><00:10:36.100><c> videos</c><00:10:36.400><c> are</c><00:10:36.550><c> if</c><00:10:36.610><c> you</c><00:10:36.700><c> want</c><00:10:36.820><c> those</c>

00:10:37.200 --> 00:10:37.210 align:start position:0%
what those videos are if you want those
 

00:10:37.210 --> 00:10:38.820 align:start position:0%
what those videos are if you want those
are<00:10:37.390><c> not</c><00:10:37.510><c> required</c><00:10:37.900><c> you</c><00:10:38.170><c> don't</c><00:10:38.560><c> have</c><00:10:38.650><c> to</c><00:10:38.740><c> use</c>

00:10:38.820 --> 00:10:38.830 align:start position:0%
are not required you don't have to use
 

00:10:38.830 --> 00:10:39.990 align:start position:0%
are not required you don't have to use
them<00:10:38.920><c> in</c><00:10:38.980><c> your</c><00:10:39.010><c> projects</c><00:10:39.460><c> they</c><00:10:39.610><c> won't</c><00:10:39.790><c> appear</c>

00:10:39.990 --> 00:10:40.000 align:start position:0%
them in your projects they won't appear
 

00:10:40.000 --> 00:10:42.420 align:start position:0%
them in your projects they won't appear
on<00:10:40.120><c> exams</c><00:10:40.510><c> or</c><00:10:41.020><c> if</c><00:10:41.470><c> they</c><00:10:41.560><c> do</c><00:10:41.620><c> appear</c><00:10:41.950><c> on</c><00:10:42.070><c> exams</c>

00:10:42.420 --> 00:10:42.430 align:start position:0%
on exams or if they do appear on exams
 

00:10:42.430 --> 00:10:43.950 align:start position:0%
on exams or if they do appear on exams
they'll<00:10:42.670><c> be</c><00:10:42.790><c> a</c><00:10:42.820><c> full</c><00:10:43.150><c> description</c><00:10:43.660><c> of</c><00:10:43.720><c> how</c><00:10:43.839><c> it</c>

00:10:43.950 --> 00:10:43.960 align:start position:0%
they'll be a full description of how it
 

00:10:43.960 --> 00:10:45.600 align:start position:0%
they'll be a full description of how it
works<00:10:44.110><c> from</c><00:10:44.230><c> scratch</c><00:10:44.560><c> but</c><00:10:45.010><c> I</c><00:10:45.070><c> won't</c><00:10:45.280><c> be</c><00:10:45.370><c> mean</c>

00:10:45.600 --> 00:10:45.610 align:start position:0%
works from scratch but I won't be mean
 

00:10:45.610 --> 00:10:47.370 align:start position:0%
works from scratch but I won't be mean
and<00:10:45.850><c> you</c><00:10:46.390><c> know</c><00:10:46.420><c> throw</c><00:10:46.780><c> something</c><00:10:47.080><c> in</c><00:10:47.200><c> there</c><00:10:47.230><c> do</c>

00:10:47.370 --> 00:10:47.380 align:start position:0%
and you know throw something in there do
 

00:10:47.380 --> 00:10:49.500 align:start position:0%
and you know throw something in there do
you<00:10:47.410><c> wanna</c><00:10:47.470><c> and</c><00:10:48.070><c> then</c><00:10:48.400><c> from</c><00:10:48.580><c> here</c><00:10:48.760><c> now</c><00:10:48.940><c> we're</c>

00:10:49.500 --> 00:10:49.510 align:start position:0%
you wanna and then from here now we're
 

00:10:49.510 --> 00:10:53.760 align:start position:0%
you wanna and then from here now we're
gonna<00:10:49.600><c> launch</c><00:10:49.990><c> into</c><00:10:50.200><c> our</c><00:10:52.380><c> big-picture</c><00:10:53.380><c> data</c>

00:10:53.760 --> 00:10:53.770 align:start position:0%
gonna launch into our big-picture data
 

00:10:53.770 --> 00:10:56.040 align:start position:0%
gonna launch into our big-picture data
structures<00:10:54.160><c> and</c><00:10:54.280><c> algorithms</c><00:10:54.490><c> the</c><00:10:55.450><c> textbook</c>

00:10:56.040 --> 00:10:56.050 align:start position:0%
structures and algorithms the textbook
 

00:10:56.050 --> 00:10:57.570 align:start position:0%
structures and algorithms the textbook
that<00:10:56.230><c> I'm</c><00:10:56.350><c> a</c><00:10:56.380><c> little</c><00:10:56.650><c> behind</c><00:10:56.950><c> on</c><00:10:57.070><c> as</c><00:10:57.310><c> of</c><00:10:57.339><c> the</c>

00:10:57.570 --> 00:10:57.580 align:start position:0%
that I'm a little behind on as of the
 

00:10:57.580 --> 00:10:59.370 align:start position:0%
that I'm a little behind on as of the
time<00:10:57.790><c> of</c><00:10:58.030><c> recording</c><00:10:58.240><c> this</c><00:10:58.600><c> particular</c><00:10:59.110><c> video</c>

00:10:59.370 --> 00:10:59.380 align:start position:0%
time of recording this particular video
 

00:10:59.380 --> 00:11:01.410 align:start position:0%
time of recording this particular video
well<00:11:00.220><c> it</c><00:11:00.459><c> ends</c><00:11:00.760><c> now</c>

00:11:01.410 --> 00:11:01.420 align:start position:0%
well it ends now
 

00:11:01.420 --> 00:11:03.390 align:start position:0%
well it ends now
and<00:11:01.750><c> there's</c><00:11:02.260><c> an</c><00:11:02.350><c> optional</c><00:11:02.680><c> textbook</c><00:11:03.130><c> for</c><00:11:03.340><c> the</c>

00:11:03.390 --> 00:11:03.400 align:start position:0%
and there's an optional textbook for the
 

00:11:03.400 --> 00:11:04.710 align:start position:0%
and there's an optional textbook for the
second<00:11:03.700><c> half</c><00:11:03.790><c> of</c><00:11:03.940><c> the</c><00:11:04.030><c> class</c><00:11:04.150><c> for</c><00:11:04.480><c> those</c><00:11:04.540><c> of</c>

00:11:04.710 --> 00:11:04.720 align:start position:0%
second half of the class for those of
 

00:11:04.720 --> 00:11:05.910 align:start position:0%
second half of the class for those of
you<00:11:04.810><c> who</c><00:11:04.930><c> want</c><00:11:05.110><c> readings</c><00:11:05.500><c> for</c><00:11:05.680><c> the</c><00:11:05.770><c> data</c>

00:11:05.910 --> 00:11:05.920 align:start position:0%
you who want readings for the data
 

00:11:05.920 --> 00:11:09.060 align:start position:0%
you who want readings for the data
structures<00:11:06.310><c> and</c><00:11:06.460><c> algorithms</c><00:11:06.640><c> part</c><00:11:07.090><c> so</c><00:11:08.070><c> the</c>

00:11:09.060 --> 00:11:09.070 align:start position:0%
structures and algorithms part so the
 

00:11:09.070 --> 00:11:11.190 align:start position:0%
structures and algorithms part so the
lectures<00:11:09.460><c> are</c><00:11:09.610><c> gonna</c><00:11:09.700><c> kind</c><00:11:10.120><c> of</c><00:11:10.210><c> lighten</c><00:11:10.720><c> the</c>

00:11:11.190 --> 00:11:11.200 align:start position:0%
lectures are gonna kind of lighten the
 

00:11:11.200 --> 00:11:13.020 align:start position:0%
lectures are gonna kind of lighten the
load<00:11:11.470><c> a</c><00:11:11.500><c> little</c><00:11:11.680><c> bit</c><00:11:12.040><c> while</c><00:11:12.610><c> you're</c><00:11:12.730><c> working</c>

00:11:13.020 --> 00:11:13.030 align:start position:0%
load a little bit while you're working
 

00:11:13.030 --> 00:11:14.880 align:start position:0%
load a little bit while you're working
on<00:11:13.120><c> the</c><00:11:13.270><c> big</c><00:11:13.450><c> project</c><00:11:13.480><c> too</c><00:11:14.080><c> and</c><00:11:14.320><c> then</c><00:11:14.650><c> after</c>

00:11:14.880 --> 00:11:14.890 align:start position:0%
on the big project too and then after
 

00:11:14.890 --> 00:11:16.080 align:start position:0%
on the big project too and then after
that<00:11:15.010><c> we'll</c><00:11:15.130><c> pick</c><00:11:15.340><c> up</c><00:11:15.370><c> with</c><00:11:15.700><c> some</c><00:11:15.940><c> more</c>

00:11:16.080 --> 00:11:16.090 align:start position:0%
that we'll pick up with some more
 

00:11:16.090 --> 00:11:17.910 align:start position:0%
that we'll pick up with some more
aggressive<00:11:16.480><c> tricky</c><00:11:16.840><c> ideas</c><00:11:17.170><c> but</c><00:11:17.740><c> we're</c><00:11:17.830><c> gonna</c>

00:11:17.910 --> 00:11:17.920 align:start position:0%
aggressive tricky ideas but we're gonna
 

00:11:17.920 --> 00:11:19.770 align:start position:0%
aggressive tricky ideas but we're gonna
slow<00:11:18.190><c> down</c><00:11:18.340><c> the</c><00:11:18.460><c> pace</c><00:11:18.610><c> for</c><00:11:18.670><c> the</c><00:11:18.910><c> next</c><00:11:19.210><c> four</c>

00:11:19.770 --> 00:11:19.780 align:start position:0%
slow down the pace for the next four
 

00:11:19.780 --> 00:11:21.570 align:start position:0%
slow down the pace for the next four
videos<00:11:19.810><c> or</c><00:11:20.290><c> so</c><00:11:20.440><c> if</c><00:11:20.920><c> you're</c><00:11:21.070><c> somebody</c><00:11:21.250><c> just</c>

00:11:21.570 --> 00:11:21.580 align:start position:0%
videos or so if you're somebody just
 

00:11:21.580 --> 00:11:23.430 align:start position:0%
videos or so if you're somebody just
doing<00:11:21.820><c> the</c><00:11:21.910><c> class</c><00:11:22.120><c> online</c><00:11:22.330><c> I</c><00:11:22.780><c> encourage</c><00:11:23.320><c> you</c>

00:11:23.430 --> 00:11:23.440 align:start position:0%
doing the class online I encourage you
 

00:11:23.440 --> 00:11:25.700 align:start position:0%
doing the class online I encourage you
to<00:11:23.470><c> actually</c><00:11:23.680><c> do</c><00:11:24.130><c> check</c><00:11:24.490><c> out</c><00:11:24.580><c> our</c><00:11:24.700><c> project</c><00:11:24.880><c> too</c>

00:11:25.700 --> 00:11:25.710 align:start position:0%
to actually do check out our project too
 

00:11:25.710 --> 00:11:27.690 align:start position:0%
to actually do check out our project too
because<00:11:26.710><c> I</c><00:11:26.920><c> think</c><00:11:26.980><c> it's</c><00:11:27.250><c> a</c><00:11:27.310><c> great</c><00:11:27.490><c> experience</c>

00:11:27.690 --> 00:11:27.700 align:start position:0%
because I think it's a great experience
 

00:11:27.700 --> 00:11:29.550 align:start position:0%
because I think it's a great experience
for<00:11:28.000><c> everybody</c><00:11:28.270><c> all</c><00:11:28.600><c> the</c><00:11:28.660><c> resources</c><00:11:29.440><c> are</c>

00:11:29.550 --> 00:11:29.560 align:start position:0%
for everybody all the resources are
 

00:11:29.560 --> 00:11:30.900 align:start position:0%
for everybody all the resources are
available<00:11:29.650><c> on</c><00:11:30.010><c> the</c><00:11:30.070><c> web</c><00:11:30.190><c> except</c><00:11:30.580><c> maybe</c><00:11:30.730><c> the</c>

00:11:30.900 --> 00:11:30.910 align:start position:0%
available on the web except maybe the
 

00:11:30.910 --> 00:11:33.960 align:start position:0%
available on the web except maybe the
auto<00:11:31.060><c> grader</c><00:11:31.360><c> and</c><00:11:32.200><c> I</c><00:11:32.560><c> think</c><00:11:32.830><c> it's</c><00:11:33.010><c> something</c>

00:11:33.960 --> 00:11:33.970 align:start position:0%
auto grader and I think it's something
 

00:11:33.970 --> 00:11:35.610 align:start position:0%
auto grader and I think it's something
that<00:11:34.150><c> is</c><00:11:34.570><c> an</c><00:11:34.720><c> important</c><00:11:35.140><c> part</c><00:11:35.290><c> of</c><00:11:35.350><c> the</c><00:11:35.440><c> course</c>

00:11:35.610 --> 00:11:35.620 align:start position:0%
that is an important part of the course
 

00:11:35.620 --> 00:11:39.090 align:start position:0%
that is an important part of the course
okay<00:11:36.100><c> see</c><00:11:36.520><c> you</c><00:11:36.610><c> in</c><00:11:36.640><c> the</c><00:11:36.730><c> next</c><00:11:36.910><c> video</c>

