WEBVTT
Kind: captions
Language: en

00:00:00.030 --> 00:00:02.240 align:start position:0%
 
before<00:00:01.020><c> we</c><00:00:01.110><c> move</c><00:00:01.290><c> on</c><00:00:01.410><c> from</c><00:00:01.439><c> linked</c><00:00:01.860><c> lists</c><00:00:02.129><c> all</c>

00:00:02.240 --> 00:00:02.250 align:start position:0%
before we move on from linked lists all
 

00:00:02.250 --> 00:00:04.010 align:start position:0%
before we move on from linked lists all
together<00:00:02.429><c> let's</c><00:00:03.060><c> discuss</c><00:00:03.480><c> an</c><00:00:03.689><c> obvious</c>

00:00:04.010 --> 00:00:04.020 align:start position:0%
together let's discuss an obvious
 

00:00:04.020 --> 00:00:06.019 align:start position:0%
together let's discuss an obvious
limitation<00:00:04.589><c> that</c><00:00:04.799><c> makes</c><00:00:05.310><c> our</c><00:00:05.460><c> list</c><00:00:05.670><c> not</c><00:00:05.819><c> so</c>

00:00:06.019 --> 00:00:06.029 align:start position:0%
limitation that makes our list not so
 

00:00:06.029 --> 00:00:07.039 align:start position:0%
limitation that makes our list not so
useful<00:00:06.210><c> in</c><00:00:06.450><c> the</c><00:00:06.509><c> real</c><00:00:06.540><c> world</c>

00:00:07.039 --> 00:00:07.049 align:start position:0%
useful in the real world
 

00:00:07.049 --> 00:00:09.830 align:start position:0%
useful in the real world
what<00:00:07.770><c> is</c><00:00:07.859><c> that</c><00:00:07.980><c> limitation</c><00:00:08.540><c> well</c><00:00:09.540><c> let's</c>

00:00:09.830 --> 00:00:09.840 align:start position:0%
what is that limitation well let's
 

00:00:09.840 --> 00:00:12.320 align:start position:0%
what is that limitation well let's
consider<00:00:10.019><c> here</c><00:00:10.500><c> an</c><00:00:10.679><c> S</c><00:00:10.889><c> list</c><00:00:11.219><c> using</c><00:00:11.580><c> class</c>

00:00:12.320 --> 00:00:12.330 align:start position:0%
consider here an S list using class
 

00:00:12.330 --> 00:00:14.480 align:start position:0%
consider here an S list using class
it<00:00:12.840><c> creates</c><00:00:13.320><c> an</c><00:00:13.469><c> S</c><00:00:13.590><c> list</c><00:00:13.860><c> with</c><00:00:13.980><c> the</c><00:00:14.070><c> number</c><00:00:14.280><c> 5</c>

00:00:14.480 --> 00:00:14.490 align:start position:0%
it creates an S list with the number 5
 

00:00:14.490 --> 00:00:16.220 align:start position:0%
it creates an S list with the number 5
and<00:00:14.759><c> adds</c><00:00:15.000><c> to</c><00:00:15.120><c> the</c><00:00:15.210><c> number</c><00:00:15.420><c> 10</c><00:00:15.570><c> it'll</c><00:00:15.929><c> all</c><00:00:16.199><c> work</c>

00:00:16.220 --> 00:00:16.230 align:start position:0%
and adds to the number 10 it'll all work
 

00:00:16.230 --> 00:00:18.890 align:start position:0%
and adds to the number 10 it'll all work
beautifully<00:00:16.890><c> and</c><00:00:17.010><c> wonderfully</c><00:00:17.510><c> but</c><00:00:18.510><c> suppose</c>

00:00:18.890 --> 00:00:18.900 align:start position:0%
beautifully and wonderfully but suppose
 

00:00:18.900 --> 00:00:20.330 align:start position:0%
beautifully and wonderfully but suppose
we<00:00:19.140><c> wanted</c><00:00:19.380><c> to</c><00:00:19.439><c> create</c><00:00:19.770><c> not</c><00:00:19.949><c> a</c><00:00:19.980><c> list</c><00:00:20.220><c> of</c>

00:00:20.330 --> 00:00:20.340 align:start position:0%
we wanted to create not a list of
 

00:00:20.340 --> 00:00:22.910 align:start position:0%
we wanted to create not a list of
integers<00:00:20.640><c> put</c><00:00:21.210><c> a</c><00:00:21.240><c> list</c><00:00:21.449><c> of</c><00:00:21.600><c> say</c><00:00:21.750><c> strings</c><00:00:22.199><c> so</c><00:00:22.859><c> I</c>

00:00:22.910 --> 00:00:22.920 align:start position:0%
integers put a list of say strings so I
 

00:00:22.920 --> 00:00:25.310 align:start position:0%
integers put a list of say strings so I
might<00:00:23.160><c> try</c><00:00:23.310><c> and</c><00:00:23.550><c> start</c><00:00:24.000><c> off</c><00:00:24.119><c> with</c><00:00:24.269><c> bone</c><00:00:24.510><c> and</c>

00:00:25.310 --> 00:00:25.320 align:start position:0%
might try and start off with bone and
 

00:00:25.320 --> 00:00:30.050 align:start position:0%
might try and start off with bone and
add<00:00:25.880><c> bugs</c><00:00:27.019><c> and</c><00:00:28.019><c> if</c><00:00:28.170><c> I</c><00:00:28.230><c> try</c><00:00:28.380><c> running</c><00:00:28.680><c> this</c><00:00:29.060><c> then</c>

00:00:30.050 --> 00:00:30.060 align:start position:0%
add bugs and if I try running this then
 

00:00:30.060 --> 00:00:32.150 align:start position:0%
add bugs and if I try running this then
I<00:00:30.119><c> ran</c><00:00:30.269><c> into</c><00:00:30.390><c> an</c><00:00:30.539><c> issue</c><00:00:30.630><c> string</c><00:00:31.529><c> cannot</c><00:00:31.980><c> be</c>

00:00:32.150 --> 00:00:32.160 align:start position:0%
I ran into an issue string cannot be
 

00:00:32.160 --> 00:00:34.190 align:start position:0%
I ran into an issue string cannot be
converted<00:00:32.430><c> to</c><00:00:32.669><c> end</c><00:00:32.850><c> and</c><00:00:33.719><c> so</c><00:00:33.870><c> the</c><00:00:33.989><c> fundamental</c>

00:00:34.190 --> 00:00:34.200 align:start position:0%
converted to end and so the fundamental
 

00:00:34.200 --> 00:00:37.310 align:start position:0%
converted to end and so the fundamental
issue<00:00:34.770><c> we</c><00:00:35.160><c> run</c><00:00:35.340><c> into</c><00:00:35.520><c> is</c><00:00:36.059><c> that</c><00:00:36.360><c> an</c><00:00:36.630><c> S</c><00:00:36.809><c> list</c><00:00:37.110><c> has</c>

00:00:37.310 --> 00:00:37.320 align:start position:0%
issue we run into is that an S list has
 

00:00:37.320 --> 00:00:40.340 align:start position:0%
issue we run into is that an S list has
int<00:00:37.710><c> nodes</c><00:00:38.010><c> and</c><00:00:38.309><c> Internode's</c><00:00:38.760><c> have</c><00:00:39.210><c> int</c><00:00:39.480><c> items</c>

00:00:40.340 --> 00:00:40.350 align:start position:0%
int nodes and Internode's have int items
 

00:00:40.350 --> 00:00:43.760 align:start position:0%
int nodes and Internode's have int items
and<00:00:40.620><c> therefore</c><00:00:41.550><c> if</c><00:00:42.000><c> we</c><00:00:42.360><c> try</c><00:00:42.600><c> to</c><00:00:42.660><c> create</c><00:00:43.290><c> an</c><00:00:43.559><c> S</c>

00:00:43.760 --> 00:00:43.770 align:start position:0%
and therefore if we try to create an S
 

00:00:43.770 --> 00:00:46.010 align:start position:0%
and therefore if we try to create an S
list<00:00:44.040><c> using</c><00:00:44.399><c> a</c><00:00:44.460><c> string</c><00:00:44.820><c> or</c><00:00:45.120><c> how</c><00:00:45.480><c> we</c><00:00:45.539><c> try</c><00:00:45.750><c> to</c><00:00:45.809><c> add</c>

00:00:46.010 --> 00:00:46.020 align:start position:0%
list using a string or how we try to add
 

00:00:46.020 --> 00:00:48.470 align:start position:0%
list using a string or how we try to add
to<00:00:46.050><c> such</c><00:00:46.590><c> an</c><00:00:46.770><c> S</c><00:00:46.890><c> list</c><00:00:47.160><c> not</c><00:00:47.520><c> using</c><00:00:47.820><c> a</c><00:00:47.879><c> string</c><00:00:48.120><c> we</c>

00:00:48.470 --> 00:00:48.480 align:start position:0%
to such an S list not using a string we
 

00:00:48.480 --> 00:00:50.630 align:start position:0%
to such an S list not using a string we
will<00:00:48.629><c> get</c><00:00:48.780><c> an</c><00:00:48.960><c> error</c><00:00:49.110><c> you</c><00:00:49.469><c> cannot</c><00:00:50.039><c> do</c><00:00:50.280><c> this</c><00:00:50.460><c> you</c>

00:00:50.630 --> 00:00:50.640 align:start position:0%
will get an error you cannot do this you
 

00:00:50.640 --> 00:00:52.369 align:start position:0%
will get an error you cannot do this you
cannot<00:00:50.969><c> take</c><00:00:51.329><c> strings</c><00:00:51.660><c> and</c><00:00:51.899><c> convert</c><00:00:52.260><c> them</c>

00:00:52.369 --> 00:00:52.379 align:start position:0%
cannot take strings and convert them
 

00:00:52.379 --> 00:00:54.580 align:start position:0%
cannot take strings and convert them
into<00:00:52.500><c> integers</c><00:00:53.100><c> that's</c><00:00:53.579><c> the</c><00:00:53.699><c> ultimate</c><00:00:53.820><c> self</c>

00:00:54.580 --> 00:00:54.590 align:start position:0%
into integers that's the ultimate self
 

00:00:54.590 --> 00:00:56.299 align:start position:0%
into integers that's the ultimate self
so<00:00:55.590><c> how</c><00:00:55.680><c> do</c><00:00:55.739><c> we</c><00:00:55.829><c> fix</c><00:00:56.039><c> that</c>

00:00:56.299 --> 00:00:56.309 align:start position:0%
so how do we fix that
 

00:00:56.309 --> 00:00:58.610 align:start position:0%
so how do we fix that
well<00:00:57.270><c> the</c><00:00:57.360><c> lamest</c><00:00:57.750><c> possible</c><00:00:58.230><c> way</c><00:00:58.320><c> we</c><00:00:58.469><c> could</c>

00:00:58.610 --> 00:00:58.620 align:start position:0%
well the lamest possible way we could
 

00:00:58.620 --> 00:01:00.380 align:start position:0%
well the lamest possible way we could
fix<00:00:58.770><c> it</c><00:00:58.980><c> is</c><00:00:59.160><c> we</c><00:00:59.399><c> could</c><00:00:59.550><c> make</c><00:00:59.730><c> an</c><00:00:59.879><c> entirely</c><00:01:00.210><c> new</c>

00:01:00.380 --> 00:01:00.390 align:start position:0%
fix it is we could make an entirely new
 

00:01:00.390 --> 00:01:03.110 align:start position:0%
fix it is we could make an entirely new
s<00:01:00.719><c> list</c><00:01:01.050><c> class</c><00:01:01.289><c> like</c><00:01:01.590><c> string</c><00:01:01.920><c> s</c><00:01:02.129><c> list</c><00:01:02.399><c> and</c><00:01:02.640><c> then</c>

00:01:03.110 --> 00:01:03.120 align:start position:0%
s list class like string s list and then
 

00:01:03.120 --> 00:01:04.789 align:start position:0%
s list class like string s list and then
do<00:01:03.210><c> a</c><00:01:03.239><c> find</c><00:01:03.539><c> and</c><00:01:03.660><c> replace</c><00:01:03.750><c> for</c><00:01:04.199><c> int</c><00:01:04.350><c> everywhere</c>

00:01:04.789 --> 00:01:04.799 align:start position:0%
do a find and replace for int everywhere
 

00:01:04.799 --> 00:01:05.990 align:start position:0%
do a find and replace for int everywhere
and<00:01:05.040><c> oh</c><00:01:05.189><c> boy</c>

00:01:05.990 --> 00:01:06.000 align:start position:0%
and oh boy
 

00:01:06.000 --> 00:01:07.250 align:start position:0%
and oh boy
and<00:01:06.390><c> that</c><00:01:06.570><c> would</c><00:01:06.689><c> be</c><00:01:06.780><c> a</c><00:01:06.810><c> terrible</c><00:01:07.140><c> idea</c>

00:01:07.250 --> 00:01:07.260 align:start position:0%
and that would be a terrible idea
 

00:01:07.260 --> 00:01:10.280 align:start position:0%
and that would be a terrible idea
obviously<00:01:08.060><c> so</c><00:01:09.060><c> the</c><00:01:09.240><c> current</c><00:01:09.570><c> approach</c><00:01:09.810><c> in</c><00:01:10.140><c> the</c>

00:01:10.280 --> 00:01:10.290 align:start position:0%
obviously so the current approach in the
 

00:01:10.290 --> 00:01:14.350 align:start position:0%
obviously so the current approach in the
in<00:01:10.530><c> modern</c><00:01:10.860><c> java</c><00:01:11.130><c> is</c><00:01:11.970><c> to</c><00:01:12.240><c> make</c><00:01:12.450><c> s</c><00:01:12.689><c> list</c><00:01:13.020><c> a</c>

00:01:14.350 --> 00:01:14.360 align:start position:0%
in modern java is to make s list a
 

00:01:14.360 --> 00:01:16.429 align:start position:0%
in modern java is to make s list a
parameterised<00:01:15.360><c> well</c><00:01:15.990><c> we</c><00:01:16.080><c> can</c><00:01:16.200><c> we</c><00:01:16.320><c> can</c>

00:01:16.429 --> 00:01:16.439 align:start position:0%
parameterised well we can we can
 

00:01:16.439 --> 00:01:18.890 align:start position:0%
parameterised well we can we can
parameterize<00:01:16.680><c> the</c><00:01:17.340><c> type</c><00:01:17.580><c> that</c><00:01:18.270><c> s</c><00:01:18.450><c> list</c><00:01:18.720><c> will</c>

00:01:18.890 --> 00:01:18.900 align:start position:0%
parameterize the type that s list will
 

00:01:18.900 --> 00:01:22.280 align:start position:0%
parameterize the type that s list will
take<00:01:19.250><c> what</c><00:01:20.250><c> does</c><00:01:20.430><c> that</c><00:01:20.460><c> possibly</c><00:01:20.790><c> mean</c><00:01:21.229><c> ok</c><00:01:22.229><c> so</c>

00:01:22.280 --> 00:01:22.290 align:start position:0%
take what does that possibly mean ok so
 

00:01:22.290 --> 00:01:23.870 align:start position:0%
take what does that possibly mean ok so
what<00:01:22.470><c> I'm</c><00:01:22.560><c> gonna</c><00:01:22.650><c> do</c><00:01:22.890><c> is</c><00:01:23.100><c> I'm</c><00:01:23.220><c> gonna</c><00:01:23.340><c> add</c><00:01:23.549><c> new</c>

00:01:23.870 --> 00:01:23.880 align:start position:0%
what I'm gonna do is I'm gonna add new
 

00:01:23.880 --> 00:01:27.170 align:start position:0%
what I'm gonna do is I'm gonna add new
little<00:01:24.689><c> angled</c><00:01:25.380><c> braces</c><00:01:25.650><c> here</c><00:01:26.189><c> right</c><00:01:26.939><c> after</c>

00:01:27.170 --> 00:01:27.180 align:start position:0%
little angled braces here right after
 

00:01:27.180 --> 00:01:29.749 align:start position:0%
little angled braces here right after
the<00:01:27.720><c> name</c><00:01:27.960><c> s</c><00:01:28.259><c> list</c><00:01:28.680><c> and</c><00:01:28.920><c> here</c><00:01:29.369><c> I'm</c><00:01:29.460><c> gonna</c><00:01:29.549><c> pick</c>

00:01:29.749 --> 00:01:29.759 align:start position:0%
the name s list and here I'm gonna pick
 

00:01:29.759 --> 00:01:31.460 align:start position:0%
the name s list and here I'm gonna pick
any<00:01:30.000><c> old</c><00:01:30.240><c> string</c><00:01:30.570><c> something</c><00:01:30.960><c> arbitrary</c><00:01:31.110><c> like</c>

00:01:31.460 --> 00:01:31.470 align:start position:0%
any old string something arbitrary like
 

00:01:31.470 --> 00:01:35.210 align:start position:0%
any old string something arbitrary like
I'm<00:01:32.430><c> not</c><00:01:32.670><c> lockness</c><00:01:33.299><c> and</c><00:01:33.920><c> that's</c><00:01:34.920><c> just</c><00:01:35.100><c> going</c>

00:01:35.210 --> 00:01:35.220 align:start position:0%
I'm not lockness and that's just going
 

00:01:35.220 --> 00:01:37.340 align:start position:0%
I'm not lockness and that's just going
to<00:01:35.310><c> act</c><00:01:35.520><c> as</c><00:01:35.759><c> a</c><00:01:35.820><c> placeholder</c><00:01:36.240><c> for</c><00:01:36.780><c> a</c><00:01:36.869><c> type</c><00:01:37.110><c> that</c>

00:01:37.340 --> 00:01:37.350 align:start position:0%
to act as a placeholder for a type that
 

00:01:37.350 --> 00:01:39.499 align:start position:0%
to act as a placeholder for a type that
is<00:01:37.409><c> not</c><00:01:37.680><c> decided</c><00:01:38.220><c> at</c><00:01:38.369><c> the</c><00:01:38.579><c> time</c><00:01:38.610><c> s</c><00:01:39.030><c> list</c><00:01:39.299><c> was</c>

00:01:39.499 --> 00:01:39.509 align:start position:0%
is not decided at the time s list was
 

00:01:39.509 --> 00:01:42.800 align:start position:0%
is not decided at the time s list was
created<00:01:39.979><c> so</c><00:01:40.979><c> instead</c><00:01:41.850><c> of</c><00:01:41.909><c> an</c><00:01:42.060><c> int</c><00:01:42.270><c> item</c><00:01:42.659><c> we're</c>

00:01:42.800 --> 00:01:42.810 align:start position:0%
created so instead of an int item we're
 

00:01:42.810 --> 00:01:44.510 align:start position:0%
created so instead of an int item we're
gonna<00:01:42.930><c> have</c><00:01:43.079><c> a</c><00:01:43.110><c> lockness</c><00:01:43.680><c> instead</c><00:01:44.399><c> of</c>

00:01:44.510 --> 00:01:44.520 align:start position:0%
gonna have a lockness instead of
 

00:01:44.520 --> 00:01:45.950 align:start position:0%
gonna have a lockness instead of
creating<00:01:44.850><c> an</c><00:01:44.939><c> int</c><00:01:45.090><c> node</c><00:01:45.329><c> we're</c><00:01:45.600><c> gonna</c><00:01:45.720><c> say</c>

00:01:45.950 --> 00:01:45.960 align:start position:0%
creating an int node we're gonna say
 

00:01:45.960 --> 00:01:47.630 align:start position:0%
creating an int node we're gonna say
public<00:01:46.320><c> int</c><00:01:46.470><c> node</c><00:01:46.649><c> and</c><00:01:47.100><c> we</c><00:01:47.310><c> need</c><00:01:47.460><c> to</c><00:01:47.520><c> provide</c>

00:01:47.630 --> 00:01:47.640 align:start position:0%
public int node and we need to provide
 

00:01:47.640 --> 00:01:51.350 align:start position:0%
public int node and we need to provide
all<00:01:47.880><c> honest</c><00:01:49.430><c> int</c><00:01:50.430><c> nodes</c><00:01:50.759><c> probably</c><00:01:51.180><c> not</c><00:01:51.329><c> a</c>

00:01:51.350 --> 00:01:51.360 align:start position:0%
all honest int nodes probably not a
 

00:01:51.360 --> 00:01:53.300 align:start position:0%
all honest int nodes probably not a
great<00:01:51.720><c> name</c><00:01:51.990><c> since</c><00:01:52.320><c> it's</c><00:01:52.470><c> no</c><00:01:52.590><c> longer</c><00:01:52.770><c> int</c><00:01:53.070><c> node</c>

00:01:53.300 --> 00:01:53.310 align:start position:0%
great name since it's no longer int node
 

00:01:53.310 --> 00:01:54.980 align:start position:0%
great name since it's no longer int node
so<00:01:53.579><c> let's</c><00:01:53.729><c> do</c><00:01:53.850><c> a</c><00:01:53.880><c> find</c><00:01:54.119><c> and</c><00:01:54.270><c> replace</c><00:01:54.329><c> on</c><00:01:54.810><c> that</c>

00:01:54.980 --> 00:01:54.990 align:start position:0%
so let's do a find and replace on that
 

00:01:54.990 --> 00:01:58.190 align:start position:0%
so let's do a find and replace on that
to<00:01:55.700><c> int</c><00:01:56.700><c> node</c><00:01:56.969><c> we'll</c><00:01:57.570><c> just</c><00:01:57.719><c> call</c><00:01:57.840><c> this</c><00:01:57.960><c> thing</c>

00:01:58.190 --> 00:01:58.200 align:start position:0%
to int node we'll just call this thing
 

00:01:58.200 --> 00:02:00.980 align:start position:0%
to int node we'll just call this thing
stuff<00:01:58.979><c> node</c><00:01:59.509><c> whatever</c><00:02:00.509><c> all</c><00:02:00.810><c> right</c>

00:02:00.980 --> 00:02:00.990 align:start position:0%
stuff node whatever all right
 

00:02:00.990 --> 00:02:03.319 align:start position:0%
stuff node whatever all right
just<00:02:01.799><c> to</c><00:02:01.890><c> emphasize</c><00:02:02.009><c> it</c><00:02:02.520><c> still</c><00:02:02.729><c> has</c><00:02:02.880><c> stuff</c><00:02:03.119><c> in</c>

00:02:03.319 --> 00:02:03.329 align:start position:0%
just to emphasize it still has stuff in
 

00:02:03.329 --> 00:02:07.399 align:start position:0%
just to emphasize it still has stuff in
it<00:02:03.890><c> and</c><00:02:04.890><c> then</c><00:02:05.130><c> I</c><00:02:05.399><c> am</c><00:02:05.759><c> going</c><00:02:06.030><c> to</c><00:02:06.180><c> keep</c><00:02:07.020><c> working</c>

00:02:07.399 --> 00:02:07.409 align:start position:0%
it and then I am going to keep working
 

00:02:07.409 --> 00:02:07.880 align:start position:0%
it and then I am going to keep working
on<00:02:07.530><c> my</c>

00:02:07.880 --> 00:02:07.890 align:start position:0%
on my
 

00:02:07.890 --> 00:02:09.830 align:start position:0%
on my
way<00:02:07.980><c> through</c><00:02:08.280><c> so</c><00:02:08.789><c> we</c><00:02:08.910><c> create</c><00:02:09.180><c> an</c><00:02:09.270><c> s</c><00:02:09.390><c> list</c><00:02:09.660><c> now</c>

00:02:09.830 --> 00:02:09.840 align:start position:0%
way through so we create an s list now
 

00:02:09.840 --> 00:02:12.350 align:start position:0%
way through so we create an s list now
I'll<00:02:10.020><c> take</c><00:02:10.259><c> lost</c><00:02:10.530><c> missus</c><00:02:10.950><c> instead</c><00:02:11.340><c> of</c><00:02:11.460><c> intz</c><00:02:11.880><c> we</c>

00:02:12.350 --> 00:02:12.360 align:start position:0%
I'll take lost missus instead of intz we
 

00:02:12.360 --> 00:02:15.770 align:start position:0%
I'll take lost missus instead of intz we
add<00:02:12.540><c> look</c><00:02:13.050><c> mrs.</c><00:02:13.470><c> we</c><00:02:14.040><c> return</c><00:02:14.400><c> look</c><00:02:14.700><c> mrs.</c><00:02:15.210><c> we</c><00:02:15.630><c> add</c>

00:02:15.770 --> 00:02:15.780 align:start position:0%
add look mrs. we return look mrs. we add
 

00:02:15.780 --> 00:02:18.140 align:start position:0%
add look mrs. we return look mrs. we add
log<00:02:16.080><c> missus</c><00:02:16.560><c> and</c><00:02:17.220><c> at</c><00:02:17.310><c> that</c><00:02:17.460><c> point</c><00:02:17.670><c> we're</c><00:02:18.060><c> all</c>

00:02:18.140 --> 00:02:18.150 align:start position:0%
log missus and at that point we're all
 

00:02:18.150 --> 00:02:21.290 align:start position:0%
log missus and at that point we're all
done<00:02:18.680><c> so</c><00:02:19.680><c> the</c><00:02:20.190><c> important</c><00:02:20.640><c> part</c><00:02:20.760><c> the</c><00:02:21.030><c> main</c>

00:02:21.290 --> 00:02:21.300 align:start position:0%
done so the important part the main
 

00:02:21.300 --> 00:02:24.380 align:start position:0%
done so the important part the main
thing<00:02:21.600><c> I</c><00:02:21.720><c> changed</c><00:02:22.200><c> other</c><00:02:22.410><c> than</c><00:02:22.590><c> just</c><00:02:23.210><c> the</c><00:02:24.210><c> name</c>

00:02:24.380 --> 00:02:24.390 align:start position:0%
thing I changed other than just the name
 

00:02:24.390 --> 00:02:27.070 align:start position:0%
thing I changed other than just the name
of<00:02:24.750><c> int</c><00:02:25.050><c> note</c><00:02:25.230><c> is</c><00:02:25.410><c> that</c><00:02:25.650><c> added</c><00:02:26.220><c> lostness</c><00:02:26.610><c> here</c>

00:02:27.070 --> 00:02:27.080 align:start position:0%
of int note is that added lostness here
 

00:02:27.080 --> 00:02:30.350 align:start position:0%
of int note is that added lostness here
this<00:02:28.080><c> will</c><00:02:28.260><c> compile</c><00:02:28.620><c> and</c><00:02:28.950><c> now</c><00:02:29.250><c> an</c><00:02:29.550><c> S</c><00:02:29.820><c> list</c><00:02:30.120><c> I'm</c>

00:02:30.350 --> 00:02:30.360 align:start position:0%
this will compile and now an S list I'm
 

00:02:30.360 --> 00:02:31.580 align:start position:0%
this will compile and now an S list I'm
in<00:02:30.480><c> won't</c><00:02:30.660><c> run</c><00:02:30.870><c> because</c><00:02:31.110><c> there's</c><00:02:31.290><c> no</c><00:02:31.410><c> main</c>

00:02:31.580 --> 00:02:31.590 align:start position:0%
in won't run because there's no main
 

00:02:31.590 --> 00:02:33.920 align:start position:0%
in won't run because there's no main
method<00:02:31.980><c> nobody</c><00:02:32.610><c> compiles</c><00:02:33.150><c> and</c><00:02:33.360><c> it</c><00:02:33.720><c> should</c>

00:02:33.920 --> 00:02:33.930 align:start position:0%
method nobody compiles and it should
 

00:02:33.930 --> 00:02:36.320 align:start position:0%
method nobody compiles and it should
work<00:02:34.080><c> for</c><00:02:34.370><c> how</c><00:02:35.370><c> do</c><00:02:35.430><c> we</c><00:02:35.550><c> actually</c><00:02:35.670><c> use</c><00:02:36.060><c> one</c><00:02:36.300><c> of</c>

00:02:36.320 --> 00:02:36.330 align:start position:0%
work for how do we actually use one of
 

00:02:36.330 --> 00:02:38.840 align:start position:0%
work for how do we actually use one of
these<00:02:36.480><c> things</c><00:02:36.800><c> well</c><00:02:37.800><c> now</c><00:02:37.950><c> if</c><00:02:38.250><c> we</c><00:02:38.550><c> wanted</c><00:02:38.790><c> to</c>

00:02:38.840 --> 00:02:38.850 align:start position:0%
these things well now if we wanted to
 

00:02:38.850 --> 00:02:41.600 align:start position:0%
these things well now if we wanted to
make<00:02:39.090><c> an</c><00:02:39.270><c> S</c><00:02:39.420><c> list</c><00:02:39.720><c> we're</c><00:02:40.530><c> going</c><00:02:40.740><c> to</c><00:02:40.890><c> now</c><00:02:41.220><c> need</c>

00:02:41.600 --> 00:02:41.610 align:start position:0%
make an S list we're going to now need
 

00:02:41.610 --> 00:02:45.020 align:start position:0%
make an S list we're going to now need
to<00:02:41.910><c> specify</c><00:02:42.330><c> a</c><00:02:43.050><c> type</c><00:02:43.650><c> when</c><00:02:44.190><c> we</c><00:02:44.310><c> create</c><00:02:44.640><c> a</c><00:02:44.670><c> s</c>

00:02:45.020 --> 00:02:45.030 align:start position:0%
to specify a type when we create a s
 

00:02:45.030 --> 00:02:46.820 align:start position:0%
to specify a type when we create a s
list<00:02:45.330><c> and</c><00:02:45.810><c> we'll</c><00:02:45.930><c> do</c><00:02:46.080><c> with</c><00:02:46.230><c> the</c><00:02:46.350><c> angled</c><00:02:46.680><c> braces</c>

00:02:46.820 --> 00:02:46.830 align:start position:0%
list and we'll do with the angled braces
 

00:02:46.830 --> 00:02:49.580 align:start position:0%
list and we'll do with the angled braces
and<00:02:47.670><c> so</c><00:02:47.790><c> to</c><00:02:47.850><c> do</c><00:02:48.060><c> that</c><00:02:48.090><c> I'll</c><00:02:48.360><c> say</c><00:02:48.540><c> I</c><00:02:48.750><c> want</c><00:02:49.050><c> an</c><00:02:49.170><c> S</c>

00:02:49.580 --> 00:02:49.590 align:start position:0%
and so to do that I'll say I want an S
 

00:02:49.590 --> 00:02:55.340 align:start position:0%
and so to do that I'll say I want an S
list<00:02:49.950><c> of</c><00:02:50.130><c> strings</c><00:02:51.890><c> so</c><00:02:52.890><c> we</c><00:02:53.640><c> go</c><00:02:53.820><c> we</c><00:02:54.030><c> say</c><00:02:54.239><c> I</c><00:02:54.750><c> would</c>

00:02:55.340 --> 00:02:55.350 align:start position:0%
list of strings so we go we say I would
 

00:02:55.350 --> 00:02:56.930 align:start position:0%
list of strings so we go we say I would
like<00:02:55.470><c> to</c><00:02:55.560><c> declare</c><00:02:55.920><c> an</c><00:02:56.100><c> S</c><00:02:56.250><c> list</c><00:02:56.520><c> of</c><00:02:56.670><c> string</c>

00:02:56.930 --> 00:02:56.940 align:start position:0%
like to declare an S list of string
 

00:02:56.940 --> 00:02:59.300 align:start position:0%
like to declare an S list of string
variable<00:02:57.390><c> and</c><00:02:57.570><c> instantiate</c><00:02:58.500><c> an</c><00:02:58.709><c> S</c><00:02:58.890><c> list</c><00:02:59.160><c> of</c>

00:02:59.300 --> 00:02:59.310 align:start position:0%
variable and instantiate an S list of
 

00:02:59.310 --> 00:03:01.370 align:start position:0%
variable and instantiate an S list of
strings<00:02:59.610><c> and</c><00:02:59.940><c> now</c><00:03:00.450><c> when</c><00:03:00.600><c> we</c><00:03:00.630><c> try</c><00:03:00.870><c> running</c><00:03:01.230><c> this</c>

00:03:01.370 --> 00:03:01.380 align:start position:0%
strings and now when we try running this
 

00:03:01.380 --> 00:03:03.410 align:start position:0%
strings and now when we try running this
everything<00:03:02.160><c> should</c><00:03:02.310><c> work</c><00:03:02.340><c> fine</c><00:03:02.670><c> okay</c><00:03:03.120><c> so</c><00:03:03.180><c> they</c>

00:03:03.410 --> 00:03:03.420 align:start position:0%
everything should work fine okay so they
 

00:03:03.420 --> 00:03:04.400 align:start position:0%
everything should work fine okay so they
are<00:03:03.450><c> when</c><00:03:03.720><c> it</c><00:03:04.050><c> worked</c>

00:03:04.400 --> 00:03:04.410 align:start position:0%
are when it worked
 

00:03:04.410 --> 00:03:07.729 align:start position:0%
are when it worked
hooray<00:03:05.180><c> and</c><00:03:06.180><c> so</c><00:03:06.810><c> what's</c><00:03:06.989><c> going</c><00:03:07.110><c> on</c><00:03:07.350><c> here</c><00:03:07.590><c> is</c>

00:03:07.729 --> 00:03:07.739 align:start position:0%
hooray and so what's going on here is
 

00:03:07.739 --> 00:03:10.460 align:start position:0%
hooray and so what's going on here is
that<00:03:08.160><c> whenever</c><00:03:08.340><c> we</c><00:03:08.520><c> instantiate</c><00:03:09.180><c> an</c><00:03:09.780><c> S</c><00:03:10.170><c> list</c>

00:03:10.460 --> 00:03:10.470 align:start position:0%
that whenever we instantiate an S list
 

00:03:10.470 --> 00:03:13.150 align:start position:0%
that whenever we instantiate an S list
this<00:03:10.950><c> string</c><00:03:11.580><c> right</c><00:03:11.910><c> here</c>

00:03:13.150 --> 00:03:13.160 align:start position:0%
this string right here
 

00:03:13.160 --> 00:03:15.259 align:start position:0%
this string right here
this<00:03:14.160><c> string</c><00:03:14.549><c> right</c><00:03:14.820><c> here</c><00:03:14.880><c> will</c><00:03:15.150><c> get</c>

00:03:15.259 --> 00:03:15.269 align:start position:0%
this string right here will get
 

00:03:15.269 --> 00:03:17.330 align:start position:0%
this string right here will get
substituted<00:03:15.989><c> everywhere</c><00:03:16.470><c> in</c><00:03:16.620><c> for</c><00:03:16.890><c> lockness</c>

00:03:17.330 --> 00:03:17.340 align:start position:0%
substituted everywhere in for lockness
 

00:03:17.340 --> 00:03:20.090 align:start position:0%
substituted everywhere in for lockness
so<00:03:17.850><c> it's</c><00:03:17.970><c> basically</c><00:03:18.239><c> a</c><00:03:18.690><c> type</c><00:03:19.110><c> variable</c><00:03:19.170><c> or</c><00:03:20.040><c> a</c>

00:03:20.090 --> 00:03:20.100 align:start position:0%
so it's basically a type variable or a
 

00:03:20.100 --> 00:03:22.970 align:start position:0%
so it's basically a type variable or a
type<00:03:20.340><c> parameter</c><00:03:21.230><c> and</c><00:03:22.230><c> so</c><00:03:22.320><c> we</c><00:03:22.440><c> can</c><00:03:22.680><c> give</c><00:03:22.860><c> it</c><00:03:22.950><c> a</c>

00:03:22.970 --> 00:03:22.980 align:start position:0%
type parameter and so we can give it a
 

00:03:22.980 --> 00:03:24.229 align:start position:0%
type parameter and so we can give it a
little<00:03:23.100><c> confusing</c><00:03:23.580><c> and</c><00:03:23.850><c> we're</c><00:03:23.970><c> not</c><00:03:24.090><c> gonna</c>

00:03:24.229 --> 00:03:24.239 align:start position:0%
little confusing and we're not gonna
 

00:03:24.239 --> 00:03:26.150 align:start position:0%
little confusing and we're not gonna
talk<00:03:24.450><c> a</c><00:03:24.510><c> lot</c><00:03:24.720><c> about</c><00:03:24.750><c> it</c><00:03:25.140><c> right</c><00:03:25.320><c> now</c><00:03:25.350><c> I</c><00:03:25.769><c> just</c>

00:03:26.150 --> 00:03:26.160 align:start position:0%
talk a lot about it right now I just
 

00:03:26.160 --> 00:03:28.910 align:start position:0%
talk a lot about it right now I just
want<00:03:26.280><c> you</c><00:03:26.370><c> to</c><00:03:26.459><c> know</c><00:03:26.580><c> the</c><00:03:26.730><c> basics</c><00:03:27.560><c> now</c><00:03:28.560><c> an</c><00:03:28.709><c> even</c>

00:03:28.910 --> 00:03:28.920 align:start position:0%
want you to know the basics now an even
 

00:03:28.920 --> 00:03:30.830 align:start position:0%
want you to know the basics now an even
more<00:03:29.190><c> modern</c><00:03:29.549><c> Java</c><00:03:29.850><c> it</c><00:03:30.269><c> is</c><00:03:30.420><c> no</c><00:03:30.630><c> longer</c>

00:03:30.830 --> 00:03:30.840 align:start position:0%
more modern Java it is no longer
 

00:03:30.840 --> 00:03:33.590 align:start position:0%
more modern Java it is no longer
necessary<00:03:31.500><c> to</c><00:03:31.590><c> specify</c><00:03:31.980><c> the</c><00:03:32.310><c> type</c><00:03:33.150><c> on</c><00:03:33.450><c> the</c>

00:03:33.590 --> 00:03:33.600 align:start position:0%
necessary to specify the type on the
 

00:03:33.600 --> 00:03:35.570 align:start position:0%
necessary to specify the type on the
instantiation<00:03:34.019><c> side</c><00:03:34.769><c> so</c><00:03:35.340><c> I'm</c><00:03:35.430><c> going</c><00:03:35.459><c> to</c>

00:03:35.570 --> 00:03:35.580 align:start position:0%
instantiation side so I'm going to
 

00:03:35.580 --> 00:03:38.690 align:start position:0%
instantiation side so I'm going to
delete<00:03:35.820><c> that</c><00:03:35.880><c> and</c><00:03:36.480><c> this</c><00:03:36.870><c> too</c><00:03:37.110><c> will</c><00:03:37.530><c> work</c><00:03:37.709><c> okay</c>

00:03:38.690 --> 00:03:38.700 align:start position:0%
delete that and this too will work okay
 

00:03:38.700 --> 00:03:41.570 align:start position:0%
delete that and this too will work okay
so<00:03:39.330><c> just</c><00:03:39.600><c> summarize</c><00:03:39.959><c> there</c><00:03:40.260><c> and</c><00:03:40.470><c> later</c><00:03:41.250><c> in</c><00:03:41.459><c> the</c>

00:03:41.570 --> 00:03:41.580 align:start position:0%
so just summarize there and later in the
 

00:03:41.580 --> 00:03:43.220 align:start position:0%
so just summarize there and later in the
course<00:03:41.790><c> we're</c><00:03:41.970><c> gonna</c><00:03:42.030><c> dig</c><00:03:42.360><c> a</c><00:03:42.390><c> lot</c><00:03:42.630><c> more</c><00:03:42.840><c> deeply</c>

00:03:43.220 --> 00:03:43.230 align:start position:0%
course we're gonna dig a lot more deeply
 

00:03:43.230 --> 00:03:46.640 align:start position:0%
course we're gonna dig a lot more deeply
into<00:03:43.590><c> this</c><00:03:43.709><c> issue</c><00:03:44.540><c> but</c><00:03:45.540><c> the</c><00:03:45.810><c> to</c><00:03:46.110><c> summarize</c>

00:03:46.640 --> 00:03:46.650 align:start position:0%
into this issue but the to summarize
 

00:03:46.650 --> 00:03:49.970 align:start position:0%
into this issue but the to summarize
what<00:03:46.799><c> we've</c><00:03:46.950><c> got</c><00:03:47.160><c> here</c><00:03:47.459><c> is</c><00:03:47.790><c> we</c><00:03:48.690><c> can</c><00:03:48.989><c> defer</c><00:03:49.470><c> type</c>

00:03:49.970 --> 00:03:49.980 align:start position:0%
what we've got here is we can defer type
 

00:03:49.980 --> 00:03:51.620 align:start position:0%
what we've got here is we can defer type
selection<00:03:50.519><c> until</c><00:03:50.670><c> later</c><00:03:51.060><c> until</c><00:03:51.299><c> we've</c>

00:03:51.620 --> 00:03:51.630 align:start position:0%
selection until later until we've
 

00:03:51.630 --> 00:03:53.030 align:start position:0%
selection until later until we've
declared<00:03:51.900><c> a</c><00:03:52.110><c> variable</c><00:03:52.260><c> or</c><00:03:52.620><c> until</c><00:03:52.860><c> we</c><00:03:52.950><c> have</c>

00:03:53.030 --> 00:03:53.040 align:start position:0%
declared a variable or until we have
 

00:03:53.040 --> 00:03:55.039 align:start position:0%
declared a variable or until we have
instantiated<00:03:53.610><c> a</c><00:03:53.790><c> variable</c><00:03:54.209><c> and</c><00:03:54.540><c> to</c><00:03:54.750><c> do</c><00:03:54.870><c> that</c>

00:03:55.039 --> 00:03:55.049 align:start position:0%
instantiated a variable and to do that
 

00:03:55.049 --> 00:03:58.009 align:start position:0%
instantiated a variable and to do that
we<00:03:55.410><c> pick</c><00:03:55.620><c> any</c><00:03:55.799><c> arbitrary</c><00:03:56.670><c> string</c><00:03:57.060><c> and</c><00:03:57.299><c> in</c><00:03:57.810><c> the</c>

00:03:58.009 --> 00:03:58.019 align:start position:0%
we pick any arbitrary string and in the
 

00:03:58.019 --> 00:03:59.509 align:start position:0%
we pick any arbitrary string and in the
class<00:03:58.230><c> that</c><00:03:58.260><c> we're</c><00:03:58.620><c> creating</c><00:03:58.769><c> we</c><00:03:59.130><c> just</c><00:03:59.280><c> put</c><00:03:59.430><c> it</c>

00:03:59.509 --> 00:03:59.519 align:start position:0%
class that we're creating we just put it
 

00:03:59.519 --> 00:04:01.580 align:start position:0%
class that we're creating we just put it
right<00:03:59.549><c> after</c><00:03:59.790><c> the</c><00:04:00.030><c> name</c><00:04:00.239><c> and</c><00:04:00.510><c> then</c><00:04:01.200><c> we</c><00:04:01.380><c> want</c><00:04:01.500><c> to</c>

00:04:01.580 --> 00:04:01.590 align:start position:0%
right after the name and then we want to
 

00:04:01.590 --> 00:04:03.710 align:start position:0%
right after the name and then we want to
use<00:04:01.739><c> it</c><00:04:01.920><c> we</c><00:04:02.280><c> make</c><00:04:02.459><c> sure</c><00:04:02.700><c> that</c><00:04:02.970><c> we</c><00:04:03.090><c> specify</c><00:04:03.600><c> at</c>

00:04:03.710 --> 00:04:03.720 align:start position:0%
use it we make sure that we specify at
 

00:04:03.720 --> 00:04:05.740 align:start position:0%
use it we make sure that we specify at
the<00:04:03.810><c> type</c><00:04:03.959><c> we</c><00:04:04.110><c> want</c><00:04:04.320><c> and</c><00:04:04.560><c> we're</c><00:04:04.709><c> declaring</c><00:04:05.310><c> and</c>

00:04:05.740 --> 00:04:05.750 align:start position:0%
the type we want and we're declaring and
 

00:04:05.750 --> 00:04:09.110 align:start position:0%
the type we want and we're declaring and
optionally<00:04:06.750><c> when</c><00:04:06.959><c> we're</c><00:04:07.079><c> instantiating</c><00:04:08.120><c> so</c>

00:04:09.110 --> 00:04:09.120 align:start position:0%
optionally when we're instantiating so
 

00:04:09.120 --> 00:04:11.210 align:start position:0%
optionally when we're instantiating so
again<00:04:09.390><c> we'll</c><00:04:10.230><c> go</c><00:04:10.440><c> into</c><00:04:10.650><c> this</c><00:04:10.739><c> and</c><00:04:10.980><c> so</c><00:04:11.100><c> much</c>

00:04:11.210 --> 00:04:11.220 align:start position:0%
again we'll go into this and so much
 

00:04:11.220 --> 00:04:12.800 align:start position:0%
again we'll go into this and so much
more<00:04:11.280><c> detail</c><00:04:11.820><c> there's</c><00:04:12.090><c> a</c><00:04:12.150><c> lot</c><00:04:12.269><c> of</c><00:04:12.390><c> little</c>

00:04:12.800 --> 00:04:12.810 align:start position:0%
more detail there's a lot of little
 

00:04:12.810 --> 00:04:14.539 align:start position:0%
more detail there's a lot of little
details<00:04:12.840><c> it</c><00:04:13.410><c> can</c><00:04:13.500><c> be</c><00:04:13.590><c> confusing</c><00:04:13.950><c> but</c><00:04:14.400><c> these</c>

00:04:14.539 --> 00:04:14.549 align:start position:0%
details it can be confusing but these
 

00:04:14.549 --> 00:04:16.039 align:start position:0%
details it can be confusing but these
are<00:04:14.670><c> the</c><00:04:14.730><c> rules</c><00:04:14.940><c> of</c><00:04:15.090><c> thumb</c><00:04:15.239><c> you'll</c><00:04:15.570><c> need</c><00:04:15.780><c> for</c>

00:04:16.039 --> 00:04:16.049 align:start position:0%
are the rules of thumb you'll need for
 

00:04:16.049 --> 00:04:17.570 align:start position:0%
are the rules of thumb you'll need for
project<00:04:16.440><c> one</c><00:04:16.590><c> where</c><00:04:16.919><c> you're</c><00:04:17.070><c> gonna</c><00:04:17.130><c> build</c><00:04:17.430><c> a</c>

00:04:17.570 --> 00:04:17.580 align:start position:0%
project one where you're gonna build a
 

00:04:17.580 --> 00:04:17.970 align:start position:0%
project one where you're gonna build a
generic

00:04:17.970 --> 00:04:17.980 align:start position:0%
generic
 

00:04:17.980 --> 00:04:20.190 align:start position:0%
generic
list<00:04:18.240><c> so</c><00:04:19.240><c> in</c><00:04:19.360><c> the</c><00:04:19.450><c> Java</c><00:04:19.690><c> file</c><00:04:19.960><c> where</c><00:04:20.170><c> you</c>

00:04:20.190 --> 00:04:20.200 align:start position:0%
list so in the Java file where you
 

00:04:20.200 --> 00:04:22.260 align:start position:0%
list so in the Java file where you
implement<00:04:20.890><c> your</c><00:04:20.980><c> data</c><00:04:21.190><c> structure</c><00:04:21.610><c> this</c><00:04:22.030><c> side</c>

00:04:22.260 --> 00:04:22.270 align:start position:0%
implement your data structure this side
 

00:04:22.270 --> 00:04:24.240 align:start position:0%
implement your data structure this side
we<00:04:22.450><c> are</c><00:04:22.600><c> building</c><00:04:22.900><c> the</c><00:04:23.020><c> actual</c><00:04:23.140><c> thing</c><00:04:23.560><c> you'll</c>

00:04:24.240 --> 00:04:24.250 align:start position:0%
we are building the actual thing you'll
 

00:04:24.250 --> 00:04:26.430 align:start position:0%
we are building the actual thing you'll
specify<00:04:24.490><c> our</c><00:04:24.850><c> generic</c><00:04:25.210><c> type</c><00:04:25.480><c> only</c><00:04:26.050><c> once</c><00:04:26.260><c> at</c>

00:04:26.430 --> 00:04:26.440 align:start position:0%
specify our generic type only once at
 

00:04:26.440 --> 00:04:27.630 align:start position:0%
specify our generic type only once at
the<00:04:26.530><c> very</c><00:04:26.560><c> top</c><00:04:26.920><c> of</c><00:04:26.950><c> the</c><00:04:27.130><c> file</c><00:04:27.310><c> right</c><00:04:27.610><c> there</c>

00:04:27.630 --> 00:04:27.640 align:start position:0%
the very top of the file right there
 

00:04:27.640 --> 00:04:29.730 align:start position:0%
the very top of the file right there
bleep<00:04:28.090><c> bored</c><00:04:28.420><c> blurp</c><00:04:28.810><c> right</c><00:04:29.230><c> and</c><00:04:29.410><c> it's</c>

00:04:29.730 --> 00:04:29.740 align:start position:0%
bleep bored blurp right and it's
 

00:04:29.740 --> 00:04:31.650 align:start position:0%
bleep bored blurp right and it's
specified<00:04:30.070><c> inside</c><00:04:30.880><c> of</c><00:04:31.000><c> these</c><00:04:31.090><c> angle</c><00:04:31.450><c> brick</c>

00:04:31.650 --> 00:04:31.660 align:start position:0%
specified inside of these angle brick
 

00:04:31.660 --> 00:04:34.140 align:start position:0%
specified inside of these angle brick
braces<00:04:32.170><c> you</c><00:04:33.070><c> can</c><00:04:33.220><c> use</c><00:04:33.430><c> it</c><00:04:33.640><c> elsewhere</c><00:04:33.790><c> but</c>

00:04:34.140 --> 00:04:34.150 align:start position:0%
braces you can use it elsewhere but
 

00:04:34.150 --> 00:04:36.870 align:start position:0%
braces you can use it elsewhere but
you'll<00:04:34.270><c> only</c><00:04:34.450><c> specify</c><00:04:35.050><c> at</c><00:04:35.170><c> once</c><00:04:35.380><c> and</c><00:04:35.760><c> then</c><00:04:36.760><c> in</c>

00:04:36.870 --> 00:04:36.880 align:start position:0%
you'll only specify at once and then in
 

00:04:36.880 --> 00:04:38.580 align:start position:0%
you'll only specify at once and then in
Java<00:04:37.090><c> files</c><00:04:37.360><c> that</c><00:04:37.570><c> you</c><00:04:37.690><c> use</c><00:04:37.990><c> your</c><00:04:38.380><c> data</c>

00:04:38.580 --> 00:04:38.590 align:start position:0%
Java files that you use your data
 

00:04:38.590 --> 00:04:40.650 align:start position:0%
Java files that you use your data
structure<00:04:39.100><c> you'll</c><00:04:39.520><c> specify</c><00:04:39.820><c> the</c><00:04:40.180><c> desired</c>

00:04:40.650 --> 00:04:40.660 align:start position:0%
structure you'll specify the desired
 

00:04:40.660 --> 00:04:43.230 align:start position:0%
structure you'll specify the desired
type<00:04:40.990><c> just</c><00:04:41.830><c> once</c><00:04:42.010><c> it'll</c><00:04:42.610><c> do</c><00:04:42.760><c> it</c><00:04:42.880><c> whenever</c><00:04:43.030><c> you</c>

00:04:43.230 --> 00:04:43.240 align:start position:0%
type just once it'll do it whenever you
 

00:04:43.240 --> 00:04:45.570 align:start position:0%
type just once it'll do it whenever you
declare<00:04:43.960><c> the</c><00:04:44.110><c> variable</c><00:04:44.530><c> and</c><00:04:44.710><c> then</c><00:04:45.250><c> use</c><00:04:45.430><c> the</c>

00:04:45.570 --> 00:04:45.580 align:start position:0%
declare the variable and then use the
 

00:04:45.580 --> 00:04:47.010 align:start position:0%
declare the variable and then use the
empty<00:04:45.970><c> diamond</c><00:04:46.180><c> operator</c><00:04:46.480><c> during</c>

00:04:47.010 --> 00:04:47.020 align:start position:0%
empty diamond operator during
 

00:04:47.020 --> 00:04:48.570 align:start position:0%
empty diamond operator during
instantiation<00:04:47.710><c> I</c><00:04:47.950><c> mean</c><00:04:48.160><c> you</c><00:04:48.220><c> can't</c><00:04:48.430><c> also</c>

00:04:48.570 --> 00:04:48.580 align:start position:0%
instantiation I mean you can't also
 

00:04:48.580 --> 00:04:49.620 align:start position:0%
instantiation I mean you can't also
write<00:04:48.820><c> out</c><00:04:48.850><c> double</c><00:04:49.270><c> so</c><00:04:49.390><c> you</c><00:04:49.450><c> could</c>

00:04:49.620 --> 00:04:49.630 align:start position:0%
write out double so you could
 

00:04:49.630 --> 00:04:51.450 align:start position:0%
write out double so you could
technically<00:04:49.990><c> use</c><00:04:50.140><c> it</c><00:04:50.290><c> twice</c><00:04:50.470><c> but</c><00:04:51.160><c> this</c><00:04:51.310><c> will</c>

00:04:51.450 --> 00:04:51.460 align:start position:0%
technically use it twice but this will
 

00:04:51.460 --> 00:04:52.920 align:start position:0%
technically use it twice but this will
make<00:04:51.610><c> your</c><00:04:51.760><c> code</c><00:04:51.940><c> look</c><00:04:52.150><c> more</c><00:04:52.450><c> like</c><00:04:52.690><c> what</c>

00:04:52.920 --> 00:04:52.930 align:start position:0%
make your code look more like what
 

00:04:52.930 --> 00:04:54.420 align:start position:0%
make your code look more like what
you're<00:04:53.110><c> likely</c><00:04:53.290><c> to</c><00:04:53.440><c> see</c><00:04:53.680><c> in</c><00:04:53.890><c> the</c><00:04:54.070><c> real</c><00:04:54.220><c> world</c>

00:04:54.420 --> 00:04:54.430 align:start position:0%
you're likely to see in the real world
 

00:04:54.430 --> 00:04:57.240 align:start position:0%
you're likely to see in the real world
and<00:04:54.850><c> when</c><00:04:55.780><c> you're</c><00:04:55.990><c> actually</c><00:04:56.140><c> declaring</c><00:04:57.130><c> or</c>

00:04:57.240 --> 00:04:57.250 align:start position:0%
and when you're actually declaring or
 

00:04:57.250 --> 00:04:58.440 align:start position:0%
and when you're actually declaring or
instantiating<00:04:57.790><c> your</c><00:04:57.970><c> data</c><00:04:58.120><c> structure</c>

00:04:58.440 --> 00:04:58.450 align:start position:0%
instantiating your data structure
 

00:04:58.450 --> 00:04:59.820 align:start position:0%
instantiating your data structure
whenever<00:04:58.990><c> you're</c><00:04:59.170><c> putting</c><00:04:59.380><c> something</c><00:04:59.590><c> inside</c>

00:04:59.820 --> 00:04:59.830 align:start position:0%
whenever you're putting something inside
 

00:04:59.830 --> 00:05:01.650 align:start position:0%
whenever you're putting something inside
of<00:05:00.070><c> these</c><00:05:00.190><c> braces</c><00:05:00.580><c> you</c><00:05:00.970><c> want</c><00:05:01.180><c> to</c><00:05:01.270><c> make</c><00:05:01.450><c> sure</c>

00:05:01.650 --> 00:05:01.660 align:start position:0%
of these braces you want to make sure
 

00:05:01.660 --> 00:05:04.560 align:start position:0%
of these braces you want to make sure
that<00:05:01.870><c> you</c><00:05:01.960><c> use</c><00:05:02.200><c> capital</c><00:05:03.040><c> I</c><00:05:03.220><c> integer</c><00:05:03.820><c> capital</c><00:05:04.390><c> D</c>

00:05:04.560 --> 00:05:04.570 align:start position:0%
that you use capital I integer capital D
 

00:05:04.570 --> 00:05:06.810 align:start position:0%
that you use capital I integer capital D
double<00:05:05.140><c> and</c><00:05:05.350><c> so</c><00:05:05.500><c> forth</c><00:05:05.770><c> so</c><00:05:06.100><c> use</c><00:05:06.250><c> the</c><00:05:06.400><c> reference</c>

00:05:06.810 --> 00:05:06.820 align:start position:0%
double and so forth so use the reference
 

00:05:06.820 --> 00:05:08.730 align:start position:0%
double and so forth so use the reference
type<00:05:07.030><c> corresponding</c><00:05:07.810><c> to</c><00:05:07.930><c> each</c><00:05:08.050><c> of</c><00:05:08.230><c> the</c>

00:05:08.730 --> 00:05:08.740 align:start position:0%
type corresponding to each of the
 

00:05:08.740 --> 00:05:11.460 align:start position:0%
type corresponding to each of the
primitive<00:05:09.310><c> types</c><00:05:09.540><c> so</c><00:05:10.540><c> that</c><00:05:10.720><c> will</c><00:05:10.870><c> get</c><00:05:11.050><c> you</c><00:05:11.230><c> as</c>

00:05:11.460 --> 00:05:11.470 align:start position:0%
primitive types so that will get you as
 

00:05:11.470 --> 00:05:14.160 align:start position:0%
primitive types so that will get you as
much<00:05:11.740><c> as</c><00:05:11.980><c> you</c><00:05:12.100><c> need</c><00:05:12.310><c> on</c><00:05:12.610><c> project</c><00:05:13.120><c> one</c><00:05:13.300><c> and</c>

00:05:14.160 --> 00:05:14.170 align:start position:0%
much as you need on project one and
 

00:05:14.170 --> 00:05:15.840 align:start position:0%
much as you need on project one and
there'll<00:05:14.380><c> be</c><00:05:14.410><c> a</c><00:05:14.500><c> couple</c><00:05:14.710><c> little</c><00:05:15.160><c> tiny</c><00:05:15.370><c> gotchas</c>

00:05:15.840 --> 00:05:15.850 align:start position:0%
there'll be a couple little tiny gotchas
 

00:05:15.850 --> 00:05:17.430 align:start position:0%
there'll be a couple little tiny gotchas
that<00:05:15.880><c> will</c><00:05:16.210><c> be</c><00:05:16.330><c> mentioned</c><00:05:16.780><c> in</c><00:05:16.930><c> the</c><00:05:17.050><c> project</c>

00:05:17.430 --> 00:05:17.440 align:start position:0%
that will be mentioned in the project
 

00:05:17.440 --> 00:05:20.360 align:start position:0%
that will be mentioned in the project
one<00:05:17.590><c> FAQ</c><00:05:18.190><c> and</c><00:05:18.970><c> we'll</c><00:05:19.270><c> get</c><00:05:19.360><c> into</c><00:05:19.540><c> generics</c><00:05:19.960><c> more</c>

00:05:20.360 --> 00:05:20.370 align:start position:0%
one FAQ and we'll get into generics more
 

00:05:20.370 --> 00:05:23.550 align:start position:0%
one FAQ and we'll get into generics more
somewhat<00:05:21.370><c> later</c>

