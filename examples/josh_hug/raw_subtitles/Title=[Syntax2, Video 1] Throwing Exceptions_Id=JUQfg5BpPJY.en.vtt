WEBVTT
Kind: captions
Language: en

00:00:00.030 --> 00:00:02.060 align:start position:0%
 
let's<00:00:00.840><c> continue</c><00:00:01.050><c> our</c><00:00:01.410><c> journey</c><00:00:01.439><c> into</c><00:00:01.890><c> the</c>

00:00:02.060 --> 00:00:02.070 align:start position:0%
let's continue our journey into the
 

00:00:02.070 --> 00:00:05.150 align:start position:0%
let's continue our journey into the
glorious<00:00:02.550><c> world</c><00:00:02.790><c> of</c><00:00:03.149><c> Java</c><00:00:03.720><c> syntax</c><00:00:03.959><c> so</c><00:00:04.920><c> today</c>

00:00:05.150 --> 00:00:05.160 align:start position:0%
glorious world of Java syntax so today
 

00:00:05.160 --> 00:00:07.039 align:start position:0%
glorious world of Java syntax so today
we're<00:00:05.250><c> gonna</c><00:00:05.339><c> talk</c><00:00:05.549><c> about</c><00:00:05.609><c> exceptions</c><00:00:06.509><c> and</c>

00:00:07.039 --> 00:00:07.049 align:start position:0%
we're gonna talk about exceptions and
 

00:00:07.049 --> 00:00:08.900 align:start position:0%
we're gonna talk about exceptions and
we've<00:00:07.230><c> already</c><00:00:07.319><c> seen</c><00:00:07.560><c> these</c><00:00:07.710><c> before</c><00:00:07.859><c> so</c><00:00:08.250><c> the</c>

00:00:08.900 --> 00:00:08.910 align:start position:0%
we've already seen these before so the
 

00:00:08.910 --> 00:00:10.610 align:start position:0%
we've already seen these before so the
basic<00:00:09.210><c> idea</c><00:00:09.300><c> is</c><00:00:09.750><c> that</c><00:00:09.780><c> when</c><00:00:10.019><c> something</c><00:00:10.320><c> goes</c>

00:00:10.610 --> 00:00:10.620 align:start position:0%
basic idea is that when something goes
 

00:00:10.620 --> 00:00:12.320 align:start position:0%
basic idea is that when something goes
wrong<00:00:10.860><c> then</c><00:00:11.070><c> our</c><00:00:11.190><c> programs</c><00:00:11.580><c> running</c><00:00:11.849><c> we</c><00:00:12.179><c> want</c>

00:00:12.320 --> 00:00:12.330 align:start position:0%
wrong then our programs running we want
 

00:00:12.330 --> 00:00:14.509 align:start position:0%
wrong then our programs running we want
to<00:00:12.420><c> break</c><00:00:12.599><c> the</c><00:00:12.870><c> usual</c><00:00:13.259><c> flow</c><00:00:13.500><c> of</c><00:00:13.620><c> control</c><00:00:14.040><c> that</c>

00:00:14.509 --> 00:00:14.519 align:start position:0%
to break the usual flow of control that
 

00:00:14.519 --> 00:00:16.369 align:start position:0%
to break the usual flow of control that
is<00:00:14.700><c> rather</c><00:00:15.059><c> than</c><00:00:15.330><c> business</c><00:00:15.690><c> as</c><00:00:15.839><c> usual</c><00:00:16.139><c> just</c>

00:00:16.369 --> 00:00:16.379 align:start position:0%
is rather than business as usual just
 

00:00:16.379 --> 00:00:18.260 align:start position:0%
is rather than business as usual just
keep<00:00:16.590><c> running</c><00:00:16.710><c> the</c><00:00:16.920><c> program</c><00:00:17.250><c> we</c><00:00:17.580><c> want</c><00:00:17.789><c> to</c><00:00:17.970><c> do</c>

00:00:18.260 --> 00:00:18.270 align:start position:0%
keep running the program we want to do
 

00:00:18.270 --> 00:00:20.510 align:start position:0%
keep running the program we want to do
something<00:00:18.510><c> else</c><00:00:18.779><c> when</c><00:00:19.050><c> things</c><00:00:19.260><c> break</c><00:00:19.520><c> so</c>

00:00:20.510 --> 00:00:20.520 align:start position:0%
something else when things break so
 

00:00:20.520 --> 00:00:22.250 align:start position:0%
something else when things break so
we've<00:00:20.670><c> seen</c><00:00:20.820><c> these</c><00:00:21.000><c> before</c><00:00:21.210><c> you've</c><00:00:21.990><c> seen</c>

00:00:22.250 --> 00:00:22.260 align:start position:0%
we've seen these before you've seen
 

00:00:22.260 --> 00:00:23.870 align:start position:0%
we've seen these before you've seen
exceptions<00:00:23.039><c> as</c><00:00:23.189><c> you've</c><00:00:23.400><c> written</c><00:00:23.640><c> your</c>

00:00:23.870 --> 00:00:23.880 align:start position:0%
exceptions as you've written your
 

00:00:23.880 --> 00:00:25.820 align:start position:0%
exceptions as you've written your
programs<00:00:24.269><c> like</c><00:00:24.810><c> nullpointerexception</c>

00:00:25.820 --> 00:00:25.830 align:start position:0%
programs like nullpointerexception
 

00:00:25.830 --> 00:00:27.830 align:start position:0%
programs like nullpointerexception
and<00:00:26.580><c> so</c><00:00:26.670><c> I'll</c><00:00:26.760><c> give</c><00:00:26.880><c> a</c><00:00:26.910><c> little</c><00:00:27.060><c> example</c><00:00:27.269><c> of</c><00:00:27.689><c> how</c>

00:00:27.830 --> 00:00:27.840 align:start position:0%
and so I'll give a little example of how
 

00:00:27.840 --> 00:00:29.710 align:start position:0%
and so I'll give a little example of how
an<00:00:27.990><c> exception</c><00:00:28.410><c> can</c><00:00:28.529><c> pop</c><00:00:28.710><c> up</c><00:00:28.740><c> in</c><00:00:29.039><c> our</c><00:00:29.279><c> array</c><00:00:29.519><c> map</c>

00:00:29.710 --> 00:00:29.720 align:start position:0%
an exception can pop up in our array map
 

00:00:29.720 --> 00:00:32.659 align:start position:0%
an exception can pop up in our array map
so<00:00:30.720><c> I</c><00:00:30.750><c> do</c><00:00:30.900><c> make</c><00:00:31.320><c> an</c><00:00:31.439><c> a</c><00:00:31.529><c> new</c><00:00:31.650><c> make</c><00:00:32.099><c> a</c><00:00:32.250><c> new</c><00:00:32.430><c> array</c>

00:00:32.659 --> 00:00:32.669 align:start position:0%
so I do make an a new make a new array
 

00:00:32.669 --> 00:00:34.490 align:start position:0%
so I do make an a new make a new array
map<00:00:32.850><c> from</c><00:00:33.059><c> string</c><00:00:33.270><c> to</c><00:00:33.300><c> integer</c><00:00:33.600><c> we</c><00:00:34.050><c> associate</c>

00:00:34.490 --> 00:00:34.500 align:start position:0%
map from string to integer we associate
 

00:00:34.500 --> 00:00:35.360 align:start position:0%
map from string to integer we associate
the<00:00:34.620><c> value</c><00:00:34.890><c> 5</c>

00:00:35.360 --> 00:00:35.370 align:start position:0%
the value 5
 

00:00:35.370 --> 00:00:37.160 align:start position:0%
the value 5
with<00:00:35.520><c> the</c><00:00:35.670><c> string</c><00:00:35.880><c> hello</c><00:00:36.000><c> and</c><00:00:36.809><c> then</c><00:00:36.930><c> we</c><00:00:36.989><c> try</c>

00:00:37.160 --> 00:00:37.170 align:start position:0%
with the string hello and then we try
 

00:00:37.170 --> 00:00:38.600 align:start position:0%
with the string hello and then we try
and<00:00:37.260><c> print</c><00:00:37.380><c> out</c><00:00:37.590><c> the</c><00:00:37.620><c> value</c><00:00:38.040><c> associated</c><00:00:38.280><c> with</c>

00:00:38.600 --> 00:00:38.610 align:start position:0%
and print out the value associated with
 

00:00:38.610 --> 00:00:41.540 align:start position:0%
and print out the value associated with
gulp<00:00:39.059><c> so</c><00:00:39.989><c> when</c><00:00:40.140><c> we</c><00:00:40.290><c> run</c><00:00:40.469><c> this</c><00:00:40.620><c> thing</c><00:00:40.829><c> we</c><00:00:41.340><c> get</c>

00:00:41.540 --> 00:00:41.550 align:start position:0%
gulp so when we run this thing we get
 

00:00:41.550 --> 00:00:45.350 align:start position:0%
gulp so when we run this thing we get
index<00:00:42.510><c> out</c><00:00:42.719><c> of</c><00:00:42.780><c> bounds</c><00:00:42.960><c> exception</c><00:00:43.230><c> minus</c><00:00:44.100><c> 1</c><00:00:44.399><c> so</c>

00:00:45.350 --> 00:00:45.360 align:start position:0%
index out of bounds exception minus 1 so
 

00:00:45.360 --> 00:00:47.060 align:start position:0%
index out of bounds exception minus 1 so
why<00:00:45.480><c> did</c><00:00:45.629><c> that</c><00:00:45.750><c> happen</c><00:00:46.050><c> well</c><00:00:46.530><c> I'm</c><00:00:46.800><c> not</c><00:00:46.920><c> gonna</c>

00:00:47.060 --> 00:00:47.070 align:start position:0%
why did that happen well I'm not gonna
 

00:00:47.070 --> 00:00:48.200 align:start position:0%
why did that happen well I'm not gonna
go<00:00:47.219><c> through</c><00:00:47.370><c> in</c><00:00:47.489><c> a</c><00:00:47.520><c> lot</c><00:00:47.730><c> of</c><00:00:47.760><c> detail</c><00:00:48.180><c> but</c>

00:00:48.200 --> 00:00:48.210 align:start position:0%
go through in a lot of detail but
 

00:00:48.210 --> 00:00:50.630 align:start position:0%
go through in a lot of detail but
basically<00:00:48.660><c> with</c><00:00:49.079><c> the</c><00:00:49.170><c> Ray</c><00:00:49.320><c> Matt</c><00:00:49.500><c> if</c><00:00:50.160><c> the</c><00:00:50.430><c> key</c>

00:00:50.630 --> 00:00:50.640 align:start position:0%
basically with the Ray Matt if the key
 

00:00:50.640 --> 00:00:53.000 align:start position:0%
basically with the Ray Matt if the key
doesn't<00:00:50.670><c> exist</c><00:00:51.300><c> then</c><00:00:51.809><c> minus</c><00:00:52.260><c> 1</c><00:00:52.440><c> is</c><00:00:52.590><c> the</c><00:00:52.680><c> index</c>

00:00:53.000 --> 00:00:53.010 align:start position:0%
doesn't exist then minus 1 is the index
 

00:00:53.010 --> 00:00:54.380 align:start position:0%
doesn't exist then minus 1 is the index
we<00:00:53.160><c> try</c><00:00:53.340><c> and</c><00:00:53.430><c> retrieve</c><00:00:53.640><c> from</c><00:00:53.850><c> and</c><00:00:54.120><c> things</c>

00:00:54.380 --> 00:00:54.390 align:start position:0%
we try and retrieve from and things
 

00:00:54.390 --> 00:00:56.389 align:start position:0%
we try and retrieve from and things
break<00:00:54.660><c> so</c><00:00:55.440><c> this</c><00:00:55.590><c> is</c><00:00:55.739><c> what's</c><00:00:55.920><c> known</c><00:00:56.100><c> as</c><00:00:56.280><c> an</c>

00:00:56.389 --> 00:00:56.399 align:start position:0%
break so this is what's known as an
 

00:00:56.399 --> 00:00:59.029 align:start position:0%
break so this is what's known as an
implicit<00:00:56.910><c> exception</c><00:00:57.539><c> nobody</c><00:00:58.350><c> called</c><00:00:58.649><c> for</c><00:00:58.710><c> it</c>

00:00:59.029 --> 00:00:59.039 align:start position:0%
implicit exception nobody called for it
 

00:00:59.039 --> 00:01:01.010 align:start position:0%
implicit exception nobody called for it
just<00:00:59.340><c> Java</c><00:00:59.609><c> realizes</c><00:01:00.210><c> something's</c><00:01:00.539><c> wrong</c><00:01:00.750><c> and</c>

00:01:01.010 --> 00:01:01.020 align:start position:0%
just Java realizes something's wrong and
 

00:01:01.020 --> 00:01:03.799 align:start position:0%
just Java realizes something's wrong and
the<00:01:01.320><c> exception</c><00:01:01.800><c> gets</c><00:01:02.010><c> thrown</c><00:01:02.600><c> now</c><00:01:03.600><c> we</c><00:01:03.660><c> can</c>

00:01:03.799 --> 00:01:03.809 align:start position:0%
the exception gets thrown now we can
 

00:01:03.809 --> 00:01:05.960 align:start position:0%
the exception gets thrown now we can
actually<00:01:04.110><c> do</c><00:01:04.199><c> an</c><00:01:04.320><c> explicit</c><00:01:04.830><c> exception</c><00:01:05.339><c> if</c><00:01:05.700><c> we</c>

00:01:05.960 --> 00:01:05.970 align:start position:0%
actually do an explicit exception if we
 

00:01:05.970 --> 00:01:08.570 align:start position:0%
actually do an explicit exception if we
want<00:01:06.119><c> to</c><00:01:06.180><c> be</c><00:01:06.299><c> more</c><00:01:06.450><c> descriptive</c><00:01:06.950><c> because</c><00:01:07.950><c> from</c>

00:01:08.570 --> 00:01:08.580 align:start position:0%
want to be more descriptive because from
 

00:01:08.580 --> 00:01:10.429 align:start position:0%
want to be more descriptive because from
the<00:01:08.670><c> perspective</c><00:01:09.150><c> of</c><00:01:09.240><c> the</c><00:01:09.450><c> person</c><00:01:09.630><c> using</c><00:01:10.260><c> this</c>

00:01:10.429 --> 00:01:10.439 align:start position:0%
the perspective of the person using this
 

00:01:10.439 --> 00:01:11.960 align:start position:0%
the perspective of the person using this
array<00:01:10.710><c> map</c><00:01:10.890><c> this</c><00:01:11.280><c> isn't</c><00:01:11.580><c> a</c><00:01:11.640><c> particularly</c>

00:01:11.960 --> 00:01:11.970 align:start position:0%
array map this isn't a particularly
 

00:01:11.970 --> 00:01:13.789 align:start position:0%
array map this isn't a particularly
useful<00:01:12.330><c> message</c><00:01:12.659><c> they</c><00:01:13.110><c> might</c><00:01:13.260><c> not</c><00:01:13.380><c> even</c><00:01:13.439><c> know</c>

00:01:13.789 --> 00:01:13.799 align:start position:0%
useful message they might not even know
 

00:01:13.799 --> 00:01:15.410 align:start position:0%
useful message they might not even know
that<00:01:13.830><c> there's</c><00:01:14.610><c> an</c><00:01:14.729><c> array</c><00:01:14.909><c> under</c><00:01:15.180><c> the</c><00:01:15.270><c> hood</c>

00:01:15.410 --> 00:01:15.420 align:start position:0%
that there's an array under the hood
 

00:01:15.420 --> 00:01:16.490 align:start position:0%
that there's an array under the hood
they<00:01:15.570><c> don't</c><00:01:15.720><c> know</c><00:01:15.810><c> how</c><00:01:15.869><c> to</c><00:01:15.930><c> interpret</c><00:01:16.200><c> this</c>

00:01:16.490 --> 00:01:16.500 align:start position:0%
they don't know how to interpret this
 

00:01:16.500 --> 00:01:18.679 align:start position:0%
they don't know how to interpret this
minus<00:01:16.799><c> 1</c><00:01:17.009><c> so</c><00:01:17.790><c> we</c><00:01:17.880><c> can</c><00:01:18.000><c> maybe</c><00:01:18.119><c> make</c><00:01:18.240><c> things</c><00:01:18.600><c> a</c>

00:01:18.679 --> 00:01:18.689 align:start position:0%
minus 1 so we can maybe make things a
 

00:01:18.689 --> 00:01:20.749 align:start position:0%
minus 1 so we can maybe make things a
little<00:01:18.780><c> more</c><00:01:18.930><c> useful</c><00:01:19.400><c> what</c><00:01:20.400><c> I'm</c><00:01:20.460><c> gonna</c><00:01:20.580><c> do</c>

00:01:20.749 --> 00:01:20.759 align:start position:0%
little more useful what I'm gonna do
 

00:01:20.759 --> 00:01:23.420 align:start position:0%
little more useful what I'm gonna do
here<00:01:20.970><c> is</c><00:01:21.030><c> say</c><00:01:21.270><c> if</c><00:01:21.450><c> index</c><00:01:21.869><c> equals</c><00:01:22.320><c> minus</c><00:01:22.619><c> 1</c><00:01:22.799><c> then</c>

00:01:23.420 --> 00:01:23.430 align:start position:0%
here is say if index equals minus 1 then
 

00:01:23.430 --> 00:01:25.219 align:start position:0%
here is say if index equals minus 1 then
I<00:01:23.549><c> will</c><00:01:23.670><c> use</c><00:01:23.759><c> the</c><00:01:23.820><c> throw</c><00:01:24.330><c> keyword</c><00:01:24.689><c> it's</c><00:01:25.080><c> a</c><00:01:25.110><c> new</c>

00:01:25.219 --> 00:01:25.229 align:start position:0%
I will use the throw keyword it's a new
 

00:01:25.229 --> 00:01:27.170 align:start position:0%
I will use the throw keyword it's a new
keyword<00:01:25.439><c> and</c><00:01:26.250><c> we'll</c><00:01:26.430><c> say</c><00:01:26.610><c> throw</c><00:01:27.030><c> a</c><00:01:27.060><c> new</c>

00:01:27.170 --> 00:01:27.180 align:start position:0%
keyword and we'll say throw a new
 

00:01:27.180 --> 00:01:28.850 align:start position:0%
keyword and we'll say throw a new
illegal<00:01:27.630><c> argument</c><00:01:27.780><c> exception</c><00:01:28.049><c> and</c><00:01:28.650><c> we</c><00:01:28.740><c> can</c>

00:01:28.850 --> 00:01:28.860 align:start position:0%
illegal argument exception and we can
 

00:01:28.860 --> 00:01:32.120 align:start position:0%
illegal argument exception and we can
provide<00:01:29.070><c> a</c><00:01:29.130><c> message</c><00:01:29.520><c> the</c><00:01:30.270><c> key</c><00:01:30.479><c> provided</c><00:01:31.130><c> I'll</c>

00:01:32.120 --> 00:01:32.130 align:start position:0%
provide a message the key provided I'll
 

00:01:32.130 --> 00:01:38.270 align:start position:0%
provide a message the key provided I'll
say<00:01:32.430><c> key</c><00:01:32.729><c> was</c><00:01:33.600><c> not</c><00:01:33.630><c> in</c><00:01:34.200><c> array</c><00:01:35.040><c> map</c><00:01:36.799><c> ok</c><00:01:37.799><c> so</c><00:01:38.159><c> this</c>

00:01:38.270 --> 00:01:38.280 align:start position:0%
say key was not in array map ok so this
 

00:01:38.280 --> 00:01:39.980 align:start position:0%
say key was not in array map ok so this
is<00:01:38.430><c> a</c><00:01:38.460><c> cue</c><00:01:38.790><c> to</c><00:01:39.210><c> the</c><00:01:39.240><c> programmer</c><00:01:39.659><c> that's</c>

00:01:39.980 --> 00:01:39.990 align:start position:0%
is a cue to the programmer that's
 

00:01:39.990 --> 00:01:42.050 align:start position:0%
is a cue to the programmer that's
something<00:01:40.439><c> that</c><00:01:41.130><c> they</c><00:01:41.250><c> used</c><00:01:41.520><c> the</c><00:01:41.700><c> array</c><00:01:41.880><c> map</c>

00:01:42.050 --> 00:01:42.060 align:start position:0%
something that they used the array map
 

00:01:42.060 --> 00:01:44.120 align:start position:0%
something that they used the array map
wrong<00:01:42.329><c> and</c><00:01:42.720><c> so</c><00:01:43.350><c> now</c><00:01:43.500><c> if</c><00:01:43.590><c> we</c><00:01:43.649><c> run</c><00:01:43.890><c> a</c><00:01:43.920><c> rim</c>

00:01:44.120 --> 00:01:44.130 align:start position:0%
wrong and so now if we run a rim
 

00:01:44.130 --> 00:01:47.539 align:start position:0%
wrong and so now if we run a rim
exception<00:01:44.939><c> demo</c><00:01:45.180><c> again</c><00:01:45.740><c> we</c><00:01:46.740><c> get</c><00:01:46.950><c> the</c><00:01:47.369><c> key</c>

00:01:47.539 --> 00:01:47.549 align:start position:0%
exception demo again we get the key
 

00:01:47.549 --> 00:01:49.700 align:start position:0%
exception demo again we get the key
provided<00:01:48.000><c> you'll</c><00:01:48.299><c> was</c><00:01:48.689><c> not</c><00:01:48.840><c> in</c><00:01:49.020><c> array</c><00:01:49.229><c> map</c><00:01:49.409><c> we</c>

00:01:49.700 --> 00:01:49.710 align:start position:0%
provided you'll was not in array map we
 

00:01:49.710 --> 00:01:51.770 align:start position:0%
provided you'll was not in array map we
can<00:01:49.740><c> make</c><00:01:49.979><c> this</c><00:01:50.070><c> look</c><00:01:50.250><c> nicer</c><00:01:50.579><c> as</c><00:01:50.909><c> if</c><00:01:51.270><c> we</c><00:01:51.450><c> wanted</c>

00:01:51.770 --> 00:01:51.780 align:start position:0%
can make this look nicer as if we wanted
 

00:01:51.780 --> 00:01:53.990 align:start position:0%
can make this look nicer as if we wanted
but<00:01:52.049><c> good</c><00:01:52.290><c> enough</c><00:01:52.439><c> for</c><00:01:52.619><c> now</c><00:01:52.740><c> so</c><00:01:53.640><c> we'll</c><00:01:53.759><c> notice</c>

00:01:53.990 --> 00:01:54.000 align:start position:0%
but good enough for now so we'll notice
 

00:01:54.000 --> 00:01:55.999 align:start position:0%
but good enough for now so we'll notice
then<00:01:54.180><c> in</c><00:01:54.299><c> addition</c><00:01:54.750><c> to</c><00:01:54.899><c> the</c><00:01:54.990><c> message</c><00:01:55.350><c> we</c><00:01:55.770><c> also</c>

00:01:55.999 --> 00:01:56.009 align:start position:0%
then in addition to the message we also
 

00:01:56.009 --> 00:01:58.670 align:start position:0%
then in addition to the message we also
have<00:01:56.340><c> illegal</c><00:01:56.909><c> argument</c><00:01:57.090><c> exception</c><00:01:57.530><c> so</c><00:01:58.530><c> it's</c>

00:01:58.670 --> 00:01:58.680 align:start position:0%
have illegal argument exception so it's
 

00:01:58.680 --> 00:02:00.319 align:start position:0%
have illegal argument exception so it's
a<00:01:58.740><c> different</c><00:01:59.070><c> type</c><00:01:59.280><c> of</c><00:01:59.310><c> exception</c><00:01:59.790><c> and</c><00:02:00.149><c> we'll</c>

00:02:00.319 --> 00:02:00.329 align:start position:0%
a different type of exception and we'll
 

00:02:00.329 --> 00:02:01.490 align:start position:0%
a different type of exception and we'll
pick<00:02:00.479><c> apart</c><00:02:00.600><c> what</c><00:02:00.899><c> the</c><00:02:00.990><c> types</c><00:02:01.200><c> are</c><00:02:01.380><c> all</c><00:02:01.469><c> about</c>

00:02:01.490 --> 00:02:01.500 align:start position:0%
pick apart what the types are all about
 

00:02:01.500 --> 00:02:02.270 align:start position:0%
pick apart what the types are all about
in<00:02:01.890><c> a</c><00:02:01.950><c> moment</c>

00:02:02.270 --> 00:02:02.280 align:start position:0%
in a moment
 

00:02:02.280 --> 00:02:05.389 align:start position:0%
in a moment
ok<00:02:02.610><c> but</c><00:02:03.240><c> I</c><00:02:03.270><c> hope</c><00:02:03.390><c> the</c><00:02:03.540><c> idea</c><00:02:04.049><c> here</c><00:02:04.380><c> is</c><00:02:04.500><c> make</c><00:02:05.219><c> some</c>

00:02:05.389 --> 00:02:05.399 align:start position:0%
ok but I hope the idea here is make some
 

00:02:05.399 --> 00:02:07.340 align:start position:0%
ok but I hope the idea here is make some
sense<00:02:05.610><c> which</c><00:02:06.090><c> is</c><00:02:06.119><c> that</c><00:02:06.299><c> when</c><00:02:06.899><c> running</c><00:02:07.020><c> code</c>

00:02:07.340 --> 00:02:07.350 align:start position:0%
sense which is that when running code
 

00:02:07.350 --> 00:02:09.529 align:start position:0%
sense which is that when running code
it's<00:02:07.649><c> nice</c><00:02:07.829><c> to</c><00:02:08.009><c> provide</c><00:02:08.310><c> the</c><00:02:08.759><c> most</c><00:02:08.940><c> specific</c>

00:02:09.529 --> 00:02:09.539 align:start position:0%
it's nice to provide the most specific
 

00:02:09.539 --> 00:02:11.660 align:start position:0%
it's nice to provide the most specific
exception<00:02:10.080><c> possible</c><00:02:10.530><c> so</c><00:02:10.890><c> being</c><00:02:11.069><c> explicit</c>

00:02:11.660 --> 00:02:11.670 align:start position:0%
exception possible so being explicit
 

00:02:11.670 --> 00:02:12.450 align:start position:0%
exception possible so being explicit
rather<00:02:11.879><c> than</c>

00:02:12.450 --> 00:02:12.460 align:start position:0%
rather than
 

00:02:12.460 --> 00:02:14.430 align:start position:0%
rather than
is<00:02:12.730><c> often</c><00:02:13.240><c> a</c><00:02:13.390><c> good</c><00:02:13.540><c> idea</c><00:02:13.600><c> so</c><00:02:14.170><c> these</c><00:02:14.260><c> are</c>

00:02:14.430 --> 00:02:14.440 align:start position:0%
is often a good idea so these are
 

00:02:14.440 --> 00:02:16.920 align:start position:0%
is often a good idea so these are
explicit<00:02:15.310><c> exceptions</c><00:02:15.790><c> and</c><00:02:15.970><c> the</c><00:02:16.510><c> basic</c><00:02:16.780><c> rule</c>

00:02:16.920 --> 00:02:16.930 align:start position:0%
explicit exceptions and the basic rule
 

00:02:16.930 --> 00:02:18.600 align:start position:0%
explicit exceptions and the basic rule
for<00:02:16.960><c> them</c><00:02:17.260><c> is</c><00:02:17.410><c> we</c><00:02:17.590><c> use</c><00:02:17.710><c> this</c><00:02:17.920><c> new</c><00:02:18.100><c> throw</c>

00:02:18.600 --> 00:02:18.610 align:start position:0%
for them is we use this new throw
 

00:02:18.610 --> 00:02:22.140 align:start position:0%
for them is we use this new throw
keyword<00:02:20.400><c> so</c><00:02:21.400><c> let's</c><00:02:21.580><c> think</c><00:02:21.730><c> more</c><00:02:21.850><c> broadly</c>

00:02:22.140 --> 00:02:22.150 align:start position:0%
keyword so let's think more broadly
 

00:02:22.150 --> 00:02:23.940 align:start position:0%
keyword so let's think more broadly
about<00:02:22.630><c> exceptions</c><00:02:23.320><c> and</c><00:02:23.500><c> then</c><00:02:23.620><c> we'll</c><00:02:23.710><c> go</c><00:02:23.800><c> into</c>

00:02:23.940 --> 00:02:23.950 align:start position:0%
about exceptions and then we'll go into
 

00:02:23.950 --> 00:02:27.210 align:start position:0%
about exceptions and then we'll go into
a<00:02:24.220><c> few</c><00:02:24.460><c> nitpicky</c><00:02:24.850><c> details</c>

