WEBVTT
Kind: captions
Language: en

00:00:00.030 --> 00:00:02.119 align:start position:0%
 
for<00:00:00.870><c> much</c><00:00:00.989><c> of</c><00:00:01.170><c> today</c><00:00:01.199><c> we'll</c><00:00:01.650><c> be</c><00:00:01.740><c> concerned</c>

00:00:02.119 --> 00:00:02.129 align:start position:0%
for much of today we'll be concerned
 

00:00:02.129 --> 00:00:03.860 align:start position:0%
for much of today we'll be concerned
with<00:00:02.310><c> trying</c><00:00:02.639><c> to</c><00:00:02.790><c> write</c><00:00:03.000><c> a</c><00:00:03.210><c> function</c><00:00:03.419><c> we're</c>

00:00:03.860 --> 00:00:03.870 align:start position:0%
with trying to write a function we're
 

00:00:03.870 --> 00:00:06.710 align:start position:0%
with trying to write a function we're
gonna<00:00:03.990><c> call</c><00:00:04.259><c> max</c><00:00:04.650><c> so</c><00:00:05.430><c> what</c><00:00:05.549><c> does</c><00:00:05.640><c> Max</c><00:00:05.879><c> do</c><00:00:06.089><c> it</c>

00:00:06.710 --> 00:00:06.720 align:start position:0%
gonna call max so what does Max do it
 

00:00:06.720 --> 00:00:08.870 align:start position:0%
gonna call max so what does Max do it
takes<00:00:06.990><c> any</c><00:00:07.290><c> array</c><00:00:07.620><c> of</c><00:00:07.859><c> any</c><00:00:08.099><c> type</c><00:00:08.370><c> whatsoever</c>

00:00:08.870 --> 00:00:08.880 align:start position:0%
takes any array of any type whatsoever
 

00:00:08.880 --> 00:00:11.240 align:start position:0%
takes any array of any type whatsoever
and<00:00:09.150><c> it</c><00:00:09.389><c> returns</c><00:00:09.690><c> the</c><00:00:09.840><c> maximum</c><00:00:09.990><c> item</c><00:00:10.440><c> so</c><00:00:11.130><c> they</c>

00:00:11.240 --> 00:00:11.250 align:start position:0%
and it returns the maximum item so they
 

00:00:11.250 --> 00:00:13.700 align:start position:0%
and it returns the maximum item so they
give<00:00:11.400><c> it</c><00:00:11.519><c> this</c><00:00:11.639><c> array</c><00:00:11.880><c> 5</c><00:00:12.120><c> 3</c><00:00:12.509><c> 1</c><00:00:12.540><c> 7</c><00:00:13.019><c> the</c><00:00:13.530><c> max</c>

00:00:13.700 --> 00:00:13.710 align:start position:0%
give it this array 5 3 1 7 the max
 

00:00:13.710 --> 00:00:15.919 align:start position:0%
give it this array 5 3 1 7 the max
function<00:00:13.889><c> will</c><00:00:14.190><c> return</c><00:00:14.340><c> 7</c><00:00:14.940><c> they</c><00:00:15.660><c> give</c><00:00:15.809><c> it</c>

00:00:15.919 --> 00:00:15.929 align:start position:0%
function will return 7 they give it
 

00:00:15.929 --> 00:00:18.529 align:start position:0%
function will return 7 they give it
three<00:00:16.139><c> dogs</c><00:00:16.350><c> steer</c><00:00:16.949><c> Elise</c><00:00:17.369><c> and</c><00:00:17.609><c> Benjamin</c><00:00:18.119><c> it</c>

00:00:18.529 --> 00:00:18.539 align:start position:0%
three dogs steer Elise and Benjamin it
 

00:00:18.539 --> 00:00:20.359 align:start position:0%
three dogs steer Elise and Benjamin it
will<00:00:18.750><c> find</c><00:00:19.109><c> the</c><00:00:19.230><c> dog</c><00:00:19.410><c> with</c><00:00:19.619><c> the</c><00:00:19.710><c> largest</c><00:00:19.949><c> size</c>

00:00:20.359 --> 00:00:20.369 align:start position:0%
will find the dog with the largest size
 

00:00:20.369 --> 00:00:22.609 align:start position:0%
will find the dog with the largest size
let's<00:00:20.820><c> say</c><00:00:21.000><c> and</c><00:00:21.660><c> it</c><00:00:21.750><c> will</c><00:00:21.869><c> turn</c><00:00:22.050><c> in</c><00:00:22.260><c> this</c><00:00:22.410><c> case</c>

00:00:22.609 --> 00:00:22.619 align:start position:0%
let's say and it will turn in this case
 

00:00:22.619 --> 00:00:24.529 align:start position:0%
let's say and it will turn in this case
Benjamin<00:00:23.160><c> so</c><00:00:24.060><c> I've</c><00:00:24.150><c> actually</c><00:00:24.240><c> already</c>

00:00:24.529 --> 00:00:24.539 align:start position:0%
Benjamin so I've actually already
 

00:00:24.539 --> 00:00:27.080 align:start position:0%
Benjamin so I've actually already
written<00:00:24.869><c> a</c><00:00:25.140><c> function</c><00:00:25.560><c> that</c><00:00:25.590><c> does</c><00:00:25.890><c> this</c><00:00:26.160><c> and</c>

00:00:27.080 --> 00:00:27.090 align:start position:0%
written a function that does this and
 

00:00:27.090 --> 00:00:28.820 align:start position:0%
written a function that does this and
your<00:00:27.269><c> question</c><00:00:27.660><c> now</c><00:00:27.840><c> is</c><00:00:28.050><c> going</c><00:00:28.320><c> to</c><00:00:28.410><c> be</c><00:00:28.529><c> figure</c>

00:00:28.820 --> 00:00:28.830 align:start position:0%
your question now is going to be figure
 

00:00:28.830 --> 00:00:32.060 align:start position:0%
your question now is going to be figure
out<00:00:28.949><c> mm</c><00:00:29.939><c> what</c><00:00:30.510><c> is</c><00:00:30.779><c> wrong</c><00:00:31.050><c> if</c><00:00:31.349><c> anything</c><00:00:31.769><c> with</c><00:00:31.920><c> it</c>

00:00:32.060 --> 00:00:32.070 align:start position:0%
out mm what is wrong if anything with it
 

00:00:32.070 --> 00:00:33.560 align:start position:0%
out mm what is wrong if anything with it
now<00:00:32.430><c> turns</c><00:00:32.640><c> out</c><00:00:32.790><c> at</c><00:00:32.880><c> least</c><00:00:33.030><c> one</c><00:00:33.210><c> thing's</c><00:00:33.420><c> gonna</c>

00:00:33.560 --> 00:00:33.570 align:start position:0%
now turns out at least one thing's gonna
 

00:00:33.570 --> 00:00:35.720 align:start position:0%
now turns out at least one thing's gonna
be<00:00:33.750><c> wrong</c><00:00:33.899><c> so</c><00:00:34.860><c> I'll</c><00:00:34.980><c> walk</c><00:00:35.160><c> through</c><00:00:35.219><c> this</c><00:00:35.520><c> code</c>

00:00:35.720 --> 00:00:35.730 align:start position:0%
be wrong so I'll walk through this code
 

00:00:35.730 --> 00:00:36.950 align:start position:0%
be wrong so I'll walk through this code
really<00:00:35.910><c> quickly</c><00:00:36.000><c> before</c><00:00:36.570><c> letting</c><00:00:36.780><c> me</c><00:00:36.930><c> think</c>

00:00:36.950 --> 00:00:36.960 align:start position:0%
really quickly before letting me think
 

00:00:36.960 --> 00:00:38.990 align:start position:0%
really quickly before letting me think
about<00:00:37.230><c> it</c><00:00:37.350><c> so</c><00:00:37.890><c> this</c><00:00:38.040><c> is</c><00:00:38.100><c> a</c><00:00:38.219><c> main</c><00:00:38.460><c> method</c><00:00:38.670><c> that</c>

00:00:38.990 --> 00:00:39.000 align:start position:0%
about it so this is a main method that
 

00:00:39.000 --> 00:00:40.400 align:start position:0%
about it so this is a main method that
basically<00:00:39.450><c> does</c><00:00:39.600><c> what's</c><00:00:39.870><c> on</c><00:00:39.989><c> the</c><00:00:40.079><c> previous</c>

00:00:40.400 --> 00:00:40.410 align:start position:0%
basically does what's on the previous
 

00:00:40.410 --> 00:00:42.619 align:start position:0%
basically does what's on the previous
slide<00:00:40.680><c> creates</c><00:00:41.399><c> an</c><00:00:41.550><c> array</c><00:00:41.640><c> of</c><00:00:41.760><c> dogs</c><00:00:42.090><c> with</c><00:00:42.450><c> the</c>

00:00:42.619 --> 00:00:42.629 align:start position:0%
slide creates an array of dogs with the
 

00:00:42.629 --> 00:00:46.069 align:start position:0%
slide creates an array of dogs with the
data<00:00:43.170><c> set</c><00:00:43.410><c> shown</c><00:00:43.649><c> previously</c><00:00:44.390><c> calls</c><00:00:45.390><c> da</c><00:00:45.629><c> cause</c>

00:00:46.069 --> 00:00:46.079 align:start position:0%
data set shown previously calls da cause
 

00:00:46.079 --> 00:00:49.100 align:start position:0%
data set shown previously calls da cause
max<00:00:46.440><c> dogs</c><00:00:46.739><c> and</c><00:00:47.129><c> then</c><00:00:47.550><c> casts</c><00:00:48.059><c> it</c><00:00:48.180><c> as</c><00:00:48.329><c> the</c><00:00:48.840><c> result</c>

00:00:49.100 --> 00:00:49.110 align:start position:0%
max dogs and then casts it as the result
 

00:00:49.110 --> 00:00:51.139 align:start position:0%
max dogs and then casts it as the result
as<00:00:49.230><c> a</c><00:00:49.260><c> dog</c><00:00:49.500><c> and</c><00:00:49.770><c> then</c><00:00:50.039><c> finally</c><00:00:50.399><c> that</c><00:00:50.430><c> dog</c><00:00:50.730><c> barks</c>

00:00:51.139 --> 00:00:51.149 align:start position:0%
as a dog and then finally that dog barks
 

00:00:51.149 --> 00:00:53.060 align:start position:0%
as a dog and then finally that dog barks
then<00:00:52.079><c> the</c><00:00:52.170><c> actual</c><00:00:52.469><c> function</c><00:00:52.800><c> looks</c><00:00:53.010><c> something</c>

00:00:53.060 --> 00:00:53.070 align:start position:0%
then the actual function looks something
 

00:00:53.070 --> 00:00:56.209 align:start position:0%
then the actual function looks something
like<00:00:53.340><c> this</c><00:00:53.640><c> it</c><00:00:54.449><c> is</c><00:00:54.719><c> a</c><00:00:55.260><c> function</c><00:00:56.010><c> that</c><00:00:56.039><c> returns</c>

00:00:56.209 --> 00:00:56.219 align:start position:0%
like this it is a function that returns
 

00:00:56.219 --> 00:00:59.090 align:start position:0%
like this it is a function that returns
something<00:00:56.789><c> of</c><00:00:56.910><c> type</c><00:00:57.059><c> object</c><00:00:57.649><c> it</c><00:00:58.649><c> takes</c><00:00:58.949><c> an</c>

00:00:59.090 --> 00:00:59.100 align:start position:0%
something of type object it takes an
 

00:00:59.100 --> 00:01:02.540 align:start position:0%
something of type object it takes an
array<00:00:59.190><c> of</c><00:00:59.399><c> objects</c><00:01:00.000><c> and</c><00:01:00.239><c> the</c><00:01:00.989><c> goal</c><00:01:01.170><c> here</c><00:01:01.530><c> is</c><00:01:01.559><c> to</c>

00:01:02.540 --> 00:01:02.550 align:start position:0%
array of objects and the goal here is to
 

00:01:02.550 --> 00:01:03.889 align:start position:0%
array of objects and the goal here is to
take<00:01:02.670><c> advantage</c><00:01:03.059><c> of</c><00:01:03.149><c> the</c><00:01:03.210><c> fact</c><00:01:03.420><c> that</c><00:01:03.510><c> every</c>

00:01:03.889 --> 00:01:03.899 align:start position:0%
take advantage of the fact that every
 

00:01:03.899 --> 00:01:06.020 align:start position:0%
take advantage of the fact that every
class<00:01:04.170><c> in</c><00:01:04.379><c> Java</c><00:01:04.589><c> ultimately</c><00:01:05.189><c> extends</c><00:01:05.880><c> the</c>

00:01:06.020 --> 00:01:06.030 align:start position:0%
class in Java ultimately extends the
 

00:01:06.030 --> 00:01:09.649 align:start position:0%
class in Java ultimately extends the
object<00:01:06.450><c> class</c><00:01:06.979><c> so</c><00:01:08.090><c> we</c><00:01:09.090><c> work</c><00:01:09.270><c> our</c><00:01:09.420><c> way</c><00:01:09.450><c> through</c>

00:01:09.649 --> 00:01:09.659 align:start position:0%
object class so we work our way through
 

00:01:09.659 --> 00:01:11.719 align:start position:0%
object class so we work our way through
the<00:01:09.780><c> code</c><00:01:09.960><c> we've</c><00:01:10.260><c> set</c><00:01:10.650><c> up</c><00:01:10.680><c> a</c><00:01:10.890><c> maximum</c><00:01:11.100><c> index</c>

00:01:11.719 --> 00:01:11.729 align:start position:0%
the code we've set up a maximum index
 

00:01:11.729 --> 00:01:13.910 align:start position:0%
the code we've set up a maximum index
that<00:01:11.970><c> indicates</c><00:01:12.479><c> our</c><00:01:12.630><c> best-known</c><00:01:13.049><c> largest</c>

00:01:13.910 --> 00:01:13.920 align:start position:0%
that indicates our best-known largest
 

00:01:13.920 --> 00:01:16.850 align:start position:0%
that indicates our best-known largest
thing<00:01:14.930><c> yeah</c><00:01:15.930><c> you</c><00:01:16.170><c> know</c><00:01:16.259><c> what</c><00:01:16.350><c> I</c><00:01:16.380><c> mean</c>

00:01:16.850 --> 00:01:16.860 align:start position:0%
thing yeah you know what I mean
 

00:01:16.860 --> 00:01:19.940 align:start position:0%
thing yeah you know what I mean
and<00:01:17.130><c> then</c><00:01:17.310><c> for</c><00:01:17.909><c> each</c><00:01:18.470><c> possible</c><00:01:19.470><c> item</c><00:01:19.740><c> it</c><00:01:19.920><c> says</c>

00:01:19.940 --> 00:01:19.950 align:start position:0%
and then for each possible item it says
 

00:01:19.950 --> 00:01:22.340 align:start position:0%
and then for each possible item it says
is<00:01:20.400><c> that</c><00:01:20.580><c> item</c><00:01:20.850><c> bigger</c><00:01:21.060><c> than</c><00:01:21.509><c> the</c><00:01:21.960><c> best-known</c>

00:01:22.340 --> 00:01:22.350 align:start position:0%
is that item bigger than the best-known
 

00:01:22.350 --> 00:01:24.649 align:start position:0%
is that item bigger than the best-known
if<00:01:22.650><c> so</c><00:01:23.159><c> then</c><00:01:23.549><c> make</c><00:01:23.909><c> a</c><00:01:23.939><c> note</c><00:01:24.180><c> of</c><00:01:24.210><c> where</c><00:01:24.420><c> it</c><00:01:24.540><c> is</c>

00:01:24.649 --> 00:01:24.659 align:start position:0%
if so then make a note of where it is
 

00:01:24.659 --> 00:01:26.770 align:start position:0%
if so then make a note of where it is
and<00:01:24.930><c> then</c><00:01:25.080><c> finally</c><00:01:25.409><c> return</c><00:01:25.770><c> the</c><00:01:25.979><c> largest</c><00:01:26.280><c> item</c>

00:01:26.770 --> 00:01:26.780 align:start position:0%
and then finally return the largest item
 

00:01:26.780 --> 00:01:30.170 align:start position:0%
and then finally return the largest item
so<00:01:27.780><c> your</c><00:01:27.930><c> question</c><00:01:28.320><c> now</c><00:01:28.470><c> is</c><00:01:28.770><c> to</c><00:01:29.159><c> think</c><00:01:30.000><c> about</c>

00:01:30.170 --> 00:01:30.180 align:start position:0%
so your question now is to think about
 

00:01:30.180 --> 00:01:31.700 align:start position:0%
so your question now is to think about
this<00:01:30.360><c> think</c><00:01:30.689><c> about</c><00:01:30.869><c> what</c><00:01:30.990><c> compilation</c><00:01:31.530><c> errors</c>

00:01:31.700 --> 00:01:31.710 align:start position:0%
this think about what compilation errors
 

00:01:31.710 --> 00:01:34.310 align:start position:0%
this think about what compilation errors
might<00:01:31.890><c> pop</c><00:01:32.280><c> up</c><00:01:32.360><c> and</c><00:01:33.360><c> I've</c><00:01:33.659><c> highlighted</c><00:01:33.840><c> three</c>

00:01:34.310 --> 00:01:34.320 align:start position:0%
might pop up and I've highlighted three
 

00:01:34.320 --> 00:01:39.700 align:start position:0%
might pop up and I've highlighted three
areas<00:01:34.650><c> you</c><00:01:34.680><c> might</c><00:01:34.860><c> want</c><00:01:35.040><c> to</c><00:01:35.070><c> consider</c><00:01:38.390><c> okay</c>

00:01:39.700 --> 00:01:39.710 align:start position:0%
areas you might want to consider okay
 

00:01:39.710 --> 00:01:41.810 align:start position:0%
areas you might want to consider okay
assuming<00:01:40.710><c> you've</c><00:01:40.979><c> paused</c><00:01:41.189><c> and</c><00:01:41.610><c> thought</c><00:01:41.640><c> about</c>

00:01:41.810 --> 00:01:41.820 align:start position:0%
assuming you've paused and thought about
 

00:01:41.820 --> 00:01:45.080 align:start position:0%
assuming you've paused and thought about
it<00:01:42.619><c> this</c><00:01:43.619><c> code</c><00:01:44.100><c> right</c><00:01:44.340><c> here</c><00:01:44.399><c> we'll</c><00:01:44.880><c> start</c>

00:01:45.080 --> 00:01:45.090 align:start position:0%
it this code right here we'll start
 

00:01:45.090 --> 00:01:45.980 align:start position:0%
it this code right here we'll start
working<00:01:45.360><c> our</c><00:01:45.540><c> way</c><00:01:45.570><c> through</c><00:01:45.630><c> the</c><00:01:45.869><c> main</c>

00:01:45.980 --> 00:01:45.990 align:start position:0%
working our way through the main
 

00:01:45.990 --> 00:01:47.990 align:start position:0%
working our way through the main
function<00:01:46.350><c> the</c><00:01:46.890><c> first</c><00:01:47.070><c> question</c><00:01:47.340><c> is</c><00:01:47.460><c> in</c><00:01:47.610><c> when</c>

00:01:47.990 --> 00:01:48.000 align:start position:0%
function the first question is in when
 

00:01:48.000 --> 00:01:50.330 align:start position:0%
function the first question is in when
we<00:01:48.149><c> return</c><00:01:48.509><c> an</c><00:01:48.689><c> object</c><00:01:49.170><c> can</c><00:01:49.590><c> we</c><00:01:49.710><c> cast</c><00:01:49.950><c> it</c><00:01:50.159><c> as</c><00:01:50.280><c> a</c>

00:01:50.330 --> 00:01:50.340 align:start position:0%
we return an object can we cast it as a
 

00:01:50.340 --> 00:01:52.490 align:start position:0%
we return an object can we cast it as a
dog<00:01:50.670><c> and</c><00:01:51.060><c> in</c><00:01:51.600><c> this</c><00:01:51.720><c> case</c><00:01:51.869><c> the</c><00:01:52.049><c> answer</c><00:01:52.259><c> is</c><00:01:52.350><c> yes</c>

00:01:52.490 --> 00:01:52.500 align:start position:0%
dog and in this case the answer is yes
 

00:01:52.500 --> 00:01:56.539 align:start position:0%
dog and in this case the answer is yes
this<00:01:52.829><c> is</c><00:01:53.009><c> actually</c><00:01:53.340><c> the</c><00:01:53.759><c> best</c><00:01:54.090><c> most</c><00:01:55.549><c> typical</c>

00:01:56.539 --> 00:01:56.549 align:start position:0%
this is actually the best most typical
 

00:01:56.549 --> 00:01:58.249 align:start position:0%
this is actually the best most typical
case<00:01:56.729><c> for</c><00:01:56.909><c> casting</c><00:01:57.240><c> where</c><00:01:57.689><c> you</c><00:01:57.840><c> and</c><00:01:57.990><c> I</c><00:01:58.049><c> both</c>

00:01:58.249 --> 00:01:58.259 align:start position:0%
case for casting where you and I both
 

00:01:58.259 --> 00:02:00.740 align:start position:0%
case for casting where you and I both
know<00:01:58.560><c> that</c><00:01:58.829><c> a</c><00:01:59.100><c> particular</c><00:01:59.640><c> thing</c><00:02:00.149><c> is</c><00:02:00.360><c> actually</c>

00:02:00.740 --> 00:02:00.750 align:start position:0%
know that a particular thing is actually
 

00:02:00.750 --> 00:02:03.109 align:start position:0%
know that a particular thing is actually
a<00:02:00.810><c> dog</c><00:02:01.049><c> but</c><00:02:01.740><c> the</c><00:02:01.920><c> static</c><00:02:02.219><c> type</c><00:02:02.369><c> is</c><00:02:02.520><c> object</c><00:02:02.939><c> so</c>

00:02:03.109 --> 00:02:03.119 align:start position:0%
a dog but the static type is object so
 

00:02:03.119 --> 00:02:04.670 align:start position:0%
a dog but the static type is object so
we<00:02:03.240><c> cast</c><00:02:03.420><c> it</c><00:02:03.600><c> back</c><00:02:03.630><c> to</c><00:02:03.899><c> dog</c><00:02:04.049><c> that's</c><00:02:04.409><c> a</c><00:02:04.500><c> very</c>

00:02:04.670 --> 00:02:04.680 align:start position:0%
we cast it back to dog that's a very
 

00:02:04.680 --> 00:02:07.880 align:start position:0%
we cast it back to dog that's a very
normal<00:02:04.799><c> thing</c><00:02:05.159><c> to</c><00:02:05.189><c> do</c><00:02:05.430><c> with</c><00:02:05.700><c> casting</c><00:02:06.890><c> how</c>

00:02:07.880 --> 00:02:07.890 align:start position:0%
normal thing to do with casting how
 

00:02:07.890 --> 00:02:10.040 align:start position:0%
normal thing to do with casting how
about<00:02:08.069><c> this</c><00:02:08.250><c> whenever</c><00:02:09.149><c> we</c><00:02:09.239><c> look</c><00:02:09.390><c> at</c><00:02:09.569><c> this</c><00:02:09.840><c> box</c>

00:02:10.040 --> 00:02:10.050 align:start position:0%
about this whenever we look at this box
 

00:02:10.050 --> 00:02:11.390 align:start position:0%
about this whenever we look at this box
what's<00:02:10.379><c> this</c><00:02:10.530><c> box</c><00:02:10.709><c> supposed</c><00:02:11.009><c> to</c><00:02:11.099><c> highlight</c>

00:02:11.390 --> 00:02:11.400 align:start position:0%
what's this box supposed to highlight
 

00:02:11.400 --> 00:02:12.290 align:start position:0%
what's this box supposed to highlight
well

00:02:12.290 --> 00:02:12.300 align:start position:0%
well
 

00:02:12.300 --> 00:02:13.559 align:start position:0%
well
we're<00:02:12.510><c> passing</c><00:02:12.750><c> in</c><00:02:13.170><c> a</c>

00:02:13.559 --> 00:02:13.569 align:start position:0%
we're passing in a
 

00:02:13.569 --> 00:02:15.420 align:start position:0%
we're passing in a
of<00:02:13.719><c> dogs</c><00:02:13.989><c> but</c><00:02:14.439><c> it</c><00:02:14.530><c> expects</c><00:02:14.920><c> an</c><00:02:15.159><c> array</c><00:02:15.340><c> of</c>

00:02:15.420 --> 00:02:15.430 align:start position:0%
of dogs but it expects an array of
 

00:02:15.430 --> 00:02:17.910 align:start position:0%
of dogs but it expects an array of
objects<00:02:15.819><c> so</c><00:02:16.360><c> does</c><00:02:16.480><c> that</c><00:02:16.659><c> work</c><00:02:16.840><c> well</c><00:02:17.590><c> I</c><00:02:17.769><c> haven't</c>

00:02:17.910 --> 00:02:17.920 align:start position:0%
objects so does that work well I haven't
 

00:02:17.920 --> 00:02:21.240 align:start position:0%
objects so does that work well I haven't
actually<00:02:18.099><c> said</c><00:02:18.519><c> but</c><00:02:18.879><c> yes</c><00:02:19.180><c> indeed</c><00:02:19.980><c> because</c><00:02:20.980><c> a</c>

00:02:21.240 --> 00:02:21.250 align:start position:0%
actually said but yes indeed because a
 

00:02:21.250 --> 00:02:23.880 align:start position:0%
actually said but yes indeed because a
dog<00:02:21.700><c> is</c><00:02:22.000><c> an</c><00:02:22.150><c> object</c><00:02:22.540><c> an</c><00:02:22.719><c> array</c><00:02:23.200><c> of</c><00:02:23.230><c> dogs</c><00:02:23.590><c> is</c>

00:02:23.880 --> 00:02:23.890 align:start position:0%
dog is an object an array of dogs is
 

00:02:23.890 --> 00:02:26.250 align:start position:0%
dog is an object an array of dogs is
also<00:02:24.430><c> an</c><00:02:24.670><c> array</c><00:02:24.939><c> of</c><00:02:24.969><c> objects</c><00:02:25.450><c> so</c><00:02:25.870><c> Java</c><00:02:26.079><c> will</c>

00:02:26.250 --> 00:02:26.260 align:start position:0%
also an array of objects so Java will
 

00:02:26.260 --> 00:02:28.740 align:start position:0%
also an array of objects so Java will
consider<00:02:26.590><c> that</c><00:02:26.739><c> totally</c><00:02:27.129><c> fine</c><00:02:27.540><c> finally</c><00:02:28.540><c> we</c>

00:02:28.740 --> 00:02:28.750 align:start position:0%
consider that totally fine finally we
 

00:02:28.750 --> 00:02:31.140 align:start position:0%
consider that totally fine finally we
get<00:02:28.870><c> to</c><00:02:28.930><c> this</c><00:02:29.170><c> line</c><00:02:29.349><c> right</c><00:02:29.530><c> here</c><00:02:29.590><c> if</c><00:02:30.099><c> items</c><00:02:30.970><c> I</c>

00:02:31.140 --> 00:02:31.150 align:start position:0%
get to this line right here if items I
 

00:02:31.150 --> 00:02:33.449 align:start position:0%
get to this line right here if items I
is<00:02:31.420><c> greater</c><00:02:31.750><c> than</c><00:02:31.840><c> items</c><00:02:32.260><c> Max</c><00:02:32.500><c> Dex</c><00:02:32.769><c> and</c><00:02:33.010><c> this</c>

00:02:33.449 --> 00:02:33.459 align:start position:0%
is greater than items Max Dex and this
 

00:02:33.459 --> 00:02:34.890 align:start position:0%
is greater than items Max Dex and this
basically<00:02:33.939><c> assumes</c><00:02:34.269><c> that</c><00:02:34.540><c> somehow</c><00:02:34.750><c> the</c>

00:02:34.890 --> 00:02:34.900 align:start position:0%
basically assumes that somehow the
 

00:02:34.900 --> 00:02:36.660 align:start position:0%
basically assumes that somehow the
greater<00:02:35.200><c> operator</c><00:02:35.650><c> works</c><00:02:35.950><c> with</c><00:02:36.159><c> arbitrary</c>

00:02:36.660 --> 00:02:36.670 align:start position:0%
greater operator works with arbitrary
 

00:02:36.670 --> 00:02:39.449 align:start position:0%
greater operator works with arbitrary
object<00:02:37.180><c> types</c><00:02:37.420><c> but</c><00:02:37.810><c> in</c><00:02:37.959><c> fact</c><00:02:38.079><c> it</c><00:02:38.379><c> does</c><00:02:38.530><c> not</c><00:02:38.650><c> so</c>

00:02:39.449 --> 00:02:39.459 align:start position:0%
object types but in fact it does not so
 

00:02:39.459 --> 00:02:40.589 align:start position:0%
object types but in fact it does not so
that's<00:02:39.609><c> going</c><00:02:39.730><c> to</c><00:02:39.819><c> be</c><00:02:39.909><c> the</c><00:02:40.030><c> issue</c><00:02:40.150><c> we</c><00:02:40.329><c> have</c><00:02:40.450><c> to</c>

00:02:40.589 --> 00:02:40.599 align:start position:0%
that's going to be the issue we have to
 

00:02:40.599 --> 00:02:42.830 align:start position:0%
that's going to be the issue we have to
face<00:02:40.920><c> so</c><00:02:41.920><c> what</c><00:02:42.040><c> do</c><00:02:42.099><c> we</c><00:02:42.189><c> do</c><00:02:42.280><c> about</c><00:02:42.400><c> it</c>

00:02:42.830 --> 00:02:42.840 align:start position:0%
face so what do we do about it
 

00:02:42.840 --> 00:02:46.920 align:start position:0%
face so what do we do about it
well<00:02:43.950><c> one</c><00:02:44.950><c> possibility</c><00:02:45.129><c> is</c><00:02:45.760><c> we</c><00:02:45.970><c> could</c><00:02:46.239><c> write</c><00:02:46.510><c> a</c>

00:02:46.920 --> 00:02:46.930 align:start position:0%
well one possibility is we could write a
 

00:02:46.930 --> 00:02:49.020 align:start position:0%
well one possibility is we could write a
max<00:02:47.200><c> method</c><00:02:47.650><c> in</c><00:02:47.769><c> the</c><00:02:47.889><c> dog</c><00:02:48.069><c> class</c><00:02:48.430><c> and</c><00:02:48.730><c> in</c>

00:02:49.020 --> 00:02:49.030 align:start position:0%
max method in the dog class and in
 

00:02:49.030 --> 00:02:50.849 align:start position:0%
max method in the dog class and in
effect<00:02:49.299><c> we're</c><00:02:49.599><c> giving</c><00:02:49.870><c> up</c><00:02:50.019><c> on</c><00:02:50.170><c> our</c><00:02:50.200><c> dream</c><00:02:50.560><c> of</c>

00:02:50.849 --> 00:02:50.859 align:start position:0%
effect we're giving up on our dream of
 

00:02:50.859 --> 00:02:53.250 align:start position:0%
effect we're giving up on our dream of
having<00:02:51.340><c> a</c><00:02:51.639><c> one</c><00:02:51.849><c> true</c><00:02:52.090><c> maximum</c><00:02:52.720><c> function</c><00:02:53.109><c> right</c>

00:02:53.250 --> 00:02:53.260 align:start position:0%
having a one true maximum function right
 

00:02:53.260 --> 00:02:56.220 align:start position:0%
having a one true maximum function right
here<00:02:53.700><c> so</c><00:02:54.700><c> what</c><00:02:55.269><c> would</c><00:02:55.389><c> that</c><00:02:55.450><c> look</c><00:02:55.750><c> like</c><00:02:55.810><c> maybe</c>

00:02:56.220 --> 00:02:56.230 align:start position:0%
here so what would that look like maybe
 

00:02:56.230 --> 00:02:57.539 align:start position:0%
here so what would that look like maybe
I'm<00:02:56.560><c> just</c><00:02:56.769><c> going</c><00:02:56.889><c> to</c><00:02:56.919><c> show</c><00:02:57.129><c> it</c><00:02:57.250><c> because</c><00:02:57.370><c> that's</c>

00:02:57.539 --> 00:02:57.549 align:start position:0%
I'm just going to show it because that's
 

00:02:57.549 --> 00:02:59.129 align:start position:0%
I'm just going to show it because that's
this<00:02:57.730><c> isn't</c><00:02:57.939><c> a</c><00:02:57.970><c> great</c><00:02:58.120><c> approach</c><00:02:58.419><c> but</c><00:02:58.989><c> one</c>

00:02:59.129 --> 00:02:59.139 align:start position:0%
this isn't a great approach but one
 

00:02:59.139 --> 00:03:02.129 align:start position:0%
this isn't a great approach but one
approaches<00:02:59.680><c> we</c><00:03:00.280><c> would</c><00:03:00.700><c> in</c><00:03:01.359><c> the</c><00:03:01.629><c> dog</c><00:03:01.810><c> class</c>

00:03:02.129 --> 00:03:02.139 align:start position:0%
approaches we would in the dog class
 

00:03:02.139 --> 00:03:04.530 align:start position:0%
approaches we would in the dog class
itself<00:03:02.530><c> have</c><00:03:02.950><c> a</c><00:03:03.010><c> max</c><00:03:03.400><c> dog</c><00:03:03.639><c> method</c><00:03:04.060><c> that</c><00:03:04.389><c> takes</c>

00:03:04.530 --> 00:03:04.540 align:start position:0%
itself have a max dog method that takes
 

00:03:04.540 --> 00:03:06.539 align:start position:0%
itself have a max dog method that takes
an<00:03:04.720><c> array</c><00:03:04.840><c> of</c><00:03:04.959><c> dogs</c><00:03:05.260><c> and</c><00:03:05.590><c> returns</c><00:03:05.980><c> the</c><00:03:06.189><c> largest</c>

00:03:06.539 --> 00:03:06.549 align:start position:0%
an array of dogs and returns the largest
 

00:03:06.549 --> 00:03:08.520 align:start position:0%
an array of dogs and returns the largest
so<00:03:07.299><c> if</c><00:03:07.359><c> you</c><00:03:07.419><c> wanted</c><00:03:07.599><c> to</c><00:03:07.720><c> use</c><00:03:07.900><c> this</c><00:03:08.079><c> function</c><00:03:08.230><c> it</c>

00:03:08.520 --> 00:03:08.530 align:start position:0%
so if you wanted to use this function it
 

00:03:08.530 --> 00:03:10.470 align:start position:0%
so if you wanted to use this function it
might<00:03:08.650><c> look</c><00:03:08.799><c> something</c><00:03:08.859><c> like</c><00:03:09.159><c> this</c><00:03:09.489><c> dog</c><00:03:10.180><c> dogs</c>

00:03:10.470 --> 00:03:10.480 align:start position:0%
might look something like this dog dogs
 

00:03:10.480 --> 00:03:12.869 align:start position:0%
might look something like this dog dogs
equals<00:03:10.840><c> new</c><00:03:10.989><c> dog</c><00:03:11.169><c> D</c><00:03:11.439><c> 1</c><00:03:11.560><c> D</c><00:03:11.709><c> 2</c><00:03:11.739><c> T</c><00:03:12.010><c> 3</c><00:03:12.040><c> so</c><00:03:12.549><c> make</c><00:03:12.760><c> the</c>

00:03:12.869 --> 00:03:12.879 align:start position:0%
equals new dog D 1 D 2 T 3 so make the
 

00:03:12.879 --> 00:03:15.569 align:start position:0%
equals new dog D 1 D 2 T 3 so make the
array<00:03:13.060><c> and</c><00:03:13.480><c> then</c><00:03:13.599><c> finally</c><00:03:13.959><c> we</c><00:03:14.530><c> do</c><00:03:14.650><c> dog</c><00:03:14.919><c> max</c><00:03:15.340><c> dog</c>

00:03:15.569 --> 00:03:15.579 align:start position:0%
array and then finally we do dog max dog
 

00:03:15.579 --> 00:03:18.330 align:start position:0%
array and then finally we do dog max dog
the<00:03:16.359><c> array</c><00:03:16.510><c> of</c><00:03:16.569><c> dogs</c><00:03:16.750><c> and</c><00:03:17.049><c> here</c><00:03:17.650><c> we</c><00:03:17.859><c> also</c><00:03:17.979><c> avoid</c>

00:03:18.330 --> 00:03:18.340 align:start position:0%
the array of dogs and here we also avoid
 

00:03:18.340 --> 00:03:19.740 align:start position:0%
the array of dogs and here we also avoid
the<00:03:18.489><c> need</c><00:03:18.609><c> for</c><00:03:18.639><c> the</c><00:03:18.849><c> cast</c><00:03:19.060><c> which</c><00:03:19.419><c> is</c><00:03:19.540><c> kind</c><00:03:19.720><c> of</c>

00:03:19.740 --> 00:03:19.750 align:start position:0%
the need for the cast which is kind of
 

00:03:19.750 --> 00:03:23.250 align:start position:0%
the need for the cast which is kind of
nice<00:03:20.459><c> now</c><00:03:21.459><c> the</c><00:03:21.519><c> obvious</c><00:03:21.879><c> big</c><00:03:22.540><c> problem</c><00:03:23.109><c> with</c>

00:03:23.250 --> 00:03:23.260 align:start position:0%
nice now the obvious big problem with
 

00:03:23.260 --> 00:03:24.750 align:start position:0%
nice now the obvious big problem with
this<00:03:23.379><c> is</c><00:03:23.650><c> that</c><00:03:23.979><c> we've</c><00:03:24.099><c> given</c><00:03:24.250><c> up</c><00:03:24.489><c> with</c><00:03:24.609><c> the</c>

00:03:24.750 --> 00:03:24.760 align:start position:0%
this is that we've given up with the
 

00:03:24.760 --> 00:03:26.610 align:start position:0%
this is that we've given up with the
dream<00:03:25.090><c> of</c><00:03:25.239><c> our</c><00:03:25.359><c> one</c><00:03:25.510><c> true</c><00:03:25.659><c> max</c><00:03:25.900><c> function</c><00:03:26.049><c> but</c>

00:03:26.610 --> 00:03:26.620 align:start position:0%
dream of our one true max function but
 

00:03:26.620 --> 00:03:28.259 align:start position:0%
dream of our one true max function but
there's<00:03:26.769><c> a</c><00:03:26.829><c> more</c><00:03:26.949><c> deep</c><00:03:27.280><c> there's</c><00:03:27.909><c> a</c><00:03:27.970><c> deeper</c>

00:03:28.259 --> 00:03:28.269 align:start position:0%
there's a more deep there's a deeper
 

00:03:28.269 --> 00:03:31.309 align:start position:0%
there's a more deep there's a deeper
more<00:03:28.419><c> fundamental</c><00:03:28.930><c> reason</c><00:03:29.609><c> so</c><00:03:30.609><c> what</c><00:03:30.760><c> is</c><00:03:30.849><c> it</c>

00:03:31.309 --> 00:03:31.319 align:start position:0%
more fundamental reason so what is it
 

00:03:31.319 --> 00:03:35.069 align:start position:0%
more fundamental reason so what is it
well<00:03:32.319><c> the</c><00:03:33.250><c> issue</c><00:03:33.519><c> is</c><00:03:33.729><c> that</c><00:03:34.090><c> let's</c><00:03:34.659><c> suppose</c><00:03:34.750><c> we</c>

00:03:35.069 --> 00:03:35.079 align:start position:0%
well the issue is that let's suppose we
 

00:03:35.079 --> 00:03:36.990 align:start position:0%
well the issue is that let's suppose we
have<00:03:35.169><c> a</c><00:03:35.199><c> cat</c><00:03:35.440><c> class</c><00:03:35.709><c> now</c><00:03:35.979><c> or</c><00:03:36.159><c> a</c><00:03:36.190><c> horse</c><00:03:36.489><c> class</c><00:03:36.760><c> or</c>

00:03:36.990 --> 00:03:37.000 align:start position:0%
have a cat class now or a horse class or
 

00:03:37.000 --> 00:03:38.849 align:start position:0%
have a cat class now or a horse class or
an<00:03:37.060><c> octopus</c><00:03:37.510><c> or</c><00:03:37.690><c> whatever</c><00:03:37.930><c> else</c><00:03:38.109><c> and</c><00:03:38.260><c> all</c><00:03:38.709><c> of</c>

00:03:38.849 --> 00:03:38.859 align:start position:0%
an octopus or whatever else and all of
 

00:03:38.859 --> 00:03:40.890 align:start position:0%
an octopus or whatever else and all of
those<00:03:38.979><c> classes</c><00:03:39.430><c> we</c><00:03:39.549><c> also</c><00:03:39.699><c> need</c><00:03:40.060><c> a</c><00:03:40.209><c> max</c><00:03:40.479><c> horse</c>

00:03:40.890 --> 00:03:40.900 align:start position:0%
those classes we also need a max horse
 

00:03:40.900 --> 00:03:43.559 align:start position:0%
those classes we also need a max horse
or<00:03:41.139><c> max</c><00:03:41.349><c> octopus</c><00:03:42.010><c> function</c><00:03:42.400><c> if</c><00:03:43.060><c> we</c><00:03:43.239><c> want</c><00:03:43.389><c> to</c><00:03:43.419><c> do</c>

00:03:43.559 --> 00:03:43.569 align:start position:0%
or max octopus function if we want to do
 

00:03:43.569 --> 00:03:45.149 align:start position:0%
or max octopus function if we want to do
the<00:03:43.690><c> minimum</c><00:03:43.870><c> or</c><00:03:44.229><c> the</c><00:03:44.349><c> median</c><00:03:44.769><c> or</c><00:03:44.889><c> something</c>

00:03:45.149 --> 00:03:45.159 align:start position:0%
the minimum or the median or something
 

00:03:45.159 --> 00:03:47.280 align:start position:0%
the minimum or the median or something
like<00:03:45.250><c> that</c><00:03:45.459><c> again</c><00:03:45.940><c> we</c><00:03:46.120><c> have</c><00:03:46.239><c> this</c><00:03:46.389><c> repetition</c>

00:03:47.280 --> 00:03:47.290 align:start position:0%
like that again we have this repetition
 

00:03:47.290 --> 00:03:50.699 align:start position:0%
like that again we have this repetition
of<00:03:47.530><c> work</c><00:03:47.680><c> over</c><00:03:48.010><c> and</c><00:03:48.129><c> over</c><00:03:48.190><c> and</c><00:03:49.180><c> so</c><00:03:49.449><c> what</c><00:03:49.870><c> we</c><00:03:50.079><c> in</c>

00:03:50.699 --> 00:03:50.709 align:start position:0%
of work over and over and so what we in
 

00:03:50.709 --> 00:03:52.469 align:start position:0%
of work over and over and so what we in
effect<00:03:51.069><c> have</c><00:03:51.310><c> if</c><00:03:51.549><c> we</c><00:03:51.669><c> give</c><00:03:51.819><c> up</c><00:03:51.849><c> on</c><00:03:52.090><c> our</c><00:03:52.120><c> dream</c>

00:03:52.469 --> 00:03:52.479 align:start position:0%
effect have if we give up on our dream
 

00:03:52.479 --> 00:03:56.460 align:start position:0%
effect have if we give up on our dream
is<00:03:52.659><c> a</c><00:03:53.290><c> bunch</c><00:03:54.129><c> of</c><00:03:54.220><c> redundant</c><00:03:54.699><c> code</c><00:03:55.260><c> so</c><00:03:56.260><c> now</c><00:03:56.409><c> the</c>

00:03:56.460 --> 00:03:56.470 align:start position:0%
is a bunch of redundant code so now the
 

00:03:56.470 --> 00:03:58.860 align:start position:0%
is a bunch of redundant code so now the
question<00:03:56.680><c> is</c><00:03:57.069><c> knowing</c><00:03:57.790><c> that</c><00:03:58.090><c> objects</c><00:03:58.540><c> cannot</c>

00:03:58.860 --> 00:03:58.870 align:start position:0%
question is knowing that objects cannot
 

00:03:58.870 --> 00:04:00.390 align:start position:0%
question is knowing that objects cannot
be<00:03:59.049><c> compared</c><00:03:59.439><c> with</c><00:03:59.500><c> greater</c><00:03:59.799><c> than</c><00:04:00.040><c> because</c>

00:04:00.390 --> 00:04:00.400 align:start position:0%
be compared with greater than because
 

00:04:00.400 --> 00:04:02.219 align:start position:0%
be compared with greater than because
how<00:04:00.489><c> could</c><00:04:00.699><c> they</c><00:04:00.939><c> how</c><00:04:01.329><c> would</c><00:04:01.389><c> Java</c><00:04:01.750><c> know</c><00:04:01.989><c> if</c><00:04:02.049><c> it</c>

00:04:02.219 --> 00:04:02.229 align:start position:0%
how could they how would Java know if it
 

00:04:02.229 --> 00:04:05.339 align:start position:0%
how could they how would Java know if it
should<00:04:02.409><c> use</c><00:04:02.560><c> the</c><00:04:02.799><c> string</c><00:04:03.099><c> or</c><00:04:03.489><c> the</c><00:04:03.819><c> size</c><00:04:04.349><c> how</c>

00:04:05.339 --> 00:04:05.349 align:start position:0%
should use the string or the size how
 

00:04:05.349 --> 00:04:09.000 align:start position:0%
should use the string or the size how
could<00:04:05.680><c> we</c><00:04:05.859><c> modify</c><00:04:06.790><c> this</c><00:04:07.449><c> code</c><00:04:07.989><c> here</c><00:04:08.439><c> so</c><00:04:08.829><c> that</c>

00:04:09.000 --> 00:04:09.010 align:start position:0%
could we modify this code here so that
 

00:04:09.010 --> 00:04:12.089 align:start position:0%
could we modify this code here so that
it<00:04:09.159><c> actually</c><00:04:09.400><c> does</c><00:04:10.299><c> work</c><00:04:10.599><c> and</c><00:04:11.470><c> let's</c><00:04:11.799><c> I'll</c>

00:04:12.089 --> 00:04:12.099 align:start position:0%
it actually does work and let's I'll
 

00:04:12.099 --> 00:04:13.530 align:start position:0%
it actually does work and let's I'll
give<00:04:12.310><c> you</c><00:04:12.400><c> a</c><00:04:12.430><c> clue</c><00:04:12.669><c> we're</c><00:04:13.120><c> talking</c><00:04:13.359><c> a</c><00:04:13.419><c> lot</c>

00:04:13.530 --> 00:04:13.540 align:start position:0%
give you a clue we're talking a lot
 

00:04:13.540 --> 00:04:15.149 align:start position:0%
give you a clue we're talking a lot
about<00:04:13.569><c> inheritance</c><00:04:14.259><c> here</c><00:04:14.470><c> and</c><00:04:14.620><c> think</c><00:04:15.099><c> about</c>

00:04:15.149 --> 00:04:15.159 align:start position:0%
about inheritance here and think about
 

00:04:15.159 --> 00:04:16.620 align:start position:0%
about inheritance here and think about
that<00:04:15.459><c> a</c><00:04:15.489><c> little</c><00:04:15.609><c> so</c><00:04:16.090><c> if</c><00:04:16.180><c> we</c><00:04:16.239><c> wanted</c><00:04:16.389><c> to</c><00:04:16.479><c> take</c>

00:04:16.620 --> 00:04:16.630 align:start position:0%
that a little so if we wanted to take
 

00:04:16.630 --> 00:04:18.270 align:start position:0%
that a little so if we wanted to take
this<00:04:16.810><c> code</c><00:04:17.049><c> Maximizer</c><00:04:17.560><c> that</c><00:04:17.799><c> Java</c><00:04:18.009><c> and</c><00:04:18.190><c> make</c>

00:04:18.270 --> 00:04:18.280 align:start position:0%
this code Maximizer that Java and make
 

00:04:18.280 --> 00:04:20.129 align:start position:0%
this code Maximizer that Java and make
it<00:04:18.370><c> work</c><00:04:18.489><c> what</c><00:04:18.789><c> could</c><00:04:18.970><c> we</c><00:04:19.060><c> do</c><00:04:19.209><c> I'll</c><00:04:19.630><c> spoil</c><00:04:19.959><c> it</c>

00:04:20.129 --> 00:04:20.139 align:start position:0%
it work what could we do I'll spoil it
 

00:04:20.139 --> 00:04:22.829 align:start position:0%
it work what could we do I'll spoil it
in<00:04:20.289><c> the</c><00:04:20.440><c> next</c><00:04:20.620><c> video</c>

