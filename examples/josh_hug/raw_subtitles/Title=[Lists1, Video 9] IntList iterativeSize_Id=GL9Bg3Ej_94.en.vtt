WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.480 align:start position:0%
 
this<00:00:00.930><c> method</c><00:00:01.350><c> works</c><00:00:01.469><c> totally</c><00:00:01.740><c> fine</c><00:00:02.159><c> there's</c>

00:00:02.480 --> 00:00:02.490 align:start position:0%
this method works totally fine there's
 

00:00:02.490 --> 00:00:04.190 align:start position:0%
this method works totally fine there's
no<00:00:02.580><c> reason</c><00:00:02.909><c> you</c><00:00:02.939><c> can't</c><00:00:03.210><c> use</c><00:00:03.360><c> the</c><00:00:03.600><c> size</c><00:00:03.840><c> and</c><00:00:04.110><c> in</c>

00:00:04.190 --> 00:00:04.200 align:start position:0%
no reason you can't use the size and in
 

00:00:04.200 --> 00:00:05.990 align:start position:0%
no reason you can't use the size and in
fact<00:00:04.380><c> I</c><00:00:04.650><c> think</c><00:00:04.890><c> it's</c><00:00:05.220><c> pretty</c><00:00:05.520><c> much</c><00:00:05.640><c> the</c><00:00:05.879><c> best</c>

00:00:05.990 --> 00:00:06.000 align:start position:0%
fact I think it's pretty much the best
 

00:00:06.000 --> 00:00:06.619 align:start position:0%
fact I think it's pretty much the best
solution

00:00:06.619 --> 00:00:06.629 align:start position:0%
solution
 

00:00:06.629 --> 00:00:09.620 align:start position:0%
solution
however<00:00:07.350><c> we</c><00:00:08.040><c> should</c><00:00:08.280><c> for</c><00:00:08.940><c> the</c><00:00:08.970><c> sake</c><00:00:09.210><c> of</c><00:00:09.240><c> just</c>

00:00:09.620 --> 00:00:09.630 align:start position:0%
however we should for the sake of just
 

00:00:09.630 --> 00:00:11.180 align:start position:0%
however we should for the sake of just
seeing<00:00:09.840><c> the</c><00:00:10.019><c> other</c><00:00:10.200><c> pattern</c><00:00:10.590><c> look</c><00:00:10.980><c> at</c><00:00:11.130><c> how</c>

00:00:11.180 --> 00:00:11.190 align:start position:0%
seeing the other pattern look at how
 

00:00:11.190 --> 00:00:12.799 align:start position:0%
seeing the other pattern look at how
this<00:00:11.340><c> would</c><00:00:11.490><c> be</c><00:00:11.580><c> done</c><00:00:11.700><c> iteratively</c><00:00:11.940><c> even</c>

00:00:12.799 --> 00:00:12.809 align:start position:0%
this would be done iteratively even
 

00:00:12.809 --> 00:00:14.120 align:start position:0%
this would be done iteratively even
though<00:00:12.900><c> I</c><00:00:12.929><c> don't</c><00:00:13.139><c> personally</c><00:00:13.620><c> like</c><00:00:13.710><c> it</c><00:00:13.950><c> quite</c>

00:00:14.120 --> 00:00:14.130 align:start position:0%
though I don't personally like it quite
 

00:00:14.130 --> 00:00:16.640 align:start position:0%
though I don't personally like it quite
as<00:00:14.250><c> much</c><00:00:14.750><c> so</c><00:00:15.750><c> to</c><00:00:15.809><c> do</c><00:00:15.960><c> that</c><00:00:15.990><c> I'm</c><00:00:16.260><c> gonna</c><00:00:16.379><c> create</c><00:00:16.590><c> a</c>

00:00:16.640 --> 00:00:16.650 align:start position:0%
as much so to do that I'm gonna create a
 

00:00:16.650 --> 00:00:19.340 align:start position:0%
as much so to do that I'm gonna create a
new<00:00:16.770><c> method</c><00:00:17.070><c> called</c><00:00:17.100><c> iterative</c><00:00:17.609><c> size</c><00:00:18.029><c> and</c><00:00:18.600><c> it</c>

00:00:19.340 --> 00:00:19.350 align:start position:0%
new method called iterative size and it
 

00:00:19.350 --> 00:00:23.660 align:start position:0%
new method called iterative size and it
is<00:00:19.619><c> going</c><00:00:19.949><c> to</c><00:00:20.630><c> turn</c><00:00:21.630><c> the</c><00:00:22.050><c> size</c><00:00:22.310><c> of</c><00:00:23.310><c> the</c><00:00:23.490><c> list</c>

00:00:23.660 --> 00:00:23.670 align:start position:0%
is going to turn the size of the list
 

00:00:23.670 --> 00:00:28.099 align:start position:0%
is going to turn the size of the list
using<00:00:24.920><c> iteration</c><00:00:25.920><c> or</c><00:00:26.630><c> I'll</c><00:00:27.630><c> just</c><00:00:27.840><c> say</c><00:00:27.960><c> no</c>

00:00:28.099 --> 00:00:28.109 align:start position:0%
using iteration or I'll just say no
 

00:00:28.109 --> 00:00:31.160 align:start position:0%
using iteration or I'll just say no
regression<00:00:28.939><c> and</c><00:00:29.939><c> as</c><00:00:30.090><c> before</c><00:00:30.269><c> I</c><00:00:30.660><c> recommend</c>

00:00:31.160 --> 00:00:31.170 align:start position:0%
regression and as before I recommend
 

00:00:31.170 --> 00:00:32.630 align:start position:0%
regression and as before I recommend
that<00:00:31.230><c> you</c><00:00:31.289><c> try</c><00:00:31.529><c> and</c><00:00:31.619><c> guess</c><00:00:32.099><c> what</c><00:00:32.189><c> I'm</c><00:00:32.369><c> about</c><00:00:32.579><c> to</c>

00:00:32.630 --> 00:00:32.640 align:start position:0%
that you try and guess what I'm about to
 

00:00:32.640 --> 00:00:34.760 align:start position:0%
that you try and guess what I'm about to
do<00:00:32.910><c> and</c><00:00:33.600><c> then</c><00:00:33.780><c> see</c><00:00:33.930><c> how</c><00:00:34.020><c> your</c><00:00:34.200><c> answer</c><00:00:34.440><c> compares</c>

00:00:34.760 --> 00:00:34.770 align:start position:0%
do and then see how your answer compares
 

00:00:34.770 --> 00:00:38.209 align:start position:0%
do and then see how your answer compares
to<00:00:34.890><c> mine</c><00:00:35.300><c> so</c><00:00:36.300><c> in</c><00:00:36.390><c> this</c><00:00:36.480><c> case</c><00:00:36.719><c> a</c><00:00:37.410><c> common</c><00:00:37.860><c> pattern</c>

00:00:38.209 --> 00:00:38.219 align:start position:0%
to mine so in this case a common pattern
 

00:00:38.219 --> 00:00:41.030 align:start position:0%
to mine so in this case a common pattern
is<00:00:38.520><c> to</c><00:00:38.820><c> create</c><00:00:39.149><c> a</c><00:00:39.180><c> pointer</c><00:00:39.690><c> variable</c><00:00:39.980><c> okay</c><00:00:40.980><c> so</c>

00:00:41.030 --> 00:00:41.040 align:start position:0%
is to create a pointer variable okay so
 

00:00:41.040 --> 00:00:43.340 align:start position:0%
is to create a pointer variable okay so
I'm<00:00:41.160><c> gonna</c><00:00:41.250><c> call</c><00:00:41.370><c> it</c><00:00:41.489><c> P</c><00:00:41.870><c> and</c><00:00:42.870><c> I'm</c><00:00:42.989><c> gonna</c><00:00:43.079><c> set</c><00:00:43.260><c> it</c>

00:00:43.340 --> 00:00:43.350 align:start position:0%
I'm gonna call it P and I'm gonna set it
 

00:00:43.350 --> 00:00:45.799 align:start position:0%
I'm gonna call it P and I'm gonna set it
equal<00:00:43.410><c> to</c><00:00:43.680><c> this</c><00:00:43.800><c> and</c><00:00:44.730><c> I'm</c><00:00:45.059><c> also</c><00:00:45.210><c> gonna</c><00:00:45.360><c> set</c><00:00:45.690><c> up</c>

00:00:45.799 --> 00:00:45.809 align:start position:0%
equal to this and I'm also gonna set up
 

00:00:45.809 --> 00:00:49.610 align:start position:0%
equal to this and I'm also gonna set up
a<00:00:45.840><c> total</c><00:00:46.770><c> size</c><00:00:47.270><c> variable</c><00:00:48.270><c> I'm</c><00:00:49.230><c> gonna</c><00:00:49.350><c> set</c><00:00:49.500><c> that</c>

00:00:49.610 --> 00:00:49.620 align:start position:0%
a total size variable I'm gonna set that
 

00:00:49.620 --> 00:00:51.680 align:start position:0%
a total size variable I'm gonna set that
equal<00:00:49.680><c> to</c><00:00:49.920><c> zero</c><00:00:50.190><c> and</c><00:00:50.579><c> then</c><00:00:51.210><c> I'm</c><00:00:51.270><c> gonna</c><00:00:51.390><c> say</c><00:00:51.539><c> as</c>

00:00:51.680 --> 00:00:51.690 align:start position:0%
equal to zero and then I'm gonna say as
 

00:00:51.690 --> 00:00:54.049 align:start position:0%
equal to zero and then I'm gonna say as
long<00:00:51.840><c> as</c><00:00:51.899><c> P</c><00:00:52.199><c> is</c><00:00:52.289><c> not</c><00:00:52.469><c> equal</c><00:00:52.530><c> to</c><00:00:52.890><c> null</c><00:00:53.070><c> I'm</c><00:00:53.820><c> gonna</c>

00:00:54.049 --> 00:00:54.059 align:start position:0%
long as P is not equal to null I'm gonna
 

00:00:54.059 --> 00:00:55.970 align:start position:0%
long as P is not equal to null I'm gonna
do<00:00:54.210><c> the</c><00:00:54.329><c> following</c><00:00:54.629><c> I'm</c><00:00:55.320><c> gonna</c><00:00:55.469><c> say</c><00:00:55.649><c> total</c>

00:00:55.970 --> 00:00:55.980 align:start position:0%
do the following I'm gonna say total
 

00:00:55.980 --> 00:00:58.340 align:start position:0%
do the following I'm gonna say total
size<00:00:56.190><c> plus</c><00:00:57.090><c> equals</c><00:00:57.480><c> 1</c><00:00:57.629><c> so</c><00:00:57.930><c> that's</c><00:00:57.989><c> gonna</c><00:00:58.199><c> get</c>

00:00:58.340 --> 00:00:58.350 align:start position:0%
size plus equals 1 so that's gonna get
 

00:00:58.350 --> 00:01:00.260 align:start position:0%
size plus equals 1 so that's gonna get
one<00:00:58.500><c> larger</c><00:00:58.890><c> and</c><00:00:59.219><c> then</c><00:00:59.460><c> P</c><00:00:59.640><c> is</c><00:00:59.789><c> gonna</c><00:01:00.030><c> be</c><00:01:00.180><c> equal</c>

00:01:00.260 --> 00:01:00.270 align:start position:0%
one larger and then P is gonna be equal
 

00:01:00.270 --> 00:01:03.260 align:start position:0%
one larger and then P is gonna be equal
to<00:01:00.510><c> P</c><00:01:00.750><c> dot</c><00:01:01.140><c> rest</c><00:01:01.410><c> and</c><00:01:01.739><c> in</c><00:01:02.370><c> that</c><00:01:02.520><c> way</c><00:01:02.640><c> P</c><00:01:02.969><c> is</c><00:01:03.090><c> gonna</c>

00:01:03.260 --> 00:01:03.270 align:start position:0%
to P dot rest and in that way P is gonna
 

00:01:03.270 --> 00:01:06.320 align:start position:0%
to P dot rest and in that way P is gonna
step<00:01:03.539><c> along</c><00:01:03.890><c> until</c><00:01:04.890><c> finally</c><00:01:05.309><c> total</c><00:01:06.150><c> size</c><00:01:06.299><c> is</c>

00:01:06.320 --> 00:01:06.330 align:start position:0%
step along until finally total size is
 

00:01:06.330 --> 00:01:11.140 align:start position:0%
step along until finally total size is
returned<00:01:07.490><c> so</c><00:01:08.490><c> let's</c><00:01:08.880><c> try</c><00:01:09.119><c> running</c><00:01:09.330><c> this</c><00:01:09.720><c> code</c>

00:01:11.140 --> 00:01:11.150 align:start position:0%
returned so let's try running this code
 

00:01:11.150 --> 00:01:15.590 align:start position:0%
returned so let's try running this code
this<00:01:12.150><c> won't</c><00:01:12.360><c> test</c><00:01:12.600><c> it</c><00:01:12.750><c> here</c><00:01:13.700><c> it</c><00:01:14.700><c> worked</c><00:01:14.909><c> and</c>

00:01:15.590 --> 00:01:15.600 align:start position:0%
this won't test it here it worked and
 

00:01:15.600 --> 00:01:21.760 align:start position:0%
this won't test it here it worked and
why<00:01:15.960><c> let's</c><00:01:16.830><c> try</c><00:01:17.070><c> doing</c><00:01:17.130><c> it</c><00:01:17.549><c> the</c><00:01:17.700><c> visualization</c>

00:01:21.760 --> 00:01:21.770 align:start position:0%
 
 

00:01:21.770 --> 00:01:24.440 align:start position:0%
 
okay<00:01:22.770><c> so</c><00:01:22.950><c> as</c><00:01:23.070><c> before</c><00:01:23.460><c> we</c><00:01:23.640><c> step</c><00:01:23.880><c> forward</c><00:01:24.090><c> until</c>

00:01:24.440 --> 00:01:24.450 align:start position:0%
okay so as before we step forward until
 

00:01:24.450 --> 00:01:26.030 align:start position:0%
okay so as before we step forward until
we<00:01:24.540><c> get</c><00:01:24.630><c> to</c><00:01:24.750><c> edit</c><00:01:24.960><c> of</c><00:01:25.110><c> size</c><00:01:25.290><c> and</c><00:01:25.770><c> when</c><00:01:25.950><c> that</c>

00:01:26.030 --> 00:01:26.040 align:start position:0%
we get to edit of size and when that
 

00:01:26.040 --> 00:01:27.740 align:start position:0%
we get to edit of size and when that
method<00:01:26.430><c> kicks</c><00:01:26.640><c> off</c><00:01:26.820><c> we're</c><00:01:27.420><c> gonna</c><00:01:27.509><c> say</c><00:01:27.720><c> you</c>

00:01:27.740 --> 00:01:27.750 align:start position:0%
method kicks off we're gonna say you
 

00:01:27.750 --> 00:01:30.789 align:start position:0%
method kicks off we're gonna say you
know<00:01:27.869><c> what</c><00:01:28.080><c> P</c><00:01:28.650><c> is</c><00:01:28.890><c> gonna</c><00:01:29.159><c> be</c><00:01:29.310><c> equal</c><00:01:29.640><c> to</c><00:01:29.790><c> this</c>

00:01:30.789 --> 00:01:30.799 align:start position:0%
know what P is gonna be equal to this
 

00:01:30.799 --> 00:01:32.840 align:start position:0%
know what P is gonna be equal to this
and<00:01:31.799><c> then</c><00:01:31.979><c> I'm</c><00:01:32.040><c> gonna</c><00:01:32.130><c> set</c><00:01:32.340><c> the</c><00:01:32.430><c> total</c><00:01:32.700><c> size</c>

00:01:32.840 --> 00:01:32.850 align:start position:0%
and then I'm gonna set the total size
 

00:01:32.850 --> 00:01:35.330 align:start position:0%
and then I'm gonna set the total size
equal<00:01:33.150><c> to</c><00:01:33.240><c> zero</c><00:01:33.479><c> now</c><00:01:33.689><c> as</c><00:01:34.590><c> long</c><00:01:34.740><c> as</c><00:01:34.799><c> P</c><00:01:35.100><c> is</c><00:01:35.189><c> not</c>

00:01:35.330 --> 00:01:35.340 align:start position:0%
equal to zero now as long as P is not
 

00:01:35.340 --> 00:01:37.520 align:start position:0%
equal to zero now as long as P is not
null<00:01:35.610><c> I'm</c><00:01:36.390><c> gonna</c><00:01:36.570><c> step</c><00:01:36.780><c> through</c><00:01:36.840><c> and</c><00:01:37.259><c> I'm</c>

00:01:37.520 --> 00:01:37.530 align:start position:0%
null I'm gonna step through and I'm
 

00:01:37.530 --> 00:01:39.740 align:start position:0%
null I'm gonna step through and I'm
gonna<00:01:37.650><c> say</c><00:01:37.920><c> if</c><00:01:38.009><c> the</c><00:01:38.130><c> total</c><00:01:38.400><c> size</c><00:01:38.579><c> is</c><00:01:38.820><c> larger</c>

00:01:39.740 --> 00:01:39.750 align:start position:0%
gonna say if the total size is larger
 

00:01:39.750 --> 00:01:42.800 align:start position:0%
gonna say if the total size is larger
and<00:01:40.009><c> P</c><00:01:41.009><c> should</c><00:01:41.280><c> step</c><00:01:41.490><c> forward</c><00:01:41.600><c> can</c><00:01:42.600><c> we</c><00:01:42.630><c> come</c>

00:01:42.800 --> 00:01:42.810 align:start position:0%
and P should step forward can we come
 

00:01:42.810 --> 00:01:44.960 align:start position:0%
and P should step forward can we come
back<00:01:42.840><c> around</c><00:01:43.110><c> total</c><00:01:43.920><c> size</c><00:01:44.070><c> plus</c><00:01:44.490><c> equals</c><00:01:44.820><c> one</c>

00:01:44.960 --> 00:01:44.970 align:start position:0%
back around total size plus equals one
 

00:01:44.970 --> 00:01:48.800 align:start position:0%
back around total size plus equals one
these<00:01:45.630><c> steps</c><00:01:46.500><c> more</c><00:01:46.850><c> okay</c><00:01:47.850><c> finally</c><00:01:48.509><c> P</c><00:01:48.689><c> is</c>

00:01:48.800 --> 00:01:48.810 align:start position:0%
these steps more okay finally P is
 

00:01:48.810 --> 00:01:50.990 align:start position:0%
these steps more okay finally P is
pointing<00:01:49.110><c> at</c><00:01:49.170><c> the</c><00:01:49.259><c> last</c><00:01:49.439><c> item</c><00:01:49.740><c> in</c><00:01:49.860><c> the</c><00:01:49.890><c> list</c><00:01:50.000><c> so</c>

00:01:50.990 --> 00:01:51.000 align:start position:0%
pointing at the last item in the list so
 

00:01:51.000 --> 00:01:53.450 align:start position:0%
pointing at the last item in the list so
we<00:01:51.119><c> could</c><00:01:51.270><c> say</c><00:01:51.479><c> total</c><00:01:51.960><c> size</c><00:01:52.110><c> plus</c><00:01:52.380><c> 1</c><00:01:52.649><c> P</c><00:01:53.189><c> equals</c>

00:01:53.450 --> 00:01:53.460 align:start position:0%
we could say total size plus 1 P equals
 

00:01:53.460 --> 00:01:55.670 align:start position:0%
we could say total size plus 1 P equals
P<00:01:53.490><c> dot</c><00:01:53.759><c> rest</c><00:01:54.000><c> in</c><00:01:54.450><c> which</c><00:01:54.780><c> case</c><00:01:54.990><c> it</c><00:01:55.259><c> will</c><00:01:55.350><c> get</c><00:01:55.470><c> set</c>

00:01:55.670 --> 00:01:55.680 align:start position:0%
P dot rest in which case it will get set
 

00:01:55.680 --> 00:01:57.440 align:start position:0%
P dot rest in which case it will get set
equal<00:01:55.799><c> to</c><00:01:56.040><c> null</c><00:01:56.219><c> and</c><00:01:56.460><c> now</c><00:01:56.880><c> we're</c><00:01:57.030><c> done</c><00:01:57.180><c> and</c>

00:01:57.440 --> 00:01:57.450 align:start position:0%
equal to null and now we're done and
 

00:01:57.450 --> 00:02:00.920 align:start position:0%
equal to null and now we're done and
record<00:01:58.200><c> return</c><00:01:58.770><c> total</c><00:01:59.009><c> size</c><00:01:59.450><c> now</c><00:02:00.450><c> you</c><00:02:00.509><c> could</c>

00:02:00.920 --> 00:02:00.930 align:start position:0%
record return total size now you could
 

00:02:00.930 --> 00:02:02.840 align:start position:0%
record return total size now you could
do<00:02:01.140><c> something</c><00:02:01.619><c> where</c><00:02:01.860><c> you</c><00:02:02.189><c> start</c><00:02:02.549><c> the</c><00:02:02.670><c> size</c>

00:02:02.840 --> 00:02:02.850 align:start position:0%
do something where you start the size
 

00:02:02.850 --> 00:02:04.880 align:start position:0%
do something where you start the size
off<00:02:03.060><c> at</c><00:02:03.240><c> 1</c><00:02:03.420><c> and</c><00:02:03.780><c> you</c><00:02:03.840><c> instead</c><00:02:04.140><c> check</c><00:02:04.409><c> P</c><00:02:04.710><c> dot</c>

00:02:04.880 --> 00:02:04.890 align:start position:0%
off at 1 and you instead check P dot
 

00:02:04.890 --> 00:02:06.499 align:start position:0%
off at 1 and you instead check P dot
rest<00:02:05.159><c> is</c><00:02:05.340><c> not</c><00:02:05.490><c> equal</c><00:02:05.729><c> to</c><00:02:05.759><c> null</c><00:02:06.000><c> either</c>

00:02:06.499 --> 00:02:06.509 align:start position:0%
rest is not equal to null either
 

00:02:06.509 --> 00:02:08.180 align:start position:0%
rest is not equal to null either
approach<00:02:06.869><c> is</c><00:02:07.020><c> fine</c><00:02:07.229><c> this</c><00:02:07.680><c> is</c><00:02:07.740><c> just</c><00:02:07.979><c> the</c><00:02:08.039><c> one</c><00:02:08.160><c> I</c>

00:02:08.180 --> 00:02:08.190 align:start position:0%
approach is fine this is just the one I
 

00:02:08.190 --> 00:02:10.369 align:start position:0%
approach is fine this is just the one I
happen<00:02:08.399><c> to</c><00:02:08.580><c> affect</c><00:02:08.910><c> and</c><00:02:09.629><c> that</c><00:02:09.869><c> will</c><00:02:10.140><c> give</c><00:02:10.259><c> us</c>

00:02:10.369 --> 00:02:10.379 align:start position:0%
happen to affect and that will give us
 

00:02:10.379 --> 00:02:11.059 align:start position:0%
happen to affect and that will give us
an<00:02:10.590><c> iterative</c>

00:02:11.059 --> 00:02:11.069 align:start position:0%
an iterative
 

00:02:11.069 --> 00:02:13.999 align:start position:0%
an iterative
sighs<00:02:11.430><c> method</c>

