WEBVTT
Kind: captions
Language: en

00:00:00.030 --> 00:00:02.780 align:start position:0%
 
our<00:00:01.020><c> last</c><00:00:01.260><c> totally</c><00:00:01.740><c> random</c><00:00:02.100><c> topic</c><00:00:02.429><c> of</c><00:00:02.550><c> the</c><00:00:02.639><c> day</c>

00:00:02.780 --> 00:00:02.790 align:start position:0%
our last totally random topic of the day
 

00:00:02.790 --> 00:00:04.100 align:start position:0%
our last totally random topic of the day
before<00:00:02.850><c> we</c><00:00:03.210><c> move</c><00:00:03.360><c> on</c><00:00:03.480><c> to</c><00:00:03.629><c> the</c><00:00:03.720><c> main</c><00:00:03.870><c> narrative</c>

00:00:04.100 --> 00:00:04.110 align:start position:0%
before we move on to the main narrative
 

00:00:04.110 --> 00:00:06.800 align:start position:0%
before we move on to the main narrative
and<00:00:04.680><c> we'll</c><00:00:04.799><c> be</c><00:00:04.920><c> immutability</c><00:00:05.629><c> so</c><00:00:06.629><c> what</c><00:00:06.720><c> is</c>

00:00:06.800 --> 00:00:06.810 align:start position:0%
and we'll be immutability so what is
 

00:00:06.810 --> 00:00:09.290 align:start position:0%
and we'll be immutability so what is
immutability<00:00:07.200><c> it's</c><00:00:08.160><c> a</c><00:00:08.280><c> concept</c><00:00:08.730><c> that</c><00:00:09.000><c> we</c>

00:00:09.290 --> 00:00:09.300 align:start position:0%
immutability it's a concept that we
 

00:00:09.300 --> 00:00:11.600 align:start position:0%
immutability it's a concept that we
applied<00:00:09.599><c> to</c><00:00:09.630><c> specific</c><00:00:09.900><c> types</c><00:00:10.530><c> and</c><00:00:11.219><c> will</c><00:00:11.400><c> say</c>

00:00:11.600 --> 00:00:11.610 align:start position:0%
applied to specific types and will say
 

00:00:11.610 --> 00:00:13.700 align:start position:0%
applied to specific types and will say
that<00:00:11.790><c> a</c><00:00:11.820><c> type</c><00:00:12.120><c> is</c><00:00:12.330><c> immutable</c><00:00:12.599><c> if</c><00:00:13.110><c> when</c><00:00:13.620><c> you</c>

00:00:13.700 --> 00:00:13.710 align:start position:0%
that a type is immutable if when you
 

00:00:13.710 --> 00:00:15.350 align:start position:0%
that a type is immutable if when you
instantiate<00:00:14.009><c> something</c><00:00:14.700><c> of</c><00:00:14.820><c> that</c><00:00:14.849><c> type</c><00:00:15.150><c> it</c>

00:00:15.350 --> 00:00:15.360 align:start position:0%
instantiate something of that type it
 

00:00:15.360 --> 00:00:18.560 align:start position:0%
instantiate something of that type it
can<00:00:15.509><c> never</c><00:00:15.690><c> change</c><00:00:16.080><c> no</c><00:00:16.440><c> matter</c><00:00:16.470><c> what</c><00:00:16.830><c> so</c><00:00:17.699><c> as</c><00:00:17.970><c> an</c>

00:00:18.560 --> 00:00:18.570 align:start position:0%
can never change no matter what so as an
 

00:00:18.570 --> 00:00:21.290 align:start position:0%
can never change no matter what so as an
example<00:00:18.660><c> of</c><00:00:19.140><c> some</c><00:00:19.619><c> mutable</c><00:00:20.460><c> things</c><00:00:20.699><c> let's</c><00:00:21.150><c> say</c>

00:00:21.290 --> 00:00:21.300 align:start position:0%
example of some mutable things let's say
 

00:00:21.300 --> 00:00:23.359 align:start position:0%
example of some mutable things let's say
an<00:00:21.539><c> array</c><00:00:21.720><c> deck</c><00:00:21.900><c> so</c><00:00:22.590><c> an</c><00:00:22.680><c> array</c><00:00:22.859><c> deck</c><00:00:23.070><c> when</c><00:00:23.279><c> you</c>

00:00:23.359 --> 00:00:23.369 align:start position:0%
an array deck so an array deck when you
 

00:00:23.369 --> 00:00:23.900 align:start position:0%
an array deck so an array deck when you
make<00:00:23.519><c> one</c>

00:00:23.900 --> 00:00:23.910 align:start position:0%
make one
 

00:00:23.910 --> 00:00:25.490 align:start position:0%
make one
it<00:00:24.029><c> is</c><00:00:24.150><c> certainly</c><00:00:24.420><c> mutable</c><00:00:24.840><c> you</c><00:00:25.199><c> can</c><00:00:25.350><c> add</c>

00:00:25.490 --> 00:00:25.500 align:start position:0%
it is certainly mutable you can add
 

00:00:25.500 --> 00:00:27.830 align:start position:0%
it is certainly mutable you can add
first<00:00:25.800><c> add</c><00:00:26.039><c> last</c><00:00:26.460><c> and</c><00:00:26.730><c> so</c><00:00:26.849><c> forth</c><00:00:27.150><c> planets</c>

00:00:27.830 --> 00:00:27.840 align:start position:0%
first add last and so forth planets
 

00:00:27.840 --> 00:00:30.200 align:start position:0%
first add last and so forth planets
likewise<00:00:28.410><c> are</c><00:00:28.650><c> mutable</c><00:00:29.010><c> their</c><00:00:29.429><c> velocity</c><00:00:30.029><c> can</c>

00:00:30.200 --> 00:00:30.210 align:start position:0%
likewise are mutable their velocity can
 

00:00:30.210 --> 00:00:33.170 align:start position:0%
likewise are mutable their velocity can
change<00:00:30.480><c> their</c><00:00:31.230><c> positions</c><00:00:31.679><c> can</c><00:00:31.920><c> change</c><00:00:32.189><c> but</c>

00:00:33.170 --> 00:00:33.180 align:start position:0%
change their positions can change but
 

00:00:33.180 --> 00:00:35.090 align:start position:0%
change their positions can change but
there<00:00:33.719><c> are</c><00:00:33.809><c> also</c><00:00:33.930><c> other</c><00:00:34.260><c> classes</c><00:00:34.739><c> which</c><00:00:34.920><c> are</c>

00:00:35.090 --> 00:00:35.100 align:start position:0%
there are also other classes which are
 

00:00:35.100 --> 00:00:37.670 align:start position:0%
there are also other classes which are
fully<00:00:35.309><c> immutable</c><00:00:36.059><c> so</c><00:00:36.690><c> for</c><00:00:36.809><c> example</c><00:00:37.170><c> integers</c>

00:00:37.670 --> 00:00:37.680 align:start position:0%
fully immutable so for example integers
 

00:00:37.680 --> 00:00:39.950 align:start position:0%
fully immutable so for example integers
are<00:00:37.829><c> immutable</c><00:00:38.070><c> once</c><00:00:38.700><c> you</c><00:00:38.850><c> create</c><00:00:39.540><c> an</c><00:00:39.690><c> integer</c>

00:00:39.950 --> 00:00:39.960 align:start position:0%
are immutable once you create an integer
 

00:00:39.960 --> 00:00:41.630 align:start position:0%
are immutable once you create an integer
once<00:00:40.230><c> you</c><00:00:40.320><c> wrap</c><00:00:40.469><c> an</c><00:00:40.649><c> integer</c><00:00:40.890><c> in</c><00:00:41.129><c> it</c><00:00:41.280><c> that</c>

00:00:41.630 --> 00:00:41.640 align:start position:0%
once you wrap an integer in it that
 

00:00:41.640 --> 00:00:43.430 align:start position:0%
once you wrap an integer in it that
integer<00:00:41.910><c> inside</c><00:00:42.390><c> that</c><00:00:42.600><c> wrapper</c><00:00:42.840><c> can</c><00:00:43.230><c> never</c>

00:00:43.430 --> 00:00:43.440 align:start position:0%
integer inside that wrapper can never
 

00:00:43.440 --> 00:00:45.619 align:start position:0%
integer inside that wrapper can never
change<00:00:43.530><c> as</c><00:00:44.520><c> maybe</c><00:00:44.789><c> a</c><00:00:44.879><c> more</c><00:00:45.090><c> specific</c><00:00:45.300><c> example</c>

00:00:45.619 --> 00:00:45.629 align:start position:0%
change as maybe a more specific example
 

00:00:45.629 --> 00:00:48.619 align:start position:0%
change as maybe a more specific example
that's<00:00:46.140><c> not</c><00:00:46.260><c> too</c><00:00:47.219><c> simple</c><00:00:47.430><c> let's</c><00:00:48.329><c> think</c><00:00:48.480><c> about</c>

00:00:48.619 --> 00:00:48.629 align:start position:0%
that's not too simple let's think about
 

00:00:48.629 --> 00:00:50.779 align:start position:0%
that's not too simple let's think about
the<00:00:48.870><c> date</c><00:00:49.050><c> class</c><00:00:49.320><c> so</c><00:00:50.250><c> it's</c><00:00:50.370><c> just</c><00:00:50.460><c> a</c><00:00:50.579><c> class</c>

00:00:50.779 --> 00:00:50.789 align:start position:0%
the date class so it's just a class
 

00:00:50.789 --> 00:00:53.119 align:start position:0%
the date class so it's just a class
actor<00:00:51.120><c> together</c><00:00:51.449><c> it</c><00:00:51.899><c> has</c><00:00:52.050><c> three</c><00:00:52.469><c> int</c><00:00:52.649><c> fields</c>

00:00:53.119 --> 00:00:53.129 align:start position:0%
actor together it has three int fields
 

00:00:53.129 --> 00:00:55.100 align:start position:0%
actor together it has three int fields
that<00:00:53.219><c> are</c><00:00:53.340><c> all</c><00:00:53.430><c> declared</c><00:00:53.789><c> as</c><00:00:53.910><c> public</c><00:00:54.059><c> final</c><00:00:54.539><c> it</c>

00:00:55.100 --> 00:00:55.110 align:start position:0%
that are all declared as public final it
 

00:00:55.110 --> 00:00:56.479 align:start position:0%
that are all declared as public final it
has<00:00:55.230><c> a</c><00:00:55.260><c> private</c><00:00:55.530><c> boolean</c><00:00:55.980><c> that's</c><00:00:56.250><c> called</c>

00:00:56.479 --> 00:00:56.489 align:start position:0%
has a private boolean that's called
 

00:00:56.489 --> 00:00:58.939 align:start position:0%
has a private boolean that's called
contrived<00:00:57.149><c> since</c><00:00:58.020><c> this</c><00:00:58.140><c> is</c><00:00:58.320><c> a</c><00:00:58.350><c> very</c><00:00:58.530><c> contrived</c>

00:00:58.939 --> 00:00:58.949 align:start position:0%
contrived since this is a very contrived
 

00:00:58.949 --> 00:01:02.209 align:start position:0%
contrived since this is a very contrived
class<00:00:59.280><c> and</c><00:00:59.640><c> it</c><00:01:00.180><c> has</c><00:01:00.300><c> a</c><00:01:00.329><c> constructor</c><00:01:00.809><c> so</c><00:01:01.710><c> once</c>

00:01:02.209 --> 00:01:02.219 align:start position:0%
class and it has a constructor so once
 

00:01:02.219 --> 00:01:04.490 align:start position:0%
class and it has a constructor so once
you<00:01:02.370><c> make</c><00:01:02.579><c> a</c><00:01:02.609><c> date</c><00:01:02.940><c> there's</c><00:01:03.600><c> nothing</c><00:01:04.110><c> you</c><00:01:04.290><c> can</c>

00:01:04.490 --> 00:01:04.500 align:start position:0%
you make a date there's nothing you can
 

00:01:04.500 --> 00:01:07.370 align:start position:0%
you make a date there's nothing you can
do<00:01:04.680><c> to</c><00:01:05.010><c> ever</c><00:01:05.220><c> change</c><00:01:05.670><c> any</c><00:01:05.970><c> aspect</c><00:01:06.450><c> of</c><00:01:06.600><c> it</c><00:01:06.750><c> so</c><00:01:07.320><c> if</c>

00:01:07.370 --> 00:01:07.380 align:start position:0%
do to ever change any aspect of it so if
 

00:01:07.380 --> 00:01:09.350 align:start position:0%
do to ever change any aspect of it so if
we<00:01:07.470><c> look</c><00:01:07.650><c> at</c><00:01:07.740><c> this</c><00:01:07.890><c> date</c><00:01:08.130><c> class</c><00:01:08.430><c> all</c><00:01:08.939><c> of</c><00:01:09.210><c> these</c>

00:01:09.350 --> 00:01:09.360 align:start position:0%
we look at this date class all of these
 

00:01:09.360 --> 00:01:11.030 align:start position:0%
we look at this date class all of these
variables<00:01:09.869><c> are</c><00:01:09.930><c> declared</c><00:01:09.990><c> final</c><00:01:10.530><c> and</c><00:01:10.860><c> as</c><00:01:11.010><c> a</c>

00:01:11.030 --> 00:01:11.040 align:start position:0%
variables are declared final and as a
 

00:01:11.040 --> 00:01:12.770 align:start position:0%
variables are declared final and as a
reminder<00:01:11.220><c> that</c><00:01:11.850><c> means</c><00:01:12.000><c> you</c><00:01:12.119><c> cannot</c><00:01:12.420><c> reset</c>

00:01:12.770 --> 00:01:12.780 align:start position:0%
reminder that means you cannot reset
 

00:01:12.780 --> 00:01:14.660 align:start position:0%
reminder that means you cannot reset
them<00:01:12.990><c> so</c><00:01:13.680><c> even</c><00:01:13.830><c> though</c><00:01:14.070><c> they're</c><00:01:14.220><c> public</c><00:01:14.549><c> an</c>

00:01:14.660 --> 00:01:14.670 align:start position:0%
them so even though they're public an
 

00:01:14.670 --> 00:01:17.810 align:start position:0%
them so even though they're public an
outsider<00:01:15.210><c> who</c><00:01:15.420><c> says</c><00:01:15.630><c> new</c><00:01:15.840><c> date</c><00:01:16.080><c> cannot</c><00:01:16.740><c> say</c><00:01:16.979><c> my</c>

00:01:17.810 --> 00:01:17.820 align:start position:0%
outsider who says new date cannot say my
 

00:01:17.820 --> 00:01:19.520 align:start position:0%
outsider who says new date cannot say my
date<00:01:18.060><c> dot</c><00:01:18.330><c> month</c><00:01:18.570><c> equals</c><00:01:18.750><c> five</c><00:01:19.140><c> or</c><00:01:19.409><c> something</c>

00:01:19.520 --> 00:01:19.530 align:start position:0%
date dot month equals five or something
 

00:01:19.530 --> 00:01:21.520 align:start position:0%
date dot month equals five or something
it<00:01:19.890><c> will</c><00:01:20.009><c> not</c><00:01:20.189><c> work</c><00:01:20.340><c> the</c><00:01:20.700><c> compiler</c><00:01:21.090><c> will</c><00:01:21.240><c> yell</c>

00:01:21.520 --> 00:01:21.530 align:start position:0%
it will not work the compiler will yell
 

00:01:21.530 --> 00:01:24.770 align:start position:0%
it will not work the compiler will yell
likewise<00:01:22.560><c> contrived</c><00:01:23.310><c> even</c><00:01:24.090><c> though</c><00:01:24.270><c> it</c><00:01:24.479><c> is</c><00:01:24.570><c> not</c>

00:01:24.770 --> 00:01:24.780 align:start position:0%
likewise contrived even though it is not
 

00:01:24.780 --> 00:01:26.810 align:start position:0%
likewise contrived even though it is not
final<00:01:25.140><c> there's</c><00:01:25.650><c> no</c><00:01:25.860><c> code</c><00:01:26.130><c> inside</c><00:01:26.490><c> the</c><00:01:26.640><c> date</c>

00:01:26.810 --> 00:01:26.820 align:start position:0%
final there's no code inside the date
 

00:01:26.820 --> 00:01:29.330 align:start position:0%
final there's no code inside the date
class<00:01:27.090><c> that</c><00:01:27.330><c> ever</c><00:01:27.479><c> changes</c><00:01:28.080><c> contrived</c><00:01:28.530><c> and</c><00:01:28.799><c> an</c>

00:01:29.330 --> 00:01:29.340 align:start position:0%
class that ever changes contrived and an
 

00:01:29.340 --> 00:01:31.190 align:start position:0%
class that ever changes contrived and an
outsider<00:01:29.790><c> obviously</c><00:01:30.299><c> cannot</c><00:01:30.540><c> access</c><00:01:30.990><c> or</c>

00:01:31.190 --> 00:01:31.200 align:start position:0%
outsider obviously cannot access or
 

00:01:31.200 --> 00:01:33.590 align:start position:0%
outsider obviously cannot access or
change<00:01:31.500><c> it</c><00:01:31.650><c> so</c><00:01:32.250><c> in</c><00:01:32.369><c> this</c><00:01:32.460><c> case</c><00:01:32.670><c> date</c><00:01:33.210><c> is</c><00:01:33.540><c> a</c>

00:01:33.590 --> 00:01:33.600 align:start position:0%
change it so in this case date is a
 

00:01:33.600 --> 00:01:36.200 align:start position:0%
change it so in this case date is a
totally<00:01:34.220><c> immutable</c><00:01:35.220><c> object</c><00:01:35.579><c> there's</c><00:01:35.790><c> no</c><00:01:36.030><c> way</c>

00:01:36.200 --> 00:01:36.210 align:start position:0%
totally immutable object there's no way
 

00:01:36.210 --> 00:01:38.060 align:start position:0%
totally immutable object there's no way
that<00:01:36.570><c> this</c><00:01:36.720><c> date</c><00:01:36.990><c> object</c><00:01:37.409><c> will</c><00:01:37.619><c> ever</c><00:01:37.799><c> do</c>

00:01:38.060 --> 00:01:38.070 align:start position:0%
that this date object will ever do
 

00:01:38.070 --> 00:01:40.370 align:start position:0%
that this date object will ever do
anything<00:01:38.549><c> different</c><00:01:39.229><c> another</c><00:01:40.229><c> example</c>

00:01:40.370 --> 00:01:40.380 align:start position:0%
anything different another example
 

00:01:40.380 --> 00:01:43.219 align:start position:0%
anything different another example
strings<00:01:41.130><c> in</c><00:01:41.430><c> Java</c><00:01:41.700><c> so</c><00:01:42.479><c> it</c><00:01:42.540><c> turns</c><00:01:42.720><c> out</c><00:01:42.840><c> in</c><00:01:42.990><c> Java</c>

00:01:43.219 --> 00:01:43.229 align:start position:0%
strings in Java so it turns out in Java
 

00:01:43.229 --> 00:01:44.810 align:start position:0%
strings in Java so it turns out in Java
that<00:01:43.350><c> when</c><00:01:43.649><c> you</c><00:01:43.740><c> create</c><00:01:43.950><c> a</c><00:01:44.040><c> string</c><00:01:44.340><c> it</c><00:01:44.729><c> will</c>

00:01:44.810 --> 00:01:44.820 align:start position:0%
that when you create a string it will
 

00:01:44.820 --> 00:01:47.600 align:start position:0%
that when you create a string it will
never<00:01:45.119><c> change</c><00:01:45.380><c> so</c><00:01:46.380><c> for</c><00:01:46.649><c> example</c><00:01:47.009><c> suppose</c><00:01:47.340><c> you</c>

00:01:47.600 --> 00:01:47.610 align:start position:0%
never change so for example suppose you
 

00:01:47.610 --> 00:01:48.830 align:start position:0%
never change so for example suppose you
have<00:01:47.640><c> a</c><00:01:47.759><c> string</c><00:01:48.030><c> and</c><00:01:48.180><c> you</c><00:01:48.240><c> want</c><00:01:48.390><c> to</c><00:01:48.450><c> change</c><00:01:48.659><c> one</c>

00:01:48.830 --> 00:01:48.840 align:start position:0%
have a string and you want to change one
 

00:01:48.840 --> 00:01:50.330 align:start position:0%
have a string and you want to change one
letter<00:01:49.049><c> in</c><00:01:49.170><c> the</c><00:01:49.259><c> middle</c><00:01:49.350><c> you</c><00:01:49.799><c> actually</c><00:01:50.070><c> cannot</c>

00:01:50.330 --> 00:01:50.340 align:start position:0%
letter in the middle you actually cannot
 

00:01:50.340 --> 00:01:52.039 align:start position:0%
letter in the middle you actually cannot
do<00:01:50.579><c> that</c><00:01:50.700><c> in</c><00:01:50.909><c> Java</c><00:01:51.149><c> that's</c><00:01:51.630><c> just</c><00:01:51.810><c> not</c><00:01:51.930><c> how</c>

00:01:52.039 --> 00:01:52.049 align:start position:0%
do that in Java that's just not how
 

00:01:52.049 --> 00:01:53.420 align:start position:0%
do that in Java that's just not how
strings<00:01:52.350><c> work</c><00:01:52.439><c> we'll</c><00:01:52.979><c> talk</c><00:01:53.130><c> a</c><00:01:53.159><c> little</c><00:01:53.310><c> more</c>

00:01:53.420 --> 00:01:53.430 align:start position:0%
strings work we'll talk a little more
 

00:01:53.430 --> 00:01:55.609 align:start position:0%
strings work we'll talk a little more
about<00:01:53.670><c> that</c><00:01:53.729><c> in</c><00:01:53.970><c> the</c><00:01:54.030><c> next</c><00:01:54.240><c> slide</c><00:01:54.329><c> so</c><00:01:54.630><c> the</c>

00:01:55.609 --> 00:01:55.619 align:start position:0%
about that in the next slide so the
 

00:01:55.619 --> 00:01:59.179 align:start position:0%
about that in the next slide so the
final<00:01:55.979><c> key</c><00:01:56.189><c> word</c><00:01:56.340><c> is</c><00:01:56.579><c> a</c><00:01:56.759><c> handy</c><00:01:57.299><c> idea</c><00:01:58.070><c> what</c><00:01:59.070><c> it</c>

00:01:59.179 --> 00:01:59.189 align:start position:0%
final key word is a handy idea what it
 

00:01:59.189 --> 00:02:00.830 align:start position:0%
final key word is a handy idea what it
does<00:01:59.219><c> for</c><00:01:59.520><c> you</c><00:01:59.640><c> is</c><00:01:59.820><c> it</c><00:01:59.850><c> helps</c><00:02:00.240><c> the</c><00:02:00.299><c> it</c><00:02:00.689><c> makes</c>

00:02:00.830 --> 00:02:00.840 align:start position:0%
does for you is it helps the it makes
 

00:02:00.840 --> 00:02:02.810 align:start position:0%
does for you is it helps the it makes
the<00:02:00.990><c> compiler</c><00:02:01.439><c> enforce</c><00:02:01.860><c> the</c><00:02:02.460><c> fact</c><00:02:02.670><c> that</c>

00:02:02.810 --> 00:02:02.820 align:start position:0%
the compiler enforce the fact that
 

00:02:02.820 --> 00:02:04.850 align:start position:0%
the compiler enforce the fact that
something<00:02:03.000><c> cannot</c><00:02:03.450><c> change</c><00:02:03.750><c> but</c><00:02:04.500><c> I</c><00:02:04.560><c> will</c><00:02:04.710><c> note</c>

00:02:04.850 --> 00:02:04.860 align:start position:0%
something cannot change but I will note
 

00:02:04.860 --> 00:02:06.139 align:start position:0%
something cannot change but I will note
that<00:02:05.040><c> it</c><00:02:05.130><c> is</c><00:02:05.159><c> neither</c><00:02:05.430><c> necessary</c><00:02:05.729><c> nor</c>

00:02:06.139 --> 00:02:06.149 align:start position:0%
that it is neither necessary nor
 

00:02:06.149 --> 00:02:09.260 align:start position:0%
that it is neither necessary nor
sufficient<00:02:06.450><c> to</c><00:02:07.259><c> get</c><00:02:07.409><c> immutability</c><00:02:08.090><c> all</c><00:02:09.090><c> it</c>

00:02:09.260 --> 00:02:09.270 align:start position:0%
sufficient to get immutability all it
 

00:02:09.270 --> 00:02:10.940 align:start position:0%
sufficient to get immutability all it
means<00:02:09.479><c> is</c><00:02:09.690><c> that</c><00:02:09.720><c> once</c><00:02:10.319><c> you</c><00:02:10.440><c> assign</c><00:02:10.679><c> a</c><00:02:10.739><c> value</c>

00:02:10.940 --> 00:02:10.950 align:start position:0%
means is that once you assign a value
 

00:02:10.950 --> 00:02:12.840 align:start position:0%
means is that once you assign a value
you'll<00:02:11.489><c> never</c><00:02:11.730><c> change</c><00:02:12.030><c> it</c><00:02:12.209><c> ever</c><00:02:12.360><c> again</c>

00:02:12.840 --> 00:02:12.850 align:start position:0%
you'll never change it ever again
 

00:02:12.850 --> 00:02:16.560 align:start position:0%
you'll never change it ever again
but<00:02:13.660><c> if</c><00:02:14.350><c> you</c><00:02:15.160><c> look</c><00:02:15.370><c> at</c><00:02:15.490><c> date</c><00:02:15.670><c> for</c><00:02:15.880><c> example</c><00:02:15.970><c> and</c>

00:02:16.560 --> 00:02:16.570 align:start position:0%
but if you look at date for example and
 

00:02:16.570 --> 00:02:18.090 align:start position:0%
but if you look at date for example and
we<00:02:16.660><c> just</c><00:02:16.840><c> made</c><00:02:16.960><c> all</c><00:02:17.140><c> of</c><00:02:17.170><c> these</c><00:02:17.380><c> private</c><00:02:17.860><c> it</c>

00:02:18.090 --> 00:02:18.100 align:start position:0%
we just made all of these private it
 

00:02:18.100 --> 00:02:19.740 align:start position:0%
we just made all of these private it
would<00:02:18.220><c> still</c><00:02:18.490><c> be</c><00:02:18.520><c> immutable</c><00:02:18.940><c> even</c><00:02:19.510><c> with</c><00:02:19.630><c> that</c>

00:02:19.740 --> 00:02:19.750 align:start position:0%
would still be immutable even with that
 

00:02:19.750 --> 00:02:22.440 align:start position:0%
would still be immutable even with that
final<00:02:20.020><c> yeah</c><00:02:20.440><c> so</c><00:02:21.100><c> basically</c><00:02:21.430><c> the</c><00:02:21.700><c> big</c><00:02:22.090><c> picture</c>

00:02:22.440 --> 00:02:22.450 align:start position:0%
final yeah so basically the big picture
 

00:02:22.450 --> 00:02:25.590 align:start position:0%
final yeah so basically the big picture
with<00:02:22.840><c> the</c><00:02:22.960><c> mutability</c><00:02:23.320><c> is</c><00:02:23.650><c> it</c><00:02:23.800><c> means</c><00:02:23.980><c> that</c><00:02:24.600><c> the</c>

00:02:25.590 --> 00:02:25.600 align:start position:0%
with the mutability is it means that the
 

00:02:25.600 --> 00:02:27.060 align:start position:0%
with the mutability is it means that the
object<00:02:25.750><c> once</c><00:02:26.350><c> it's</c><00:02:26.530><c> created</c>

00:02:27.060 --> 00:02:27.070 align:start position:0%
object once it's created
 

00:02:27.070 --> 00:02:28.830 align:start position:0%
object once it's created
there's<00:02:27.280><c> no</c><00:02:27.460><c> detectable</c><00:02:28.030><c> way</c><00:02:28.300><c> to</c><00:02:28.600><c> change</c>

00:02:28.830 --> 00:02:28.840 align:start position:0%
there's no detectable way to change
 

00:02:28.840 --> 00:02:30.930 align:start position:0%
there's no detectable way to change
anything<00:02:29.200><c> inside</c><00:02:29.770><c> of</c><00:02:29.920><c> it</c><00:02:30.010><c> so</c><00:02:30.670><c> that</c><00:02:30.790><c> could</c><00:02:30.910><c> be</c>

00:02:30.930 --> 00:02:30.940 align:start position:0%
anything inside of it so that could be
 

00:02:30.940 --> 00:02:33.180 align:start position:0%
anything inside of it so that could be
handy<00:02:31.300><c> for</c><00:02:31.330><c> example</c><00:02:31.810><c> in</c><00:02:31.900><c> project</c><00:02:32.320><c> 2</c><00:02:32.440><c> you</c><00:02:33.070><c> may</c>

00:02:33.180 --> 00:02:33.190 align:start position:0%
handy for example in project 2 you may
 

00:02:33.190 --> 00:02:35.510 align:start position:0%
handy for example in project 2 you may
have<00:02:33.340><c> some</c><00:02:33.550><c> classes</c><00:02:34.000><c> that</c><00:02:34.150><c> you</c><00:02:34.540><c> decide</c><00:02:34.900><c> well</c>

00:02:35.510 --> 00:02:35.520 align:start position:0%
have some classes that you decide well
 

00:02:35.520 --> 00:02:37.650 align:start position:0%
have some classes that you decide well
once<00:02:36.520><c> I</c><00:02:36.670><c> make</c><00:02:36.850><c> one</c><00:02:37.030><c> of</c><00:02:37.120><c> these</c><00:02:37.240><c> things</c><00:02:37.420><c> that</c><00:02:37.570><c> can</c>

00:02:37.650 --> 00:02:37.660 align:start position:0%
once I make one of these things that can
 

00:02:37.660 --> 00:02:39.390 align:start position:0%
once I make one of these things that can
never<00:02:37.840><c> change</c><00:02:37.990><c> and</c><00:02:38.530><c> that</c><00:02:38.860><c> just</c><00:02:39.070><c> helps</c>

00:02:39.390 --> 00:02:39.400 align:start position:0%
never change and that just helps
 

00:02:39.400 --> 00:02:42.600 align:start position:0%
never change and that just helps
simplify<00:02:39.700><c> your</c><00:02:40.330><c> reasoning</c><00:02:40.780><c> so</c><00:02:41.440><c> as</c><00:02:42.010><c> far</c><00:02:42.280><c> as</c><00:02:42.340><c> the</c>

00:02:42.600 --> 00:02:42.610 align:start position:0%
simplify your reasoning so as far as the
 

00:02:42.610 --> 00:02:44.130 align:start position:0%
simplify your reasoning so as far as the
advantages<00:02:43.240><c> this</c><00:02:43.390><c> goes</c><00:02:43.600><c> that's</c><00:02:43.780><c> the</c><00:02:43.960><c> main</c>

00:02:44.130 --> 00:02:44.140 align:start position:0%
advantages this goes that's the main
 

00:02:44.140 --> 00:02:46.170 align:start position:0%
advantages this goes that's the main
thing<00:02:44.320><c> it</c><00:02:44.590><c> it</c><00:02:44.890><c> avoids</c><00:02:45.400><c> certain</c><00:02:45.730><c> types</c><00:02:45.910><c> of</c><00:02:46.030><c> bugs</c>

00:02:46.170 --> 00:02:46.180 align:start position:0%
thing it it avoids certain types of bugs
 

00:02:46.180 --> 00:02:48.180 align:start position:0%
thing it it avoids certain types of bugs
it<00:02:46.390><c> makes</c><00:02:46.540><c> debugging</c><00:02:47.020><c> easier</c><00:02:47.320><c> it</c><00:02:47.740><c> constrains</c>

00:02:48.180 --> 00:02:48.190 align:start position:0%
it makes debugging easier it constrains
 

00:02:48.190 --> 00:02:49.440 align:start position:0%
it makes debugging easier it constrains
the<00:02:48.460><c> set</c><00:02:48.640><c> of</c><00:02:48.730><c> things</c><00:02:48.910><c> you</c><00:02:49.030><c> need</c><00:02:49.150><c> to</c><00:02:49.300><c> worry</c>

00:02:49.440 --> 00:02:49.450 align:start position:0%
the set of things you need to worry
 

00:02:49.450 --> 00:02:53.070 align:start position:0%
the set of things you need to worry
about<00:02:49.540><c> so</c><00:02:50.470><c> for</c><00:02:50.920><c> example</c><00:02:51.340><c> like</c><00:02:51.820><c> this</c><00:02:52.390><c> mug</c><00:02:52.690><c> right</c>

00:02:53.070 --> 00:02:53.080 align:start position:0%
about so for example like this mug right
 

00:02:53.080 --> 00:02:55.200 align:start position:0%
about so for example like this mug right
I'm<00:02:53.800><c> not</c><00:02:54.160><c> worried</c><00:02:54.430><c> that</c><00:02:54.490><c> it's</c><00:02:54.610><c> gonna</c><00:02:54.760><c> suddenly</c>

00:02:55.200 --> 00:02:55.210 align:start position:0%
I'm not worried that it's gonna suddenly
 

00:02:55.210 --> 00:02:56.880 align:start position:0%
I'm not worried that it's gonna suddenly
turn<00:02:55.420><c> into</c><00:02:55.450><c> lava</c><00:02:55.870><c> it's</c><00:02:56.200><c> just</c><00:02:56.380><c> not</c><00:02:56.500><c> on</c><00:02:56.620><c> a</c><00:02:56.650><c> list</c>

00:02:56.880 --> 00:02:56.890 align:start position:0%
turn into lava it's just not on a list
 

00:02:56.890 --> 00:02:58.620 align:start position:0%
turn into lava it's just not on a list
of<00:02:56.980><c> things</c><00:02:57.130><c> to</c><00:02:57.370><c> do</c><00:02:57.520><c> so</c><00:02:58.000><c> I</c><00:02:58.030><c> don't</c><00:02:58.150><c> have</c><00:02:58.330><c> to</c><00:02:58.480><c> hold</c>

00:02:58.620 --> 00:02:58.630 align:start position:0%
of things to do so I don't have to hold
 

00:02:58.630 --> 00:03:00.450 align:start position:0%
of things to do so I don't have to hold
this<00:02:59.170><c> mug</c><00:02:59.410><c> with</c><00:02:59.590><c> a</c><00:02:59.620><c> pair</c><00:02:59.860><c> of</c><00:02:59.890><c> gloves</c><00:03:00.130><c> in</c><00:03:00.370><c> order</c>

00:03:00.450 --> 00:03:00.460 align:start position:0%
this mug with a pair of gloves in order
 

00:03:00.460 --> 00:03:02.540 align:start position:0%
this mug with a pair of gloves in order
to<00:03:00.670><c> use</c><00:03:00.790><c> it</c><00:03:00.970><c> and</c><00:03:01.150><c> likewise</c><00:03:01.780><c> with</c><00:03:01.960><c> a</c><00:03:02.020><c> string</c>

00:03:02.540 --> 00:03:02.550 align:start position:0%
to use it and likewise with a string
 

00:03:02.550 --> 00:03:05.120 align:start position:0%
to use it and likewise with a string
whenever<00:03:03.550><c> you</c><00:03:03.640><c> give</c><00:03:03.820><c> a</c><00:03:03.850><c> string</c><00:03:04.180><c> to</c><00:03:04.390><c> a</c><00:03:04.420><c> function</c>

00:03:05.120 --> 00:03:05.130 align:start position:0%
whenever you give a string to a function
 

00:03:05.130 --> 00:03:08.220 align:start position:0%
whenever you give a string to a function
you<00:03:06.130><c> can</c><00:03:06.340><c> do</c><00:03:06.430><c> whatever</c><00:03:06.610><c> at</c><00:03:06.820><c> once</c><00:03:07.000><c> and</c><00:03:07.330><c> you</c><00:03:08.050><c> know</c>

00:03:08.220 --> 00:03:08.230 align:start position:0%
you can do whatever at once and you know
 

00:03:08.230 --> 00:03:10.230 align:start position:0%
you can do whatever at once and you know
that<00:03:08.440><c> once</c><00:03:08.590><c> that</c><00:03:09.100><c> function</c><00:03:09.490><c> finishes</c><00:03:09.910><c> running</c>

00:03:10.230 --> 00:03:10.240 align:start position:0%
that once that function finishes running
 

00:03:10.240 --> 00:03:11.880 align:start position:0%
that once that function finishes running
that<00:03:10.630><c> your</c><00:03:10.750><c> string</c><00:03:11.020><c> is</c><00:03:11.050><c> exactly</c><00:03:11.560><c> how</c><00:03:11.680><c> it</c><00:03:11.770><c> was</c>

00:03:11.880 --> 00:03:11.890 align:start position:0%
that your string is exactly how it was
 

00:03:11.890 --> 00:03:13.050 align:start position:0%
that your string is exactly how it was
because<00:03:12.250><c> you</c><00:03:12.370><c> know</c><00:03:12.520><c> strings</c><00:03:12.850><c> are</c><00:03:12.970><c> immutable</c>

00:03:13.050 --> 00:03:13.060 align:start position:0%
because you know strings are immutable
 

00:03:13.060 --> 00:03:14.940 align:start position:0%
because you know strings are immutable
they<00:03:13.600><c> cannot</c><00:03:13.900><c> be</c><00:03:14.080><c> touched</c><00:03:14.260><c> they're</c><00:03:14.530><c> perfect</c>

00:03:14.940 --> 00:03:14.950 align:start position:0%
they cannot be touched they're perfect
 

00:03:14.950 --> 00:03:18.960 align:start position:0%
they cannot be touched they're perfect
and<00:03:15.040><c> beautiful</c><00:03:15.810><c> so</c><00:03:16.810><c> the</c><00:03:17.620><c> other</c><00:03:17.830><c> maybe</c><00:03:18.400><c> analogy</c>

00:03:18.960 --> 00:03:18.970 align:start position:0%
and beautiful so the other maybe analogy
 

00:03:18.970 --> 00:03:22.290 align:start position:0%
and beautiful so the other maybe analogy
I<00:03:19.000><c> use</c><00:03:19.210><c> to</c><00:03:19.960><c> take</c><00:03:20.080><c> string</c><00:03:20.700><c> the</c><00:03:21.700><c> string</c><00:03:21.760><c> example</c>

00:03:22.290 --> 00:03:22.300 align:start position:0%
I use to take string the string example
 

00:03:22.300 --> 00:03:24.240 align:start position:0%
I use to take string the string example
even<00:03:22.480><c> further</c><00:03:22.660><c> is</c><00:03:23.200><c> strings</c><00:03:23.800><c> have</c><00:03:23.950><c> a</c><00:03:24.010><c> bunch</c><00:03:24.160><c> of</c>

00:03:24.240 --> 00:03:24.250 align:start position:0%
even further is strings have a bunch of
 

00:03:24.250 --> 00:03:26.130 align:start position:0%
even further is strings have a bunch of
methods<00:03:24.580><c> right</c><00:03:24.790><c> they</c><00:03:24.910><c> have</c><00:03:25.000><c> care</c><00:03:25.270><c> at</c><00:03:25.450><c> compare</c>

00:03:26.130 --> 00:03:26.140 align:start position:0%
methods right they have care at compare
 

00:03:26.140 --> 00:03:29.030 align:start position:0%
methods right they have care at compare
two<00:03:26.320><c> concat</c><00:03:27.010><c> split</c><00:03:27.370><c> so</c><00:03:27.850><c> concatenate</c><00:03:28.390><c> means</c>

00:03:29.030 --> 00:03:29.040 align:start position:0%
two concat split so concatenate means
 

00:03:29.040 --> 00:03:31.170 align:start position:0%
two concat split so concatenate means
concatenate<00:03:30.040><c> with</c><00:03:30.070><c> another</c><00:03:30.430><c> string</c><00:03:30.760><c> split</c>

00:03:31.170 --> 00:03:31.180 align:start position:0%
concatenate with another string split
 

00:03:31.180 --> 00:03:33.270 align:start position:0%
concatenate with another string split
means<00:03:31.450><c> to</c><00:03:31.750><c> split</c><00:03:32.380><c> it</c><00:03:32.470><c> into</c><00:03:32.620><c> a</c><00:03:32.740><c> bunch</c><00:03:32.950><c> of</c><00:03:33.040><c> pieces</c>

00:03:33.270 --> 00:03:33.280 align:start position:0%
means to split it into a bunch of pieces
 

00:03:33.280 --> 00:03:35.130 align:start position:0%
means to split it into a bunch of pieces
separated<00:03:34.060><c> by</c><00:03:34.300><c> this</c><00:03:34.630><c> it</c><00:03:34.870><c> doesn't</c><00:03:35.050><c> really</c>

00:03:35.130 --> 00:03:35.140 align:start position:0%
separated by this it doesn't really
 

00:03:35.140 --> 00:03:37.470 align:start position:0%
separated by this it doesn't really
matter<00:03:35.410><c> but</c><00:03:36.100><c> the</c><00:03:36.220><c> point</c><00:03:36.430><c> is</c><00:03:36.580><c> that</c><00:03:36.790><c> even</c><00:03:37.360><c> if</c><00:03:37.450><c> we</c>

00:03:37.470 --> 00:03:37.480 align:start position:0%
matter but the point is that even if we
 

00:03:37.480 --> 00:03:39.690 align:start position:0%
matter but the point is that even if we
use<00:03:37.720><c> all</c><00:03:37.990><c> these</c><00:03:38.230><c> fancy</c><00:03:38.770><c> features</c><00:03:38.980><c> of</c><00:03:39.370><c> string</c>

00:03:39.690 --> 00:03:39.700 align:start position:0%
use all these fancy features of string
 

00:03:39.700 --> 00:03:42.810 align:start position:0%
use all these fancy features of string
it<00:03:40.150><c> doesn't</c><00:03:40.990><c> affect</c><00:03:41.830><c> the</c><00:03:42.040><c> string</c><00:03:42.310><c> itself</c><00:03:42.580><c> and</c>

00:03:42.810 --> 00:03:42.820 align:start position:0%
it doesn't affect the string itself and
 

00:03:42.820 --> 00:03:44.430 align:start position:0%
it doesn't affect the string itself and
you<00:03:42.880><c> know</c><00:03:43.120><c> that</c><00:03:43.360><c> right</c><00:03:43.660><c> there's</c><00:03:44.080><c> all</c><00:03:44.320><c> these</c>

00:03:44.430 --> 00:03:44.440 align:start position:0%
you know that right there's all these
 

00:03:44.440 --> 00:03:46.710 align:start position:0%
you know that right there's all these
buttons<00:03:44.920><c> you</c><00:03:45.220><c> can</c><00:03:45.250><c> press</c><00:03:45.670><c> and</c><00:03:45.940><c> sometimes</c><00:03:46.540><c> it's</c>

00:03:46.710 --> 00:03:46.720 align:start position:0%
buttons you can press and sometimes it's
 

00:03:46.720 --> 00:03:48.330 align:start position:0%
buttons you can press and sometimes it's
even<00:03:46.840><c> instance</c><00:03:47.350><c> variables</c><00:03:47.770><c> you</c><00:03:47.860><c> can</c><00:03:48.010><c> look</c><00:03:48.190><c> at</c>

00:03:48.330 --> 00:03:48.340 align:start position:0%
even instance variables you can look at
 

00:03:48.340 --> 00:03:50.640 align:start position:0%
even instance variables you can look at
like<00:03:48.580><c> windows</c><00:03:49.060><c> you</c><00:03:49.360><c> can</c><00:03:49.420><c> look</c><00:03:49.690><c> inside</c><00:03:49.840><c> of</c><00:03:50.230><c> but</c>

00:03:50.640 --> 00:03:50.650 align:start position:0%
like windows you can look inside of but
 

00:03:50.650 --> 00:03:53.400 align:start position:0%
like windows you can look inside of but
it<00:03:50.740><c> doesn't</c><00:03:51.040><c> matter</c><00:03:51.190><c> in</c><00:03:51.700><c> a</c><00:03:52.120><c> class</c><00:03:52.960><c> which</c><00:03:53.260><c> we</c>

00:03:53.400 --> 00:03:53.410 align:start position:0%
it doesn't matter in a class which we
 

00:03:53.410 --> 00:03:56.190 align:start position:0%
it doesn't matter in a class which we
call<00:03:53.590><c> immutable</c><00:03:54.040><c> if</c><00:03:54.430><c> the</c><00:03:55.270><c> change</c><00:03:55.570><c> there's</c><00:03:56.050><c> no</c>

00:03:56.190 --> 00:03:56.200 align:start position:0%
call immutable if the change there's no
 

00:03:56.200 --> 00:03:57.930 align:start position:0%
call immutable if the change there's no
change<00:03:56.530><c> inside</c><00:03:57.160><c> the</c><00:03:57.310><c> object</c><00:03:57.700><c> that</c><00:03:57.820><c> could</c>

00:03:57.930 --> 00:03:57.940 align:start position:0%
change inside the object that could
 

00:03:57.940 --> 00:04:00.600 align:start position:0%
change inside the object that could
never<00:03:58.090><c> be</c><00:03:58.240><c> detected</c><00:03:58.840><c> okay</c><00:03:59.110><c> now</c><00:03:59.920><c> the</c><00:03:59.980><c> downsides</c>

00:04:00.600 --> 00:04:00.610 align:start position:0%
never be detected okay now the downsides
 

00:04:00.610 --> 00:04:03.900 align:start position:0%
never be detected okay now the downsides
of<00:04:00.790><c> immutability</c><00:04:01.270><c> is</c><00:04:01.660><c> that</c><00:04:02.410><c> if</c><00:04:03.100><c> you</c><00:04:03.520><c> want</c><00:04:03.820><c> to</c>

00:04:03.900 --> 00:04:03.910 align:start position:0%
of immutability is that if you want to
 

00:04:03.910 --> 00:04:06.150 align:start position:0%
of immutability is that if you want to
actually<00:04:04.180><c> change</c><00:04:04.600><c> something</c><00:04:04.840><c> you</c><00:04:05.080><c> can't</c><00:04:05.350><c> so</c>

00:04:06.150 --> 00:04:06.160 align:start position:0%
actually change something you can't so
 

00:04:06.160 --> 00:04:07.770 align:start position:0%
actually change something you can't so
if<00:04:06.250><c> I</c><00:04:06.340><c> had</c><00:04:06.430><c> the</c><00:04:06.550><c> entire</c><00:04:06.820><c> text</c><00:04:07.090><c> of</c><00:04:07.270><c> Moby</c><00:04:07.450><c> Dick</c>

00:04:07.770 --> 00:04:07.780 align:start position:0%
if I had the entire text of Moby Dick
 

00:04:07.780 --> 00:04:11.250 align:start position:0%
if I had the entire text of Moby Dick
and<00:04:08.020><c> maybe</c><00:04:08.590><c> I</c><00:04:08.680><c> find</c><00:04:09.040><c> that</c><00:04:09.630><c> queequeg's</c><00:04:10.630><c> name</c><00:04:10.990><c> is</c>

00:04:11.250 --> 00:04:11.260 align:start position:0%
and maybe I find that queequeg's name is
 

00:04:11.260 --> 00:04:12.600 align:start position:0%
and maybe I find that queequeg's name is
slightly<00:04:11.500><c> misspelled</c><00:04:12.040><c> somewhere</c><00:04:12.430><c> in</c><00:04:12.520><c> the</c>

00:04:12.600 --> 00:04:12.610 align:start position:0%
slightly misspelled somewhere in the
 

00:04:12.610 --> 00:04:14.370 align:start position:0%
slightly misspelled somewhere in the
middle<00:04:12.850><c> you</c><00:04:13.000><c> need</c><00:04:13.330><c> to</c><00:04:13.420><c> advocate</c><00:04:13.630><c> a</c><00:04:13.960><c> in</c><00:04:14.140><c> there</c>

00:04:14.370 --> 00:04:14.380 align:start position:0%
middle you need to advocate a in there
 

00:04:14.380 --> 00:04:16.740 align:start position:0%
middle you need to advocate a in there
you<00:04:15.250><c> can't</c><00:04:15.520><c> what</c><00:04:16.000><c> you</c><00:04:16.090><c> have</c><00:04:16.180><c> to</c><00:04:16.270><c> do</c><00:04:16.359><c> is</c><00:04:16.450><c> make</c><00:04:16.600><c> an</c>

00:04:16.740 --> 00:04:16.750 align:start position:0%
you can't what you have to do is make an
 

00:04:16.750 --> 00:04:18.840 align:start position:0%
you can't what you have to do is make an
entire<00:04:17.049><c> copy</c><00:04:17.320><c> of</c><00:04:17.530><c> Moby</c><00:04:17.680><c> Dick</c><00:04:17.950><c> again</c><00:04:18.220><c> but</c><00:04:18.730><c> now</c>

00:04:18.840 --> 00:04:18.850 align:start position:0%
entire copy of Moby Dick again but now
 

00:04:18.850 --> 00:04:20.700 align:start position:0%
entire copy of Moby Dick again but now
with<00:04:18.970><c> the</c><00:04:19.090><c> missing</c><00:04:19.390><c> E</c><00:04:19.570><c> and</c><00:04:19.810><c> that</c><00:04:20.380><c> can</c><00:04:20.560><c> cause</c>

00:04:20.700 --> 00:04:20.710 align:start position:0%
with the missing E and that can cause
 

00:04:20.710 --> 00:04:22.590 align:start position:0%
with the missing E and that can cause
performance<00:04:20.919><c> issues</c><00:04:21.549><c> so</c><00:04:21.940><c> it's</c><00:04:22.210><c> a</c><00:04:22.300><c> bit</c><00:04:22.450><c> of</c><00:04:22.540><c> a</c>

00:04:22.590 --> 00:04:22.600 align:start position:0%
performance issues so it's a bit of a
 

00:04:22.600 --> 00:04:24.210 align:start position:0%
performance issues so it's a bit of a
trade-off<00:04:22.840><c> but</c><00:04:23.440><c> I'd</c><00:04:23.560><c> say</c><00:04:23.680><c> that</c><00:04:23.710><c> immutability</c>

00:04:24.210 --> 00:04:24.220 align:start position:0%
trade-off but I'd say that immutability
 

00:04:24.220 --> 00:04:25.380 align:start position:0%
trade-off but I'd say that immutability
is<00:04:24.460><c> a</c><00:04:24.550><c> wonderful</c><00:04:25.060><c> idea</c>

00:04:25.380 --> 00:04:25.390 align:start position:0%
is a wonderful idea
 

00:04:25.390 --> 00:04:26.110 align:start position:0%
is a wonderful idea
you<00:04:25.600><c> should</c><00:04:25.750><c> take</c><00:04:25.870><c> it</c>

00:04:26.110 --> 00:04:26.120 align:start position:0%
you should take it
 

00:04:26.120 --> 00:04:28.240 align:start position:0%
you should take it
and<00:04:26.630><c> project</c><00:04:27.020><c> to</c><00:04:27.139><c> maybe</c><00:04:27.590><c> think</c><00:04:27.770><c> about</c><00:04:27.919><c> some</c>

00:04:28.240 --> 00:04:28.250 align:start position:0%
and project to maybe think about some
 

00:04:28.250 --> 00:04:30.520 align:start position:0%
and project to maybe think about some
classes<00:04:28.639><c> as</c><00:04:28.790><c> immutable</c><00:04:29.090><c> now</c><00:04:29.930><c> one</c><00:04:30.110><c> little</c><00:04:30.260><c> tiny</c>

00:04:30.520 --> 00:04:30.530 align:start position:0%
classes as immutable now one little tiny
 

00:04:30.530 --> 00:04:32.500 align:start position:0%
classes as immutable now one little tiny
warning<00:04:30.949><c> just</c><00:04:31.520><c> because</c><00:04:31.820><c> you</c><00:04:31.940><c> declare</c><00:04:32.300><c> that</c><00:04:32.330><c> a</c>

00:04:32.500 --> 00:04:32.510 align:start position:0%
warning just because you declare that a
 

00:04:32.510 --> 00:04:34.450 align:start position:0%
warning just because you declare that a
reference<00:04:32.930><c> is</c><00:04:33.199><c> final</c><00:04:33.650><c> does</c><00:04:34.040><c> not</c><00:04:34.190><c> make</c><00:04:34.340><c> the</c>

00:04:34.450 --> 00:04:34.460 align:start position:0%
reference is final does not make the
 

00:04:34.460 --> 00:04:36.070 align:start position:0%
reference is final does not make the
object<00:04:34.880><c> referred</c><00:04:35.210><c> to</c><00:04:35.389><c> by</c><00:04:35.540><c> that</c><00:04:35.570><c> reference</c>

00:04:36.070 --> 00:04:36.080 align:start position:0%
object referred to by that reference
 

00:04:36.080 --> 00:04:38.469 align:start position:0%
object referred to by that reference
immutable<00:04:36.650><c> so</c><00:04:37.340><c> if</c><00:04:37.430><c> I</c><00:04:37.520><c> say</c><00:04:37.639><c> public</c><00:04:37.850><c> final</c><00:04:38.389><c> I</c>

00:04:38.469 --> 00:04:38.479 align:start position:0%
immutable so if I say public final I
 

00:04:38.479 --> 00:04:40.510 align:start position:0%
immutable so if I say public final I
write<00:04:38.660><c> back</c><00:04:38.840><c> string</c><00:04:39.169><c> D</c><00:04:39.350><c> equals</c><00:04:39.919><c> new</c><00:04:40.070><c> array</c><00:04:40.280><c> DAC</c>

00:04:40.510 --> 00:04:40.520 align:start position:0%
write back string D equals new array DAC
 

00:04:40.520 --> 00:04:43.180 align:start position:0%
write back string D equals new array DAC
this<00:04:41.389><c> creates</c><00:04:41.810><c> an</c><00:04:41.990><c> array</c><00:04:42.110><c> Dec</c><00:04:42.410><c> and</c><00:04:42.590><c> we</c><00:04:42.919><c> hold</c>

00:04:43.180 --> 00:04:43.190 align:start position:0%
this creates an array Dec and we hold
 

00:04:43.190 --> 00:04:46.390 align:start position:0%
this creates an array Dec and we hold
its<00:04:43.400><c> address</c><00:04:43.820><c> and</c><00:04:44.030><c> D</c><00:04:44.180><c> but</c><00:04:45.050><c> all</c><00:04:45.560><c> that</c><00:04:46.040><c> final</c>

00:04:46.390 --> 00:04:46.400 align:start position:0%
its address and D but all that final
 

00:04:46.400 --> 00:04:48.040 align:start position:0%
its address and D but all that final
does<00:04:46.580><c> is</c><00:04:46.760><c> it</c><00:04:46.880><c> means</c><00:04:47.030><c> we</c><00:04:47.150><c> can't</c><00:04:47.389><c> take</c><00:04:47.600><c> D</c><00:04:47.870><c> and</c>

00:04:48.040 --> 00:04:48.050 align:start position:0%
does is it means we can't take D and
 

00:04:48.050 --> 00:04:49.840 align:start position:0%
does is it means we can't take D and
point<00:04:48.290><c> it</c><00:04:48.440><c> at</c><00:04:48.620><c> a</c><00:04:48.650><c> different</c><00:04:49.040><c> array</c><00:04:49.190><c> Dec</c><00:04:49.400><c> the</c>

00:04:49.840 --> 00:04:49.850 align:start position:0%
point it at a different array Dec the
 

00:04:49.850 --> 00:04:52.480 align:start position:0%
point it at a different array Dec the
actual<00:04:50.240><c> array</c><00:04:50.449><c> deck</c><00:04:50.660><c> itself</c><00:04:50.990><c> can</c><00:04:51.530><c> change</c><00:04:51.919><c> so</c>

00:04:52.480 --> 00:04:52.490 align:start position:0%
actual array deck itself can change so
 

00:04:52.490 --> 00:04:54.070 align:start position:0%
actual array deck itself can change so
if<00:04:52.610><c> you</c><00:04:52.699><c> call</c><00:04:52.820><c> add</c><00:04:53.030><c> last</c><00:04:53.300><c> or</c><00:04:53.540><c> add</c><00:04:53.630><c> first</c><00:04:53.900><c> or</c>

00:04:54.070 --> 00:04:54.080 align:start position:0%
if you call add last or add first or
 

00:04:54.080 --> 00:04:55.840 align:start position:0%
if you call add last or add first or
whatever<00:04:54.290><c> it</c><00:04:54.530><c> will</c><00:04:54.710><c> actually</c><00:04:54.860><c> work</c><00:04:55.040><c> the</c><00:04:55.669><c> thing</c>

00:04:55.840 --> 00:04:55.850 align:start position:0%
whatever it will actually work the thing
 

00:04:55.850 --> 00:04:57.040 align:start position:0%
whatever it will actually work the thing
that<00:04:55.940><c> you</c><00:04:56.000><c> can't</c><00:04:56.240><c> do</c><00:04:56.360><c> is</c><00:04:56.510><c> on</c><00:04:56.630><c> the</c><00:04:56.720><c> next</c><00:04:56.930><c> line</c>

00:04:57.040 --> 00:04:57.050 align:start position:0%
that you can't do is on the next line
 

00:04:57.050 --> 00:04:59.680 align:start position:0%
that you can't do is on the next line
say<00:04:57.290><c> D</c><00:04:57.500><c> equals</c><00:04:57.919><c> some</c><00:04:58.250><c> other</c><00:04:58.430><c> array</c><00:04:58.789><c> okay</c><00:04:59.270><c> so</c>

00:04:59.680 --> 00:04:59.690 align:start position:0%
say D equals some other array okay so
 

00:04:59.690 --> 00:05:01.870 align:start position:0%
say D equals some other array okay so
minor<00:05:00.050><c> point</c><00:05:00.889><c> there</c><00:05:01.130><c> but</c><00:05:01.580><c> something</c><00:05:01.850><c> that</c>

00:05:01.870 --> 00:05:01.880 align:start position:0%
minor point there but something that
 

00:05:01.880 --> 00:05:03.850 align:start position:0%
minor point there but something that
sometimes<00:05:02.270><c> confuses</c><00:05:02.780><c> people</c><00:05:02.930><c> who</c><00:05:03.289><c> are</c><00:05:03.380><c> new</c><00:05:03.530><c> to</c>

00:05:03.850 --> 00:05:03.860 align:start position:0%
sometimes confuses people who are new to
 

00:05:03.860 --> 00:05:06.280 align:start position:0%
sometimes confuses people who are new to
this<00:05:03.979><c> idea</c>

